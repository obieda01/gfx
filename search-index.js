var searchIndex = {};
searchIndex["gfx_app"] = {"doc":"","items":[[3,"Init","gfx_app","",null,null],[12,"backend","","",0,null],[12,"color","","",0,null],[12,"depth","","",0,null],[12,"aspect_ratio","","",0,null],[3,"Config","","",null,null],[12,"size","","",1,null],[3,"Wrap","","",null,null],[4,"Backend","","",null,null],[13,"OpenGL2","","",2,null],[13,"Direct3D11","","",2,null],[12,"pix_mode","gfx_app::Backend","",2,null],[0,"shade","gfx_app","",null,null],[11,"new","gfx_device_gl::info","Create a new OpenGL version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is\nexpected to follow the following syntax:",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","gfx_device_gl::command","",4,{"inputs":[{"name":"u32"}],"output":{"name":"commandbuffer"}}],[11,"clone_empty","","",4,null],[11,"reset","","",4,null],[11,"bind_pipeline_state","","",4,null],[11,"bind_vertex_buffers","","",4,null],[11,"bind_constant_buffers","","",4,null],[11,"bind_global_constant","","",4,null],[11,"bind_resource_views","","",4,null],[11,"bind_unordered_views","","",4,null],[11,"bind_samplers","","",4,null],[11,"bind_pixel_targets","","",4,null],[11,"bind_index","","",4,null],[11,"set_scissor","","",4,null],[11,"set_ref_values","","",4,null],[11,"update_buffer","","",4,null],[11,"update_texture","","",4,null],[11,"generate_mipmap","","",4,null],[11,"clear_color","","",4,null],[11,"clear_depth_stencil","","",4,null],[11,"call_draw","","",4,null],[11,"call_draw_indexed","","",4,null],[11,"clone","gfx_device_gl::factory","",5,null],[11,"new","","Create a new `Factory`.",5,{"inputs":[{"name":"rc"}],"output":{"name":"factory"}}],[11,"create_command_buffer","","",5,null],[11,"get_capabilities","","",5,null],[11,"create_buffer_raw","","",5,null],[11,"create_buffer_const_raw","","",5,null],[11,"create_shader","","",5,null],[11,"create_program","","",5,null],[11,"create_pipeline_state_raw","","",5,null],[11,"create_texture_raw","","",5,null],[11,"view_buffer_as_shader_resource_raw","","",5,null],[11,"view_buffer_as_unordered_access_raw","","",5,null],[11,"view_texture_as_shader_resource_raw","","",5,null],[11,"view_texture_as_unordered_access_raw","","",5,null],[11,"view_texture_as_render_target_raw","","",5,null],[11,"view_texture_as_depth_stencil_raw","","",5,null],[11,"create_sampler","","",5,null],[11,"map_buffer_raw","","",5,null],[11,"unmap_buffer_raw","","",5,null],[11,"map_buffer_readable","","",5,null],[11,"map_buffer_writable","","",5,null],[11,"map_buffer_rw","","",5,null],[11,"partial_cmp","gfx_device_gl::info","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"cmp","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",7,null],[11,"is_version_supported","","",7,null],[11,"is_extension_supported","","Returns `true` if the implementation supports the extension",7,null],[11,"is_version_or_extension_supported","","",7,null],[11,"fmt","gfx_device_gl","",8,null],[11,"hash","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"eq","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",10,null],[11,"hash","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",12,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",13,null],[11,"hash","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"new_texture","","",13,{"inputs":[{"name":"u32"},{"name":"kind"}],"output":{"name":"resourceview"}}],[11,"new_buffer","","",13,{"inputs":[{"name":"u32"}],"output":{"name":"resourceview"}}],[11,"fmt","","",14,null],[11,"hash","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",15,null],[11,"hash","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"from_error_code","","",16,{"inputs":[{"name":"u32"}],"output":{"name":"error"}}],[11,"with_gl","","Access the OpenGL directly via a closure. OpenGL types and enumerations\ncan be found in the `gl` crate.",17,null],[11,"get_info","","Get the OpenGL-specific driver information",17,null],[11,"get_capabilities","","",17,null],[11,"pin_submitted_resources","","",17,null],[11,"submit","","",17,null],[11,"cleanup","","",17,null],[11,"fenced_submit","","",17,null],[11,"fence_wait","","",17,null],[3,"GlslVersion","gfx_app::shade","A version number for a specific component of an OpenGL implementation",null,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"revision","","",3,null],[12,"vendor_info","","",3,null],[3,"Source","","A type storing shader source for different graphics APIs and versions.",null,null],[12,"glsl_120","","",18,null],[12,"glsl_130","","",18,null],[12,"glsl_140","","",18,null],[12,"glsl_150","","",18,null],[12,"glsl_430","","",18,null],[12,"hlsl_30","","",18,null],[12,"hlsl_40","","",18,null],[12,"hlsl_41","","",18,null],[12,"hlsl_50","","",18,null],[4,"Backend","","Shader backend with version numbers.",null,null],[13,"Glsl","","",19,null],[17,"EMPTY","","",null,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"empty","","Create an empty shader source. Useful for specifying the remaining\nstructure members upon construction.",18,{"inputs":[],"output":{"name":"source"}}],[11,"select","","Pick one of the stored versions that is the highest supported by the backend.",18,null],[6,"ColorFormat","gfx_app","",null,null],[6,"DepthFormat","","",null,null],[6,"WrapGL2","","",null,null],[17,"DEFAULT_CONFIG","","",null,null],[8,"ApplicationBase","","",null,null],[10,"new","","",20,{"inputs":[{"name":"f"},{"name":"encoder"},{"name":"init"}],"output":{"name":"self"}}],[10,"render","","",20,null],[8,"Application","","",null,null],[10,"new","","",21,{"inputs":[{"name":"f"},{"name":"init"}],"output":{"name":"self"}}],[10,"render","","",21,null],[11,"launch_default","","",21,{"inputs":[{"name":"str"}],"output":null}],[8,"ApplicationGL2","","",null,null],[10,"launch","","",22,{"inputs":[{"name":"str"},{"name":"config"}],"output":null}],[11,"new","","",23,{"inputs":[{"name":"f"},{"name":"encoder"},{"name":"init"}],"output":{"name":"self"}}],[11,"render","","",23,null]],"paths":[[3,"Init"],[3,"Config"],[4,"Backend"],[3,"GlslVersion"],[3,"CommandBuffer"],[3,"Factory"],[3,"PlatformName"],[3,"Info"],[3,"Fence"],[4,"Resources"],[3,"OutputMerger"],[3,"PipelineState"],[4,"NewTexture"],[3,"ResourceView"],[3,"FatSampler"],[4,"TargetView"],[4,"Error"],[3,"Device"],[3,"Source"],[4,"Backend"],[8,"ApplicationBase"],[8,"Application"],[8,"ApplicationGL2"],[3,"Wrap"]]};
searchIndex["gfx_window_glutin"] = {"doc":"","items":[[5,"init","gfx_window_glutin","Initialize with a window builder.\nGenerically parametrized version over the main framebuffer format.",null,null],[5,"init_raw","","Initialize with a window builder. Raw version.",null,null],[5,"update_views","","Update the internal dimensions of the main framebuffer targets. Generic version over the format.",null,{"inputs":[{"name":"window"},{"name":"rendertargetview"},{"name":"depthstencilview"}],"output":null}],[5,"update_views_raw","","Return new main target views if the window resolution has changed from the old dimensions.",null,{"inputs":[{"name":"window"},{"name":"dimensions"},{"name":"format"},{"name":"format"}],"output":{"name":"option"}}]],"paths":[]};
searchIndex["glutin"] = {"doc":"The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.","items":[[3,"Touch","glutin","Represents touch event",null,null],[12,"phase","","",0,null],[12,"location","","",0,null],[12,"id","","unique identifier of a finger.",0,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[12,"dimensions","","The dimensions to use.",1,null],[12,"opengl","","The OpenGL attributes to build the context with.",1,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorId","","Identifier for a monitor.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",2,null],[12,"opengl","","The attributes to use to create the context.",2,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",3,null],[12,"color_bits","","",3,null],[12,"alpha_bits","","",3,null],[12,"depth_bits","","",3,null],[12,"stencil_bits","","",3,null],[12,"stereoscopy","","",3,null],[12,"double_buffer","","",3,null],[12,"multisampling","","",3,null],[12,"srgb","","",3,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be conisdered. If false, only software\nrenderers. `None` means &quot;don&#39;t care&quot;. Default is `Some(true)`.",4,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(24)`.",4,null],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",4,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means &quot;don&#39;t care&quot;.\nThe default is `Some(8)`.",4,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(24)`.",4,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means &quot;don&#39;t care&quot;.\nThe default value is `Some(8)`.",4,null],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer\nformats. `None` means &quot;don&#39;t care&quot;. The default is `Some(true)`.",4,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers.\n`None` means &quot;don&#39;t care&quot;. Default is `None`.\nA value of `Some(0)` indicates that multisampling must not be enabled.",4,null],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic\nformats. The default is `false`.",4,null],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don&#39;t care.\nThe default is `false`.",4,null],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",4,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be\nused.",5,null],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",5,null],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor&#39;s dimensions by the platform.",5,null],[12,"monitor","","If `Some`, the window will be in fullscreen mode with the given monitor.",5,null],[12,"title","","The title of the window in the title bar.",5,null],[12,"visible","","Whether the window should be immediately visible upon creation.",5,null],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors\nwith alpha values different than `1.0` will produce a transparent window.",5,null],[12,"decorations","","Whether the window should have borders and bars.",5,null],[12,"multitouch","","[iOS only] Enable multitouch, see [UIView#multipleTouchEnabled]\n(https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/instp/UIView/multipleTouchEnabled)",5,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"sharing","","An existing context to share the new the context with.",6,null],[12,"version","","Version to try create. See `GlRequest` for more infos.",6,null],[12,"profile","","OpenGL profile to use.",6,null],[12,"debug","","Whether to enable the `debug` flag of the context.",6,null],[12,"robustness","","How the OpenGL context should detect errors.",6,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the\nscreen refreshes. This is typically used to prevent screen tearing.",6,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",7,null],[13,"Moved","","The position of the window has changed.",7,null],[13,"Closed","","The window has been closed.",7,null],[13,"DroppedFile","","A file has been dropped into the window.",7,null],[13,"ReceivedCharacter","","The window received a unicode character.",7,null],[13,"Focused","","The window gained or lost focus.",7,null],[13,"KeyboardInput","","An event from the keyboard has been received.",7,null],[13,"MouseMoved","","The cursor has moved on the window.",7,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",7,null],[13,"MouseInput","","An event from the mouse has been received.",7,null],[13,"TouchpadPressure","","Touchpad pressure event.",7,null],[13,"Awakened","","The event loop was woken up by another thread.",7,null],[13,"Refresh","","The window needs to be redrawn.",7,null],[13,"Suspended","","App has been suspended or resumed.",7,null],[13,"Touch","","Touch event has been received",7,null],[4,"TouchPhase","","",null,null],[13,"Started","","",8,null],[13,"Moved","","",8,null],[13,"Ended","","",8,null],[13,"Cancelled","","",8,null],[4,"ElementState","","",null,null],[13,"Pressed","","",9,null],[13,"Released","","",9,null],[4,"MouseButton","","",null,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"Middle","","",10,null],[13,"Other","","",10,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",11,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",11,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The &#39;1&#39; key over the letters.",12,null],[13,"Key2","","The &#39;2&#39; key over the letters.",12,null],[13,"Key3","","The &#39;3&#39; key over the letters.",12,null],[13,"Key4","","The &#39;4&#39; key over the letters.",12,null],[13,"Key5","","The &#39;5&#39; key over the letters.",12,null],[13,"Key6","","The &#39;6&#39; key over the letters.",12,null],[13,"Key7","","The &#39;7&#39; key over the letters.",12,null],[13,"Key8","","The &#39;8&#39; key over the letters.",12,null],[13,"Key9","","The &#39;9&#39; key over the letters.",12,null],[13,"Key0","","The &#39;0&#39; key over the &#39;O&#39; and &#39;P&#39; keys.",12,null],[13,"A","","",12,null],[13,"B","","",12,null],[13,"C","","",12,null],[13,"D","","",12,null],[13,"E","","",12,null],[13,"F","","",12,null],[13,"G","","",12,null],[13,"H","","",12,null],[13,"I","","",12,null],[13,"J","","",12,null],[13,"K","","",12,null],[13,"L","","",12,null],[13,"M","","",12,null],[13,"N","","",12,null],[13,"O","","",12,null],[13,"P","","",12,null],[13,"Q","","",12,null],[13,"R","","",12,null],[13,"S","","",12,null],[13,"T","","",12,null],[13,"U","","",12,null],[13,"V","","",12,null],[13,"W","","",12,null],[13,"X","","",12,null],[13,"Y","","",12,null],[13,"Z","","",12,null],[13,"Escape","","The Escape key, next to F1.",12,null],[13,"F1","","",12,null],[13,"F2","","",12,null],[13,"F3","","",12,null],[13,"F4","","",12,null],[13,"F5","","",12,null],[13,"F6","","",12,null],[13,"F7","","",12,null],[13,"F8","","",12,null],[13,"F9","","",12,null],[13,"F10","","",12,null],[13,"F11","","",12,null],[13,"F12","","",12,null],[13,"F13","","",12,null],[13,"F14","","",12,null],[13,"F15","","",12,null],[13,"Snapshot","","Print Screen/SysRq.",12,null],[13,"Scroll","","Scroll Lock.",12,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,null],[13,"Insert","","`Insert`, next to Backspace.",12,null],[13,"Home","","",12,null],[13,"Delete","","",12,null],[13,"End","","",12,null],[13,"PageDown","","",12,null],[13,"PageUp","","",12,null],[13,"Left","","",12,null],[13,"Up","","",12,null],[13,"Right","","",12,null],[13,"Down","","",12,null],[13,"Back","","The Backspace key, right over Enter.",12,null],[13,"Return","","The Enter key.",12,null],[13,"Space","","The space bar.",12,null],[13,"Numlock","","",12,null],[13,"Numpad0","","",12,null],[13,"Numpad1","","",12,null],[13,"Numpad2","","",12,null],[13,"Numpad3","","",12,null],[13,"Numpad4","","",12,null],[13,"Numpad5","","",12,null],[13,"Numpad6","","",12,null],[13,"Numpad7","","",12,null],[13,"Numpad8","","",12,null],[13,"Numpad9","","",12,null],[13,"AbntC1","","",12,null],[13,"AbntC2","","",12,null],[13,"Add","","",12,null],[13,"Apostrophe","","",12,null],[13,"Apps","","",12,null],[13,"At","","",12,null],[13,"Ax","","",12,null],[13,"Backslash","","",12,null],[13,"Calculator","","",12,null],[13,"Capital","","",12,null],[13,"Colon","","",12,null],[13,"Comma","","",12,null],[13,"Convert","","",12,null],[13,"Decimal","","",12,null],[13,"Divide","","",12,null],[13,"Equals","","",12,null],[13,"Grave","","",12,null],[13,"Kana","","",12,null],[13,"Kanji","","",12,null],[13,"LAlt","","",12,null],[13,"LBracket","","",12,null],[13,"LControl","","",12,null],[13,"LMenu","","",12,null],[13,"LShift","","",12,null],[13,"LWin","","",12,null],[13,"Mail","","",12,null],[13,"MediaSelect","","",12,null],[13,"MediaStop","","",12,null],[13,"Minus","","",12,null],[13,"Multiply","","",12,null],[13,"Mute","","",12,null],[13,"MyComputer","","",12,null],[13,"NavigateForward","","",12,null],[13,"NavigateBackward","","",12,null],[13,"NextTrack","","",12,null],[13,"NoConvert","","",12,null],[13,"NumpadComma","","",12,null],[13,"NumpadEnter","","",12,null],[13,"NumpadEquals","","",12,null],[13,"OEM102","","",12,null],[13,"Period","","",12,null],[13,"PlayPause","","",12,null],[13,"Power","","",12,null],[13,"PrevTrack","","",12,null],[13,"RAlt","","",12,null],[13,"RBracket","","",12,null],[13,"RControl","","",12,null],[13,"RMenu","","",12,null],[13,"RShift","","",12,null],[13,"RWin","","",12,null],[13,"Semicolon","","",12,null],[13,"Slash","","",12,null],[13,"Sleep","","",12,null],[13,"Stop","","",12,null],[13,"Subtract","","",12,null],[13,"Sysrq","","",12,null],[13,"Tab","","",12,null],[13,"Underline","","",12,null],[13,"Unlabeled","","",12,null],[13,"VolumeDown","","",12,null],[13,"VolumeUp","","",12,null],[13,"Wake","","",12,null],[13,"WebBack","","",12,null],[13,"WebFavorites","","",12,null],[13,"WebForward","","",12,null],[13,"WebHome","","",12,null],[13,"WebRefresh","","",12,null],[13,"WebSearch","","",12,null],[13,"WebStop","","",12,null],[13,"Yen","","",12,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",13,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",13,null],[13,"Unavailable","","Other platforms (Android) don&#39;t support monitor identification.",13,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",14,null],[13,"NotSupported","","TODO: remove this error",14,null],[13,"NoBackendAvailable","","",14,null],[13,"RobustnessNotSupported","","",14,null],[13,"OpenGlVersionNotSupported","","",14,null],[13,"NoAvailablePixelFormat","","",14,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",15,null],[13,"ContextLost","","",15,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",16,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",16,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",16,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",17,null],[13,"Core","","Include all the future-compatible functions and definitions.",17,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the &quot;best&quot; API of this platform.",18,null],[13,"Specific","","Request a specific version of a specific API.",18,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",18,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",18,null],[12,"opengles_version","","The version to use for OpenGL ES.",18,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",19,null],[13,"NoError","","The driver doesn&#39;t check anything. This option is very dangerous. Please know what you&#39;re\ndoing before using it. See the `GL_KHR_no_error` extension.",19,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",19,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n&quot;context lost&quot; state. It must then be recreated. For the moment, glutin doesn&#39;t provide a\nway to recreate a context with the same window :-/",19,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn&#39;t fail if it&#39;s not\nsupported.",19,null],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",null,null],[13,"None","","Doesn&#39;t do anything. Most notably doesn&#39;t flush.",20,null],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",20,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",21,null],[13,"Crosshair","","A simple crosshair.",21,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",21,null],[13,"Arrow","","Self explanatory.",21,null],[13,"Move","","Indicates something is to be moved.",21,null],[13,"Text","","Indicates text that may be selected or edited.",21,null],[13,"Wait","","Program busy indicator.",21,null],[13,"Help","","Help indicator (often rendered as a &quot;?&quot;)",21,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith &quot;Wait&quot; the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",21,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",21,null],[13,"ContextMenu","","",21,null],[13,"NoneCursor","","",21,null],[13,"Cell","","",21,null],[13,"VerticalText","","",21,null],[13,"Alias","","",21,null],[13,"Copy","","",21,null],[13,"NoDrop","","",21,null],[13,"Grab","","",21,null],[13,"Grabbing","","",21,null],[13,"AllScroll","","",21,null],[13,"ZoomIn","","",21,null],[13,"ZoomOut","","",21,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the &#39;SeResize&#39; cursor\nis used when the movement starts from the south-east corner of the box.",21,null],[13,"NResize","","",21,null],[13,"NeResize","","",21,null],[13,"NwResize","","",21,null],[13,"SResize","","",21,null],[13,"SeResize","","",21,null],[13,"SwResize","","",21,null],[13,"WResize","","",21,null],[13,"EwResize","","",21,null],[13,"NsResize","","",21,null],[13,"NeswResize","","",21,null],[13,"NwseResize","","",21,null],[13,"ColResize","","",21,null],[13,"RowResize","","",21,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",22,null],[13,"Hide","","The cursor will be invisible when over the window.",22,null],[13,"Grab","","Grabs the mouse cursor. The cursor&#39;s motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",22,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"hash","core::num","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",23,null],[11,"cmp","","",23,null],[11,"partial_cmp","","",23,null],[11,"lt","","",23,null],[11,"le","","",23,null],[11,"gt","","",23,null],[11,"ge","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"shl","","",23,null],[11,"shl_assign","","",23,null],[11,"shr","","",23,null],[11,"shr_assign","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"add","","",23,null],[11,"add_assign","","",23,null],[11,"sub","","",23,null],[11,"sub_assign","","",23,null],[11,"mul","","",23,null],[11,"mul_assign","","",23,null],[11,"div","","",23,null],[11,"div_assign","","",23,null],[11,"rem","","",23,null],[11,"rem_assign","","",23,null],[11,"not","","",23,null],[11,"bitxor","","",23,null],[11,"bitxor_assign","","",23,null],[11,"bitor","","",23,null],[11,"bitor_assign","","",23,null],[11,"bitand","","",23,null],[11,"bitand_assign","","",23,null],[11,"neg","","",23,null],[11,"eq","core::num::dec2flt","",24,null],[11,"ne","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"fmt","core::num","",25,null],[11,"eq","","",25,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"fmt","","",27,null],[11,"hash","core::nonzero","",28,null],[11,"fmt","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"cmp","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"clone","","",28,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",28,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",28,null],[11,"new","core::ptr","Creates a new `Unique`.",29,null],[11,"get","","Dereferences the content.",29,null],[11,"get_mut","","Mutably dereferences the content.",29,null],[11,"deref","","",29,null],[11,"fmt","","",29,null],[11,"new","","Creates a new `Shared`.",30,null],[11,"clone","","",30,null],[11,"deref","","",30,null],[11,"fmt","","",30,null],[11,"hash","core::marker","",31,null],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"cmp","","",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",32,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"contains","","# Examples",33,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"contains","","# Examples",34,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"contains","","# Examples",35,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"from","","",36,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",36,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"contains","","# Examples",37,null],[11,"hash","core::cmp","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"clone","","",38,null],[11,"reverse","","Reverse the `Ordering`.",38,null],[11,"cmp","","",38,null],[11,"partial_cmp","","",38,null],[11,"fmt","glutin::api::egl::ffi::egl","",39,null],[11,"fmt","","",39,null],[11,"is","","Returns true if the boxed type is the same as `T`",39,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",39,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",39,null],[11,"is","","Forwards to the method defined on the type `Any`.",39,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",39,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",39,null],[11,"hash","core::any","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",40,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",41,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"new","","Creates a new `AtomicBool`.",41,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",41,null],[11,"store","","Stores a value into the bool.",41,null],[11,"swap","","Stores a value into the bool, returning the old value.",41,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",41,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",41,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",41,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",41,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",41,null],[11,"new","","Creates a new `AtomicPtr`.",42,null],[11,"load","","Loads a value from the pointer.",42,null],[11,"store","","Stores a value into the pointer.",42,null],[11,"swap","","Stores a value into the pointer, returning the old value.",42,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",42,null],[11,"default","","",44,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",44,null],[11,"new","","Creates a new atomic integer.",44,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",44,null],[11,"store","","Stores a value into the atomic integer.",44,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",44,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",44,null],[11,"fetch_add","","Add to the current value, returning the previous value.",44,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",44,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",44,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",44,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",44,null],[11,"default","","",45,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",45,null],[11,"new","","Creates a new atomic integer.",45,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",45,null],[11,"store","","Stores a value into the atomic integer.",45,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",45,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",45,null],[11,"fetch_add","","Add to the current value, returning the previous value.",45,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",45,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",45,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",45,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",45,null],[11,"default","","",46,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",46,null],[11,"new","","Creates a new atomic integer.",46,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",46,null],[11,"store","","Stores a value into the atomic integer.",46,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",46,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",46,null],[11,"fetch_add","","Add to the current value, returning the previous value.",46,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",46,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",46,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",46,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",46,null],[11,"default","","",47,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",47,null],[11,"new","","Creates a new atomic integer.",47,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",47,null],[11,"store","","Stores a value into the atomic integer.",47,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",47,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",47,null],[11,"fetch_add","","Add to the current value, returning the previous value.",47,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",47,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",47,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",47,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",47,null],[11,"default","","",48,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",48,null],[11,"new","","Creates a new atomic integer.",48,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",48,null],[11,"store","","Stores a value into the atomic integer.",48,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",48,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",48,null],[11,"fetch_add","","Add to the current value, returning the previous value.",48,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",48,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",48,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",48,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",48,null],[11,"default","","",49,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",49,null],[11,"new","","Creates a new atomic integer.",49,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",49,null],[11,"store","","Stores a value into the atomic integer.",49,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",49,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",49,null],[11,"fetch_add","","Add to the current value, returning the previous value.",49,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",49,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",49,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",49,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",49,null],[11,"default","","",50,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",50,null],[11,"new","","Creates a new atomic integer.",50,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",50,null],[11,"store","","Stores a value into the atomic integer.",50,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",50,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",50,null],[11,"fetch_add","","Add to the current value, returning the previous value.",50,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",50,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",50,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",50,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",50,null],[11,"default","","",51,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",51,null],[11,"new","","Creates a new atomic integer.",51,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",51,null],[11,"store","","Stores a value into the atomic integer.",51,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",51,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",51,null],[11,"fetch_add","","Add to the current value, returning the previous value.",51,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",51,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",51,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",51,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",51,null],[11,"default","","",52,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",52,null],[11,"new","","Creates a new atomic integer.",52,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",52,null],[11,"store","","Stores a value into the atomic integer.",52,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",52,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",52,null],[11,"fetch_add","","Add to the current value, returning the previous value.",52,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",52,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",52,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",52,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",52,null],[11,"default","","",53,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",53,null],[11,"new","","Creates a new atomic integer.",53,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",53,null],[11,"store","","Stores a value into the atomic integer.",53,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",53,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",53,null],[11,"fetch_add","","Add to the current value, returning the previous value.",53,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",53,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",53,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",53,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",53,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",54,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",54,null],[11,"set","","Sets the contained value.",54,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",54,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",54,null],[11,"clone","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",54,null],[11,"partial_cmp","","",54,null],[11,"lt","","",54,null],[11,"le","","",54,null],[11,"gt","","",54,null],[11,"ge","","",54,null],[11,"cmp","","",54,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"clone","","",55,null],[11,"new","","Creates a new `RefCell` containing `value`.",56,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",56,null],[11,"borrow_state","","Query the current state of this `RefCell`",56,null],[11,"borrow","","Immutably borrows the wrapped value.",56,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",56,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",56,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",56,null],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",56,null],[11,"partial_cmp","","",56,null],[11,"lt","","",56,null],[11,"le","","",56,null],[11,"gt","","",56,null],[11,"ge","","",56,null],[11,"cmp","","",56,null],[11,"deref","","",57,null],[11,"clone","","Copies a `Ref`.",57,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",57,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",58,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",59,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",59,null],[11,"get","","Gets a mutable pointer to the wrapped value.",59,null],[11,"default","","",59,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",60,null],[11,"clone","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"count","","",60,null],[11,"last","","",60,null],[11,"len","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"count","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"len","","",61,null],[11,"fmt","","",62,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"fmt","core::iter::range","",64,null],[11,"clone","","",64,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",34,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",33,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",36,null],[11,"next","core::iter::range","",64,null],[11,"size_hint","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next","core::ops","",33,null],[11,"size_hint","","",33,null],[11,"next_back","","",33,null],[11,"next","","",34,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"fmt","core::iter::sources","",65,null],[11,"clone","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"len","","",66,null],[11,"clone","","",66,null],[11,"default","","",66,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"len","","",67,null],[11,"fmt","core::iter","",68,null],[11,"clone","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"next","","",71,null],[11,"count","","",71,null],[11,"nth","","",71,null],[11,"find","","",71,null],[11,"last","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"next_back","","",73,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"next","","# Overflow Behavior",76,null],[11,"size_hint","","",76,null],[11,"nth","","",76,null],[11,"count","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"next","","",77,null],[11,"count","","",77,null],[11,"nth","","",77,null],[11,"last","","",77,null],[11,"size_hint","","",77,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",77,null],[11,"is_empty","","Checks if the iterator has finished iterating.",77,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"nth","","",80,null],[11,"count","","",80,null],[11,"last","","",80,null],[11,"size_hint","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"nth","","",81,null],[11,"size_hint","","",81,null],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next_back","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"next","","",84,null],[11,"nth","","",84,null],[11,"last","","",84,null],[11,"count","","",84,null],[11,"size_hint","","",84,null],[11,"next_back","","",84,null],[11,"clone","","",85,null],[11,"fmt","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"next_back","","",85,null],[11,"hash","core::option","",86,null],[11,"fmt","","",86,null],[11,"cmp","","",86,null],[11,"partial_cmp","","",86,null],[11,"lt","","",86,null],[11,"le","","",86,null],[11,"gt","","",86,null],[11,"ge","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"is_some","","Returns `true` if the option is a `Some` value",86,null],[11,"is_none","","Returns `true` if the option is a `None` value",86,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",86,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",86,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",86,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",86,null],[11,"unwrap_or","","Returns the contained value or a default.",86,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",86,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",86,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",86,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",86,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",86,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",86,null],[11,"iter","","Returns an iterator over the possibly contained value.",86,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",86,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",86,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",86,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",86,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",86,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",86,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",86,null],[11,"unwrap_or_default","","Returns the contained value or a default",86,null],[11,"default","","",86,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",86,null],[11,"fmt","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"next_back","","",87,null],[11,"clone","","",87,null],[11,"fmt","","",88,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"next_back","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"next","","",89,null],[11,"size_hint","","",89,null],[11,"next_back","","",89,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",86,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",90,null],[11,"hash","core::result","",91,null],[11,"fmt","","",91,null],[11,"cmp","","",91,null],[11,"partial_cmp","","",91,null],[11,"lt","","",91,null],[11,"le","","",91,null],[11,"gt","","",91,null],[11,"ge","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"is_ok","","Returns true if the result is `Ok`",91,null],[11,"is_err","","Returns true if the result is `Err`",91,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",91,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",91,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",91,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",91,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",91,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",91,null],[11,"iter","","Returns an iterator over the possibly contained value.",91,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",91,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",91,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",91,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",91,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",91,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",91,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",91,null],[11,"fmt","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"clone","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",91,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",95,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"count","","",95,null],[11,"nth","","",95,null],[11,"last","","",95,null],[11,"next_back","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"count","","",96,null],[11,"nth","","",96,null],[11,"last","","",96,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next_back","","",98,null],[11,"fmt","","",99,null],[11,"fmt","","",100,null],[11,"fmt","","",101,null],[11,"fmt","","",102,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"count","","",103,null],[11,"nth","","",103,null],[11,"last","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"count","","",104,null],[11,"nth","","",104,null],[11,"last","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"count","","",105,null],[11,"nth","","",105,null],[11,"last","","",105,null],[11,"next_back","","",105,null],[11,"fmt","core::str::pattern","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"haystack","","",107,null],[11,"next","","",107,null],[11,"next_match","","",107,null],[11,"next_reject","","",107,null],[11,"next_back","","",107,null],[11,"next_match_back","","",107,null],[11,"next_reject_back","","",107,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"haystack","","",108,null],[11,"next","","",108,null],[11,"next_match","","",108,null],[11,"next_reject","","",108,null],[11,"next_back","","",108,null],[11,"next_match_back","","",108,null],[11,"next_reject_back","","",108,null],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"haystack","","",109,null],[11,"next","","",109,null],[11,"next_match","","",109,null],[11,"next_reject","","",109,null],[11,"next_back","","",109,null],[11,"next_match_back","","",109,null],[11,"next_reject_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"haystack","","",110,null],[11,"next","","",110,null],[11,"next_match","","",110,null],[11,"next_back","","",110,null],[11,"next_match_back","","",110,null],[11,"eq","core::str","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",112,null],[11,"clone","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",112,null],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"as_str","","View the underlying data as a subslice of the original data.",113,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"as_str","","View the underlying data as a subslice of the original data.",114,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"count","","",115,null],[11,"last","","",115,null],[11,"nth","","",115,null],[11,"next_back","","",115,null],[11,"len","","",115,null],[11,"fmt","","",116,null],[11,"next","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",117,null],[11,"next","","",117,null],[11,"clone","","",117,null],[11,"next_back","","",116,null],[11,"next_back","","",117,null],[11,"fmt","","",118,null],[11,"next","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",119,null],[11,"next","","",119,null],[11,"clone","","",119,null],[11,"next_back","","",118,null],[11,"next_back","","",119,null],[11,"fmt","","",120,null],[11,"next","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"next","","",121,null],[11,"clone","","",121,null],[11,"fmt","","",122,null],[11,"next","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",123,null],[11,"next","","",123,null],[11,"clone","","",123,null],[11,"next_back","","",122,null],[11,"next_back","","",123,null],[11,"fmt","","",124,null],[11,"next","","",124,null],[11,"clone","","",124,null],[11,"fmt","","",125,null],[11,"next","","",125,null],[11,"clone","","",125,null],[11,"next_back","","",124,null],[11,"next_back","","",125,null],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"fmt","","",127,null],[11,"clone","","",127,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next_back","","",127,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"fmt","core::hash::sip","",129,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",129,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",129,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",129,null],[11,"finish","","",129,null],[11,"clone","","",129,null],[11,"default","","",129,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",130,null],[11,"build_hasher","","",130,null],[11,"clone","","",130,null],[11,"default","","",130,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",131,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",132,null],[11,"finish","","Finishes output and returns any error encountered.",132,null],[11,"field","","Adds a new field to the generated tuple struct output.",133,null],[11,"finish","","Finishes output and returns any error encountered.",133,null],[11,"entry","","Adds a new entry to the set output.",134,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",134,null],[11,"finish","","Finishes output and returns any error encountered.",134,null],[11,"entry","","Adds a new entry to the list output.",135,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",135,null],[11,"finish","","Finishes output and returns any error encountered.",135,null],[11,"entry","","Adds a new entry to the map output.",136,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",136,null],[11,"finish","","Finishes output and returns any error encountered.",136,null],[11,"partial_cmp","core::fmt","",137,null],[11,"eq","","",137,null],[11,"cmp","","",137,null],[11,"hash","","",137,null],[11,"default","","",137,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",137,null],[11,"clone","","",137,null],[11,"clone","","",138,null],[11,"fmt","","",138,null],[11,"fmt","","",138,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",139,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",139,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",139,null],[11,"write_fmt","","Writes some formatted information into this instance",139,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",139,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",139,null],[11,"align","","Flag indicating what form of alignment was requested",139,null],[11,"width","","Optionally specified integer width that the output should be",139,null],[11,"precision","","Optionally specified precision for numeric types",139,null],[11,"sign_plus","","Determines if the `+` flag was specified.",139,null],[11,"sign_minus","","Determines if the `-` flag was specified.",139,null],[11,"alternate","","Determines if the `#` flag was specified.",139,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",139,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",139,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",139,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",139,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",139,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",139,null],[11,"write_str","","",139,null],[11,"write_char","","",139,null],[11,"write_fmt","","",139,null],[11,"fmt","","",137,null],[11,"fmt","core::marker","",31,null],[11,"fmt","core::cell","",54,null],[11,"fmt","","",56,null],[11,"fmt","","",57,null],[11,"fmt","","",58,null],[11,"fmt","","",59,null],[11,"from","alloc::boxed","",140,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",140,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",140,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",140,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",140,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",140,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",111,null],[11,"description","","",112,null],[11,"description","core::num","",27,null],[11,"description","","",26,null],[11,"description","core::num::dec2flt","",24,null],[11,"description","collections::string","",141,null],[11,"description","","",142,null],[11,"description","","",143,null],[11,"description","rustc_unicode::char","",144,null],[11,"description","alloc::boxed","",140,null],[11,"cause","","",140,null],[11,"description","core::fmt","",137,null],[11,"is","glutin::api::egl::ffi::egl::__gl_imports","Returns true if the boxed type is the same as `T`",145,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",145,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",145,null],[11,"is","","Forwards to the method defined on the type `Any`.",145,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",145,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",145,null],[11,"is","","Forwards to the method defined on the type `Any`.",145,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",145,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",145,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",145,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",145,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",145,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",146,null],[11,"size_hint","","",146,null],[11,"next_back","","",146,null],[11,"clone","std::thread::local","",147,null],[11,"eq","","",147,null],[11,"with","","Acquires a reference to the value in this TLS key.",148,null],[11,"state","","Query the current state of this key.",148,null],[11,"new","std::thread::local::elf","",149,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",149,null],[11,"new","std::thread::local::os","",150,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",150,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",151,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",151,null],[11,"stack_size","","Sets the size of the stack for the new thread.",151,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",151,null],[11,"clone","","",152,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",152,null],[11,"name","","Gets the thread&#39;s name.",152,null],[11,"fmt","","",152,null],[11,"thread","","Extracts a handle to the underlying thread",153,null],[11,"join","","Waits for the associated thread to finish.",153,null],[11,"clone","std::collections::hash::map","",154,null],[11,"new","","Creates an empty HashMap.",154,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",154,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",154,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",154,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",154,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",154,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",154,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",154,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",154,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",154,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",154,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",154,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",154,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",154,null],[11,"len","","Returns the number of elements in the map.",154,null],[11,"is_empty","","Returns true if the map contains no elements.",154,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",154,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",154,null],[11,"get","","Returns a reference to the value corresponding to the key.",154,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",154,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",154,null],[11,"insert","","Inserts a key-value pair into the map.",154,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",154,null],[11,"eq","","",154,null],[11,"fmt","","",154,null],[11,"default","","",154,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",154,null],[11,"clone","","",155,null],[11,"clone","","",156,null],[11,"clone","","",157,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",154,null],[11,"next","","",155,null],[11,"size_hint","","",155,null],[11,"len","","",155,null],[11,"next","","",158,null],[11,"size_hint","","",158,null],[11,"len","","",158,null],[11,"next","","",159,null],[11,"size_hint","","",159,null],[11,"len","","",159,null],[11,"next","","",156,null],[11,"size_hint","","",156,null],[11,"len","","",156,null],[11,"next","","",157,null],[11,"size_hint","","",157,null],[11,"len","","",157,null],[11,"next","","",160,null],[11,"size_hint","","",160,null],[11,"len","","",160,null],[11,"next","","",161,null],[11,"size_hint","","",161,null],[11,"len","","",161,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",162,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",162,null],[11,"key","","Returns a reference to this entry&#39;s key.",162,null],[11,"key","","Gets a reference to the key in the entry.",163,null],[11,"get","","Gets a reference to the value in the entry.",163,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",163,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",163,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",163,null],[11,"remove","","Takes the value out of the entry, and returns it",163,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",164,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",164,null],[11,"from_iter","","",154,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",154,null],[11,"extend","","",154,null],[11,"clone","","",165,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",165,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",165,null],[11,"default","","",165,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",166,null],[11,"new","","Creates an empty HashSet.",166,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",166,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",166,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",166,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",166,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",166,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",166,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",166,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",166,null],[11,"difference","","Visit the values representing the difference.",166,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",166,null],[11,"intersection","","Visit the values representing the intersection.",166,null],[11,"union","","Visit the values representing the union.",166,null],[11,"len","","Returns the number of elements in the set.",166,null],[11,"is_empty","","Returns true if the set contains no elements.",166,null],[11,"drain","","Clears the set, returning all elements in an iterator.",166,null],[11,"clear","","Clears the set, removing all values.",166,null],[11,"contains","","Returns `true` if the set contains a value.",166,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",166,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",166,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",166,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",166,null],[11,"insert","","Adds a value to the set.",166,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",166,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",166,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",166,null],[11,"eq","","",166,null],[11,"fmt","","",166,null],[11,"from_iter","","",166,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",166,null],[11,"extend","","",166,null],[11,"default","","",166,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",166,null],[11,"clone","","",167,null],[11,"next","","",167,null],[11,"size_hint","","",167,null],[11,"len","","",167,null],[11,"next","","",168,null],[11,"size_hint","","",168,null],[11,"len","","",168,null],[11,"next","","",169,null],[11,"size_hint","","",169,null],[11,"len","","",169,null],[11,"clone","","",170,null],[11,"next","","",170,null],[11,"size_hint","","",170,null],[11,"clone","","",171,null],[11,"next","","",171,null],[11,"size_hint","","",171,null],[11,"clone","","",172,null],[11,"next","","",172,null],[11,"size_hint","","",172,null],[11,"clone","","",173,null],[11,"next","","",173,null],[11,"size_hint","","",173,null],[11,"clone","collections::linked_list","",174,null],[11,"clone","","",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",176,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",176,null],[11,"iter","","Provides a forward iterator.",176,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",176,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",176,null],[11,"len","","Returns the length of the `LinkedList`.",176,null],[11,"clear","","Removes all elements from the `LinkedList`.",176,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",176,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",176,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",176,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",176,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",176,null],[11,"push_front","","Adds an element first in the list.",176,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",176,null],[11,"push_back","","Appends an element to the back of a list",176,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",176,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",176,null],[11,"front_place","","Returns a place for insertion at the front of the list.",176,null],[11,"back_place","","Returns a place for insertion at the back of the list.",176,null],[11,"drop","","",176,null],[11,"next","","",174,null],[11,"size_hint","","",174,null],[11,"next_back","","",174,null],[11,"next","","",177,null],[11,"size_hint","","",177,null],[11,"next_back","","",177,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",177,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",177,null],[11,"next","","",175,null],[11,"size_hint","","",175,null],[11,"next_back","","",175,null],[11,"from_iter","","",176,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",176,null],[11,"extend","","",176,null],[11,"extend","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"partial_cmp","","",176,null],[11,"cmp","","",176,null],[11,"clone","","",176,null],[11,"fmt","","",176,null],[11,"hash","","",176,null],[11,"make_place","","",178,null],[11,"pointer","","",178,null],[11,"finalize","","",178,null],[11,"make_place","","",179,null],[11,"pointer","","",179,null],[11,"finalize","","",179,null],[11,"clone","collections::binary_heap","",180,null],[11,"clone_from","","",180,null],[11,"default","","",180,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",180,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",180,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",180,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",180,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",180,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",180,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",180,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",180,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",180,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",180,null],[11,"push","","Pushes an item onto the binary heap.",180,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",180,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",180,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",180,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",180,null],[11,"len","","Returns the length of the binary heap.",180,null],[11,"is_empty","","Checks if the binary heap is empty.",180,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",180,null],[11,"clear","","Drops all items from the binary heap.",180,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",180,null],[11,"clone","","",181,null],[11,"next","","",181,null],[11,"size_hint","","",181,null],[11,"next_back","","",181,null],[11,"clone","","",182,null],[11,"next","","",182,null],[11,"size_hint","","",182,null],[11,"next_back","","",182,null],[11,"next","","",183,null],[11,"size_hint","","",183,null],[11,"next_back","","",183,null],[11,"from","","",180,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",184,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",180,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",180,null],[11,"extend","","",180,null],[11,"extend","","",180,null],[11,"clone","collections::vec_deque","",185,null],[11,"drop","","",185,null],[11,"default","","",185,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",185,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",185,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",185,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",185,null],[11,"swap","","Swaps elements at indices `i` and `j`.",185,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",185,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",185,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",185,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",185,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",185,null],[11,"iter","","Returns a front-to-back iterator.",185,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",185,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",185,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",185,null],[11,"len","","Returns the number of elements in the `VecDeque`.",185,null],[11,"is_empty","","Returns true if the buffer contains no elements",185,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",185,null],[11,"clear","","Clears the buffer, removing all values.",185,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",185,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",185,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",185,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",185,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",185,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",185,null],[11,"push_front","","Inserts an element first in the sequence.",185,null],[11,"push_back","","Appends an element to the back of a buffer",185,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",185,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",185,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",185,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",185,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",185,null],[11,"split_off","","Splits the collection into two at the given index.",185,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",185,null],[11,"retain","","Retains only the elements specified by the predicate.",185,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",185,null],[11,"clone","","",186,null],[11,"next","","",186,null],[11,"size_hint","","",186,null],[11,"next_back","","",186,null],[11,"next","","",187,null],[11,"size_hint","","",187,null],[11,"next_back","","",187,null],[11,"clone","","",188,null],[11,"next","","",188,null],[11,"size_hint","","",188,null],[11,"next_back","","",188,null],[11,"drop","","",189,null],[11,"next","","",189,null],[11,"size_hint","","",189,null],[11,"next_back","","",189,null],[11,"eq","","",185,null],[11,"partial_cmp","","",185,null],[11,"cmp","","",185,null],[11,"hash","","",185,null],[11,"index","","",185,null],[11,"index_mut","","",185,null],[11,"from_iter","","",185,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",185,null],[11,"extend","","",185,null],[11,"extend","","",185,null],[11,"fmt","","",185,null],[11,"from","","",185,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",184,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",190,null],[11,"size_hint","","",190,null],[11,"next","","",191,null],[11,"size_hint","","",191,null],[11,"clone","","",192,null],[11,"eq","","",192,null],[11,"ne","","",192,null],[11,"fmt","","",192,null],[11,"fmt","","",192,null],[11,"description","","",192,null],[11,"next","","",193,null],[11,"size_hint","","",193,null],[11,"fmt","","",194,null],[11,"fmt","","",194,null],[11,"description","","",194,null],[11,"next","","",195,null],[11,"size_hint","","",195,null],[11,"len","","",195,null],[11,"next","","",196,null],[11,"size_hint","","",196,null],[11,"len","","",196,null],[11,"clone","std::ffi::c_str","",197,null],[11,"hash","","",197,null],[11,"cmp","","",197,null],[11,"partial_cmp","","",197,null],[11,"lt","","",197,null],[11,"le","","",197,null],[11,"gt","","",197,null],[11,"ge","","",197,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"hash","","",198,null],[11,"fmt","","",199,null],[11,"eq","","",199,null],[11,"ne","","",199,null],[11,"clone","","",199,null],[11,"fmt","","",200,null],[11,"eq","","",200,null],[11,"ne","","",200,null],[11,"clone","","",200,null],[11,"fmt","","",201,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"clone","","",201,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",197,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",197,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",197,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",197,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",197,null],[11,"into_bytes","","Returns the underlying byte buffer.",197,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",197,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",197,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",197,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",198,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",198,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",198,null],[11,"as_ptr","","Returns the inner pointer to this C string.",198,null],[11,"to_bytes","","Converts this C string to a byte slice.",198,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",198,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",198,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",198,null],[11,"deref","","",197,null],[11,"fmt","","",197,null],[11,"from","collections::vec","",184,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",198,null],[11,"default","","",197,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",197,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",199,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",199,null],[11,"description","","",199,null],[11,"fmt","","",199,null],[11,"from","std::io::error","",202,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",201,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",201,null],[11,"description","","",201,null],[11,"cause","","",201,null],[11,"fmt","","",201,null],[11,"eq","","",198,null],[11,"partial_cmp","","",198,null],[11,"cmp","","",198,null],[11,"to_owned","","",198,null],[11,"from","","",197,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",197,null],[11,"as_ref","","",198,null],[11,"as_ref","","",197,null],[11,"clone","std::ffi::os_str","",203,null],[11,"new","","Constructs a new empty `OsString`.",203,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",203,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",203,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",203,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",203,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",203,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",203,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",203,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",203,null],[11,"from","","",203,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",203,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",203,null],[11,"new","","Coerces into an `OsStr` slice.",204,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",204,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",204,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",204,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",204,null],[11,"len","","Returns the length of this `OsStr`.",204,null],[11,"deref","","",203,null],[11,"default","","",203,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",203,null],[11,"eq","","",203,null],[11,"eq","","",203,null],[11,"partial_cmp","","",203,null],[11,"lt","","",203,null],[11,"le","","",203,null],[11,"gt","","",203,null],[11,"ge","","",203,null],[11,"partial_cmp","","",203,null],[11,"cmp","","",203,null],[11,"hash","","",203,null],[11,"eq","","",204,null],[11,"eq","","",204,null],[11,"partial_cmp","","",204,null],[11,"lt","","",204,null],[11,"le","","",204,null],[11,"gt","","",204,null],[11,"ge","","",204,null],[11,"partial_cmp","","",204,null],[11,"cmp","","",204,null],[11,"eq","","",203,null],[11,"eq","","",204,null],[11,"partial_cmp","","",203,null],[11,"partial_cmp","","",204,null],[11,"eq","","",203,null],[11,"partial_cmp","","",203,null],[11,"eq","collections::borrow","",205,null],[11,"eq","std::ffi::os_str","",204,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::ffi::os_str","",204,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","","",205,null],[11,"eq","","",205,null],[11,"eq","std::ffi::os_str","",203,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::ffi::os_str","",203,null],[11,"hash","","",204,null],[11,"fmt","","",204,null],[11,"borrow","","",203,null],[11,"to_owned","","",204,null],[11,"as_ref","","",204,null],[11,"as_ref","","",203,null],[11,"as_ref","collections::string","",206,null],[11,"clone","std::fs","",207,null],[11,"clone","","",208,null],[11,"fmt","","",209,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"clone","","",209,null],[11,"hash","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"clone","","",210,null],[11,"open","","Attempts to open a file in read-only mode.",211,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",211,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",211,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",211,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",211,null],[11,"metadata","","Queries metadata about the underlying file.",211,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",211,null],[11,"fmt","","",211,null],[11,"read","","",211,null],[11,"read_to_end","","",211,null],[11,"write","","",211,null],[11,"flush","","",211,null],[11,"seek","","",211,null],[11,"new","","Creates a blank new set of options ready for configuration.",208,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",208,null],[11,"write","","Sets the option for write access.",208,null],[11,"append","","Sets the option for the append mode.",208,null],[11,"truncate","","Sets the option for truncating a previous file.",208,null],[11,"create","","Sets the option for creating a new file.",208,null],[11,"create_new","","Sets the option to always create a new file.",208,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",208,null],[11,"file_type","","Returns the file type for this metadata.",207,null],[11,"is_dir","","Returns whether this metadata is for a directory.",207,null],[11,"is_file","","Returns whether this metadata is for a regular file.",207,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",207,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",207,null],[11,"modified","","Returns the last modification time listed in this metadata.",207,null],[11,"accessed","","Returns the last access time of this metadata.",207,null],[11,"created","","Returns the creation time listed in the this metadata.",207,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",209,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",209,null],[11,"is_dir","","Test whether this file type represents a directory.",210,null],[11,"is_file","","Test whether this file type represents a regular file.",210,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",210,null],[11,"next","","",212,null],[11,"path","","Returns the full path to the file that this entry represents.",213,null],[11,"metadata","","Return the metadata for the file that this entry points at.",213,null],[11,"file_type","","Return the file type for the file that this entry points at.",213,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",213,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",214,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",214,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",214,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",215,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",215,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",215,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",215,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",215,null],[11,"read","","",215,null],[11,"fill_buf","","",215,null],[11,"consume","","",215,null],[11,"fmt","","",215,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",215,null],[11,"fmt","","",216,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",217,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",217,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",217,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",217,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",217,null],[11,"write","","",217,null],[11,"flush","","",217,null],[11,"fmt","","",217,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",217,null],[11,"drop","","",217,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",216,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",216,null],[11,"from","std::io::error","",202,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",216,null],[11,"fmt","","",216,null],[11,"new","","Creates a new `LineWriter`.",218,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",218,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",218,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",218,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",218,null],[11,"write","","",218,null],[11,"flush","","",218,null],[11,"fmt","","",218,null],[11,"fmt","std::io::cursor","",219,null],[11,"clone","","",219,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",219,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",219,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",219,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",219,null],[11,"position","","Returns the current position of this cursor.",219,null],[11,"set_position","","Sets the position of this cursor.",219,null],[11,"seek","","",219,null],[11,"read","","",219,null],[11,"fill_buf","","",219,null],[11,"consume","","",219,null],[11,"write","","",219,null],[11,"flush","","",219,null],[11,"write","","",219,null],[11,"flush","","",219,null],[11,"write","","",219,null],[11,"flush","","",219,null],[11,"fmt","std::io::error","",202,null],[11,"fmt","","",220,null],[11,"clone","","",220,null],[11,"eq","","",220,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",202,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",202,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",202,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",202,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",202,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",202,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",202,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",202,null],[11,"fmt","","",202,null],[11,"description","","",202,null],[11,"cause","","",202,null],[11,"read","alloc::boxed","",140,null],[11,"read_to_end","","",140,null],[11,"read_to_string","","",140,null],[11,"read_exact","","",140,null],[11,"write","","",140,null],[11,"flush","","",140,null],[11,"write_all","","",140,null],[11,"write_fmt","","",140,null],[11,"seek","","",140,null],[11,"fill_buf","","",140,null],[11,"consume","","",140,null],[11,"read_until","","",140,null],[11,"read_line","","",140,null],[11,"write","collections::vec","",184,null],[11,"write_all","","",184,null],[11,"flush","","",184,null],[11,"read","std::io::util","",221,null],[11,"fill_buf","","",221,null],[11,"consume","","",221,null],[11,"read","","",222,null],[11,"write","","",223,null],[11,"flush","","",223,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",224,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",224,null],[11,"read","","",224,null],[11,"read_to_end","","",224,null],[11,"read_to_string","","",224,null],[11,"read_exact","","",224,null],[11,"read","","",225,null],[11,"read_to_end","","",225,null],[11,"fill_buf","","",225,null],[11,"consume","","",225,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",226,null],[11,"write","","",226,null],[11,"flush","","",226,null],[11,"write_all","","",226,null],[11,"write_fmt","","",226,null],[11,"write","","",227,null],[11,"flush","","",227,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",228,null],[11,"write","","",228,null],[11,"flush","","",228,null],[11,"write_all","","",228,null],[11,"write_fmt","","",228,null],[11,"write","","",229,null],[11,"flush","","",229,null],[11,"fmt","std::io","",230,null],[11,"clone","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"read","","",231,null],[11,"fill_buf","","",231,null],[11,"consume","","",231,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",232,null],[11,"read","","",232,null],[11,"fill_buf","","",232,null],[11,"consume","","",232,null],[11,"next","","",233,null],[11,"fmt","","",234,null],[11,"next","","",235,null],[11,"description","","",234,null],[11,"cause","","",234,null],[11,"fmt","","",234,null],[11,"next","","",236,null],[11,"next","","",237,null],[11,"cmp","std::net::ip","",238,null],[11,"partial_cmp","","",238,null],[11,"lt","","",238,null],[11,"le","","",238,null],[11,"gt","","",238,null],[11,"ge","","",238,null],[11,"hash","","",238,null],[11,"fmt","","",238,null],[11,"eq","","",238,null],[11,"ne","","",238,null],[11,"clone","","",238,null],[11,"fmt","","",239,null],[11,"hash","","",239,null],[11,"clone","","",239,null],[11,"eq","","",239,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",240,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",240,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",240,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",240,null],[11,"is_private","","Returns true if this is a private address.",240,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",240,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",240,null],[11,"is_multicast","","Returns true if this is a multicast address.",240,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",240,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",240,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",240,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",240,null],[11,"fmt","","",238,null],[11,"fmt","","",240,null],[11,"fmt","","",240,null],[11,"clone","","",240,null],[11,"eq","","",240,null],[11,"hash","","",240,null],[11,"partial_cmp","","",240,null],[11,"cmp","","",240,null],[11,"from","","",240,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",240,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",241,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",241,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",241,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",241,null],[11,"is_global","","Returns true if the address appears to be globally routable.",241,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",241,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",241,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",241,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",241,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",241,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",241,null],[11,"is_multicast","","Returns true if this is a multicast address.",241,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",241,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",241,null],[11,"fmt","","",241,null],[11,"fmt","","",241,null],[11,"clone","","",241,null],[11,"eq","","",241,null],[11,"hash","","",241,null],[11,"partial_cmp","","",241,null],[11,"cmp","","",241,null],[11,"from","","",241,null],[11,"fmt","std::net::addr","",242,null],[11,"hash","","",242,null],[11,"eq","","",242,null],[11,"ne","","",242,null],[11,"clone","","",242,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",242,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",242,null],[11,"set_ip","","Change the IP address associated with this socket address.",242,null],[11,"port","","Returns the port number associated with this socket address.",242,null],[11,"set_port","","Change the port number associated with this socket address.",242,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",243,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",243,null],[11,"set_ip","","Change the IP address associated with this socket address.",243,null],[11,"port","","Returns the port number associated with this socket address.",243,null],[11,"set_port","","Change the port number associated with this socket address.",243,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",244,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",244,null],[11,"set_ip","","Change the IP address associated with this socket address.",244,null],[11,"port","","Returns the port number associated with this socket address.",244,null],[11,"set_port","","Change the port number associated with this socket address.",244,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",244,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",244,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",244,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",244,null],[11,"fmt","","",242,null],[11,"fmt","","",243,null],[11,"fmt","","",243,null],[11,"fmt","","",244,null],[11,"fmt","","",244,null],[11,"clone","","",243,null],[11,"clone","","",244,null],[11,"eq","","",243,null],[11,"eq","","",244,null],[11,"hash","","",243,null],[11,"hash","","",244,null],[11,"to_socket_addrs","","",242,null],[11,"to_socket_addrs","","",243,null],[11,"to_socket_addrs","","",244,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",245,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",245,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",245,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",245,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",245,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",245,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",245,null],[11,"read_timeout","","Returns the read timeout of this socket.",245,null],[11,"write_timeout","","Returns the write timeout of this socket.",245,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",245,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",245,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",245,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",245,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",245,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",245,null],[11,"read","","",245,null],[11,"read_to_end","","",245,null],[11,"write","","",245,null],[11,"flush","","",245,null],[11,"fmt","","",245,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",246,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",246,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",246,null],[11,"accept","","Accept a new incoming connection from this listener.",246,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",246,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",246,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",246,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",246,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",246,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",246,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",246,null],[11,"next","","",247,null],[11,"fmt","","",246,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",248,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",248,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",248,null],[11,"local_addr","","Returns the socket address that this socket was created from.",248,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",248,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",248,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",248,null],[11,"read_timeout","","Returns the read timeout of this socket.",248,null],[11,"write_timeout","","Returns the write timeout of this socket.",248,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",248,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",248,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",248,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",248,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",248,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",248,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",248,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",248,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",248,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",248,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",248,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",248,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",248,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",248,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",248,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",248,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",248,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",248,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",248,null],[11,"fmt","","",248,null],[11,"from_str","std::net::ip","",238,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",240,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",241,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",243,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",244,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",242,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",249,null],[11,"ne","","",249,null],[11,"clone","","",249,null],[11,"fmt","","",249,null],[11,"fmt","","",249,null],[11,"description","","",249,null],[11,"fmt","std::net","",250,null],[11,"eq","","",250,null],[11,"clone","","",250,null],[11,"next","","",251,null],[11,"clone","std::os::linux::raw::arch","",252,null],[11,"as_raw_stat","std::fs","",207,null],[11,"st_dev","","",207,null],[11,"st_ino","","",207,null],[11,"st_mode","","",207,null],[11,"st_nlink","","",207,null],[11,"st_uid","","",207,null],[11,"st_gid","","",207,null],[11,"st_rdev","","",207,null],[11,"st_size","","",207,null],[11,"st_atime","","",207,null],[11,"st_atime_nsec","","",207,null],[11,"st_mtime","","",207,null],[11,"st_mtime_nsec","","",207,null],[11,"st_ctime","","",207,null],[11,"st_ctime_nsec","","",207,null],[11,"st_blksize","","",207,null],[11,"st_blocks","","",207,null],[11,"as_raw_fd","","",211,null],[11,"from_raw_fd","","",211,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",211,null],[11,"as_raw_fd","std::net::tcp","",245,null],[11,"as_raw_fd","","",246,null],[11,"as_raw_fd","std::net::udp","",248,null],[11,"from_raw_fd","std::net::tcp","",245,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",246,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",248,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",245,null],[11,"into_raw_fd","","",246,null],[11,"into_raw_fd","std::net::udp","",248,null],[11,"from_vec","std::ffi::os_str","",203,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",203,null],[11,"from_bytes","","",204,null],[11,"as_bytes","","",204,null],[11,"mode","std::fs","",209,null],[11,"set_mode","","",209,null],[11,"from_mode","","",209,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",208,null],[11,"custom_flags","","",208,null],[11,"dev","","",207,null],[11,"ino","","",207,null],[11,"mode","","",207,null],[11,"nlink","","",207,null],[11,"uid","","",207,null],[11,"gid","","",207,null],[11,"rdev","","",207,null],[11,"size","","",207,null],[11,"atime","","",207,null],[11,"atime_nsec","","",207,null],[11,"mtime","","",207,null],[11,"mtime_nsec","","",207,null],[11,"ctime","","",207,null],[11,"ctime_nsec","","",207,null],[11,"blksize","","",207,null],[11,"blocks","","",207,null],[11,"is_block_device","","",210,null],[11,"is_char_device","","",210,null],[11,"is_fifo","","",210,null],[11,"is_socket","","",210,null],[11,"ino","","",213,null],[11,"mode","","",214,null],[11,"uid","std::process","",253,null],[11,"gid","","",253,null],[11,"before_exec","","",253,null],[11,"exec","","",253,null],[11,"from_raw","","",254,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",254,null],[11,"from_raw_fd","","",255,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",256,null],[11,"as_raw_fd","","",257,null],[11,"as_raw_fd","","",258,null],[11,"into_raw_fd","","",256,null],[11,"into_raw_fd","","",257,null],[11,"into_raw_fd","","",258,null],[11,"as_pthread_t","std::thread","",153,null],[11,"into_pthread_t","","",153,null],[11,"clone","std::sys::ext::net","",259,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",259,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",259,null],[11,"fmt","","",259,null],[11,"fmt","","",260,null],[11,"connect","","Connects to the socket named by `path`.",260,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",260,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",260,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",260,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",260,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",260,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",260,null],[11,"read_timeout","","Returns the read timeout of this socket.",260,null],[11,"write_timeout","","Returns the write timeout of this socket.",260,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",260,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",260,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",260,null],[11,"read","","",260,null],[11,"read_to_end","","",260,null],[11,"write","","",260,null],[11,"flush","","",260,null],[11,"as_raw_fd","","",260,null],[11,"from_raw_fd","","",260,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",260,null],[11,"fmt","","",261,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",261,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",261,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",261,null],[11,"local_addr","","Returns the local socket address of this listener.",261,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",261,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",261,null],[11,"incoming","","Returns an iterator over incoming connections.",261,null],[11,"as_raw_fd","","",261,null],[11,"from_raw_fd","","",261,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",261,null],[11,"fmt","","",262,null],[11,"next","","",262,null],[11,"size_hint","","",262,null],[11,"fmt","","",263,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",263,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",263,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",263,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",263,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",263,null],[11,"local_addr","","Returns the address of this socket.",263,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",263,null],[11,"recv_from","","Receives data from the socket.",263,null],[11,"recv","","Receives data from the socket.",263,null],[11,"send_to","","Sends data on the socket to the specified address.",263,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",263,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",263,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",263,null],[11,"read_timeout","","Returns the read timeout of this socket.",263,null],[11,"write_timeout","","Returns the write timeout of this socket.",263,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",263,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",263,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",263,null],[11,"as_raw_fd","","",263,null],[11,"from_raw_fd","","",263,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",263,null],[11,"deref","std::panic","",264,null],[11,"deref_mut","","",264,null],[11,"call_once","","",264,null],[11,"eq","std::path","",265,null],[11,"ne","","",265,null],[11,"cmp","","",265,null],[11,"partial_cmp","","",265,null],[11,"lt","","",265,null],[11,"le","","",265,null],[11,"gt","","",265,null],[11,"ge","","",265,null],[11,"hash","","",265,null],[11,"fmt","","",265,null],[11,"clone","","",265,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",265,null],[11,"fmt","","",266,null],[11,"clone","","",266,null],[11,"kind","","The parsed prefix data.",266,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",266,null],[11,"eq","","",266,null],[11,"partial_cmp","","",266,null],[11,"cmp","","",266,null],[11,"hash","","",266,null],[11,"fmt","","",267,null],[11,"hash","","",267,null],[11,"cmp","","",267,null],[11,"partial_cmp","","",267,null],[11,"lt","","",267,null],[11,"le","","",267,null],[11,"gt","","",267,null],[11,"ge","","",267,null],[11,"eq","","",267,null],[11,"ne","","",267,null],[11,"clone","","",267,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",267,null],[11,"as_ref","","",267,null],[11,"clone","","",268,null],[11,"clone","","",269,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",268,null],[11,"as_ref","","",268,null],[11,"as_ref","","",268,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",269,null],[11,"as_ref","","",269,null],[11,"as_ref","","",269,null],[11,"next","","",269,null],[11,"next_back","","",269,null],[11,"next","","",268,null],[11,"next_back","","",268,null],[11,"eq","","",268,null],[11,"partial_cmp","","",268,null],[11,"cmp","","",268,null],[11,"clone","","",270,null],[11,"new","","Allocates an empty `PathBuf`.",270,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",270,null],[11,"push","","Extends `self` with `path`.",270,null],[11,"pop","","Truncate `self` to `self.parent()`.",270,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",270,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",270,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",270,null],[11,"from","","",270,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",270,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",270,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",270,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",270,null],[11,"fmt","","",270,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",271,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",271,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",271,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",271,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",271,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",271,null],[11,"is_relative","","A path is *relative* if it is not absolute.",271,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",271,null],[11,"parent","","The path without its final component, if any.",271,null],[11,"file_name","","The final component of the path, if it is a normal file.",271,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",271,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",271,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",271,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",271,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",271,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",271,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",271,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",271,null],[11,"components","","Produce an iterator over the components of the path.",271,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",271,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",271,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",271,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",271,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",271,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",271,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",271,null],[11,"exists","","Returns whether the path points at an existing entity.",271,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",271,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",271,null],[11,"deref","","",270,null],[11,"borrow","","",270,null],[11,"from","collections::borrow","",205,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",205,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",271,null],[11,"eq","","",270,null],[11,"hash","","",270,null],[11,"partial_cmp","","",270,null],[11,"cmp","","",270,null],[11,"as_ref","","",270,null],[11,"into","","",270,null],[11,"eq","","",272,null],[11,"ne","","",272,null],[11,"clone","","",272,null],[11,"fmt","","",272,null],[11,"as_ref","","",271,null],[11,"fmt","","",271,null],[11,"fmt","","",273,null],[11,"fmt","","",273,null],[11,"eq","","",271,null],[11,"hash","","",271,null],[11,"partial_cmp","","",271,null],[11,"cmp","","",271,null],[11,"as_ref","","",271,null],[11,"as_ref","std::ffi::os_str","",204,null],[11,"as_ref","collections::borrow","",205,null],[11,"as_ref","std::ffi::os_str","",203,null],[11,"as_ref","collections::string","",206,null],[11,"as_ref","std::path","",270,null],[11,"eq","","",270,null],[11,"eq","","",271,null],[11,"partial_cmp","","",270,null],[11,"partial_cmp","","",271,null],[11,"eq","","",270,null],[11,"partial_cmp","","",270,null],[11,"eq","collections::borrow","",205,null],[11,"eq","std::path","",271,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::path","",271,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","","",205,null],[11,"eq","","",205,null],[11,"eq","std::path","",270,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::path","",270,null],[11,"eq","","",270,null],[11,"eq","std::ffi::os_str","",204,null],[11,"partial_cmp","std::path","",270,null],[11,"partial_cmp","std::ffi::os_str","",204,null],[11,"eq","std::path","",270,null],[11,"partial_cmp","","",270,null],[11,"eq","","",270,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","std::path","",270,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"eq","std::path","",270,null],[11,"eq","std::ffi::os_str","",203,null],[11,"partial_cmp","std::path","",270,null],[11,"partial_cmp","std::ffi::os_str","",203,null],[11,"eq","std::path","",271,null],[11,"eq","std::ffi::os_str","",204,null],[11,"partial_cmp","std::path","",271,null],[11,"partial_cmp","std::ffi::os_str","",204,null],[11,"eq","std::path","",271,null],[11,"partial_cmp","","",271,null],[11,"eq","","",271,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","std::path","",271,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"eq","std::path","",271,null],[11,"eq","std::ffi::os_str","",203,null],[11,"partial_cmp","std::path","",271,null],[11,"partial_cmp","std::ffi::os_str","",203,null],[11,"eq","","",204,null],[11,"partial_cmp","","",204,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","","",205,null],[11,"eq","std::ffi::os_str","",203,null],[11,"partial_cmp","","",203,null],[11,"eq","collections::borrow","",205,null],[11,"eq","std::ffi::os_str","",204,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::ffi::os_str","",204,null],[11,"eq","collections::borrow","",205,null],[11,"partial_cmp","","",205,null],[11,"eq","","",205,null],[11,"eq","std::ffi::os_str","",203,null],[11,"partial_cmp","collections::borrow","",205,null],[11,"partial_cmp","std::ffi::os_str","",203,null],[11,"fmt","std::path","",272,null],[11,"description","","",272,null],[11,"write","std::process","",256,null],[11,"flush","","",256,null],[11,"read","","",257,null],[11,"read_to_end","","",257,null],[11,"read","","",258,null],[11,"read_to_end","","",258,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",253,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",253,null],[11,"args","","Add multiple arguments to pass to the program.",253,null],[11,"env","","Inserts or updates an environment variable mapping.",253,null],[11,"env_remove","","Removes an environment variable mapping.",253,null],[11,"env_clear","","Clears the entire environment map for the child process.",253,null],[11,"current_dir","","Sets the working directory for the child process.",253,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",253,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",253,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",253,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",253,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",253,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",253,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",253,null],[11,"clone","","",274,null],[11,"eq","","",274,null],[11,"ne","","",274,null],[11,"fmt","","",274,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",255,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",255,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",255,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",254,null],[11,"clone","","",254,null],[11,"eq","","",254,null],[11,"ne","","",254,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",254,null],[11,"code","","Returns the exit code of the process, if any.",254,null],[11,"fmt","","",254,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",275,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",275,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",275,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",275,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",276,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",276,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",276,null],[11,"id","","Retrieves the id of this handle.",277,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",277,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",277,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",277,null],[11,"drop","","",276,null],[11,"drop","","",277,null],[11,"fmt","","",276,null],[11,"fmt","","",277,null],[11,"clone","std::sync::mpsc","",278,null],[11,"eq","","",278,null],[11,"ne","","",278,null],[11,"fmt","","",279,null],[11,"clone","","",279,null],[11,"eq","","",279,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"eq","","",280,null],[11,"clone","","",281,null],[11,"eq","","",281,null],[11,"ne","","",281,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",282,null],[11,"clone","","",282,null],[11,"drop","","",282,null],[11,"fmt","","",282,null],[11,"send","","Sends a value on this synchronous channel.",283,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",283,null],[11,"clone","","",283,null],[11,"drop","","",283,null],[11,"fmt","","",283,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",284,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",284,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",284,null],[11,"next","","",285,null],[11,"next","","",286,null],[11,"into_iter","","",284,null],[11,"drop","","",284,null],[11,"fmt","","",284,null],[11,"fmt","","",278,null],[11,"fmt","","",278,null],[11,"description","","",278,null],[11,"cause","","",278,null],[11,"fmt","","",281,null],[11,"fmt","","",281,null],[11,"description","","",281,null],[11,"cause","","",281,null],[11,"fmt","","",279,null],[11,"description","","",279,null],[11,"cause","","",279,null],[11,"fmt","","",280,null],[11,"description","","",280,null],[11,"cause","","",280,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",287,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",287,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",288,null],[11,"clone","std::sync::condvar","",289,null],[11,"eq","","",289,null],[11,"ne","","",289,null],[11,"fmt","","",289,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",289,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",290,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",290,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",290,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",290,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",290,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",290,null],[11,"default","","",290,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",290,null],[11,"new","","Creates a new condition variable",291,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",291,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",291,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",291,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",291,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",291,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",291,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",292,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",292,null],[11,"try_lock","","Attempts to acquire this lock.",292,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",292,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",292,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",292,null],[11,"drop","","",292,null],[11,"default","","",292,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",292,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",293,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",293,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",293,null],[11,"destroy","","Deallocates resources associated with this static mutex.",293,null],[11,"deref","","",294,null],[11,"deref_mut","","",294,null],[11,"drop","","",294,null],[11,"new","std::sync::once","Creates a new `Once` value.",295,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",295,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",295,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",296,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",297,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",297,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",297,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",297,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",297,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",297,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",297,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",297,null],[11,"drop","","",297,null],[11,"fmt","","",297,null],[11,"default","","",297,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",298,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",298,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",298,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",298,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",298,null],[11,"destroy","","Deallocates all resources associated with this static lock.",298,null],[11,"deref","","",299,null],[11,"deref","","",300,null],[11,"deref_mut","","",300,null],[11,"drop","","",299,null],[11,"drop","","",300,null],[11,"hash","std::time::duration","",301,null],[11,"fmt","","",301,null],[11,"cmp","","",301,null],[11,"partial_cmp","","",301,null],[11,"lt","","",301,null],[11,"le","","",301,null],[11,"gt","","",301,null],[11,"ge","","",301,null],[11,"eq","","",301,null],[11,"ne","","",301,null],[11,"clone","","",301,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",301,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",301,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",301,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",301,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",301,null],[11,"add","","",301,null],[11,"add_assign","","",301,null],[11,"sub","","",301,null],[11,"sub_assign","","",301,null],[11,"mul","","",301,null],[11,"mul_assign","","",301,null],[11,"div","","",301,null],[11,"div_assign","","",301,null],[11,"cmp","std::time","",302,null],[11,"partial_cmp","","",302,null],[11,"lt","","",302,null],[11,"le","","",302,null],[11,"gt","","",302,null],[11,"ge","","",302,null],[11,"eq","","",302,null],[11,"ne","","",302,null],[11,"clone","","",302,null],[11,"cmp","","",303,null],[11,"partial_cmp","","",303,null],[11,"lt","","",303,null],[11,"le","","",303,null],[11,"gt","","",303,null],[11,"ge","","",303,null],[11,"eq","","",303,null],[11,"ne","","",303,null],[11,"clone","","",303,null],[11,"fmt","","",304,null],[11,"clone","","",304,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",302,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",302,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",302,null],[11,"add","","",302,null],[11,"add_assign","","",302,null],[11,"sub","","",302,null],[11,"sub_assign","","",302,null],[11,"sub","","",302,null],[11,"fmt","","",302,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",303,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",303,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",303,null],[11,"add","","",303,null],[11,"add_assign","","",303,null],[11,"sub","","",303,null],[11,"sub_assign","","",303,null],[11,"fmt","","",303,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",304,null],[11,"description","","",304,null],[11,"fmt","","",304,null],[11,"fmt","std::sys_common::poison","",305,null],[11,"fmt","","",305,null],[11,"description","","",305,null],[11,"new","","Creates a `PoisonError`.",305,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",305,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",305,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",305,null],[11,"from","","",306,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",306,null],[11,"fmt","","",306,null],[11,"description","","",306,null],[11,"cause","","",306,null],[11,"clone","libc::unix","",307,null],[11,"clone","","",308,null],[11,"clone","","",309,null],[11,"clone","","",310,null],[11,"clone","","",311,null],[11,"clone","","",312,null],[11,"clone","","",313,null],[11,"clone","","",314,null],[11,"clone","","",315,null],[11,"clone","","",316,null],[11,"clone","","",317,null],[11,"clone","","",318,null],[11,"clone","","",319,null],[11,"clone","libc::unix::notbsd","",320,null],[11,"clone","","",321,null],[11,"clone","","",322,null],[11,"clone","","",323,null],[11,"clone","","",324,null],[11,"clone","","",325,null],[11,"clone","","",326,null],[11,"clone","","",327,null],[11,"clone","","",328,null],[11,"clone","","",329,null],[11,"clone","","",330,null],[11,"clone","","",331,null],[11,"clone","","",332,null],[11,"clone","","",333,null],[11,"clone","","",334,null],[11,"clone","libc::unix::notbsd::linux","",335,null],[11,"clone","","",336,null],[11,"clone","","",337,null],[11,"clone","","",338,null],[11,"clone","","",339,null],[11,"clone","","",340,null],[11,"clone","","",341,null],[11,"clone","","",342,null],[11,"clone","","",343,null],[11,"clone","","",344,null],[11,"clone","","",345,null],[11,"clone","","",346,null],[11,"clone","","",347,null],[11,"clone","","",348,null],[11,"clone","","",349,null],[11,"clone","","",350,null],[11,"clone","libc::unix::notbsd::linux::other","",351,null],[11,"clone","","",352,null],[11,"clone","","",353,null],[11,"clone","","",354,null],[11,"clone","","",355,null],[11,"clone","","",356,null],[11,"clone","","",357,null],[11,"clone","","",358,null],[11,"clone","","",359,null],[11,"clone","","",360,null],[11,"clone","","",361,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",362,null],[11,"clone","","",363,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",364,null],[11,"clone","","",365,null],[11,"clone","","",366,null],[11,"clone","","",367,null],[11,"clone","","",368,null],[11,"clone","","",369,null],[11,"clone","","",370,null],[11,"clone","","",371,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",372,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",372,null],[11,"file","","Returns the name of the source file from which the panic originated.",373,null],[11,"line","","Returns the line number from which the panic originated.",373,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",374,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",374,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",374,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",374,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",374,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",374,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",374,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",374,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",374,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",374,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",374,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",374,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",374,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",374,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",374,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",374,null],[11,"hash","","",374,null],[11,"fmt","","",374,null],[11,"fmt","","",374,null],[11,"fmt","","",374,null],[11,"from","","",374,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",375,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",375,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",375,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",375,null],[11,"fmt","","",375,null],[11,"default","","",375,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",374,null],[11,"as_ref","","",374,null],[11,"borrow","collections::borrow","",205,null],[11,"clone","","",205,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",205,null],[11,"into_owned","","Extracts the owned data.",205,null],[11,"deref","","",205,null],[11,"cmp","","",205,null],[11,"eq","","",205,null],[11,"partial_cmp","","",205,null],[11,"fmt","","",205,null],[11,"fmt","","",205,null],[11,"hash","","",205,null],[11,"as_ref","","",205,null],[11,"borrow","collections::vec","",184,null],[11,"borrow_mut","","",184,null],[11,"clone","collections::str","",376,null],[11,"next","","",376,null],[11,"size_hint","","",376,null],[11,"borrow","collections::string","",206,null],[11,"cmp","","",206,null],[11,"partial_cmp","","",206,null],[11,"lt","","",206,null],[11,"le","","",206,null],[11,"gt","","",206,null],[11,"ge","","",206,null],[11,"fmt","","",141,null],[11,"fmt","","",142,null],[11,"new","","Creates a new empty `String`.",206,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",206,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",206,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",206,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",206,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",206,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",206,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",206,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",206,null],[11,"as_str","","Extracts a string slice containing the entire string.",206,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",206,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",206,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",206,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",206,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",206,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",206,null],[11,"push","","Appends the given `char` to the end of this `String`.",206,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",206,null],[11,"truncate","","Shortens this `String` to the specified length.",206,null],[11,"pop","","Removes the last character from the string buffer and returns it.",206,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",206,null],[11,"insert","","Inserts a character into this `String` at a byte position.",206,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",206,null],[11,"len","","Returns the length of this `String`, in bytes.",206,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",206,null],[11,"clear","","Truncates this `String`, removing all contents.",206,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",206,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",206,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",141,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",141,null],[11,"fmt","","",141,null],[11,"fmt","","",142,null],[11,"clone","","",206,null],[11,"clone_from","","",206,null],[11,"from_iter","","",206,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",206,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",206,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",206,null],[11,"extend","","",206,null],[11,"extend","","",206,null],[11,"extend","","",206,null],[11,"eq","","",206,null],[11,"ne","","",206,null],[11,"eq","","",206,null],[11,"ne","","",206,null],[11,"eq","","",206,null],[11,"ne","","",206,null],[11,"eq","collections::borrow","",205,null],[11,"ne","","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"eq","collections::string","",206,null],[11,"ne","","",206,null],[11,"default","","",206,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",206,null],[11,"fmt","","",206,null],[11,"hash","","",206,null],[11,"add","","",206,null],[11,"index","","",206,null],[11,"index","","",206,null],[11,"index","","",206,null],[11,"index","","",206,null],[11,"index","","",206,null],[11,"index","","",206,null],[11,"index_mut","","",206,null],[11,"index_mut","","",206,null],[11,"index_mut","","",206,null],[11,"index_mut","","",206,null],[11,"index_mut","","",206,null],[11,"index_mut","","",206,null],[11,"deref","","",206,null],[11,"deref_mut","","",206,null],[11,"from_str","","",206,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",143,null],[11,"fmt","","",143,null],[11,"fmt","","",143,null],[11,"eq","","",143,null],[11,"as_ref","","",206,null],[11,"as_ref","","",206,null],[11,"from","","",206,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",205,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",205,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",206,null],[11,"write_str","","",206,null],[11,"write_char","","",206,null],[11,"drop","","",377,null],[11,"next","","",377,null],[11,"size_hint","","",377,null],[11,"next_back","","",377,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",184,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",184,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",184,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",184,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",184,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",184,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",184,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",184,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",184,null],[11,"as_slice","","Extracts a slice containing the entire vector.",184,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",184,null],[11,"set_len","","Sets the length of a vector.",184,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",184,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",184,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",184,null],[11,"retain","","Retains only the elements specified by the predicate.",184,null],[11,"push","","Appends an element to the back of a collection.",184,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",184,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",184,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",184,null],[11,"clear","","Clears the vector, removing all values.",184,null],[11,"len","","Returns the number of elements in the vector.",184,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",184,null],[11,"split_off","","Splits the collection into two at the given index.",184,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",184,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",184,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",184,null],[11,"clone","","",184,null],[11,"clone_from","","",184,null],[11,"hash","","",184,null],[11,"index","","",184,null],[11,"index_mut","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"deref","","",184,null],[11,"deref_mut","","",184,null],[11,"from_iter","","",184,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",184,null],[11,"extend","","",184,null],[11,"extend","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","collections::borrow","",205,null],[11,"ne","","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"eq","collections::vec","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"partial_cmp","","",184,null],[11,"cmp","","",184,null],[11,"drop","","",184,null],[11,"default","","",184,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",184,null],[11,"as_ref","","",184,null],[11,"as_mut","","",184,null],[11,"as_ref","","",184,null],[11,"as_mut","","",184,null],[11,"from","","",184,null],[11,"from","","",184,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",205,null],[11,"from","","",205,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",205,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",378,null],[11,"size_hint","","",378,null],[11,"count","","",378,null],[11,"next_back","","",378,null],[11,"clone","","",378,null],[11,"drop","","",378,null],[11,"next","","",379,null],[11,"size_hint","","",379,null],[11,"next_back","","",379,null],[11,"drop","","",379,null],[11,"next","rustc_unicode::char","",380,null],[11,"next","","",381,null],[11,"clone","","",382,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"clone","","",144,null],[11,"fmt","","",144,null],[11,"next","","",382,null],[11,"size_hint","","",382,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",144,null],[11,"fmt","","",144,null],[11,"clone","alloc::boxed","",383,null],[11,"pointer","","",384,null],[11,"make_place","","",384,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",384,null],[11,"finalize","","",140,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",383,null],[11,"drop","","",384,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",140,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",140,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",140,null],[11,"default","","",140,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",140,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",140,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",140,null],[11,"clone","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"partial_cmp","","",140,null],[11,"lt","","",140,null],[11,"le","","",140,null],[11,"ge","","",140,null],[11,"gt","","",140,null],[11,"cmp","","",140,null],[11,"hash","","",140,null],[11,"from","","",140,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",140,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",140,null],[11,"fmt","","",140,null],[11,"fmt","","",140,null],[11,"fmt","","",140,null],[11,"deref","","",140,null],[11,"deref_mut","","",140,null],[11,"next","","",140,null],[11,"size_hint","","",140,null],[11,"next_back","","",140,null],[11,"call_once","","",140,null],[11,"call_once","","",140,null],[11,"clone","","",140,null],[11,"borrow","","",140,null],[11,"borrow_mut","","",140,null],[11,"as_ref","","",140,null],[11,"as_mut","","",140,null],[11,"detail","x11_dl::error","",385,null],[11,"kind","","",385,null],[11,"new","","",385,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",385,null],[11,"clone","","",385,null],[11,"fmt","","",385,null],[11,"description","","",385,null],[11,"eq","","",386,null],[11,"hash","","",386,null],[11,"fmt","","",386,null],[11,"clone","","",386,null],[11,"as_str","","",386,null],[11,"open","x11_dl::glx","",387,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xcursor","",388,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",389,null],[11,"clone","","",390,null],[11,"clone","","",391,null],[11,"clone","","",392,null],[11,"clone","","",393,null],[11,"clone","","",394,null],[11,"clone","","",395,null],[11,"clone","","",396,null],[11,"clone","","",397,null],[11,"clone","","",398,null],[11,"open","x11_dl::xf86vmode","",399,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",400,null],[11,"eq","","",401,null],[11,"ne","","",401,null],[11,"clone","","",401,null],[11,"clone","","",402,null],[11,"clone","","",403,null],[11,"clone","","",404,null],[11,"clone","","",405,null],[11,"open","x11_dl::xft","",406,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",407,null],[11,"ne","","",407,null],[11,"clone","","",407,null],[11,"eq","","",408,null],[11,"ne","","",408,null],[11,"clone","","",408,null],[11,"eq","","",409,null],[11,"ne","","",409,null],[11,"clone","","",409,null],[11,"eq","","",410,null],[11,"ne","","",410,null],[11,"clone","","",410,null],[11,"eq","","",411,null],[11,"ne","","",411,null],[11,"clone","","",411,null],[11,"eq","","",412,null],[11,"ne","","",412,null],[11,"clone","","",412,null],[11,"eq","","",413,null],[11,"ne","","",413,null],[11,"clone","","",413,null],[11,"open","x11_dl::xinerama","",414,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",415,null],[11,"ne","","",415,null],[11,"clone","","",415,null],[11,"eq","","",416,null],[11,"ne","","",416,null],[11,"clone","","",416,null],[11,"open","x11_dl::xinput","",417,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",418,null],[11,"ne","","",418,null],[11,"clone","","",418,null],[11,"eq","","",419,null],[11,"ne","","",419,null],[11,"clone","","",419,null],[11,"eq","","",420,null],[11,"ne","","",420,null],[11,"clone","","",420,null],[11,"eq","","",421,null],[11,"ne","","",421,null],[11,"clone","","",421,null],[11,"eq","","",422,null],[11,"ne","","",422,null],[11,"clone","","",422,null],[11,"eq","","",423,null],[11,"ne","","",423,null],[11,"clone","","",423,null],[11,"eq","","",424,null],[11,"ne","","",424,null],[11,"clone","","",424,null],[11,"eq","","",425,null],[11,"ne","","",425,null],[11,"clone","","",425,null],[11,"eq","","",426,null],[11,"ne","","",426,null],[11,"clone","","",426,null],[11,"eq","","",427,null],[11,"ne","","",427,null],[11,"clone","","",427,null],[11,"open","x11_dl::xinput2","",428,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",429,null],[11,"default","","",429,{"inputs":[],"output":{"name":"struct_unnamed1"}}],[11,"clone","","",430,null],[11,"default","","",430,{"inputs":[],"output":{"name":"struct_unnamed2"}}],[11,"clone","","",431,null],[11,"default","","",431,{"inputs":[],"output":{"name":"struct_unnamed3"}}],[11,"clone","","",432,null],[11,"default","","",432,{"inputs":[],"output":{"name":"struct_unnamed4"}}],[11,"_type","","",433,null],[11,"add","","",433,null],[11,"remove","","",433,null],[11,"attach","","",433,null],[11,"detach","","",433,null],[11,"clone","","",433,null],[11,"default","","",433,{"inputs":[],"output":{"name":"union_unnamed5"}}],[11,"clone","","",434,null],[11,"default","","",434,{"inputs":[],"output":{"name":"struct_unnamed6"}}],[11,"clone","","",435,null],[11,"default","","",435,{"inputs":[],"output":{"name":"struct_unnamed7"}}],[11,"clone","","",436,null],[11,"default","","",436,{"inputs":[],"output":{"name":"struct_unnamed8"}}],[11,"clone","","",437,null],[11,"default","","",437,{"inputs":[],"output":{"name":"struct_unnamed9"}}],[11,"clone","","",438,null],[11,"default","","",438,{"inputs":[],"output":{"name":"struct_unnamed10"}}],[11,"clone","","",439,null],[11,"default","","",439,{"inputs":[],"output":{"name":"struct_unnamed11"}}],[11,"clone","","",440,null],[11,"default","","",440,{"inputs":[],"output":{"name":"struct_unnamed12"}}],[11,"clone","","",441,null],[11,"default","","",441,{"inputs":[],"output":{"name":"struct_unnamed13"}}],[11,"clone","","",442,null],[11,"default","","",442,{"inputs":[],"output":{"name":"struct_unnamed14"}}],[11,"clone","","",443,null],[11,"default","","",443,{"inputs":[],"output":{"name":"struct_unnamed15"}}],[11,"clone","","",444,null],[11,"default","","",444,{"inputs":[],"output":{"name":"struct_unnamed16"}}],[11,"clone","","",445,null],[11,"default","","",445,{"inputs":[],"output":{"name":"struct_unnamed17"}}],[11,"clone","","",446,null],[11,"default","","",446,{"inputs":[],"output":{"name":"struct_unnamed18"}}],[11,"clone","","",447,null],[11,"default","","",447,{"inputs":[],"output":{"name":"struct_unnamed19"}}],[11,"clone","","",448,null],[11,"default","","",448,{"inputs":[],"output":{"name":"struct_unnamed20"}}],[11,"clone","","",449,null],[11,"default","","",449,{"inputs":[],"output":{"name":"struct_unnamed21"}}],[11,"clone","","",450,null],[11,"default","","",450,{"inputs":[],"output":{"name":"struct_unnamed22"}}],[11,"clone","","",451,null],[11,"default","","",451,{"inputs":[],"output":{"name":"struct_unnamed23"}}],[11,"clone","","",452,null],[11,"default","","",452,{"inputs":[],"output":{"name":"struct_unnamed24"}}],[11,"clone","","",453,null],[11,"default","","",453,{"inputs":[],"output":{"name":"struct_unnamed25"}}],[11,"clone","","",454,null],[11,"default","","",454,{"inputs":[],"output":{"name":"struct_unnamed26"}}],[11,"clone","","",455,null],[11,"default","","",455,{"inputs":[],"output":{"name":"struct_unnamed27"}}],[11,"clone","","",456,null],[11,"default","","",456,{"inputs":[],"output":{"name":"struct_unnamed28"}}],[11,"open","x11_dl::xlib","",457,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",458,null],[11,"ne","","",458,null],[11,"clone","","",458,null],[11,"get_type","","",458,null],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",459,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",459,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",460,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",460,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",461,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",461,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",462,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",462,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",463,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",463,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",464,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",464,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",465,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",465,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",466,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",466,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",467,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",467,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",468,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",468,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",469,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",469,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",470,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",470,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",471,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",471,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",472,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",472,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",473,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",473,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",474,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",474,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",475,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",475,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",476,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",476,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",477,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",477,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",478,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",478,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",479,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",479,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",480,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",480,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",481,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",481,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",482,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",482,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",483,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",483,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",484,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",484,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",485,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",485,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",486,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",486,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",487,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",487,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",488,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",488,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",489,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",489,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",458,null],[11,"as_ref","","",458,null],[11,"from","","",458,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",458,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",490,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",490,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",459,null],[11,"ne","","",459,null],[11,"clone","","",459,null],[11,"eq","","",460,null],[11,"ne","","",460,null],[11,"clone","","",460,null],[11,"eq","","",461,null],[11,"ne","","",461,null],[11,"clone","","",461,null],[11,"eq","","",462,null],[11,"ne","","",462,null],[11,"clone","","",462,null],[11,"eq","","",463,null],[11,"ne","","",463,null],[11,"clone","","",463,null],[11,"eq","","",464,null],[11,"ne","","",464,null],[11,"clone","","",464,null],[11,"eq","","",465,null],[11,"ne","","",465,null],[11,"clone","","",465,null],[11,"eq","","",466,null],[11,"ne","","",466,null],[11,"clone","","",466,null],[11,"eq","","",467,null],[11,"ne","","",467,null],[11,"clone","","",467,null],[11,"eq","","",468,null],[11,"ne","","",468,null],[11,"clone","","",468,null],[11,"eq","","",469,null],[11,"ne","","",469,null],[11,"clone","","",469,null],[11,"eq","","",470,null],[11,"ne","","",470,null],[11,"clone","","",470,null],[11,"eq","","",471,null],[11,"ne","","",471,null],[11,"clone","","",471,null],[11,"eq","","",472,null],[11,"ne","","",472,null],[11,"clone","","",472,null],[11,"eq","","",474,null],[11,"ne","","",474,null],[11,"clone","","",474,null],[11,"eq","","",475,null],[11,"ne","","",475,null],[11,"clone","","",475,null],[11,"eq","","",476,null],[11,"ne","","",476,null],[11,"clone","","",476,null],[11,"eq","","",477,null],[11,"ne","","",477,null],[11,"clone","","",477,null],[11,"eq","","",478,null],[11,"ne","","",478,null],[11,"clone","","",478,null],[11,"eq","","",479,null],[11,"ne","","",479,null],[11,"clone","","",479,null],[11,"eq","","",480,null],[11,"ne","","",480,null],[11,"clone","","",480,null],[11,"eq","","",481,null],[11,"ne","","",481,null],[11,"clone","","",481,null],[11,"eq","","",482,null],[11,"ne","","",482,null],[11,"clone","","",482,null],[11,"eq","","",483,null],[11,"ne","","",483,null],[11,"clone","","",483,null],[11,"eq","","",484,null],[11,"ne","","",484,null],[11,"clone","","",484,null],[11,"eq","","",485,null],[11,"ne","","",485,null],[11,"clone","","",485,null],[11,"eq","","",486,null],[11,"ne","","",486,null],[11,"clone","","",486,null],[11,"eq","","",487,null],[11,"ne","","",487,null],[11,"clone","","",487,null],[11,"eq","","",488,null],[11,"ne","","",488,null],[11,"clone","","",488,null],[11,"eq","","",489,null],[11,"ne","","",489,null],[11,"clone","","",489,null],[11,"eq","","",490,null],[11,"ne","","",490,null],[11,"clone","","",490,null],[11,"eq","","",491,null],[11,"ne","","",491,null],[11,"clone","","",491,null],[11,"eq","","",492,null],[11,"ne","","",492,null],[11,"clone","","",492,null],[11,"eq","","",493,null],[11,"ne","","",493,null],[11,"clone","","",493,null],[11,"eq","","",494,null],[11,"ne","","",494,null],[11,"clone","","",494,null],[11,"eq","","",495,null],[11,"ne","","",495,null],[11,"clone","","",495,null],[11,"eq","","",496,null],[11,"ne","","",496,null],[11,"clone","","",496,null],[11,"eq","","",497,null],[11,"ne","","",497,null],[11,"clone","","",497,null],[11,"eq","","",498,null],[11,"ne","","",498,null],[11,"clone","","",498,null],[11,"eq","","",499,null],[11,"ne","","",499,null],[11,"clone","","",499,null],[11,"eq","","",500,null],[11,"ne","","",500,null],[11,"clone","","",500,null],[11,"eq","","",501,null],[11,"ne","","",501,null],[11,"clone","","",501,null],[11,"eq","","",502,null],[11,"ne","","",502,null],[11,"clone","","",502,null],[11,"eq","","",503,null],[11,"ne","","",503,null],[11,"clone","","",503,null],[11,"eq","","",504,null],[11,"ne","","",504,null],[11,"clone","","",504,null],[11,"eq","","",505,null],[11,"ne","","",505,null],[11,"clone","","",505,null],[11,"eq","","",506,null],[11,"ne","","",506,null],[11,"clone","","",506,null],[11,"eq","","",507,null],[11,"ne","","",507,null],[11,"clone","","",507,null],[11,"eq","","",508,null],[11,"ne","","",508,null],[11,"clone","","",508,null],[11,"eq","","",509,null],[11,"ne","","",509,null],[11,"clone","","",509,null],[11,"eq","","",473,null],[11,"ne","","",473,null],[11,"clone","","",473,null],[11,"eq","","",510,null],[11,"ne","","",510,null],[11,"clone","","",510,null],[11,"eq","","",511,null],[11,"ne","","",511,null],[11,"clone","","",511,null],[11,"eq","","",512,null],[11,"ne","","",512,null],[11,"clone","","",512,null],[11,"eq","","",513,null],[11,"ne","","",513,null],[11,"clone","","",513,null],[11,"eq","","",514,null],[11,"ne","","",514,null],[11,"clone","","",514,null],[11,"eq","","",515,null],[11,"ne","","",515,null],[11,"clone","","",515,null],[11,"eq","","",516,null],[11,"ne","","",516,null],[11,"clone","","",516,null],[11,"eq","","",517,null],[11,"ne","","",517,null],[11,"clone","","",517,null],[11,"eq","","",518,null],[11,"ne","","",518,null],[11,"clone","","",518,null],[11,"eq","","",519,null],[11,"ne","","",519,null],[11,"clone","","",519,null],[11,"eq","","",520,null],[11,"ne","","",520,null],[11,"clone","","",520,null],[11,"eq","","",521,null],[11,"ne","","",521,null],[11,"clone","","",521,null],[11,"eq","","",522,null],[11,"ne","","",522,null],[11,"clone","","",522,null],[11,"eq","","",523,null],[11,"ne","","",523,null],[11,"clone","","",523,null],[11,"eq","","",524,null],[11,"ne","","",524,null],[11,"clone","","",524,null],[11,"eq","","",525,null],[11,"ne","","",525,null],[11,"clone","","",525,null],[11,"eq","","",526,null],[11,"ne","","",526,null],[11,"clone","","",526,null],[11,"eq","","",527,null],[11,"ne","","",527,null],[11,"clone","","",527,null],[11,"eq","","",528,null],[11,"ne","","",528,null],[11,"clone","","",528,null],[11,"eq","","",529,null],[11,"ne","","",529,null],[11,"clone","","",529,null],[11,"eq","","",530,null],[11,"ne","","",530,null],[11,"clone","","",530,null],[11,"eq","","",531,null],[11,"ne","","",531,null],[11,"clone","","",531,null],[11,"eq","","",532,null],[11,"ne","","",532,null],[11,"clone","","",532,null],[11,"eq","","",533,null],[11,"ne","","",533,null],[11,"clone","","",533,null],[11,"eq","","",534,null],[11,"ne","","",534,null],[11,"clone","","",534,null],[11,"eq","","",535,null],[11,"ne","","",535,null],[11,"clone","","",535,null],[11,"eq","","",536,null],[11,"ne","","",536,null],[11,"clone","","",536,null],[11,"eq","","",537,null],[11,"ne","","",537,null],[11,"default","","",537,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"clone","","",537,null],[11,"as_bytes","","",537,null],[11,"as_bytes_mut","","",537,null],[11,"as_longs","","",537,null],[11,"as_longs_mut","","",537,null],[11,"as_shorts","","",537,null],[11,"as_shorts_mut","","",537,null],[11,"get_byte","","",537,null],[11,"get_long","","",537,null],[11,"get_short","","",537,null],[11,"new","","",537,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",537,null],[11,"set_long","","",537,null],[11,"set_short","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"as_mut","","",537,null],[11,"as_ref","","",537,null],[11,"from","","",537,null],[11,"clone","","",538,null],[11,"eq","","",538,null],[11,"open","x11_dl::xmu","",539,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xrecord","",540,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",541,null],[11,"ne","","",541,null],[11,"clone","","",541,null],[11,"eq","","",542,null],[11,"ne","","",542,null],[11,"clone","","",542,null],[11,"eq","","",543,null],[11,"ne","","",543,null],[11,"clone","","",543,null],[11,"eq","","",544,null],[11,"ne","","",544,null],[11,"clone","","",544,null],[11,"eq","","",545,null],[11,"ne","","",545,null],[11,"clone","","",545,null],[11,"eq","","",546,null],[11,"ne","","",546,null],[11,"clone","","",546,null],[11,"eq","","",547,null],[11,"ne","","",547,null],[11,"clone","","",547,null],[11,"open","x11_dl::xrender","",548,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",549,null],[11,"ne","","",549,null],[11,"clone","","",549,null],[11,"eq","","",550,null],[11,"ne","","",550,null],[11,"clone","","",550,null],[11,"eq","","",551,null],[11,"ne","","",551,null],[11,"clone","","",551,null],[11,"eq","","",552,null],[11,"ne","","",552,null],[11,"clone","","",552,null],[11,"eq","","",553,null],[11,"ne","","",553,null],[11,"clone","","",553,null],[11,"eq","","",554,null],[11,"ne","","",554,null],[11,"clone","","",554,null],[11,"eq","","",555,null],[11,"ne","","",555,null],[11,"clone","","",555,null],[11,"eq","","",556,null],[11,"ne","","",556,null],[11,"clone","","",556,null],[11,"eq","","",557,null],[11,"ne","","",557,null],[11,"clone","","",557,null],[11,"eq","","",558,null],[11,"ne","","",558,null],[11,"clone","","",558,null],[11,"eq","","",559,null],[11,"ne","","",559,null],[11,"clone","","",559,null],[11,"eq","","",560,null],[11,"ne","","",560,null],[11,"clone","","",560,null],[11,"eq","","",561,null],[11,"ne","","",561,null],[11,"clone","","",561,null],[11,"eq","","",562,null],[11,"ne","","",562,null],[11,"clone","","",562,null],[11,"eq","","",563,null],[11,"ne","","",563,null],[11,"clone","","",563,null],[11,"eq","","",564,null],[11,"ne","","",564,null],[11,"clone","","",564,null],[11,"eq","","",565,null],[11,"ne","","",565,null],[11,"clone","","",565,null],[11,"eq","","",566,null],[11,"ne","","",566,null],[11,"clone","","",566,null],[11,"eq","","",567,null],[11,"ne","","",567,null],[11,"clone","","",567,null],[11,"eq","","",568,null],[11,"ne","","",568,null],[11,"clone","","",568,null],[11,"eq","","",569,null],[11,"ne","","",569,null],[11,"clone","","",569,null],[11,"eq","","",570,null],[11,"ne","","",570,null],[11,"clone","","",570,null],[11,"eq","","",571,null],[11,"ne","","",571,null],[11,"clone","","",571,null],[11,"open","x11_dl::xt","",572,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xtest","",573,{"inputs":[],"output":{"name":"result"}}],[11,"open","x11_dl::xrandr","",574,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",575,null],[11,"ne","","",575,null],[11,"clone","","",575,null],[11,"eq","","",576,null],[11,"ne","","",576,null],[11,"clone","","",576,null],[11,"eq","","",577,null],[11,"ne","","",577,null],[11,"clone","","",577,null],[11,"eq","","",578,null],[11,"ne","","",578,null],[11,"clone","","",578,null],[11,"eq","","",579,null],[11,"ne","","",579,null],[11,"clone","","",579,null],[11,"eq","","",580,null],[11,"ne","","",580,null],[11,"clone","","",580,null],[11,"eq","","",581,null],[11,"ne","","",581,null],[11,"clone","","",581,null],[11,"eq","","",582,null],[11,"ne","","",582,null],[11,"clone","","",582,null],[11,"eq","","",583,null],[11,"ne","","",583,null],[11,"clone","","",583,null],[11,"eq","","",584,null],[11,"ne","","",584,null],[11,"clone","","",584,null],[11,"eq","","",585,null],[11,"ne","","",585,null],[11,"clone","","",585,null],[11,"eq","","",586,null],[11,"ne","","",586,null],[11,"clone","","",586,null],[11,"eq","","",587,null],[11,"ne","","",587,null],[11,"clone","","",587,null],[11,"eq","","",588,null],[11,"ne","","",588,null],[11,"clone","","",588,null],[11,"eq","","",589,null],[11,"ne","","",589,null],[11,"clone","","",589,null],[11,"eq","","",590,null],[11,"ne","","",590,null],[11,"clone","","",590,null],[11,"eq","","",591,null],[11,"ne","","",591,null],[11,"clone","","",591,null],[11,"eq","","",592,null],[11,"ne","","",592,null],[11,"clone","","",592,null],[11,"eq","","",593,null],[11,"ne","","",593,null],[11,"clone","","",593,null],[11,"eq","","",594,null],[11,"ne","","",594,null],[11,"clone","","",594,null],[11,"open","","",595,{"inputs":[],"output":{"name":"result"}}],[11,"fmt","glutin","",7,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",1,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",1,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",1,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",1,null],[11,"build","","Builds the headless context.",1,null],[11,"build_strict","","Builds the headless context.",1,null],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",596,null],[11,"is_current","","Returns true if this context is the current one in this thread.",596,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",596,null],[11,"get_api","","Returns the API that is currently provided by this window.",596,null],[11,"set_window_resize_callback","","",596,null],[11,"make_current","","",596,null],[11,"is_current","","",596,null],[11,"get_proc_address","","",596,null],[11,"swap_buffers","","",596,null],[11,"get_api","","",596,null],[11,"get_pixel_format","","",596,null],[11,"new","","Initializes a new `WindowBuilder` with default values.",2,{"inputs":[],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",2,null],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",2,null],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",2,null],[11,"with_title","","Requests a specific title for the window.",2,null],[11,"with_fullscreen","","Requests fullscreen mode.",2,null],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",2,null],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",2,null],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",2,null],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",2,null],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",2,null],[11,"with_vsync","","Requests that the window has vsync enabled.",2,null],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",2,null],[11,"with_multisampling","","Sets the multisampling level to request.",2,null],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",2,null],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",2,null],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",2,null],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",2,null],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means &quot;I don&#39;t care&quot;.",2,null],[11,"with_transparency","","Sets whether the background of the window should be transparent.",2,null],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",2,null],[11,"with_multitouch","","Enables multitouch",2,null],[11,"build","","Builds the window.",2,null],[11,"build_strict","","Builds the window.",2,null],[11,"default","","",597,{"inputs":[],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",597,{"inputs":[],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",597,null],[11,"show","","Shows the window if it was hidden.",597,null],[11,"hide","","Hides the window if it was visible.",597,null],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",597,null],[11,"set_position","","Modifies the position of the window.",597,null],[11,"get_inner_size","","Returns the size in points of the client area of the window.",597,null],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",597,null],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",597,null],[11,"get_outer_size","","Returns the size in pixels of the window.",597,null],[11,"set_inner_size","","Modifies the inner size of the window.",597,null],[11,"poll_events","","Returns an iterator that poll for the next event in the window&#39;s events queue.\nReturns `None` if there is no event in the queue.",597,null],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",597,null],[11,"make_current","","Sets the context as the current context.",597,null],[11,"is_current","","Returns true if this context is the current one in this thread.",597,null],[11,"get_proc_address","","Returns the address of an OpenGL function.",597,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",597,null],[11,"platform_display","","DEPRECATED. Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",597,null],[11,"platform_window","","DEPRECATED. Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",597,null],[11,"get_api","","Returns the API that is currently provided by this window.",597,null],[11,"get_pixel_format","","Returns the pixel format of this window.",597,null],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",597,null],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",597,null],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",597,null],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",597,null],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",597,null],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",597,null],[11,"make_current","","",597,null],[11,"is_current","","",597,null],[11,"get_proc_address","","",597,null],[11,"swap_buffers","","",597,null],[11,"get_api","","",597,null],[11,"get_pixel_format","","",597,null],[11,"clone","","",598,null],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",598,null],[11,"next","","",599,null],[11,"size_hint","","",599,null],[11,"next","","",600,null],[11,"size_hint","","",600,null],[11,"next","","",601,null],[11,"size_hint","","",601,null],[11,"get_name","","Returns a human-readable name of the monitor.",602,null],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",602,null],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",602,null],[0,"os","","Contains traits with platform-specific methods in them.",null,null],[0,"unix","glutin::os","",null,null],[8,"WindowExt","glutin::os::unix","Additional methods on `Window` that are specific to Unix.",null,null],[10,"get_xlib_window","","Returns a pointer to the `Window` object of xlib that is used by this window.",603,null],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",603,null],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",null,null],[11,"get_xlib_window","glutin","",597,null],[11,"get_xlib_display","","",597,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",604,null],[10,"is_current","","Returns true if this context is the current one in this thread.",604,null],[10,"get_proc_address","","Returns the address of an OpenGL function.",604,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",604,null],[10,"get_api","","Returns the OpenGL API being used.",604,null],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",604,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"fmt","","",15,null],[11,"fmt","","",15,null],[11,"description","","",15,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"to_gl_version","","Extract the desktop GL version, if any.",18,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"pixelformatrequirements"}}],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"windowattributes"}}],[11,"clone","","",6,null],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"glattributes"}}]],"paths":[[3,"Touch"],[3,"HeadlessRendererBuilder"],[3,"WindowBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"WindowAttributes"],[3,"GlAttributes"],[4,"Event"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[4,"MouseCursor"],[4,"CursorState"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[3,"EncodeUtf16"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"OpenError"],[4,"OpenErrorKind"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xft"],[3,"XftFont"],[3,"XftColor"],[3,"XftCharSpec"],[3,"XftCharFontSpec"],[3,"XftFontSet"],[3,"XftGlyphSpec"],[3,"XftGlyphFontSpec"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGenericEventCookie"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ClientMessageData"],[3,"ImageFns"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"Xrandr_2_2_0"],[3,"HeadlessContext"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[8,"WindowExt"],[8,"GlContext"]]};
searchIndex["wayland_window"] = {"doc":"Wayland Window, a minimalistic decoration-drawing library for\nwayland applications.","items":[[3,"DecoratedSurface","wayland_window","A wrapper for a decorated surface.",null,null],[5,"substract_borders","","Substracts the border dimensions from the given dimensions.",null,null],[5,"add_borders","","Adds the border dimensions to the given dimensions.",null,null],[11,"resize","","Resizes the borders to given width and height.",0,null],[11,"new","","Creates a new decorated window around given surface.",0,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"wlcompositor"},{"name":"wlsubcompositor"},{"name":"wlshm"},{"name":"wlshell"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_title","","Set a short title for the surface.",0,null],[11,"set_class","","Set a class for the surface.",0,null],[11,"next","","",0,null],[11,"set_cursor","wayland_client::sys::wayland::client","set the pointer surface",1,null],[11,"release","","release the pointer object",1,null],[11,"fmt","wayland_client::events","",2,null],[11,"new","","",3,{"inputs":[],"output":{"name":"eventiterator"}}],[11,"drop","","",3,null],[11,"next","","",3,null],[11,"fmt","wayland_client::sys::wayland::client","",4,null],[11,"ptr","","",5,null],[11,"interface","","",5,null],[11,"interface_name","","",5,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",5,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",5,null],[11,"from_ptr","","",5,null],[11,"from_ptr_no_own","","",5,null],[11,"set_evt_iterator","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"sync","","asynchronous roundtrip",5,null],[11,"get_registry","","get global registry object",5,null],[11,"ptr","","",7,null],[11,"interface","","",7,null],[11,"interface_name","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",7,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",7,null],[11,"from_ptr","","",7,null],[11,"from_ptr_no_own","","",7,null],[11,"set_evt_iterator","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"bind","","bind an object to the display",7,null],[11,"drop","","",7,null],[11,"ptr","","",9,null],[11,"interface","","",9,null],[11,"interface_name","","",9,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",9,null],[11,"from_ptr","","",9,null],[11,"from_ptr_no_own","","",9,null],[11,"set_evt_iterator","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"drop","","",9,null],[11,"ptr","","",11,null],[11,"interface","","",11,null],[11,"interface_name","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",11,null],[11,"from_ptr","","",11,null],[11,"from_ptr_no_own","","",11,null],[11,"set_evt_iterator","","",11,null],[11,"fmt","","",11,null],[11,"create_surface","","create new surface",11,null],[11,"create_region","","create new region",11,null],[11,"drop","","",11,null],[11,"ptr","","",12,null],[11,"interface","","",12,null],[11,"interface_name","","",12,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",12,null],[11,"from_ptr","","",12,null],[11,"from_ptr_no_own","","",12,null],[11,"set_evt_iterator","","",12,null],[11,"fmt","","",12,null],[11,"create_buffer","","create a buffer from the pool",12,null],[11,"destroy","","destroy the pool",12,null],[11,"resize","","change the size of the pool mapping",12,null],[11,"drop","","",12,null],[11,"ptr","","",13,null],[11,"interface","","",13,null],[11,"interface_name","","",13,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",13,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",13,null],[11,"from_ptr","","",13,null],[11,"from_ptr_no_own","","",13,null],[11,"set_evt_iterator","","",13,null],[11,"fmt","","",13,null],[11,"fmt","","",14,null],[11,"fmt","","",15,null],[11,"create_pool","","create a shm pool",13,null],[11,"drop","","",13,null],[11,"ptr","","",16,null],[11,"interface","","",16,null],[11,"interface_name","","",16,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",16,null],[11,"from_ptr","","",16,null],[11,"from_ptr_no_own","","",16,null],[11,"set_evt_iterator","","",16,null],[11,"fmt","","",16,null],[11,"fmt","","",17,null],[11,"destroy","","destroy a buffer",16,null],[11,"drop","","",16,null],[11,"ptr","","",18,null],[11,"interface","","",18,null],[11,"interface_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",18,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",18,null],[11,"from_ptr","","",18,null],[11,"from_ptr_no_own","","",18,null],[11,"set_evt_iterator","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"accept","","accept one of the offered mime types",18,null],[11,"receive","","request that the data is transferred",18,null],[11,"destroy","","destroy data offer",18,null],[11,"drop","","",18,null],[11,"ptr","","",20,null],[11,"interface","","",20,null],[11,"interface_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",20,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",20,null],[11,"from_ptr","","",20,null],[11,"from_ptr_no_own","","",20,null],[11,"set_evt_iterator","","",20,null],[11,"fmt","","",20,null],[11,"fmt","","",21,null],[11,"offer","","add an offered mime type",20,null],[11,"destroy","","destroy the data source",20,null],[11,"drop","","",20,null],[11,"ptr","","",22,null],[11,"interface","","",22,null],[11,"interface_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",22,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",22,null],[11,"from_ptr","","",22,null],[11,"from_ptr_no_own","","",22,null],[11,"set_evt_iterator","","",22,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"start_drag","","start drag-and-drop operation",22,null],[11,"set_selection","","copy data to the selection",22,null],[11,"release","","destroy data device",22,null],[11,"drop","","",22,null],[11,"ptr","","",24,null],[11,"interface","","",24,null],[11,"interface_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",24,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",24,null],[11,"from_ptr","","",24,null],[11,"from_ptr_no_own","","",24,null],[11,"set_evt_iterator","","",24,null],[11,"fmt","","",24,null],[11,"create_data_source","","create a new data source",24,null],[11,"get_data_device","","create a new data device",24,null],[11,"drop","","",24,null],[11,"ptr","","",25,null],[11,"interface","","",25,null],[11,"interface_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",25,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",25,null],[11,"from_ptr","","",25,null],[11,"from_ptr_no_own","","",25,null],[11,"set_evt_iterator","","",25,null],[11,"fmt","","",25,null],[11,"get_shell_surface","","create a shell surface from a surface",25,null],[11,"drop","","",25,null],[11,"ptr","","",26,null],[11,"interface","","",26,null],[11,"interface_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",26,null],[11,"from_ptr","","",26,null],[11,"from_ptr_no_own","","",26,null],[11,"set_evt_iterator","","",26,null],[11,"fmt","","",26,null],[11,"hash","wayland_client::sys::wayland::client::WlShellSurfaceResize","",27,null],[11,"cmp","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"clone","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,null],[11,"is_all","","Returns `true` if all flags are currently set.",27,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,null],[11,"insert","","Inserts the specified flags in-place.",27,null],[11,"remove","","Removes the specified flags in-place.",27,null],[11,"toggle","","Toggles the specified flags in-place.",27,null],[11,"bitor","","Returns the union of the two sets of flags.",27,null],[11,"bitor_assign","","Adds the set of flags.",27,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,null],[11,"bitxor_assign","","Toggles the set of flags.",27,null],[11,"bitand","","Returns the intersection between the two sets of flags.",27,null],[11,"bitand_assign","","Disables all flags disabled in the set.",27,null],[11,"sub","","Returns the set difference of the two sets of flags.",27,null],[11,"sub_assign","","Disables all flags enabled in the set.",27,null],[11,"not","","Returns the complement of this set of flags.",27,null],[11,"extend","","",27,null],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::sys::wayland::client::WlShellSurfaceTransient","",28,null],[11,"cmp","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"clone","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,null],[11,"is_all","","Returns `true` if all flags are currently set.",28,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,null],[11,"insert","","Inserts the specified flags in-place.",28,null],[11,"remove","","Removes the specified flags in-place.",28,null],[11,"toggle","","Toggles the specified flags in-place.",28,null],[11,"bitor","","Returns the union of the two sets of flags.",28,null],[11,"bitor_assign","","Adds the set of flags.",28,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,null],[11,"bitxor_assign","","Toggles the set of flags.",28,null],[11,"bitand","","Returns the intersection between the two sets of flags.",28,null],[11,"bitand_assign","","Disables all flags disabled in the set.",28,null],[11,"sub","","Returns the set difference of the two sets of flags.",28,null],[11,"sub_assign","","Disables all flags enabled in the set.",28,null],[11,"not","","Returns the complement of this set of flags.",28,null],[11,"extend","","",28,null],[11,"from_iter","","",28,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"fmt","wayland_client::sys::wayland::client","",29,null],[11,"fmt","","",30,null],[11,"pong","","respond to a ping event",26,null],[11,"move_","","start an interactive move",26,null],[11,"resize","","start an interactive resize",26,null],[11,"set_toplevel","","make the surface a toplevel surface",26,null],[11,"set_transient","","make the surface a transient surface",26,null],[11,"set_fullscreen","","make the surface a fullscreen surface",26,null],[11,"set_popup","","make the surface a popup surface",26,null],[11,"set_maximized","","make the surface a maximized surface",26,null],[11,"set_title","","set surface title",26,null],[11,"set_class","","set surface class",26,null],[11,"drop","","",26,null],[11,"ptr","","",31,null],[11,"interface","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",31,null],[11,"from_ptr","","",31,null],[11,"from_ptr_no_own","","",31,null],[11,"set_evt_iterator","","",31,null],[11,"fmt","","",31,null],[11,"fmt","","",32,null],[11,"destroy","","delete surface",31,null],[11,"attach","","set the surface contents",31,null],[11,"damage","","mark part of the surface damaged",31,null],[11,"frame","","request a frame throttling hint",31,null],[11,"set_opaque_region","","set opaque region",31,null],[11,"set_input_region","","set input region",31,null],[11,"commit","","commit pending surface state",31,null],[11,"set_buffer_transform","","sets the buffer transformation",31,null],[11,"set_buffer_scale","","sets the buffer scaling factor",31,null],[11,"drop","","",31,null],[11,"ptr","","",33,null],[11,"interface","","",33,null],[11,"interface_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",33,null],[11,"from_ptr","","",33,null],[11,"from_ptr_no_own","","",33,null],[11,"set_evt_iterator","","",33,null],[11,"fmt","","",33,null],[11,"hash","wayland_client::sys::wayland::client::WlSeatCapability","",34,null],[11,"cmp","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"clone","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,null],[11,"is_all","","Returns `true` if all flags are currently set.",34,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,null],[11,"insert","","Inserts the specified flags in-place.",34,null],[11,"remove","","Removes the specified flags in-place.",34,null],[11,"toggle","","Toggles the specified flags in-place.",34,null],[11,"bitor","","Returns the union of the two sets of flags.",34,null],[11,"bitor_assign","","Adds the set of flags.",34,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,null],[11,"bitxor_assign","","Toggles the set of flags.",34,null],[11,"bitand","","Returns the intersection between the two sets of flags.",34,null],[11,"bitand_assign","","Disables all flags disabled in the set.",34,null],[11,"sub","","Returns the set difference of the two sets of flags.",34,null],[11,"sub_assign","","Disables all flags enabled in the set.",34,null],[11,"not","","Returns the complement of this set of flags.",34,null],[11,"extend","","",34,null],[11,"from_iter","","",34,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"fmt","wayland_client::sys::wayland::client","",35,null],[11,"get_pointer","","return pointer object",33,null],[11,"get_keyboard","","return keyboard object",33,null],[11,"get_touch","","return touch object",33,null],[11,"release","","release the seat object",33,null],[11,"drop","","",33,null],[11,"ptr","","",1,null],[11,"interface","","",1,null],[11,"interface_name","","",1,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",1,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",1,null],[11,"from_ptr","","",1,null],[11,"from_ptr_no_own","","",1,null],[11,"set_evt_iterator","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"drop","","",1,null],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",39,null],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"release","","release the keyboard object",39,null],[11,"drop","","",39,null],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",43,null],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",44,null],[11,"release","","release the touch object",43,null],[11,"drop","","",43,null],[11,"ptr","","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",45,null],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",46,null],[11,"fmt","","",47,null],[11,"hash","wayland_client::sys::wayland::client::WlOutputMode","",48,null],[11,"cmp","","",48,null],[11,"partial_cmp","","",48,null],[11,"lt","","",48,null],[11,"le","","",48,null],[11,"gt","","",48,null],[11,"ge","","",48,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"empty","","Returns an empty set of flags.",48,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",48,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",48,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",48,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",48,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,null],[11,"is_all","","Returns `true` if all flags are currently set.",48,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48,null],[11,"insert","","Inserts the specified flags in-place.",48,null],[11,"remove","","Removes the specified flags in-place.",48,null],[11,"toggle","","Toggles the specified flags in-place.",48,null],[11,"bitor","","Returns the union of the two sets of flags.",48,null],[11,"bitor_assign","","Adds the set of flags.",48,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",48,null],[11,"bitxor_assign","","Toggles the set of flags.",48,null],[11,"bitand","","Returns the intersection between the two sets of flags.",48,null],[11,"bitand_assign","","Disables all flags disabled in the set.",48,null],[11,"sub","","Returns the set difference of the two sets of flags.",48,null],[11,"sub_assign","","Disables all flags enabled in the set.",48,null],[11,"not","","Returns the complement of this set of flags.",48,null],[11,"extend","","",48,null],[11,"from_iter","","",48,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::sys::wayland::client","",49,null],[11,"drop","","",45,null],[11,"ptr","","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",50,null],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,null],[11,"fmt","","",50,null],[11,"destroy","","destroy region",50,null],[11,"add","","add rectangle to region",50,null],[11,"subtract","","subtract rectangle from region",50,null],[11,"drop","","",50,null],[11,"ptr","","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",51,null],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,null],[11,"fmt","","",51,null],[11,"destroy","","unbind from the subcompositor interface",51,null],[11,"get_subsurface","","give a surface the role sub-surface",51,null],[11,"drop","","",51,null],[11,"ptr","","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",52,null],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,null],[11,"fmt","","",52,null],[11,"destroy","","remove sub-surface interface",52,null],[11,"set_position","","reposition the sub-surface",52,null],[11,"place_above","","restack the sub-surface",52,null],[11,"place_below","","restack the sub-surface",52,null],[11,"set_sync","","set sub-surface to synchronized mode",52,null],[11,"set_desync","","set sub-surface to desynchronized mode",52,null],[11,"drop","","",52,null],[11,"new","wayland_client::egl","",53,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",53,null],[11,"get_size","","",53,null],[11,"resize","","",53,null],[11,"egl_surface_ptr","","",53,null],[11,"egl_surfaceptr","","DEPRECATED",53,null],[11,"drop","","",53,null],[11,"deref","","",53,null],[11,"get_cursor","wayland_client::cursor","Retrieve a cursor from the theme.",54,null],[11,"drop","","",54,null],[11,"name","","Retrieve the name of this cursor.",55,null],[11,"image_count","","Retrieve the number of images contained in this\nanimated cursor",55,null],[11,"frame","","Retrieve the image number of cursor animation.",55,null],[11,"frame_and_duration","","Retrieve the image number and its duration.",55,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",55,null],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",55,null],[11,"deref","","",56,null],[11,"drop","","",56,null],[11,"sync_roundtrip","wayland_client::sys::wayland::client","Synchronous roundtrip",5,null],[11,"dispatch","","Blocking dispatch",5,null],[11,"dispatch_pending","","Non-blocking dispatch",5,null],[11,"prepare_read","","Prepare an conccurent read",5,null],[11,"flush","","Non-blocking write to the server",5,null],[11,"drop","","",5,null],[11,"read_events","wayland_client::wayland","Read events",57,null],[11,"cancel","","Cancel the read",57,null],[11,"drop","","",57,null],[11,"hash","wayland_client","",58,null],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null]],"paths":[[3,"DecoratedSurface"],[3,"WlPointer"],[4,"Event"],[3,"EventIterator"],[4,"WaylandProtocolEvent"],[3,"WlDisplay"],[4,"WlDisplayEvent"],[3,"WlRegistry"],[4,"WlRegistryEvent"],[3,"WlCallback"],[4,"WlCallbackEvent"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[4,"WlShmFormat"],[4,"WlShmEvent"],[3,"WlBuffer"],[4,"WlBufferEvent"],[3,"WlDataOffer"],[4,"WlDataOfferEvent"],[3,"WlDataSource"],[4,"WlDataSourceEvent"],[3,"WlDataDevice"],[4,"WlDataDeviceEvent"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlShellSurfaceFullscreenMethod"],[4,"WlShellSurfaceEvent"],[3,"WlSurface"],[4,"WlSurfaceEvent"],[3,"WlSeat"],[3,"WlSeatCapability"],[4,"WlSeatEvent"],[4,"WlPointerButtonState"],[4,"WlPointerAxis"],[4,"WlPointerEvent"],[3,"WlKeyboard"],[4,"WlKeyboardKeymapFormat"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardEvent"],[3,"WlTouch"],[4,"WlTouchEvent"],[3,"WlOutput"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlOutputEvent"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"ReadEventsGuard"],[3,"ProxyId"]]};
searchIndex["wayland_kbd"] = {"doc":"Keyboard mapping utility for `wayland-client` using libxkbcommon.","items":[[3,"MappedKeyboard","wayland_kbd","A wayland keyboard mapped to its keymap",null,null],[3,"KeyEvent","","",null,null],[12,"keycode","","The raw keycode associated with this event. Only use it if\nyou know what you&#39;re doing.",0,null],[12,"serial","","",0,null],[12,"time","","",0,null],[12,"keystate","","",0,null],[4,"MappedKeyboardEvent","","",null,null],[13,"KeyEvent","","",1,null],[13,"Other","","",1,null],[4,"MappedKeyboardError","","",null,null],[13,"XKBNotFound","","",2,null],[13,"NoKeyboardOnSeat","","",2,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",3,null],[11,"is_none","","Returns `true` if the option is a `None` value",3,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",3,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",3,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",3,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",3,null],[11,"unwrap_or","","Returns the contained value or a default.",3,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",3,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",3,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",3,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",3,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",3,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",3,null],[11,"iter","","Returns an iterator over the possibly contained value.",3,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",3,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",3,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",3,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",3,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",3,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",3,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",3,null],[11,"unwrap_or_default","","Returns the contained value or a default",3,null],[11,"hash","core::num","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"shl","","",4,null],[11,"shl_assign","","",4,null],[11,"shr","","",4,null],[11,"shr_assign","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"add_assign","","",4,null],[11,"sub","","",4,null],[11,"sub_assign","","",4,null],[11,"mul","","",4,null],[11,"mul_assign","","",4,null],[11,"div","","",4,null],[11,"div_assign","","",4,null],[11,"rem","","",4,null],[11,"rem_assign","","",4,null],[11,"not","","",4,null],[11,"bitxor","","",4,null],[11,"bitxor_assign","","",4,null],[11,"bitor","","",4,null],[11,"bitor_assign","","",4,null],[11,"bitand","","",4,null],[11,"bitand_assign","","",4,null],[11,"neg","","",4,null],[11,"eq","core::num::dec2flt","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","core::num","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"hash","core::nonzero","",9,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",9,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",9,null],[11,"new","core::ptr","Creates a new `Unique`.",10,null],[11,"get","","Dereferences the content.",10,null],[11,"get_mut","","Mutably dereferences the content.",10,null],[11,"deref","","",10,null],[11,"fmt","","",10,null],[11,"new","","Creates a new `Shared`.",11,null],[11,"clone","","",11,null],[11,"deref","","",11,null],[11,"fmt","","",11,null],[11,"hash","core::marker","",12,null],[11,"eq","","",12,null],[11,"partial_cmp","","",12,null],[11,"cmp","","",12,null],[11,"clone","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"contains","","# Examples",15,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"contains","","# Examples",16,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"from","","",17,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",17,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"contains","","# Examples",18,null],[11,"hash","core::cmp","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"reverse","","Reverse the `Ordering`.",19,null],[11,"cmp","","",19,null],[11,"partial_cmp","","",19,null],[11,"fmt","wayland_kbd","",20,null],[11,"fmt","","",20,null],[11,"is","","Returns true if the boxed type is the same as `T`",20,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",20,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",20,null],[11,"is","","Forwards to the method defined on the type `Any`.",20,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",20,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",20,null],[11,"hash","core::any","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"clone","","",21,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",21,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",22,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",23,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"new","","Creates a new `AtomicBool`.",22,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",22,null],[11,"store","","Stores a value into the bool.",22,null],[11,"swap","","Stores a value into the bool, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",22,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",22,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",22,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",22,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",22,null],[11,"new","","Creates a new `AtomicPtr`.",23,null],[11,"load","","Loads a value from the pointer.",23,null],[11,"store","","Stores a value into the pointer.",23,null],[11,"swap","","Stores a value into the pointer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",23,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"default","","",32,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",32,null],[11,"new","","Creates a new atomic integer.",32,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",32,null],[11,"store","","Stores a value into the atomic integer.",32,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"fetch_add","","Add to the current value, returning the previous value.",32,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",32,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",32,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",32,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",32,null],[11,"default","","",33,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",33,null],[11,"new","","Creates a new atomic integer.",33,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",33,null],[11,"store","","Stores a value into the atomic integer.",33,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",33,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"fetch_add","","Add to the current value, returning the previous value.",33,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",33,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",33,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",33,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",33,null],[11,"default","","",34,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",34,null],[11,"new","","Creates a new atomic integer.",34,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",34,null],[11,"store","","Stores a value into the atomic integer.",34,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",34,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"fetch_add","","Add to the current value, returning the previous value.",34,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",34,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",34,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",34,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",34,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",35,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",35,null],[11,"set","","Sets the contained value.",35,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",35,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",35,null],[11,"clone","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",35,null],[11,"partial_cmp","","",35,null],[11,"lt","","",35,null],[11,"le","","",35,null],[11,"gt","","",35,null],[11,"ge","","",35,null],[11,"cmp","","",35,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"new","","Creates a new `RefCell` containing `value`.",37,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",37,null],[11,"borrow_state","","Query the current state of this `RefCell`",37,null],[11,"borrow","","Immutably borrows the wrapped value.",37,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",37,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",37,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",37,null],[11,"clone","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",37,null],[11,"partial_cmp","","",37,null],[11,"lt","","",37,null],[11,"le","","",37,null],[11,"gt","","",37,null],[11,"ge","","",37,null],[11,"cmp","","",37,null],[11,"deref","","",38,null],[11,"clone","","Copies a `Ref`.",38,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",38,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",39,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",40,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",40,null],[11,"get","","Gets a mutable pointer to the wrapped value.",40,null],[11,"default","","",40,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",41,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"count","","",41,null],[11,"last","","",41,null],[11,"len","","",41,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"count","","",42,null],[11,"nth","","",42,null],[11,"last","","",42,null],[11,"len","","",42,null],[11,"fmt","","",43,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"fmt","","",44,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"fmt","core::iter::range","",45,null],[11,"clone","","",45,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",15,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",14,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",17,null],[11,"next","core::iter::range","",45,null],[11,"size_hint","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next","core::ops","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"next","","",15,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"next_back","","",17,null],[11,"fmt","core::iter::sources","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"len","","",47,null],[11,"clone","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"len","","",48,null],[11,"fmt","core::iter","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"next","","",52,null],[11,"count","","",52,null],[11,"nth","","",52,null],[11,"find","","",52,null],[11,"last","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","# Overflow Behavior",57,null],[11,"size_hint","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"count","","",58,null],[11,"nth","","",58,null],[11,"last","","",58,null],[11,"size_hint","","",58,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",58,null],[11,"is_empty","","Checks if the iterator has finished iterating.",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"count","","",61,null],[11,"last","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"next","","",62,null],[11,"nth","","",62,null],[11,"size_hint","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"next","","",65,null],[11,"nth","","",65,null],[11,"last","","",65,null],[11,"count","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"hash","core::option","",3,null],[11,"fmt","","",3,null],[11,"cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",3,null],[11,"fmt","","",67,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",3,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",70,null],[11,"hash","core::result","",71,null],[11,"fmt","","",71,null],[11,"cmp","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"is_ok","","Returns true if the result is `Ok`",71,null],[11,"is_err","","Returns true if the result is `Err`",71,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",71,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",71,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",71,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",71,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",71,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",71,null],[11,"iter","","Returns an iterator over the possibly contained value.",71,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",71,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",71,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",71,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",71,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",71,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",71,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",71,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",71,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",71,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",71,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",71,null],[11,"fmt","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",71,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",75,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"count","","",75,null],[11,"nth","","",75,null],[11,"last","","",75,null],[11,"next_back","","",75,null],[11,"clone","","",75,null],[11,"fmt","","",76,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"count","","",76,null],[11,"nth","","",76,null],[11,"last","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next_back","","",77,null],[11,"fmt","","",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next_back","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"fmt","","",81,null],[11,"fmt","","",82,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"count","","",83,null],[11,"nth","","",83,null],[11,"last","","",83,null],[11,"next_back","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"count","","",84,null],[11,"nth","","",84,null],[11,"last","","",84,null],[11,"next_back","","",84,null],[11,"fmt","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"count","","",85,null],[11,"nth","","",85,null],[11,"last","","",85,null],[11,"next_back","","",85,null],[11,"fmt","core::str::pattern","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_reject","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"next_reject_back","","",87,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"haystack","","",88,null],[11,"next","","",88,null],[11,"next_match","","",88,null],[11,"next_reject","","",88,null],[11,"next_back","","",88,null],[11,"next_match_back","","",88,null],[11,"next_reject_back","","",88,null],[11,"clone","","",89,null],[11,"fmt","","",89,null],[11,"haystack","","",89,null],[11,"next","","",89,null],[11,"next_match","","",89,null],[11,"next_reject","","",89,null],[11,"next_back","","",89,null],[11,"next_match_back","","",89,null],[11,"next_reject_back","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"haystack","","",90,null],[11,"next","","",90,null],[11,"next_match","","",90,null],[11,"next_back","","",90,null],[11,"next_match_back","","",90,null],[11,"eq","core::str","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",92,null],[11,"fmt","","",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"as_str","","View the underlying data as a subslice of the original data.",93,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"as_str","","View the underlying data as a subslice of the original data.",94,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"count","","",95,null],[11,"last","","",95,null],[11,"nth","","",95,null],[11,"next_back","","",95,null],[11,"len","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"next_back","","",96,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"next_back","","",98,null],[11,"next_back","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"next_back","","",102,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"clone","","",105,null],[11,"next_back","","",104,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"next_back","","",106,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"next_back","","",107,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"fmt","core::hash::sip","",109,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",109,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",109,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",109,null],[11,"finish","","",109,null],[11,"clone","","",109,null],[11,"default","","",109,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",110,null],[11,"build_hasher","","",110,null],[11,"clone","","",110,null],[11,"default","","",110,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",111,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"field","","Adds a new field to the generated tuple struct output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"entry","","Adds a new entry to the set output.",114,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"entry","","Adds a new entry to the list output.",115,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",115,null],[11,"finish","","Finishes output and returns any error encountered.",115,null],[11,"entry","","Adds a new entry to the map output.",116,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",116,null],[11,"finish","","Finishes output and returns any error encountered.",116,null],[11,"partial_cmp","core::fmt","",117,null],[11,"eq","","",117,null],[11,"cmp","","",117,null],[11,"hash","","",117,null],[11,"default","","",117,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",117,null],[11,"clone","","",117,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"fmt","","",118,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",119,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",119,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",119,null],[11,"write_fmt","","Writes some formatted information into this instance",119,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",119,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",119,null],[11,"align","","Flag indicating what form of alignment was requested",119,null],[11,"width","","Optionally specified integer width that the output should be",119,null],[11,"precision","","Optionally specified precision for numeric types",119,null],[11,"sign_plus","","Determines if the `+` flag was specified.",119,null],[11,"sign_minus","","Determines if the `-` flag was specified.",119,null],[11,"alternate","","Determines if the `#` flag was specified.",119,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",119,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",119,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",119,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",119,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",119,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",119,null],[11,"write_str","","",119,null],[11,"write_char","","",119,null],[11,"write_fmt","","",119,null],[11,"fmt","","",117,null],[11,"fmt","core::marker","",12,null],[11,"fmt","core::cell","",35,null],[11,"fmt","","",37,null],[11,"fmt","","",38,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"as_utf8","wayland_kbd","Tries to retrieve the key event as an UTF8 sequence",0,null],[11,"as_symbol","","Tries to match this key event as a key symbol according to current keyboard state.",0,null],[11,"new","","Creates a mapped keyboard by extracting the keyboard from a seat.",120,{"inputs":[{"name":"wlseat"}],"output":{"name":"result"}}],[11,"next","","",120,null],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null]],"paths":[[3,"KeyEvent"],[4,"MappedKeyboardEvent"],[4,"MappedKeyboardError"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"MappedKeyboard"]]};
searchIndex["wayland_client"] = {"doc":"","items":[[3,"EventIterator","wayland_client","",null,null],[3,"ProxyId","","",null,null],[4,"Event","","",null,null],[13,"Wayland","","",0,null],[5,"is_available","","Checks if the wayland lib is available",null,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",0,null],[11,"new","","",1,{"inputs":[],"output":{"name":"eventiterator"}}],[11,"drop","","",1,null],[11,"next","","",1,null],[0,"egl","","",null,null],[3,"WlEglSurface","wayland_client::egl","",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","",2,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"destroy","","",2,null],[11,"get_size","","",2,null],[11,"resize","","",2,null],[11,"egl_surface_ptr","","",2,null],[11,"egl_surfaceptr","","DEPRECATED",2,null],[11,"drop","","",2,null],[11,"deref","","",2,null],[0,"cursor","wayland_client","",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"name":"option"},{"name":"u32"},{"name":"wlshm"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",3,null],[11,"drop","","",3,null],[11,"name","","Retrieve the name of this cursor.",4,null],[11,"image_count","","Retrieve the number of images contained in this\nanimated cursor",4,null],[11,"frame","","Retrieve the image number of cursor animation.",4,null],[11,"frame_and_duration","","Retrieve the image number and its duration.",4,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",4,null],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",4,null],[11,"deref","","",5,null],[11,"drop","","",5,null],[0,"wayland","wayland_client","",null,null],[3,"WlCallback","wayland_client::wayland","callback object",null,null],[3,"WlDisplay","","core global object",null,null],[3,"WlRegistry","","global registry object",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[4,"WlCallbackEvent","","",null,null],[13,"Done","","done event",6,null],[4,"WlDisplayEvent","","",null,null],[13,"Error","","fatal error event",7,null],[13,"DeleteId","","acknowledge object ID deletion",7,null],[4,"WlRegistryEvent","","",null,null],[13,"Global","","announce global object",8,null],[13,"GlobalRemove","","announce removal of global object",8,null],[4,"WaylandProtocolEvent","","An event generated by the protocol wayland.",null,null],[13,"WlDisplay","","",9,null],[13,"WlRegistry","","",9,null],[13,"WlCallback","","",9,null],[13,"WlShm","","",9,null],[13,"WlBuffer","","",9,null],[13,"WlDataOffer","","",9,null],[13,"WlDataSource","","",9,null],[13,"WlDataDevice","","",9,null],[13,"WlShellSurface","","",9,null],[13,"WlSurface","","",9,null],[13,"WlSeat","","",9,null],[13,"WlPointer","","",9,null],[13,"WlKeyboard","","",9,null],[13,"WlTouch","","",9,null],[13,"WlOutput","","",9,null],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[0,"compositor","","",null,null],[3,"WlCompositor","wayland_client::wayland::compositor","the compositor singleton",null,null],[3,"WlRegion","","region interface",null,null],[3,"WlSurface","","an onscreen surface",null,null],[4,"WlSurfaceEvent","","",null,null],[13,"Enter","","surface enters an output",10,null],[13,"Leave","","surface leaves an output",10,null],[0,"data_device","wayland_client::wayland","",null,null],[3,"WlDataDevice","wayland_client::wayland::data_device","data transfer device",null,null],[3,"WlDataDeviceManager","","data transfer interface",null,null],[3,"WlDataOffer","","offer to transfer data",null,null],[3,"WlDataSource","","offer to transfer data",null,null],[4,"WlDataDeviceEvent","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",11,null],[13,"Enter","","initiate drag-and-drop session",11,null],[13,"Leave","","end drag-and-drop session",11,null],[13,"Motion","","drag-and-drop session motion",11,null],[13,"Drop","","end drag-and-drag session successfully",11,null],[13,"Selection","","advertise new selection",11,null],[4,"WlDataOfferEvent","","",null,null],[13,"Offer","","advertise offered mime type",12,null],[4,"WlDataSourceEvent","","",null,null],[13,"Target","","a target accepts an offered mime type",13,null],[13,"Send","","send the data",13,null],[13,"Cancelled","","selection was cancelled",13,null],[0,"output","wayland_client::wayland","",null,null],[3,"WlOutput","wayland_client::wayland::output","compositor output region",null,null],[4,"WlOutputEvent","","",null,null],[13,"Geometry","","properties of the output",14,null],[13,"Mode","","advertise available modes for the output",14,null],[13,"Done","","sent all information about output",14,null],[13,"Scale","","output scaling properties",14,null],[4,"WlOutputSubpixel","","subpixel geometry information",null,null],[13,"Unknown","","",15,null],[13,"None","","",15,null],[13,"HorizontalRgb","","",15,null],[13,"HorizontalBgr","","",15,null],[13,"VerticalRgb","","",15,null],[13,"VerticalBgr","","",15,null],[4,"WlOutputTransform","","transform from framebuffer to output",null,null],[13,"Normal","","",16,null],[13,"T90","","",16,null],[13,"T180","","",16,null],[13,"T270","","",16,null],[13,"Flipped","","",16,null],[13,"Flipped90","","",16,null],[13,"Flipped180","","",16,null],[13,"Flipped270","","",16,null],[0,"WlOutputMode","","mode information",null,null],[3,"WlOutputMode","wayland_client::wayland::output::WlOutputMode","",null,null],[17,"Current","","indicates this is the current mode",null,null],[17,"Preferred","","indicates this is the preferred mode",null,null],[11,"hash","","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,null],[11,"is_all","","Returns `true` if all flags are currently set.",17,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,null],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,null],[11,"bitor_assign","","Adds the set of flags.",17,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,null],[11,"bitxor_assign","","Toggles the set of flags.",17,null],[11,"bitand","","Returns the intersection between the two sets of flags.",17,null],[11,"bitand_assign","","Disables all flags disabled in the set.",17,null],[11,"sub","","Returns the set difference of the two sets of flags.",17,null],[11,"sub_assign","","Disables all flags enabled in the set.",17,null],[11,"not","","Returns the complement of this set of flags.",17,null],[11,"extend","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[0,"seat","wayland_client::wayland","",null,null],[3,"WlKeyboard","wayland_client::wayland::seat","keyboard input device",null,null],[3,"WlPointer","","pointer input device",null,null],[3,"WlSeat","","group of input devices",null,null],[3,"WlTouch","","touchscreen input device",null,null],[4,"WlKeyboardEvent","","",null,null],[13,"Keymap","","keyboard mapping",18,null],[13,"Enter","","enter event",18,null],[13,"Leave","","leave event",18,null],[13,"Key","","key event",18,null],[13,"Modifiers","","modifier and group state",18,null],[13,"RepeatInfo","","repeat rate and delay",18,null],[4,"WlPointerEvent","","",null,null],[13,"Enter","","enter event",19,null],[13,"Leave","","leave event",19,null],[13,"Motion","","pointer motion event",19,null],[13,"Button","","pointer button event",19,null],[13,"Axis","","axis event",19,null],[4,"WlSeatEvent","","",null,null],[13,"Capabilities","","seat capabilities changed",20,null],[13,"Name","","unique identifier for this seat",20,null],[4,"WlTouchEvent","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",21,null],[13,"Up","","end of a touch event sequence",21,null],[13,"Motion","","update of touch point coordinates",21,null],[13,"Frame","","end of touch frame event",21,null],[13,"Cancel","","touch session cancelled",21,null],[4,"WlKeyboardKeyState","","physical key state",null,null],[13,"Released","","key is not pressed",22,null],[13,"Pressed","","key is pressed",22,null],[4,"WlKeyboardKeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",23,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",23,null],[4,"WlPointerAxis","","axis types",null,null],[13,"VerticalScroll","","",24,null],[13,"HorizontalScroll","","",24,null],[4,"WlPointerButtonState","","physical button state",null,null],[13,"Released","","The button is not pressed",25,null],[13,"Pressed","","The button is pressed",25,null],[0,"WlSeatCapability","","seat capability bitmask",null,null],[3,"WlSeatCapability","wayland_client::wayland::seat::WlSeatCapability","",null,null],[17,"Pointer","","The seat has pointer devices",null,null],[17,"Keyboard","","The seat has one or more keyboards",null,null],[17,"Touch","","The seat has touch devices",null,null],[11,"hash","","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[0,"shell","wayland_client::wayland","",null,null],[3,"WlShell","wayland_client::wayland::shell","create desktop-style surfaces",null,null],[3,"WlShellSurface","","desktop-style metadata interface",null,null],[4,"WlShellSurfaceEvent","","",null,null],[13,"Ping","","ping client",27,null],[13,"Configure","","suggest resize",27,null],[13,"PopupDone","","popup interaction is done",27,null],[4,"WlShellSurfaceFullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",28,null],[13,"Scale","","scale, preserve the surface&#39;s aspect ratio and center on output",28,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",28,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",28,null],[0,"WlShellSurfaceResize","","edge values for resizing",null,null],[3,"WlShellSurfaceResize","wayland_client::wayland::shell::WlShellSurfaceResize","",null,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[11,"hash","","",29,null],[11,"cmp","","",29,null],[11,"partial_cmp","","",29,null],[11,"lt","","",29,null],[11,"le","","",29,null],[11,"gt","","",29,null],[11,"ge","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,null],[11,"is_all","","Returns `true` if all flags are currently set.",29,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,null],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,null],[11,"bitor_assign","","Adds the set of flags.",29,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,null],[11,"bitxor_assign","","Toggles the set of flags.",29,null],[11,"bitand","","Returns the intersection between the two sets of flags.",29,null],[11,"bitand_assign","","Disables all flags disabled in the set.",29,null],[11,"sub","","Returns the set difference of the two sets of flags.",29,null],[11,"sub_assign","","Disables all flags enabled in the set.",29,null],[11,"not","","Returns the complement of this set of flags.",29,null],[11,"extend","","",29,null],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[0,"WlShellSurfaceTransient","wayland_client::wayland::shell","details of transient behaviour",null,null],[3,"WlShellSurfaceTransient","wayland_client::wayland::shell::WlShellSurfaceTransient","",null,null],[17,"Inactive","","do not set keyboard focus",null,null],[11,"hash","","",30,null],[11,"cmp","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,null],[11,"is_all","","Returns `true` if all flags are currently set.",30,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,null],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,null],[11,"bitor_assign","","Adds the set of flags.",30,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,null],[11,"bitxor_assign","","Toggles the set of flags.",30,null],[11,"bitand","","Returns the intersection between the two sets of flags.",30,null],[11,"bitand_assign","","Disables all flags disabled in the set.",30,null],[11,"sub","","Returns the set difference of the two sets of flags.",30,null],[11,"sub_assign","","Disables all flags enabled in the set.",30,null],[11,"not","","Returns the complement of this set of flags.",30,null],[11,"extend","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[0,"shm","wayland_client::wayland","",null,null],[3,"WlBuffer","wayland_client::wayland::shm","content for a wl_surface",null,null],[3,"WlShm","","shared memory support",null,null],[3,"WlShmPool","","a shared memory pool",null,null],[4,"WlBufferEvent","","",null,null],[13,"Release","","compositor releases buffer",31,null],[4,"WlShmEvent","","",null,null],[13,"Format","","pixel format description",32,null],[4,"WlShmFormat","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format",33,null],[13,"Xrgb8888","","32-bit RGB format",33,null],[13,"C8","","",33,null],[13,"Rgb332","","",33,null],[13,"Bgr233","","",33,null],[13,"Xrgb4444","","",33,null],[13,"Xbgr4444","","",33,null],[13,"Rgbx4444","","",33,null],[13,"Bgrx4444","","",33,null],[13,"Argb4444","","",33,null],[13,"Abgr4444","","",33,null],[13,"Rgba4444","","",33,null],[13,"Bgra4444","","",33,null],[13,"Xrgb1555","","",33,null],[13,"Xbgr1555","","",33,null],[13,"Rgbx5551","","",33,null],[13,"Bgrx5551","","",33,null],[13,"Argb1555","","",33,null],[13,"Abgr1555","","",33,null],[13,"Rgba5551","","",33,null],[13,"Bgra5551","","",33,null],[13,"Rgb565","","",33,null],[13,"Bgr565","","",33,null],[13,"Rgb888","","",33,null],[13,"Bgr888","","",33,null],[13,"Xbgr8888","","",33,null],[13,"Rgbx8888","","",33,null],[13,"Bgrx8888","","",33,null],[13,"Abgr8888","","",33,null],[13,"Rgba8888","","",33,null],[13,"Bgra8888","","",33,null],[13,"Xrgb2101010","","",33,null],[13,"Xbgr2101010","","",33,null],[13,"Rgbx1010102","","",33,null],[13,"Bgrx1010102","","",33,null],[13,"Argb2101010","","",33,null],[13,"Abgr2101010","","",33,null],[13,"Rgba1010102","","",33,null],[13,"Bgra1010102","","",33,null],[13,"Yuyv","","",33,null],[13,"Yvyu","","",33,null],[13,"Uyvy","","",33,null],[13,"Vyuy","","",33,null],[13,"Ayuv","","",33,null],[13,"Nv12","","",33,null],[13,"Nv21","","",33,null],[13,"Nv16","","",33,null],[13,"Nv61","","",33,null],[13,"Yuv410","","",33,null],[13,"Yvu410","","",33,null],[13,"Yuv411","","",33,null],[13,"Yvu411","","",33,null],[13,"Yuv420","","",33,null],[13,"Yvu420","","",33,null],[13,"Yuv422","","",33,null],[13,"Yvu422","","",33,null],[13,"Yuv444","","",33,null],[13,"Yvu444","","",33,null],[0,"subcompositor","wayland_client::wayland","",null,null],[3,"WlSubcompositor","wayland_client::wayland::subcompositor","sub-surface compositing",null,null],[3,"WlSubsurface","","sub-surface interface to a wl_surface",null,null],[11,"sync_roundtrip","wayland_client::wayland","Synchronous roundtrip",34,null],[11,"dispatch","","Blocking dispatch",34,null],[11,"dispatch_pending","","Non-blocking dispatch",34,null],[11,"prepare_read","","Prepare an conccurent read",34,null],[11,"flush","","Non-blocking write to the server",34,null],[11,"drop","","",34,null],[11,"read_events","","Read events",35,null],[11,"cancel","","Cancel the read",35,null],[11,"drop","","",35,null],[8,"Proxy","wayland_client","",null,null],[10,"ptr","","",36,null],[10,"interface","","",36,null],[10,"interface_name","","The internal name of this interface, as advertized by the registry if it is a global.",36,{"inputs":[],"output":{"name":"str"}}],[10,"version","","The maximum version of this interface handled by the library.",36,{"inputs":[],"output":{"name":"u32"}}],[10,"id","","Get the id of this proxy",36,null],[10,"from_ptr","","Creates a proxy from a fresh ptr",36,null],[10,"from_ptr_no_own","","Creates a proxy from a ptr that is managed elsewhere",36,null],[10,"set_evt_iterator","","Set the event iterator associated to this proxy",36,null],[11,"hash","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[14,"wayland_env!","","This macro allows you to create a simple wayland environment handler.",null,null],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceResize","",29,null],[11,"cmp","","",29,null],[11,"partial_cmp","","",29,null],[11,"lt","","",29,null],[11,"le","","",29,null],[11,"gt","","",29,null],[11,"ge","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"wlshellsurfaceresize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,null],[11,"is_all","","Returns `true` if all flags are currently set.",29,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,null],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,null],[11,"bitor_assign","","Adds the set of flags.",29,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,null],[11,"bitxor_assign","","Toggles the set of flags.",29,null],[11,"bitand","","Returns the intersection between the two sets of flags.",29,null],[11,"bitand_assign","","Disables all flags disabled in the set.",29,null],[11,"sub","","Returns the set difference of the two sets of flags.",29,null],[11,"sub_assign","","Disables all flags enabled in the set.",29,null],[11,"not","","Returns the complement of this set of flags.",29,null],[11,"extend","","",29,null],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfaceresize"}}],[11,"hash","wayland_client::wayland::shell::WlShellSurfaceTransient","",30,null],[11,"cmp","","",30,null],[11,"partial_cmp","","",30,null],[11,"lt","","",30,null],[11,"le","","",30,null],[11,"gt","","",30,null],[11,"ge","","",30,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"wlshellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,null],[11,"is_all","","Returns `true` if all flags are currently set.",30,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,null],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,null],[11,"bitor_assign","","Adds the set of flags.",30,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,null],[11,"bitxor_assign","","Toggles the set of flags.",30,null],[11,"bitand","","Returns the intersection between the two sets of flags.",30,null],[11,"bitand_assign","","Disables all flags disabled in the set.",30,null],[11,"sub","","Returns the set difference of the two sets of flags.",30,null],[11,"sub_assign","","Disables all flags enabled in the set.",30,null],[11,"not","","Returns the complement of this set of flags.",30,null],[11,"extend","","",30,null],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"wlshellsurfacetransient"}}],[11,"hash","wayland_client::wayland::seat::WlSeatCapability","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"wlseatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"wlseatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"wlseatcapability"}}],[11,"hash","wayland_client::wayland::output::WlOutputMode","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[],"output":{"name":"wloutputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"u32"}],"output":{"name":"wloutputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,null],[11,"is_all","","Returns `true` if all flags are currently set.",17,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,null],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,null],[11,"bitor_assign","","Adds the set of flags.",17,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,null],[11,"bitxor_assign","","Toggles the set of flags.",17,null],[11,"bitand","","Returns the intersection between the two sets of flags.",17,null],[11,"bitand_assign","","Disables all flags disabled in the set.",17,null],[11,"sub","","Returns the set difference of the two sets of flags.",17,null],[11,"sub_assign","","Disables all flags enabled in the set.",17,null],[11,"not","","Returns the complement of this set of flags.",17,null],[11,"extend","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"t"}],"output":{"name":"wloutputmode"}}],[11,"fmt","wayland_client::wayland","",9,null],[11,"ptr","","",34,null],[11,"interface","","",34,null],[11,"interface_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",34,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",34,null],[11,"from_ptr","","",34,null],[11,"from_ptr_no_own","","",34,null],[11,"set_evt_iterator","","",34,null],[11,"fmt","","",34,null],[11,"fmt","","",7,null],[11,"sync","","asynchronous roundtrip",34,null],[11,"get_registry","","get global registry object",34,null],[11,"ptr","","",38,null],[11,"interface","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",38,null],[11,"from_ptr","","",38,null],[11,"from_ptr_no_own","","",38,null],[11,"set_evt_iterator","","",38,null],[11,"fmt","","",38,null],[11,"fmt","","",8,null],[11,"bind","","bind an object to the display",38,null],[11,"drop","","",38,null],[11,"ptr","","",39,null],[11,"interface","","",39,null],[11,"interface_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",39,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",39,null],[11,"from_ptr","","",39,null],[11,"from_ptr_no_own","","",39,null],[11,"set_evt_iterator","","",39,null],[11,"fmt","","",39,null],[11,"fmt","","",6,null],[11,"drop","","",39,null],[11,"ptr","wayland_client::wayland::compositor","",40,null],[11,"interface","","",40,null],[11,"interface_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",40,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",40,null],[11,"from_ptr","","",40,null],[11,"from_ptr_no_own","","",40,null],[11,"set_evt_iterator","","",40,null],[11,"fmt","","",40,null],[11,"create_surface","","create new surface",40,null],[11,"create_region","","create new region",40,null],[11,"drop","","",40,null],[11,"ptr","wayland_client::wayland::shm","",41,null],[11,"interface","","",41,null],[11,"interface_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",41,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",41,null],[11,"from_ptr","","",41,null],[11,"from_ptr_no_own","","",41,null],[11,"set_evt_iterator","","",41,null],[11,"fmt","","",41,null],[11,"create_buffer","","create a buffer from the pool",41,null],[11,"destroy","","destroy the pool",41,null],[11,"resize","","change the size of the pool mapping",41,null],[11,"drop","","",41,null],[11,"ptr","","",42,null],[11,"interface","","",42,null],[11,"interface_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",42,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",42,null],[11,"from_ptr","","",42,null],[11,"from_ptr_no_own","","",42,null],[11,"set_evt_iterator","","",42,null],[11,"fmt","","",42,null],[11,"fmt","","",33,null],[11,"fmt","","",32,null],[11,"create_pool","","create a shm pool",42,null],[11,"drop","","",42,null],[11,"ptr","","",43,null],[11,"interface","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",43,null],[11,"from_ptr","","",43,null],[11,"from_ptr_no_own","","",43,null],[11,"set_evt_iterator","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",31,null],[11,"destroy","","destroy a buffer",43,null],[11,"drop","","",43,null],[11,"ptr","wayland_client::wayland::data_device","",44,null],[11,"interface","","",44,null],[11,"interface_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",44,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",44,null],[11,"from_ptr","","",44,null],[11,"from_ptr_no_own","","",44,null],[11,"set_evt_iterator","","",44,null],[11,"fmt","","",44,null],[11,"fmt","","",12,null],[11,"accept","","accept one of the offered mime types",44,null],[11,"receive","","request that the data is transferred",44,null],[11,"destroy","","destroy data offer",44,null],[11,"drop","","",44,null],[11,"ptr","","",45,null],[11,"interface","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",45,null],[11,"from_ptr","","",45,null],[11,"from_ptr_no_own","","",45,null],[11,"set_evt_iterator","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",13,null],[11,"offer","","add an offered mime type",45,null],[11,"destroy","","destroy the data source",45,null],[11,"drop","","",45,null],[11,"ptr","","",46,null],[11,"interface","","",46,null],[11,"interface_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",46,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",46,null],[11,"from_ptr","","",46,null],[11,"from_ptr_no_own","","",46,null],[11,"set_evt_iterator","","",46,null],[11,"fmt","","",46,null],[11,"fmt","","",11,null],[11,"start_drag","","start drag-and-drop operation",46,null],[11,"set_selection","","copy data to the selection",46,null],[11,"release","","destroy data device",46,null],[11,"drop","","",46,null],[11,"ptr","","",47,null],[11,"interface","","",47,null],[11,"interface_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",47,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",47,null],[11,"from_ptr","","",47,null],[11,"from_ptr_no_own","","",47,null],[11,"set_evt_iterator","","",47,null],[11,"fmt","","",47,null],[11,"create_data_source","","create a new data source",47,null],[11,"get_data_device","","create a new data device",47,null],[11,"drop","","",47,null],[11,"ptr","wayland_client::wayland::shell","",48,null],[11,"interface","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",48,null],[11,"from_ptr","","",48,null],[11,"from_ptr_no_own","","",48,null],[11,"set_evt_iterator","","",48,null],[11,"fmt","","",48,null],[11,"get_shell_surface","","create a shell surface from a surface",48,null],[11,"drop","","",48,null],[11,"ptr","","",49,null],[11,"interface","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",49,null],[11,"from_ptr","","",49,null],[11,"from_ptr_no_own","","",49,null],[11,"set_evt_iterator","","",49,null],[11,"fmt","","",49,null],[11,"fmt","","",28,null],[11,"fmt","","",27,null],[11,"pong","","respond to a ping event",49,null],[11,"move_","","start an interactive move",49,null],[11,"resize","","start an interactive resize",49,null],[11,"set_toplevel","","make the surface a toplevel surface",49,null],[11,"set_transient","","make the surface a transient surface",49,null],[11,"set_fullscreen","","make the surface a fullscreen surface",49,null],[11,"set_popup","","make the surface a popup surface",49,null],[11,"set_maximized","","make the surface a maximized surface",49,null],[11,"set_title","","set surface title",49,null],[11,"set_class","","set surface class",49,null],[11,"drop","","",49,null],[11,"ptr","wayland_client::wayland::compositor","",50,null],[11,"interface","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",50,null],[11,"from_ptr","","",50,null],[11,"from_ptr_no_own","","",50,null],[11,"set_evt_iterator","","",50,null],[11,"fmt","","",50,null],[11,"fmt","","",10,null],[11,"destroy","","delete surface",50,null],[11,"attach","","set the surface contents",50,null],[11,"damage","","mark part of the surface damaged",50,null],[11,"frame","","request a frame throttling hint",50,null],[11,"set_opaque_region","","set opaque region",50,null],[11,"set_input_region","","set input region",50,null],[11,"commit","","commit pending surface state",50,null],[11,"set_buffer_transform","","sets the buffer transformation",50,null],[11,"set_buffer_scale","","sets the buffer scaling factor",50,null],[11,"drop","","",50,null],[11,"ptr","wayland_client::wayland::seat","",51,null],[11,"interface","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",51,null],[11,"from_ptr","","",51,null],[11,"from_ptr_no_own","","",51,null],[11,"set_evt_iterator","","",51,null],[11,"fmt","","",51,null],[11,"fmt","","",20,null],[11,"get_pointer","","return pointer object",51,null],[11,"get_keyboard","","return keyboard object",51,null],[11,"get_touch","","return touch object",51,null],[11,"release","","release the seat object",51,null],[11,"drop","","",51,null],[11,"ptr","","",52,null],[11,"interface","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",52,null],[11,"from_ptr","","",52,null],[11,"from_ptr_no_own","","",52,null],[11,"set_evt_iterator","","",52,null],[11,"fmt","","",52,null],[11,"fmt","","",25,null],[11,"fmt","","",24,null],[11,"fmt","","",19,null],[11,"set_cursor","","set the pointer surface",52,null],[11,"release","","release the pointer object",52,null],[11,"drop","","",52,null],[11,"ptr","","",53,null],[11,"interface","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",53,null],[11,"from_ptr","","",53,null],[11,"from_ptr_no_own","","",53,null],[11,"set_evt_iterator","","",53,null],[11,"fmt","","",53,null],[11,"fmt","","",23,null],[11,"fmt","","",22,null],[11,"fmt","","",18,null],[11,"release","","release the keyboard object",53,null],[11,"drop","","",53,null],[11,"ptr","","",54,null],[11,"interface","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",54,null],[11,"from_ptr","","",54,null],[11,"from_ptr_no_own","","",54,null],[11,"set_evt_iterator","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",21,null],[11,"release","","release the touch object",54,null],[11,"drop","","",54,null],[11,"ptr","wayland_client::wayland::output","",55,null],[11,"interface","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",55,null],[11,"from_ptr","","",55,null],[11,"from_ptr_no_own","","",55,null],[11,"set_evt_iterator","","",55,null],[11,"fmt","","",55,null],[11,"fmt","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",14,null],[11,"drop","","",55,null],[11,"ptr","wayland_client::wayland::compositor","",56,null],[11,"interface","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",56,null],[11,"from_ptr","","",56,null],[11,"from_ptr_no_own","","",56,null],[11,"set_evt_iterator","","",56,null],[11,"fmt","","",56,null],[11,"destroy","","destroy region",56,null],[11,"add","","add rectangle to region",56,null],[11,"subtract","","subtract rectangle from region",56,null],[11,"drop","","",56,null],[11,"ptr","wayland_client::wayland::subcompositor","",57,null],[11,"interface","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",57,null],[11,"from_ptr","","",57,null],[11,"from_ptr_no_own","","",57,null],[11,"set_evt_iterator","","",57,null],[11,"fmt","","",57,null],[11,"destroy","","unbind from the subcompositor interface",57,null],[11,"get_subsurface","","give a surface the role sub-surface",57,null],[11,"drop","","",57,null],[11,"ptr","","",58,null],[11,"interface","","",58,null],[11,"interface_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"version","","",58,{"inputs":[],"output":{"name":"u32"}}],[11,"id","","",58,null],[11,"from_ptr","","",58,null],[11,"from_ptr_no_own","","",58,null],[11,"set_evt_iterator","","",58,null],[11,"fmt","","",58,null],[11,"destroy","","remove sub-surface interface",58,null],[11,"set_position","","reposition the sub-surface",58,null],[11,"place_above","","restack the sub-surface",58,null],[11,"place_below","","restack the sub-surface",58,null],[11,"set_sync","","set sub-surface to synchronized mode",58,null],[11,"set_desync","","set sub-surface to desynchronized mode",58,null],[11,"drop","","",58,null]],"paths":[[4,"Event"],[3,"EventIterator"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[4,"WlCallbackEvent"],[4,"WlDisplayEvent"],[4,"WlRegistryEvent"],[4,"WaylandProtocolEvent"],[4,"WlSurfaceEvent"],[4,"WlDataDeviceEvent"],[4,"WlDataOfferEvent"],[4,"WlDataSourceEvent"],[4,"WlOutputEvent"],[4,"WlOutputSubpixel"],[4,"WlOutputTransform"],[3,"WlOutputMode"],[4,"WlKeyboardEvent"],[4,"WlPointerEvent"],[4,"WlSeatEvent"],[4,"WlTouchEvent"],[4,"WlKeyboardKeyState"],[4,"WlKeyboardKeymapFormat"],[4,"WlPointerAxis"],[4,"WlPointerButtonState"],[3,"WlSeatCapability"],[4,"WlShellSurfaceEvent"],[4,"WlShellSurfaceFullscreenMethod"],[3,"WlShellSurfaceResize"],[3,"WlShellSurfaceTransient"],[4,"WlBufferEvent"],[4,"WlShmEvent"],[4,"WlShmFormat"],[3,"WlDisplay"],[3,"ReadEventsGuard"],[8,"Proxy"],[3,"ProxyId"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"WlShell"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[0,"common","wayland_sys","Various types and functions that are used by both the client and the server\nlibraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",5,null],[11,"is_none","","Returns `true` if the option is a `None` value",5,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",5,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",5,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",5,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",5,null],[11,"unwrap_or","","Returns the contained value or a default.",5,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",5,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",5,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",5,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",5,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",5,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",5,null],[11,"iter","","Returns an iterator over the possibly contained value.",5,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",5,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",5,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",5,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",5,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",5,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",5,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",5,null],[11,"unwrap_or_default","","Returns the contained value or a default",5,null],[11,"hash","core::num","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",6,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"shl","","",6,null],[11,"shl_assign","","",6,null],[11,"shr","","",6,null],[11,"shr_assign","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"add_assign","","",6,null],[11,"sub","","",6,null],[11,"sub_assign","","",6,null],[11,"mul","","",6,null],[11,"mul_assign","","",6,null],[11,"div","","",6,null],[11,"div_assign","","",6,null],[11,"rem","","",6,null],[11,"rem_assign","","",6,null],[11,"not","","",6,null],[11,"bitxor","","",6,null],[11,"bitxor_assign","","",6,null],[11,"bitor","","",6,null],[11,"bitor_assign","","",6,null],[11,"bitand","","",6,null],[11,"bitand_assign","","",6,null],[11,"neg","","",6,null],[11,"eq","core::num::dec2flt","",7,null],[11,"ne","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"fmt","core::num","",8,null],[11,"eq","","",8,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"hash","core::nonzero","",11,null],[11,"fmt","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"cmp","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",11,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",11,null],[11,"new","core::ptr","Creates a new `Unique`.",12,null],[11,"get","","Dereferences the content.",12,null],[11,"get_mut","","Mutably dereferences the content.",12,null],[11,"deref","","",12,null],[11,"fmt","","",12,null],[11,"new","","Creates a new `Shared`.",13,null],[11,"clone","","",13,null],[11,"deref","","",13,null],[11,"fmt","","",13,null],[11,"hash","core::marker","",14,null],[11,"eq","","",14,null],[11,"partial_cmp","","",14,null],[11,"cmp","","",14,null],[11,"clone","","",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"contains","","# Examples",16,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"contains","","# Examples",17,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"contains","","# Examples",18,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"from","","",19,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",19,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"contains","","# Examples",20,null],[11,"hash","core::cmp","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"clone","","",21,null],[11,"reverse","","Reverse the `Ordering`.",21,null],[11,"cmp","","",21,null],[11,"partial_cmp","","",21,null],[11,"fmt","wayland_sys","",22,null],[11,"fmt","","",22,null],[11,"is","","Returns true if the boxed type is the same as `T`",22,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",22,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",22,null],[11,"is","","Forwards to the method defined on the type `Any`.",22,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",22,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",22,null],[11,"hash","core::any","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",23,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",24,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"new","","Creates a new `AtomicBool`.",24,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",24,null],[11,"store","","Stores a value into the bool.",24,null],[11,"swap","","Stores a value into the bool, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",24,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",24,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",24,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",24,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",24,null],[11,"new","","Creates a new `AtomicPtr`.",25,null],[11,"load","","Loads a value from the pointer.",25,null],[11,"store","","Stores a value into the pointer.",25,null],[11,"swap","","Stores a value into the pointer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",25,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"default","","",32,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",32,null],[11,"new","","Creates a new atomic integer.",32,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",32,null],[11,"store","","Stores a value into the atomic integer.",32,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",32,null],[11,"fetch_add","","Add to the current value, returning the previous value.",32,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",32,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",32,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",32,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",32,null],[11,"default","","",33,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",33,null],[11,"new","","Creates a new atomic integer.",33,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",33,null],[11,"store","","Stores a value into the atomic integer.",33,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",33,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",33,null],[11,"fetch_add","","Add to the current value, returning the previous value.",33,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",33,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",33,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",33,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",33,null],[11,"default","","",34,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",34,null],[11,"new","","Creates a new atomic integer.",34,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",34,null],[11,"store","","Stores a value into the atomic integer.",34,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",34,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",34,null],[11,"fetch_add","","Add to the current value, returning the previous value.",34,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",34,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",34,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",34,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",34,null],[11,"default","","",35,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",35,null],[11,"new","","Creates a new atomic integer.",35,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",35,null],[11,"store","","Stores a value into the atomic integer.",35,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",35,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",35,null],[11,"fetch_add","","Add to the current value, returning the previous value.",35,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",35,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",35,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",35,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",35,null],[11,"default","","",36,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",36,null],[11,"new","","Creates a new atomic integer.",36,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",36,null],[11,"store","","Stores a value into the atomic integer.",36,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",36,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",36,null],[11,"fetch_add","","Add to the current value, returning the previous value.",36,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",36,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",36,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",36,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",36,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",37,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",37,null],[11,"set","","Sets the contained value.",37,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",37,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",37,null],[11,"clone","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",37,null],[11,"partial_cmp","","",37,null],[11,"lt","","",37,null],[11,"le","","",37,null],[11,"gt","","",37,null],[11,"ge","","",37,null],[11,"cmp","","",37,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"clone","","",38,null],[11,"new","","Creates a new `RefCell` containing `value`.",39,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",39,null],[11,"borrow_state","","Query the current state of this `RefCell`",39,null],[11,"borrow","","Immutably borrows the wrapped value.",39,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",39,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",39,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",39,null],[11,"clone","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",39,null],[11,"partial_cmp","","",39,null],[11,"lt","","",39,null],[11,"le","","",39,null],[11,"gt","","",39,null],[11,"ge","","",39,null],[11,"cmp","","",39,null],[11,"deref","","",40,null],[11,"clone","","Copies a `Ref`.",40,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",40,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",41,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",42,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",42,null],[11,"get","","Gets a mutable pointer to the wrapped value.",42,null],[11,"default","","",42,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",43,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"count","","",43,null],[11,"last","","",43,null],[11,"len","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"count","","",44,null],[11,"nth","","",44,null],[11,"last","","",44,null],[11,"len","","",44,null],[11,"fmt","","",45,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"fmt","","",46,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"fmt","core::iter::range","",47,null],[11,"clone","","",47,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",17,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",16,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",19,null],[11,"next","core::iter::range","",47,null],[11,"size_hint","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next","core::ops","",16,null],[11,"size_hint","","",16,null],[11,"next_back","","",16,null],[11,"next","","",17,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"next_back","","",19,null],[11,"fmt","core::iter::sources","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"len","","",49,null],[11,"clone","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"len","","",50,null],[11,"fmt","core::iter","",51,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"find","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"next","","# Overflow Behavior",59,null],[11,"size_hint","","",59,null],[11,"nth","","",59,null],[11,"count","","",59,null],[11,"next_back","","",59,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"next","","",60,null],[11,"count","","",60,null],[11,"nth","","",60,null],[11,"last","","",60,null],[11,"size_hint","","",60,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",60,null],[11,"is_empty","","Checks if the iterator has finished iterating.",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"next","","",63,null],[11,"nth","","",63,null],[11,"count","","",63,null],[11,"last","","",63,null],[11,"size_hint","","",63,null],[11,"next_back","","",63,null],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"next","","",64,null],[11,"nth","","",64,null],[11,"size_hint","","",64,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"next","","",67,null],[11,"nth","","",67,null],[11,"last","","",67,null],[11,"count","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"next","","",68,null],[11,"size_hint","","",68,null],[11,"next_back","","",68,null],[11,"hash","core::option","",5,null],[11,"fmt","","",5,null],[11,"cmp","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",5,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",5,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",72,null],[11,"hash","core::result","",73,null],[11,"fmt","","",73,null],[11,"cmp","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"is_ok","","Returns true if the result is `Ok`",73,null],[11,"is_err","","Returns true if the result is `Err`",73,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",73,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",73,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",73,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",73,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",73,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",73,null],[11,"iter","","Returns an iterator over the possibly contained value.",73,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",73,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",73,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",73,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",73,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",73,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",73,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",73,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",73,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",73,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",73,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",73,null],[11,"fmt","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"clone","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",73,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",77,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",77,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"count","","",77,null],[11,"nth","","",77,null],[11,"last","","",77,null],[11,"next_back","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",78,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",78,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"count","","",78,null],[11,"nth","","",78,null],[11,"last","","",78,null],[11,"next_back","","",78,null],[11,"fmt","","",79,null],[11,"clone","","",79,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next_back","","",79,null],[11,"fmt","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"fmt","","",82,null],[11,"fmt","","",83,null],[11,"fmt","","",84,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"count","","",85,null],[11,"nth","","",85,null],[11,"last","","",85,null],[11,"next_back","","",85,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"count","","",86,null],[11,"nth","","",86,null],[11,"last","","",86,null],[11,"next_back","","",86,null],[11,"fmt","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"count","","",87,null],[11,"nth","","",87,null],[11,"last","","",87,null],[11,"next_back","","",87,null],[11,"fmt","core::str::pattern","",88,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"haystack","","",89,null],[11,"next","","",89,null],[11,"next_match","","",89,null],[11,"next_reject","","",89,null],[11,"next_back","","",89,null],[11,"next_match_back","","",89,null],[11,"next_reject_back","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"haystack","","",90,null],[11,"next","","",90,null],[11,"next_match","","",90,null],[11,"next_reject","","",90,null],[11,"next_back","","",90,null],[11,"next_match_back","","",90,null],[11,"next_reject_back","","",90,null],[11,"clone","","",91,null],[11,"fmt","","",91,null],[11,"haystack","","",91,null],[11,"next","","",91,null],[11,"next_match","","",91,null],[11,"next_reject","","",91,null],[11,"next_back","","",91,null],[11,"next_match_back","","",91,null],[11,"next_reject_back","","",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"haystack","","",92,null],[11,"next","","",92,null],[11,"next_match","","",92,null],[11,"next_back","","",92,null],[11,"next_match_back","","",92,null],[11,"eq","core::str","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",93,null],[11,"fmt","","",93,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",94,null],[11,"fmt","","",94,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"next_back","","",95,null],[11,"as_str","","View the underlying data as a subslice of the original data.",95,null],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"as_str","","View the underlying data as a subslice of the original data.",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"count","","",97,null],[11,"last","","",97,null],[11,"nth","","",97,null],[11,"next_back","","",97,null],[11,"len","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"next_back","","",98,null],[11,"next_back","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"next_back","","",100,null],[11,"next_back","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"next","","",105,null],[11,"clone","","",105,null],[11,"next_back","","",104,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"next","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"next","","",107,null],[11,"clone","","",107,null],[11,"next_back","","",106,null],[11,"next_back","","",107,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"fmt","core::hash::sip","",111,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",111,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",111,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",111,null],[11,"finish","","",111,null],[11,"clone","","",111,null],[11,"default","","",111,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",112,null],[11,"build_hasher","","",112,null],[11,"clone","","",112,null],[11,"default","","",112,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",113,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"field","","Adds a new field to the generated tuple struct output.",115,null],[11,"finish","","Finishes output and returns any error encountered.",115,null],[11,"entry","","Adds a new entry to the set output.",116,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",116,null],[11,"finish","","Finishes output and returns any error encountered.",116,null],[11,"entry","","Adds a new entry to the list output.",117,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",117,null],[11,"finish","","Finishes output and returns any error encountered.",117,null],[11,"entry","","Adds a new entry to the map output.",118,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",118,null],[11,"finish","","Finishes output and returns any error encountered.",118,null],[11,"partial_cmp","core::fmt","",119,null],[11,"eq","","",119,null],[11,"cmp","","",119,null],[11,"hash","","",119,null],[11,"default","","",119,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",119,null],[11,"clone","","",119,null],[11,"clone","","",120,null],[11,"fmt","","",120,null],[11,"fmt","","",120,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",121,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",121,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",121,null],[11,"write_fmt","","Writes some formatted information into this instance",121,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",121,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",121,null],[11,"align","","Flag indicating what form of alignment was requested",121,null],[11,"width","","Optionally specified integer width that the output should be",121,null],[11,"precision","","Optionally specified precision for numeric types",121,null],[11,"sign_plus","","Determines if the `+` flag was specified.",121,null],[11,"sign_minus","","Determines if the `-` flag was specified.",121,null],[11,"alternate","","Determines if the `#` flag was specified.",121,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",121,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",121,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",121,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",121,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",121,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",121,null],[11,"write_str","","",121,null],[11,"write_char","","",121,null],[11,"write_fmt","","",121,null],[11,"fmt","","",119,null],[11,"fmt","core::marker","",14,null],[11,"fmt","core::cell","",37,null],[11,"fmt","","",39,null],[11,"fmt","","",40,null],[11,"fmt","","",41,null],[11,"fmt","","",42,null],[11,"deref","wayland_sys::client","",122,null],[11,"deref","","",123,null],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",124,null],[12,"wl_egl_window_destroy","","",124,null],[12,"wl_egl_window_resize","","",124,null],[12,"wl_egl_window_get_attached_size","","",124,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",124,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",125,null],[11,"deref","","",126,null],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",127,null],[12,"height","","actual height",127,null],[12,"hotspot_x","","hot spot x (must be inside image)",127,null],[12,"hotspot_y","","hot spot y (must be inside image)",127,null],[12,"delay","","animation delay to next frame",127,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",128,null],[12,"images","","",128,null],[12,"name","","",128,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",129,null],[12,"wl_cursor_theme_destroy","","",129,null],[12,"wl_cursor_theme_get_cursor","","",129,null],[12,"wl_cursor_image_get_buffer","","",129,null],[12,"wl_cursor_frame","","",129,null],[12,"wl_cursor_frame_and_duration","","",129,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",129,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",130,null],[11,"deref","","",131,null],[14,"ffi_dispatch!","wayland_sys","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
searchIndex["gfx_window_sdl"] = {"doc":"","items":[[5,"init","gfx_window_sdl","Builds an SDL2 window from a WindowBuilder struct.",null,null]],"paths":[]};
searchIndex["sdl2"] = {"doc":"","items":[[11,"clone","libc::unix","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","libc::unix::notbsd","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","libc::unix::notbsd::linux","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","libc::unix::notbsd::linux::other","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",56,null],[11,"clone","","",57,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[4,"c_void","sdl2::libc","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[5,"isalnum","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isalpha","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"iscntrl","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isgraph","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"islower","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isprint","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"ispunct","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isspace","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isupper","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"isxdigit","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"tolower","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"toupper","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"atof","","",null,null],[5,"labs","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"i64"}}],[5,"rand","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"srand","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"TIOCINQ","","",null,null],[5,"sem_unlink","","",null,null],[5,"ptrace","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i64"}}],[5,"setlocale","","",null,null],[6,"rlim64_t","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"CS7","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[5,"mkfifoat","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"YESEXPR","","",null,null],[17,"F_DUPFD","","",null,null],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[17,"LOG_PERROR","","",null,null],[5,"mkdir","","",null,null],[5,"close","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"MS_NOUSER","","",null,null],[17,"VWERASE","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"lstat","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[5,"cfgetospeed","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"CS8","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"DT_LNK","","",null,null],[17,"ABDAY_5","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"EUCLEAN","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"LOG_DAEMON","","",null,null],[6,"uid_t","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"ST_MANDLOCK","","",null,null],[5,"pthread_key_create","","",null,null],[5,"rmdir","","",null,null],[5,"tcgetattr","","",null,null],[5,"prctl","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"pread64","","",null,null],[6,"cc_t","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[6,"suseconds_t","","",null,null],[17,"EADV","","",null,null],[17,"MON_1","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"IPC_SET","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"QIF_ITIME","","",null,null],[5,"getuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[17,"DAY_6","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[3,"cpu_set_t","","",null,null],[17,"VT1","","",null,null],[17,"SIGINT","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"BUFSIZ","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"QIF_ALL","","",null,null],[17,"R_OK","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"SIGPWR","","",null,null],[5,"raise","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"getpriority","","",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"i32"}}],[17,"Q_GETQUOTA","","",null,null],[5,"chown","","",null,null],[5,"pclose","","",null,null],[17,"VSTOP","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"TCSETAW","","",null,null],[17,"Q_SYNC","","",null,null],[5,"sleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"fallocate","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i64"},{"name":"i64"}],"output":{"name":"i32"}}],[17,"POSIX_FADV_DONTNEED","","",null,null],[5,"mlockall","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"DT_REG","","",null,null],[17,"RLIMIT_CPU","","",null,null],[5,"accept","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"O_WRONLY","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"LOG_MAIL","","",null,null],[6,"gid_t","","",null,null],[5,"uname","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"ENOSR","","",null,null],[17,"ENETRESET","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[17,"ECOMM","","",null,null],[6,"loff_t","","",null,null],[17,"QIF_INODES","","",null,null],[17,"EBADMSG","","",null,null],[5,"epoll_wait","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"RAND_MAX","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"SHM_NORESERVE","","",null,null],[5,"mprotect","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"FIONREAD","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[5,"ftello","","",null,null],[17,"SIGABRT","","",null,null],[5,"dup2","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"O_CREAT","","",null,null],[17,"TIOCSWINSZ","","",null,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[17,"CLONE_NEWPID","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"F_GETFD","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"ENOTCONN","","",null,null],[17,"VEOL","","",null,null],[17,"SIGKILL","","",null,null],[17,"DAY_1","","",null,null],[17,"TIOCMSET","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[6,"mqd_t","","",null,null],[17,"DAY_5","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"TAB3","","",null,null],[17,"QIF_ILIMITS","","",null,null],[5,"setgid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"MAP_SHARED","","",null,null],[17,"VSUSP","","",null,null],[17,"ECHILD","","",null,null],[5,"backtrace","","",null,null],[17,"SIGCONT","","",null,null],[6,"clockid_t","","",null,null],[17,"LOG_ALERT","","",null,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[5,"preadv","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[5,"sem_trywait","","",null,null],[5,"listxattr","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"S_IFLNK","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"ABMON_7","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"LOG_ERR","","",null,null],[17,"TCP_INFO","","",null,null],[17,"NL1","","",null,null],[5,"openpty","","",null,null],[17,"CLONE_NEWNET","","",null,null],[5,"opendir","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"TCSETSF","","",null,null],[17,"PRIO_MAX","","",null,null],[5,"umask","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[17,"GRPQUOTA","","",null,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[6,"off64_t","","",null,null],[17,"CS5","","",null,null],[17,"ABMON_2","","",null,null],[17,"CS6","","",null,null],[5,"closedir","","",null,null],[5,"fopen64","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ST_RDONLY","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",65,null],[12,"uc_link","","",65,null],[12,"uc_stack","","",65,null],[12,"uc_mcontext","","",65,null],[12,"uc_sigmask","","",65,null],[17,"LOG_KERN","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"O_DIRECT","","",null,null],[17,"ENOEXEC","","",null,null],[5,"sem_post","","",null,null],[6,"dev_t","","",null,null],[5,"fcntl","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"execvp","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"EMULTIHOP","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[17,"ABDAY_7","","",null,null],[17,"MON_4","","",null,null],[17,"EBADF","","",null,null],[17,"S_IWOTH","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"GLOB_NOCHECK","","",null,null],[3,"sigset_t","","",null,null],[5,"fstatfs","","",null,null],[5,"unshare","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"LC_PAPER","","",null,null],[6,"id_t","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"ERA_T_FMT","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[5,"open64","","",null,null],[5,"ioctl","","",null,{"inputs":[{"name":"i32"},{"name":"u64"}],"output":{"name":"i32"}}],[5,"fdopen","","",null,null],[17,"W_OK","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"MON_7","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"EPOLLET","","",null,null],[17,"AF_PACKET","","",null,null],[17,"ENOKEY","","",null,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[5,"tcflow","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"ENOPKG","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[5,"sendto","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"PROT_WRITE","","",null,null],[5,"sigaltstack","","",null,null],[5,"pthread_key_delete","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"SOCK_DGRAM","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"ST_WRITE","","",null,null],[3,"dirent","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[17,"LOG_INFO","","",null,null],[17,"SIGBUS","","",null,null],[5,"pthread_create","","",null,null],[17,"ELIBBAD","","",null,null],[5,"clone","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EIDRM","","",null,null],[17,"S_IFDIR","","",null,null],[5,"fchownat","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"POLLOUT","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"EXFULL","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[5,"getxattr","","",null,null],[17,"USRQUOTA","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[5,"sigismember","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[5,"pthread_kill","","",null,{"inputs":[{"name":"u64"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"RLIMIT_RTPRIO","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGILL","","",null,null],[5,"llistxattr","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",44,null],[12,"sa_mask","","",44,null],[12,"sa_flags","","",44,null],[17,"LOG_AUTH","","",null,null],[17,"S_ISGID","","",null,null],[17,"SEEK_END","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[4,"timezone","","",null,null],[5,"setcontext","","",null,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",47,null],[12,"gl_pathv","","",47,null],[12,"gl_offs","","",47,null],[12,"gl_flags","","",47,null],[17,"PTRACE_DETACH","","",null,null],[5,"faccessat","","",null,null],[6,"blksize_t","","",null,null],[5,"epoll_create","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"D_T_FMT","","",null,null],[5,"getloadavg","","",null,null],[17,"SIGUSR1","","",null,null],[17,"VERASE","","",null,null],[5,"getrlimit","","",null,null],[17,"IUTF8","","",null,null],[5,"dlopen","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[17,"ENETDOWN","","",null,null],[17,"SO_DONTROUTE","","",null,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[17,"ENOCSI","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"S_IRUSR","","",null,null],[17,"ERESTART","","",null,null],[5,"prlimit64","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SIGCHLD","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[3,"ucred","","",null,null],[12,"pid","","",48,null],[12,"uid","","",48,null],[12,"gid","","",48,null],[17,"EHWPOISON","","",null,null],[5,"epoll_ctl","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"EREMCHG","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[17,"ENOTUNIQ","","",null,null],[17,"ENOLCK","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"O_NDELAY","","",null,null],[17,"MON_11","","",null,null],[17,"EPOLLWRNORM","","",null,null],[5,"realpath","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"F_ULOCK","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"ABMON_1","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"S_IEXEC","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[5,"dlclose","","",null,null],[5,"futimes","","",null,null],[17,"O_APPEND","","",null,null],[5,"sprintf","","",null,null],[5,"execv","","",null,null],[17,"_IOLBF","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[6,"c_ulong","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"OPOST","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"FIOCLEX","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"MADV_WILLNEED","","",null,null],[5,"munmap","","",null,null],[17,"MS_NODEV","","",null,null],[5,"pipe","","",null,null],[17,"EMLINK","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"CR2","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"unlink","","",null,null],[5,"mkstemp","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[5,"mq_close","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[17,"BRKINT","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"MON_10","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"LC_TIME","","",null,null],[3,"ipc_perm","","",null,null],[12,"__key","","",53,null],[12,"uid","","",53,null],[12,"gid","","",53,null],[12,"cuid","","",53,null],[12,"cgid","","",53,null],[12,"mode","","",53,null],[12,"__seq","","",53,null],[17,"_IONBF","","",null,null],[5,"sem_init","","",null,null],[5,"mq_setattr","","",null,null],[17,"ENOTNAM","","",null,null],[5,"dlsym","","",null,null],[5,"recv","","",null,null],[17,"MON_2","","",null,null],[17,"IEXTEN","","",null,null],[17,"ESRMNT","","",null,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",39,null],[12,"dqb_bsoftlimit","","",39,null],[12,"dqb_curspace","","",39,null],[12,"dqb_ihardlimit","","",39,null],[12,"dqb_isoftlimit","","",39,null],[12,"dqb_curinodes","","",39,null],[12,"dqb_btime","","",39,null],[12,"dqb_itime","","",39,null],[12,"dqb_valid","","",39,null],[17,"RLIMIT_NPROC","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MON_6","","",null,null],[17,"CBAUD","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[5,"chmod","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[3,"flock","","",null,null],[12,"l_type","","",52,null],[12,"l_whence","","",52,null],[12,"l_start","","",52,null],[12,"l_len","","",52,null],[12,"l_pid","","",52,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[17,"ECHOK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"TCSETSW","","",null,null],[5,"fstatvfs","","",null,null],[17,"QIF_BTIME","","",null,null],[5,"pthread_cond_destroy","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"POLLHUP","","",null,null],[5,"globfree","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"EISCONN","","",null,null],[5,"quotactl","","",null,null],[5,"mq_getattr","","",null,null],[17,"EMSGSIZE","","",null,null],[5,"freelocale","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[6,"speed_t","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[5,"fseeko64","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[5,"readv","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[5,"sigwait","","",null,null],[5,"munlock","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"RTLD_LAZY","","",null,null],[5,"setenv","","",null,null],[17,"PROT_READ","","",null,null],[17,"E2BIG","","",null,null],[17,"EOF","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"ABMON_6","","",null,null],[17,"SIGQUIT","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"DAY_3","","",null,null],[17,"TCSETA","","",null,null],[17,"TIOCCONS","","",null,null],[5,"sendfile","","",null,null],[6,"c_long","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"POLLERR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"ABDAY_2","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[5,"getpeername","","",null,null],[5,"symlinkat","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"LC_ALL","","",null,null],[5,"pthread_join","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"EREMOTE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"SHM_W","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[5,"recvmsg","","",null,null],[17,"IGNBRK","","",null,null],[17,"EPROTO","","",null,null],[17,"ABMON_12","","",null,null],[3,"msghdr","","",null,null],[12,"msg_name","","",50,null],[12,"msg_namelen","","",50,null],[12,"msg_iov","","",50,null],[12,"msg_iovlen","","",50,null],[12,"msg_control","","",50,null],[12,"msg_controllen","","",50,null],[12,"msg_flags","","",50,null],[5,"msync","","",null,null],[5,"mq_receive","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[5,"sigfillset","","",null,null],[17,"TCOOFF","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EINVAL","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"IMAXBEL","","",null,null],[5,"pathconf","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[3,"pthread_rwlock_t","","",null,null],[5,"posix_memalign","","",null,null],[5,"posix_madvise","","",null,null],[5,"CPU_ZERO","","",null,null],[17,"TCFLSH","","",null,null],[5,"mmap","","",null,null],[5,"tcsendbreak","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"getlogin","","",null,null],[17,"TAB2","","",null,null],[5,"glob","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"S_IXOTH","","",null,null],[17,"EINTR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"ENOMSG","","",null,null],[17,"EPOLLRDNORM","","",null,null],[5,"poll","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"sysinfo","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[17,"POLLPRI","","",null,null],[5,"mknodat","","",null,null],[5,"socketpair","","",null,null],[17,"RLIM_INFINITY","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i32"}],"output":{"name":"i64"}}],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"EBFONT","","",null,null],[17,"EISNAM","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[5,"munlockall","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"EBADE","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",30,null],[12,"rlim_max","","",30,null],[17,"SOL_SOCKET","","",null,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[5,"umount","","",null,null],[5,"fprintf","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[5,"getaddrinfo","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"IPC_CREAT","","",null,null],[5,"process_vm_readv","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"CSTOPB","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"LOG_NEWS","","",null,null],[5,"open","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[17,"TCP_MD5SIG","","",null,null],[5,"getppid","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"SHUT_WR","","",null,null],[5,"fseeko","","",null,null],[17,"LOG_SYSLOG","","",null,null],[5,"tcsetattr","","",null,null],[17,"VTIME","","",null,null],[17,"VEOL2","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EDOM","","",null,null],[5,"waitpid","","",null,null],[5,"select","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOEXEC","","",null,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",64,null],[12,"fpregs","","",64,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"BS1","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"ERANGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[5,"unsetenv","","",null,null],[17,"ELOOP","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"FF0","","",null,null],[5,"syslog","","",null,null],[5,"tee","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"usize"},{"name":"u32"}],"output":{"name":"isize"}}],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[17,"LOG_FACMASK","","",null,null],[17,"SIGALRM","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"POLLNVAL","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SIG_IGN","","",null,null],[3,"dirent64","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[17,"TIOCEXCL","","",null,null],[6,"time_t","","",null,null],[5,"fsync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"ABDAY_3","","",null,null],[17,"ST_NOATIME","","",null,null],[5,"snprintf","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"S_ISVTX","","",null,null],[5,"tcgetpgrp","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"MADV_HWPOISON","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_GETLEASE","","",null,null],[5,"write","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[3,"termios","","",null,null],[12,"c_iflag","","",51,null],[12,"c_oflag","","",51,null],[12,"c_cflag","","",51,null],[12,"c_lflag","","",51,null],[12,"c_line","","",51,null],[12,"c_cc","","",51,null],[12,"c_ispeed","","",51,null],[12,"c_ospeed","","",51,null],[17,"MAP_FILE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",62,null],[17,"MADV_REMOVE","","",null,null],[17,"FF1","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"NOEXPR","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[5,"pread","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[5,"FD_SET","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[5,"stat64","","",null,null],[5,"getgid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"utime","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"O_FSYNC","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"SHUT_RD","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"F_SETFL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"AF_INET6","","",null,null],[5,"localeconv","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[6,"rlim_t","","",null,null],[17,"S_IWGRP","","",null,null],[3,"statfs","","",null,null],[12,"f_type","","",49,null],[12,"f_bsize","","",49,null],[12,"f_blocks","","",49,null],[12,"f_bfree","","",49,null],[12,"f_bavail","","",49,null],[12,"f_files","","",49,null],[12,"f_ffree","","",49,null],[12,"f_fsid","","",49,null],[12,"f_namelen","","",49,null],[12,"f_frsize","","",49,null],[17,"DAY_2","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ENODEV","","",null,null],[17,"SIG_SETMASK","","",null,null],[6,"useconds_t","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"QIF_BLIMITS","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",57,null],[12,"loads","","",57,null],[12,"totalram","","",57,null],[12,"freeram","","",57,null],[12,"sharedram","","",57,null],[12,"bufferram","","",57,null],[12,"totalswap","","",57,null],[12,"freeswap","","",57,null],[12,"procs","","",57,null],[12,"pad","","",57,null],[12,"totalhigh","","",57,null],[12,"freehigh","","",57,null],[12,"mem_unit","","",57,null],[12,"_f","","",57,null],[5,"fstat","","",null,null],[17,"ST_NODEV","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"TCGETS","","",null,null],[5,"if_nametoindex","","",null,null],[5,"dup3","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"pthread_mutexattr_settype","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[5,"fsetxattr","","",null,null],[17,"INPCK","","",null,null],[5,"getopt","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"VMIN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"EISDIR","","",null,null],[5,"setpriority","","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"MAP_GROWSDOWN","","",null,null],[17,"ICRNL","","",null,null],[17,"CR3","","",null,null],[17,"IP_TTL","","",null,null],[5,"tcflush","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"FLUSHO","","",null,null],[17,"VINTR","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ECHO","","",null,null],[17,"S_IFMT","","",null,null],[17,"CODESET","","",null,null],[17,"F_SETLKW","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"SIG_DFL","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"LOCK_SH","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"S_IFREG","","",null,null],[17,"MADV_DONTNEED","","",null,null],[6,"nfds_t","","",null,null],[17,"EDQUOT","","",null,null],[5,"access","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"IPC_STAT","","",null,null],[5,"writev","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"SIGSEGV","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"sigaddset","","",null,null],[17,"EMFILE","","",null,null],[17,"ECHOE","","",null,null],[17,"EL3HLT","","",null,null],[6,"c_char","","",null,null],[5,"ttyname","","",null,null],[17,"AF_INET","","",null,null],[17,"L_tmpnam","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"CREAD","","",null,null],[5,"nl_langinfo_l","","",null,null],[6,"ino64_t","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"MON_12","","",null,null],[17,"POLLIN","","",null,null],[17,"O_RDONLY","","",null,null],[17,"BS0","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"S_IXUSR","","",null,null],[5,"posix_fadvise","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i64"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"symlink","","",null,null],[17,"DT_DIR","","",null,null],[17,"VEOF","","",null,null],[17,"EALREADY","","",null,null],[17,"SIGHUP","","",null,null],[17,"MON_5","","",null,null],[17,"S_IWRITE","","",null,null],[5,"mq_unlink","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[5,"statvfs","","",null,null],[5,"lseek64","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i32"}],"output":{"name":"i64"}}],[5,"creat","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[5,"link","","",null,null],[6,"blkcnt64_t","","",null,null],[17,"MS_ACTIVE","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sched_setscheduler","","",null,null],[17,"VSTART","","",null,null],[5,"alarm","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[17,"_SC_2_C_VERSION","","",null,null],[17,"S_IRWXU","","",null,null],[5,"sched_setaffinity","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[5,"strerror_r","","",null,null],[17,"CLONE_FS","","",null,null],[5,"usleep","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"MCL_FUTURE","","",null,null],[6,"socklen_t","","",null,null],[5,"getrusage","","",null,null],[17,"ESRCH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"TCOON","","",null,null],[17,"PRIO_PGRP","","",null,null],[5,"gai_strerror","","",null,null],[5,"pthread_cond_signal","","",null,null],[17,"EBUSY","","",null,null],[5,"fchmodat","","",null,null],[17,"MS_SHARED","","",null,null],[17,"DAY_4","","",null,null],[5,"removexattr","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"SOCK_RAW","","",null,null],[5,"localtime_r","","",null,null],[17,"S_IREAD","","",null,null],[5,"readlink","","",null,null],[5,"sscanf","","",null,null],[5,"sendmsg","","",null,null],[5,"pwrite","","",null,null],[5,"dlerror","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MON_8","","",null,null],[5,"pthread_self","","",null,{"inputs":[],"output":{"name":"u64"}}],[17,"LC_MESSAGES_MASK","","",null,null],[17,"SO_DEBUG","","",null,null],[5,"read","","",null,null],[17,"SIGPIPE","","",null,null],[5,"openlog","","",null,null],[17,"CLONE_DETACHED","","",null,null],[5,"ftruncate","","",null,{"inputs":[{"name":"i32"},{"name":"i64"}],"output":{"name":"i32"}}],[17,"ENFILE","","",null,null],[17,"LOG_FTP","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[5,"lsetxattr","","",null,null],[3,"epoll_event","","",null,null],[12,"events","","",25,null],[12,"u64","","",25,null],[17,"TCSANOW","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[5,"getegid","","",null,{"inputs":[],"output":{"name":"u32"}}],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"ENOSTR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"IXON","","",null,null],[17,"ELNRNG","","",null,null],[17,"PTRACE_KILL","","",null,null],[5,"sysctl","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[5,"madvise","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"ECHOKE","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[5,"posix_fallocate","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"i64"}],"output":{"name":"i32"}}],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"SIGPROF","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",31,null],[12,"gl_pathv","","",31,null],[12,"gl_offs","","",31,null],[12,"gl_flags","","",31,null],[5,"getgroups","","",null,null],[17,"CLONE_PTRACE","","",null,null],[5,"getsid","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"shm_open","","",null,null],[17,"EBADFD","","",null,null],[17,"VQUIT","","",null,null],[17,"LC_NAME","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"VT0","","",null,null],[17,"EPERM","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[5,"signal","","",null,{"inputs":[{"name":"i32"},{"name":"usize"}],"output":{"name":"usize"}}],[17,"SO_RCVLOWAT","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"EBADRQC","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[5,"readahead","","",null,{"inputs":[{"name":"i32"},{"name":"i64"},{"name":"usize"}],"output":{"name":"isize"}}],[17,"EFD_NONBLOCK","","",null,null],[5,"globfree64","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"linkat","","",null,null],[17,"F_TEST","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"DT_CHR","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"MAP_ANON","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[5,"flistxattr","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[5,"getrlimit64","","",null,null],[5,"creat64","","",null,null],[17,"IGNCR","","",null,null],[5,"nice","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"TCP_LINGER2","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[5,"getpid","","",null,{"inputs":[],"output":{"name":"i32"}}],[6,"mode_t","","",null,null],[17,"LOG_LPR","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",37,null],[12,"pw_passwd","","",37,null],[12,"pw_uid","","",37,null],[12,"pw_gid","","",37,null],[12,"pw_gecos","","",37,null],[12,"pw_dir","","",37,null],[12,"pw_shell","","",37,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",46,null],[12,"si_errno","","",46,null],[12,"si_code","","",46,null],[12,"_pad","","",46,null],[5,"pthread_attr_getguardsize","","",null,null],[17,"SIGIO","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"MON_3","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"TCXONC","","",null,null],[6,"ino_t","","",null,null],[17,"EDESTADDRREQ","","",null,null],[6,"in_port_t","","",null,null],[5,"freopen64","","",null,null],[5,"shutdown","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"EROFS","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EBADR","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[6,"off_t","","",null,null],[5,"getpgrp","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"ftello64","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[5,"unlinkat","","",null,null],[5,"scanf","","",null,null],[5,"chdir","","",null,null],[17,"SIGWINCH","","",null,null],[17,"ICANON","","",null,null],[6,"sighandler_t","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"SCHED_RR","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"F_SETOWN","","",null,null],[17,"O_NOFOLLOW","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"TMP_MAX","","",null,null],[5,"setsid","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"prlimit","","",null,null],[5,"setuid","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"i32"}}],[17,"MS_ASYNC","","",null,null],[17,"ESTALE","","",null,null],[5,"ftruncate64","","",null,{"inputs":[{"name":"i32"},{"name":"i64"}],"output":{"name":"i32"}}],[17,"CLOCAL","","",null,null],[17,"ABMON_5","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"ONLCR","","",null,null],[5,"clock_getres","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"O_RDWR","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"CLONE_PARENT","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"shmdt","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ECHONL","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"EXDEV","","",null,null],[17,"DAY_7","","",null,null],[17,"PRIO_USER","","",null,null],[17,"SO_LINGER","","",null,null],[5,"splice","","",null,null],[17,"EPOLLIN","","",null,null],[17,"SA_RESTART","","",null,null],[5,"tcdrain","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"pthread_mutex_unlock","","",null,null],[3,"pthread_mutex_t","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"F_GETOWN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[5,"duplocale","","",null,{"inputs":[{"name":"locale_t"}],"output":{"name":"locale_t"}}],[5,"fpathconf","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i64"}}],[17,"TCP_KEEPIDLE","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[6,"sa_family_t","","",null,null],[17,"ENXIO","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[5,"recvfrom","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[5,"isatty","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"ABMON_11","","",null,null],[5,"WTERMSIG","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"NL0","","",null,null],[5,"getsockname","","",null,null],[17,"CRNCYSTR","","",null,null],[5,"fchmod","","",null,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"i32"}}],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[17,"ELIBMAX","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[5,"sched_get_priority_min","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"EKEYREJECTED","","",null,null],[5,"sched_getcpu","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"sigaction","","",null,null],[6,"fsfilcnt_t","","",null,null],[17,"MS_MOVE","","",null,null],[17,"YESSTR","","",null,null],[17,"SIGSYS","","",null,null],[5,"lstat64","","",null,null],[5,"pthread_detach","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"i32"}}],[17,"EACCES","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[5,"nanosleep","","",null,null],[17,"PM_STR","","",null,null],[5,"connect","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[6,"pid_t","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"ENOSYS","","",null,null],[17,"PROT_GROWSUP","","",null,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",23,null],[17,"MAP_NONBLOCK","","",null,null],[5,"sched_get_priority_max","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"SHUT_RDWR","","",null,null],[17,"WNOHANG","","",null,null],[17,"NI_MAXHOST","","",null,null],[5,"socket","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"cfsetospeed","","",null,null],[17,"TOSTOP","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"RTLD_NEXT","","",null,null],[5,"process_vm_writev","","",null,null],[17,"TCION","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"ECONNREFUSED","","",null,null],[5,"mkdirat","","",null,null],[4,"fpos64_t","","",null,null],[17,"SIGIOT","","",null,null],[17,"F_SETLK","","",null,null],[5,"fork","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"ETOOMANYREFS","","",null,null],[5,"umount2","","",null,null],[17,"ENONET","","",null,null],[5,"readdir64_r","","",null,null],[5,"tmpfile64","","",null,null],[17,"SO_OOBINLINE","","",null,null],[4,"DIR","","",null,null],[17,"ENAVAIL","","",null,null],[17,"STDOUT_FILENO","","",null,null],[5,"utimes","","",null,null],[5,"cfgetispeed","","",null,null],[5,"pwritev","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"SHM_R","","",null,null],[17,"GLOB_APPEND","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[17,"MAP_FIXED","","",null,null],[5,"setxattr","","",null,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",32,null],[12,"ifa_name","","",32,null],[12,"ifa_flags","","",32,null],[12,"ifa_addr","","",32,null],[12,"ifa_netmask","","",32,null],[12,"ifa_ifu","","",32,null],[12,"ifa_data","","",32,null],[17,"O_RSYNC","","",null,null],[17,"MS_RMT_MASK","","",null,null],[5,"mq_send","","",null,null],[5,"popen","","",null,null],[17,"EOVERFLOW","","",null,null],[5,"futimens","","",null,null],[5,"shm_unlink","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",58,null],[12,"st_ino","","",58,null],[12,"st_nlink","","",58,null],[12,"st_mode","","",58,null],[12,"st_uid","","",58,null],[12,"st_gid","","",58,null],[12,"st_rdev","","",58,null],[12,"st_size","","",58,null],[12,"st_blksize","","",58,null],[12,"st_blocks","","",58,null],[12,"st_atime","","",58,null],[12,"st_atime_nsec","","",58,null],[12,"st_mtime","","",58,null],[12,"st_mtime_nsec","","",58,null],[12,"st_ctime","","",58,null],[12,"st_ctime_nsec","","",58,null],[17,"TIOCSPGRP","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"IPPROTO_RAW","","",null,null],[5,"fgetpos64","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",22,null],[12,"tm_min","","",22,null],[12,"tm_hour","","",22,null],[12,"tm_mday","","",22,null],[12,"tm_mon","","",22,null],[12,"tm_year","","",22,null],[12,"tm_wday","","",22,null],[12,"tm_yday","","",22,null],[12,"tm_isdst","","",22,null],[12,"tm_gmtoff","","",22,null],[12,"tm_zone","","",22,null],[5,"pthread_sigmask","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"O_DSYNC","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"PARODD","","",null,null],[17,"SIGPOLL","","",null,null],[3,"pthread_cond_t","","",null,null],[5,"epoll_pwait","","",null,null],[5,"vmsplice","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"NOSTR","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"SYS_gettid","","",null,null],[5,"renameat","","",null,null],[17,"O_ASYNC","","",null,null],[17,"SO_PEERCRED","","",null,null],[5,"dup","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[5,"send","","",null,null],[5,"seekdir","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[5,"setns","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"FD_SETSIZE","","",null,null],[5,"FD_ISSET","","",null,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[17,"LOG_LOCAL4","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"THOUSEP","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"getifaddrs","","",null,null],[17,"ETIME","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"FIONBIO","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"EIO","","",null,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",24,null],[12,"dli_fbase","","",24,null],[12,"dli_sname","","",24,null],[12,"dli_saddr","","",24,null],[5,"mkstemps","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"ABMON_3","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"printf","","",null,null],[5,"gethostname","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[5,"glob64","","",null,null],[5,"mkostemp","","",null,null],[17,"F_GETLK","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"VDISCARD","","",null,null],[17,"MS_SILENT","","",null,null],[3,"fd_set","","",null,null],[17,"IPC_INFO","","",null,null],[17,"CSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"LOG_EMERG","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[4,"locale_t","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"PATH_MAX","","",null,null],[17,"EL2HLT","","",null,null],[17,"TCP_CORK","","",null,null],[17,"EDEADLK","","",null,null],[17,"TCGETA","","",null,null],[17,"SIGFPE","","",null,null],[5,"fscanf","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[5,"pthread_attr_destroy","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"TIOCMGET","","",null,null],[6,"nlink_t","","",null,null],[5,"timegm","","",null,null],[17,"MON_9","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"TCP_MAXSEG","","",null,null],[5,"setgroups","","",null,null],[17,"IGNPAR","","",null,null],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"fsetpos64","","",null,null],[5,"readlinkat","","",null,null],[5,"memrchr","","",null,null],[5,"stat","","",null,null],[5,"chroot","","",null,null],[17,"T_FMT","","",null,null],[17,"S_IFIFO","","",null,null],[5,"memalign","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"MAP_32BIT","","",null,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",45,null],[12,"ss_flags","","",45,null],[12,"ss_size","","",45,null],[5,"daemon","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"MS_NOSUID","","",null,null],[17,"ISIG","","",null,null],[5,"fremovexattr","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"SCHED_IDLE","","",null,null],[5,"cfsetispeed","","",null,null],[5,"gmtime_r","","",null,null],[5,"mincore","","",null,null],[17,"SIGTTIN","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[5,"sigwaitinfo","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"CR1","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"TCIOFF","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"EPROTOTYPE","","",null,null],[5,"pthread_attr_init","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[3,"fsid_t","","",null,null],[17,"ENOSPC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"ECANCELED","","",null,null],[5,"forkpty","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"ELIBSCN","","",null,null],[5,"mmap64","","",null,null],[5,"rewinddir","","",null,null],[5,"setrlimit64","","",null,null],[5,"closelog","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"EFBIG","","",null,null],[5,"pthread_setspecific","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"IPPROTO_IP","","",null,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[17,"O_SYNC","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[17,"RTLD_NOW","","",null,null],[3,"sem_t","","",null,null],[5,"readdir_r","","",null,null],[17,"LOG_USER","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[17,"S_IWUSR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"ABMON_9","","",null,null],[17,"PARENB","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"NOFLSH","","",null,null],[17,"LC_COLLATE","","",null,null],[5,"sethostname","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"S_IRGRP","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"FOPEN_MAX","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pause","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"setlogmask","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"S_IXGRP","","",null,null],[17,"MS_BIND","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[5,"uselocale","","",null,{"inputs":[{"name":"locale_t"}],"output":{"name":"locale_t"}}],[17,"ENOMEM","","",null,null],[17,"VKILL","","",null,null],[5,"__errno_location","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[5,"fstatat","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EFAULT","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"S_IROTH","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"TCSADRAIN","","",null,null],[5,"sysconf","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i64"}}],[17,"LOG_CRIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUNATCH","","",null,null],[5,"telldir","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"LOG_PID","","",null,null],[17,"MADV_RANDOM","","",null,null],[5,"mknod","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"SIGXFSZ","","",null,null],[6,"blkcnt_t","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"SO_TYPE","","",null,null],[17,"EAGAIN","","",null,null],[17,"VLNEXT","","",null,null],[5,"shmat","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"SIGSTKSZ","","",null,null],[5,"getnameinfo","","",null,null],[5,"flock","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"EDOTDOT","","",null,null],[5,"lremovexattr","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"F_LOCK","","",null,null],[17,"EPOLLERR","","",null,null],[5,"putenv","","",null,null],[17,"LC_ALL_MASK","","",null,null],[5,"makecontext","","",null,null],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"TCSETS","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOANO","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[6,"clock_t","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[5,"dladdr","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"_IOFBF","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"SIGURG","","",null,null],[5,"swapcontext","","",null,null],[5,"setsockopt","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"S_IRWXG","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"TIOCSTI","","",null,null],[17,"ABMON_8","","",null,null],[17,"ESPIPE","","",null,null],[17,"ABDAY_1","","",null,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",63,null],[12,"swd","","",63,null],[12,"ftw","","",63,null],[12,"fop","","",63,null],[12,"rip","","",63,null],[12,"rdp","","",63,null],[12,"mxcsr","","",63,null],[12,"mxcr_mask","","",63,null],[12,"_st","","",63,null],[12,"_xmm","","",63,null],[3,"lconv","","",null,null],[12,"decimal_point","","",27,null],[12,"thousands_sep","","",27,null],[12,"grouping","","",27,null],[12,"int_curr_symbol","","",27,null],[12,"currency_symbol","","",27,null],[12,"mon_decimal_point","","",27,null],[12,"mon_thousands_sep","","",27,null],[12,"mon_grouping","","",27,null],[12,"positive_sign","","",27,null],[12,"negative_sign","","",27,null],[12,"int_frac_digits","","",27,null],[12,"frac_digits","","",27,null],[12,"p_cs_precedes","","",27,null],[12,"p_sep_by_space","","",27,null],[12,"n_cs_precedes","","",27,null],[12,"n_sep_by_space","","",27,null],[12,"p_sign_posn","","",27,null],[12,"n_sign_posn","","",27,null],[12,"int_p_cs_precedes","","",27,null],[12,"int_p_sep_by_space","","",27,null],[12,"int_n_cs_precedes","","",27,null],[12,"int_n_sep_by_space","","",27,null],[12,"int_p_sign_posn","","",27,null],[12,"int_n_sign_posn","","",27,null],[5,"sigdelset","","",null,null],[17,"ECHRNG","","",null,null],[5,"gettimeofday","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"ISTRIP","","",null,null],[5,"kill","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"clock_gettime","","",null,null],[17,"SHM_LOCK","","",null,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",54,null],[12,"shm_segsz","","",54,null],[12,"shm_atime","","",54,null],[12,"shm_dtime","","",54,null],[12,"shm_ctime","","",54,null],[12,"shm_cpid","","",54,null],[12,"shm_lpid","","",54,null],[12,"shm_nattch","","",54,null],[3,"stat64","","",null,null],[12,"st_dev","","",59,null],[12,"st_ino","","",59,null],[12,"st_nlink","","",59,null],[12,"st_mode","","",59,null],[12,"st_uid","","",59,null],[12,"st_gid","","",59,null],[12,"st_rdev","","",59,null],[12,"st_size","","",59,null],[12,"st_blksize","","",59,null],[12,"st_blocks","","",59,null],[12,"st_atime","","",59,null],[12,"st_atime_nsec","","",59,null],[12,"st_mtime","","",59,null],[12,"st_mtime_nsec","","",59,null],[12,"st_ctime","","",59,null],[12,"st_ctime_nsec","","",59,null],[17,"X_OK","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"F_GETFL","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[6,"__priority_which_t","","",null,null],[17,"O_TRUNC","","",null,null],[17,"IXANY","","",null,null],[17,"ELIBACC","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[5,"if_indextoname","","",null,null],[5,"wait","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"INLCR","","",null,null],[5,"newlocale","","",null,null],[17,"SA_ONSTACK","","",null,null],[5,"pthread_attr_getstack","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SIGTSTP","","",null,null],[17,"IPC_NOWAIT","","",null,null],[5,"mkostemps","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"ST_APPEND","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[6,"in_addr_t","","",null,null],[17,"PARMRK","","",null,null],[6,"nl_item","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"EILSEQ","","",null,null],[5,"pthread_mutex_init","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[5,"sem_close","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"ABDAY_4","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[5,"fgetxattr","","",null,null],[17,"ENODATA","","",null,null],[17,"EL3RST","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"TCSETAF","","",null,null],[17,"F_SETFD","","",null,null],[5,"getpwuid_r","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"ERA","","",null,null],[6,"fsblkcnt_t","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"CLONE_VM","","",null,null],[5,"syscall","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"i64"}}],[5,"getsockopt","","",null,null],[17,"O_EXCL","","",null,null],[17,"PENDIN","","",null,null],[17,"F_OK","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[5,"bind","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[5,"setpgid","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"VREPRINT","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"TAB1","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"ABMON_10","","",null,null],[6,"__fsword_t","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"fdatasync","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[17,"EPOLL_CTL_ADD","","",null,null],[17,"SHM_REMAP","","",null,null],[6,"greg_t","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[5,"sched_yield","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"CPU_SET","","",null,null],[5,"listen","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[6,"key_t","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[5,"FD_CLR","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[5,"shmctl","","",null,null],[17,"S_IRWXO","","",null,null],[5,"signalfd","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",61,null],[12,"exponent","","",61,null],[17,"EKEYEXPIRED","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"DT_SOCK","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"EPIPE","","",null,null],[17,"MS_REC","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"D_FMT","","",null,null],[17,"EXTPROC","","",null,null],[5,"sem_open","","",null,null],[5,"mkdtemp","","",null,null],[17,"ENOTTY","","",null,null],[6,"tcflag_t","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EEXIST","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"TIOCOUTQ","","",null,null],[5,"pthread_getattr_np","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"SIG_ERR","","",null,null],[6,"pthread_t","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SHM_RND","","",null,null],[5,"sem_wait","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[3,"utimbuf","","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[17,"EAFNOSUPPORT","","",null,null],[5,"sem_destroy","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"HUPCL","","",null,null],[6,"wchar_t","","",null,null],[5,"setrlimit","","",null,null],[5,"fstat64","","",null,null],[17,"AM_STR","","",null,null],[17,"ENOENT","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"SO_ERROR","","",null,null],[17,"LOCK_UN","","",null,null],[17,"CR0","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[5,"nl_langinfo","","",null,null],[17,"IXOFF","","",null,null],[5,"pipe2","","",null,null],[5,"mq_open","","",null,null],[17,"O_NOCTTY","","",null,null],[5,"sched_getscheduler","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"i32"}}],[6,"shmatt_t","","",null,null],[17,"ECHOCTL","","",null,null],[5,"getcontext","","",null,null],[17,"TAB0","","",null,null],[5,"eventfd","","",null,{"inputs":[{"name":"u32"},{"name":"i32"}],"output":{"name":"i32"}}],[17,"SIGTERM","","",null,null],[17,"ECONNRESET","","",null,null],[5,"lgetxattr","","",null,null],[17,"ENOTDIR","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[5,"pthread_cond_wait","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"MS_POSIXACL","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[5,"mount","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"EBADSLT","","",null,null],[17,"PROT_NONE","","",null,null],[17,"MS_PRIVATE","","",null,null],[5,"freeifaddrs","","",null,null],[17,"RADIXCHAR","","",null,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"AF_UNIX","","",null,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[17,"ABMON_4","","",null,null],[5,"sigemptyset","","",null,null],[5,"shmget","","",null,{"inputs":[{"name":"i32"},{"name":"usize"},{"name":"i32"}],"output":{"name":"i32"}}],[3,"pthread_attr_t","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"IPC_RMID","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"ERFKILL","","",null,null],[5,"mlock","","",null,null],[17,"DT_BLK","","",null,null],[17,"TIOCMBIC","","",null,null],[5,"statfs","","",null,null],[5,"getcwd","","",null,null],[5,"mkfifo","","",null,null],[5,"fileno","","",null,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[12,"domainname","","",26,null],[17,"ENETUNREACH","","",null,null],[17,"CLONE_IO","","",null,null],[17,"LOCK_EX","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",42,null],[12,"mq_maxmsg","","",42,null],[12,"mq_msgsize","","",42,null],[12,"mq_curmsgs","","",42,null],[17,"TCSBRK","","",null,null],[17,"ENOLINK","","",null,null],[5,"FD_ZERO","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"LOG_CONS","","",null,null],[5,"execve","","",null,null],[17,"S_ISUID","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"SIGTTOU","","",null,null],[5,"pwrite64","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"EPOLLOUT","","",null,null],[5,"openat","","",null,null],[5,"utimensat","","",null,null],[6,"pthread_key_t","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[5,"mktime","","",null,null],[17,"S_IFCHR","","",null,null],[5,"pselect","","",null,null],[5,"getdtablesize","","",null,{"inputs":[],"output":{"name":"i32"}}],[3,"Sdl","sdl2","The SDL context type. Initialize with `sdl2::init()`.",null,null],[3,"AudioSubsystem","","",null,null],[3,"GameControllerSubsystem","","",null,null],[3,"HapticSubsystem","","",null,null],[3,"JoystickSubsystem","","",null,null],[3,"VideoSubsystem","","",null,null],[3,"TimerSubsystem","","",null,null],[3,"EventSubsystem","","",null,null],[3,"EventPump","","A thread-safe type that encapsulates SDL event-pumping functions.",null,null],[4,"Error","","",null,null],[13,"NoMemError","","",66,null],[13,"ReadError","","",66,null],[13,"WriteError","","",66,null],[13,"SeekError","","",66,null],[13,"UnsupportedError","","",66,null],[4,"IntegerOrSdlError","","A given integer was so big that its representation as a C integer would be\nnegative.",null,null],[13,"IntegerOverflows","","",67,null],[13,"SdlError","","",67,null],[5,"init","","Initializes the SDL library.\nThis must be called before using any other SDL function.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get_error","","",null,{"inputs":[],"output":{"name":"string"}}],[5,"set_error","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"set_error_from_code","","",null,{"inputs":[{"name":"error"}],"output":null}],[5,"clear_error","","",null,{"inputs":[],"output":null}],[0,"clipboard","","",null,null],[3,"ClipboardUtil","sdl2::clipboard","Clipboard utility functions. Access with `VideoSubsystem::clipboard()`.",null,null],[11,"clipboard","sdl2","",68,null],[11,"set_clipboard_text","sdl2::clipboard","",69,null],[11,"clipboard_text","","",69,null],[11,"has_clipboard_text","","",69,null],[0,"cpuinfo","sdl2","",null,null],[5,"cpu_count","sdl2::cpuinfo","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"cpu_cache_line_size","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"has_rdtsc","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_alti_vec","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_mmx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_3d_now","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse2","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse3","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse41","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_sse42","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"has_avx","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"system_ram","","",null,{"inputs":[],"output":{"name":"i32"}}],[17,"CACHELINESIZE","","",null,null],[0,"event","sdl2","Event Handling",null,null],[3,"EventPollIterator","sdl2::event","An iterator that calls `EventPump::poll_event()`.",null,null],[3,"EventWaitIterator","","An iterator that calls `EventPump::wait_event()`.",null,null],[3,"EventWaitTimeoutIterator","","An iterator that calls `EventPump::wait_event_timeout()`.",null,null],[4,"EventType","","Types of events that can be delivered.",null,null],[13,"First","","",70,null],[13,"Quit","","",70,null],[13,"AppTerminating","","",70,null],[13,"AppLowMemory","","",70,null],[13,"AppWillEnterBackground","","",70,null],[13,"AppDidEnterBackground","","",70,null],[13,"AppWillEnterForeground","","",70,null],[13,"AppDidEnterForeground","","",70,null],[13,"Window","","",70,null],[13,"KeyDown","","",70,null],[13,"KeyUp","","",70,null],[13,"TextEditing","","",70,null],[13,"TextInput","","",70,null],[13,"MouseMotion","","",70,null],[13,"MouseButtonDown","","",70,null],[13,"MouseButtonUp","","",70,null],[13,"MouseWheel","","",70,null],[13,"JoyAxisMotion","","",70,null],[13,"JoyBallMotion","","",70,null],[13,"JoyHatMotion","","",70,null],[13,"JoyButtonDown","","",70,null],[13,"JoyButtonUp","","",70,null],[13,"JoyDeviceAdded","","",70,null],[13,"JoyDeviceRemoved","","",70,null],[13,"ControllerAxisMotion","","",70,null],[13,"ControllerButtonDown","","",70,null],[13,"ControllerButtonUp","","",70,null],[13,"ControllerDeviceAdded","","",70,null],[13,"ControllerDeviceRemoved","","",70,null],[13,"ControllerDeviceRemapped","","",70,null],[13,"FingerDown","","",70,null],[13,"FingerUp","","",70,null],[13,"FingerMotion","","",70,null],[13,"DollarGesture","","",70,null],[13,"DollarRecord","","",70,null],[13,"MultiGesture","","",70,null],[13,"ClipboardUpdate","","",70,null],[13,"DropFile","","",70,null],[13,"User","","",70,null],[13,"Last","","",70,null],[4,"WindowEventId","","An enum of window events.",null,null],[13,"None","","",71,null],[13,"Shown","","",71,null],[13,"Hidden","","",71,null],[13,"Exposed","","",71,null],[13,"Moved","","",71,null],[13,"Resized","","",71,null],[13,"SizeChanged","","",71,null],[13,"Minimized","","",71,null],[13,"Maximized","","",71,null],[13,"Restored","","",71,null],[13,"Enter","","",71,null],[13,"Leave","","",71,null],[13,"FocusGained","","",71,null],[13,"FocusLost","","",71,null],[13,"Close","","",71,null],[4,"Event","","Different event types.",null,null],[13,"Quit","","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppTerminating","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppLowMemory","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppWillEnterBackground","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppDidEnterBackground","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppWillEnterForeground","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"AppDidEnterForeground","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"Window","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"win_event_id","","",72,null],[12,"data1","","",72,null],[12,"data2","","",72,null],[13,"KeyDown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"keycode","","",72,null],[12,"scancode","","",72,null],[12,"keymod","","",72,null],[12,"repeat","","",72,null],[13,"KeyUp","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"keycode","","",72,null],[12,"scancode","","",72,null],[12,"keymod","","",72,null],[12,"repeat","","",72,null],[13,"TextEditing","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"text","","",72,null],[12,"start","","",72,null],[12,"length","","",72,null],[13,"TextInput","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"text","","",72,null],[13,"MouseMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"which","","",72,null],[12,"mousestate","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"xrel","","",72,null],[12,"yrel","","",72,null],[13,"MouseButtonDown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"which","","",72,null],[12,"mouse_btn","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[13,"MouseButtonUp","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"which","","",72,null],[12,"mouse_btn","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[13,"MouseWheel","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"which","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[13,"JoyAxisMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"axis_idx","","",72,null],[12,"value","","",72,null],[13,"JoyBallMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"ball_idx","","",72,null],[12,"xrel","","",72,null],[12,"yrel","","",72,null],[13,"JoyHatMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"hat_idx","","",72,null],[12,"state","","",72,null],[13,"JoyButtonDown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"button_idx","","",72,null],[13,"JoyButtonUp","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"button_idx","","",72,null],[13,"JoyDeviceAdded","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[13,"JoyDeviceRemoved","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[13,"ControllerAxisMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"axis","","",72,null],[12,"value","","",72,null],[13,"ControllerButtonDown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"button","","",72,null],[13,"ControllerButtonUp","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[12,"button","","",72,null],[13,"ControllerDeviceAdded","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[13,"ControllerDeviceRemoved","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[13,"ControllerDeviceRemapped","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"which","","",72,null],[13,"FingerDown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"finger_id","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"dx","","",72,null],[12,"dy","","",72,null],[12,"pressure","","",72,null],[13,"FingerUp","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"finger_id","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"dx","","",72,null],[12,"dy","","",72,null],[12,"pressure","","",72,null],[13,"FingerMotion","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"finger_id","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"dx","","",72,null],[12,"dy","","",72,null],[12,"pressure","","",72,null],[13,"DollarGesture","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"gesture_id","","",72,null],[12,"num_fingers","","",72,null],[12,"error","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[13,"DollarRecord","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"gesture_id","","",72,null],[12,"num_fingers","","",72,null],[12,"error","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[13,"MultiGesture","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"touch_id","","",72,null],[12,"d_theta","","",72,null],[12,"d_dist","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"num_fingers","","",72,null],[13,"ClipboardUpdate","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[13,"DropFile","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"filename","","",72,null],[13,"User","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"window_id","","",72,null],[12,"type_","","",72,null],[12,"code","","",72,null],[12,"data1","","",72,null],[12,"data2","","",72,null],[13,"Unknown","sdl2::event","",72,null],[12,"timestamp","sdl2::event::Event","",72,null],[12,"type_","","",72,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",73,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",73,null],[11,"try_lock","","Attempts to acquire this lock.",73,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",73,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",73,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",73,null],[11,"from","alloc::boxed","",74,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",74,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",74,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",74,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",74,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",74,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",75,null],[11,"description","","",76,null],[11,"description","core::num","",77,null],[11,"description","","",78,null],[11,"description","core::num::dec2flt","",79,null],[11,"description","collections::string","",80,null],[11,"description","","",81,null],[11,"description","","",82,null],[11,"description","rustc_unicode::char","",83,null],[11,"description","alloc::boxed","",74,null],[11,"cause","","",74,null],[11,"description","core::fmt","",84,null],[11,"is","sdl2","Returns true if the boxed type is the same as `T`",85,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",85,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",85,null],[11,"is","","Forwards to the method defined on the type `Any`.",85,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",85,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",85,null],[11,"is","","Forwards to the method defined on the type `Any`.",85,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",85,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",85,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",85,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",85,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",85,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",86,null],[11,"size_hint","","",86,null],[11,"next_back","","",86,null],[11,"clone","std::thread::local","",87,null],[11,"eq","","",87,null],[11,"with","","Acquires a reference to the value in this TLS key.",88,null],[11,"state","","Query the current state of this key.",88,null],[11,"new","std::thread::local::elf","",89,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",89,null],[11,"new","std::thread::local::os","",90,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",90,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",91,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",91,null],[11,"stack_size","","Sets the size of the stack for the new thread.",91,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",91,null],[11,"clone","","",92,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",92,null],[11,"name","","Gets the thread&#39;s name.",92,null],[11,"fmt","","",92,null],[11,"thread","","Extracts a handle to the underlying thread",93,null],[11,"join","","Waits for the associated thread to finish.",93,null],[11,"clone","std::collections::hash::map","",94,null],[11,"new","","Creates an empty HashMap.",94,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",94,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",94,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",94,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",94,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",94,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",94,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",94,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",94,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",94,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",94,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",94,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",94,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",94,null],[11,"len","","Returns the number of elements in the map.",94,null],[11,"is_empty","","Returns true if the map contains no elements.",94,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",94,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",94,null],[11,"get","","Returns a reference to the value corresponding to the key.",94,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",94,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",94,null],[11,"insert","","Inserts a key-value pair into the map.",94,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",94,null],[11,"eq","","",94,null],[11,"fmt","","",94,null],[11,"default","","",94,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",94,null],[11,"clone","","",95,null],[11,"clone","","",96,null],[11,"clone","","",97,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",94,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"len","","",95,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"len","","",98,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"len","","",99,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"len","","",96,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"len","","",97,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"len","","",100,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"len","","",101,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",102,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",102,null],[11,"key","","Returns a reference to this entry&#39;s key.",102,null],[11,"key","","Gets a reference to the key in the entry.",103,null],[11,"get","","Gets a reference to the value in the entry.",103,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",103,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",103,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",103,null],[11,"remove","","Takes the value out of the entry, and returns it",103,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",104,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",104,null],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",94,null],[11,"extend","","",94,null],[11,"clone","","",105,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",105,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",105,null],[11,"default","","",105,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",106,null],[11,"new","","Creates an empty HashSet.",106,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",106,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",106,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",106,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",106,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",106,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",106,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",106,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",106,null],[11,"difference","","Visit the values representing the difference.",106,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",106,null],[11,"intersection","","Visit the values representing the intersection.",106,null],[11,"union","","Visit the values representing the union.",106,null],[11,"len","","Returns the number of elements in the set.",106,null],[11,"is_empty","","Returns true if the set contains no elements.",106,null],[11,"drain","","Clears the set, returning all elements in an iterator.",106,null],[11,"clear","","Clears the set, removing all values.",106,null],[11,"contains","","Returns `true` if the set contains a value.",106,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",106,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",106,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",106,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",106,null],[11,"insert","","Adds a value to the set.",106,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",106,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",106,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",106,null],[11,"eq","","",106,null],[11,"fmt","","",106,null],[11,"from_iter","","",106,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",106,null],[11,"extend","","",106,null],[11,"default","","",106,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",106,null],[11,"clone","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"len","","",107,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"len","","",108,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"len","","",109,null],[11,"clone","","",110,null],[11,"next","","",110,null],[11,"size_hint","","",110,null],[11,"clone","","",111,null],[11,"next","","",111,null],[11,"size_hint","","",111,null],[11,"clone","","",112,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"clone","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"clone","collections::linked_list","",114,null],[11,"clone","","",115,null],[11,"default","","",116,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",116,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",116,null],[11,"iter","","Provides a forward iterator.",116,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",116,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",116,null],[11,"len","","Returns the length of the `LinkedList`.",116,null],[11,"clear","","Removes all elements from the `LinkedList`.",116,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",116,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",116,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",116,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",116,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",116,null],[11,"push_front","","Adds an element first in the list.",116,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",116,null],[11,"push_back","","Appends an element to the back of a list",116,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",116,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",116,null],[11,"front_place","","Returns a place for insertion at the front of the list.",116,null],[11,"back_place","","Returns a place for insertion at the back of the list.",116,null],[11,"drop","","",116,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"next","","",117,null],[11,"size_hint","","",117,null],[11,"next_back","","",117,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",117,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",117,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next_back","","",115,null],[11,"from_iter","","",116,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",116,null],[11,"extend","","",116,null],[11,"extend","","",116,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"partial_cmp","","",116,null],[11,"cmp","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"hash","","",116,null],[11,"make_place","","",118,null],[11,"pointer","","",118,null],[11,"finalize","","",118,null],[11,"make_place","","",119,null],[11,"pointer","","",119,null],[11,"finalize","","",119,null],[11,"clone","collections::binary_heap","",120,null],[11,"clone_from","","",120,null],[11,"default","","",120,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",120,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",120,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",120,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",120,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",120,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",120,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",120,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",120,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",120,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",120,null],[11,"push","","Pushes an item onto the binary heap.",120,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",120,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",120,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",120,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",120,null],[11,"len","","Returns the length of the binary heap.",120,null],[11,"is_empty","","Checks if the binary heap is empty.",120,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",120,null],[11,"clear","","Drops all items from the binary heap.",120,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",120,null],[11,"clone","","",121,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"next_back","","",121,null],[11,"clone","","",122,null],[11,"next","","",122,null],[11,"size_hint","","",122,null],[11,"next_back","","",122,null],[11,"next","","",123,null],[11,"size_hint","","",123,null],[11,"next_back","","",123,null],[11,"from","","",120,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",124,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",120,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",120,null],[11,"extend","","",120,null],[11,"extend","","",120,null],[11,"clone","collections::vec_deque","",125,null],[11,"drop","","",125,null],[11,"default","","",125,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",125,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",125,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",125,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",125,null],[11,"swap","","Swaps elements at indices `i` and `j`.",125,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",125,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",125,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",125,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",125,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",125,null],[11,"iter","","Returns a front-to-back iterator.",125,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",125,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",125,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",125,null],[11,"len","","Returns the number of elements in the `VecDeque`.",125,null],[11,"is_empty","","Returns true if the buffer contains no elements",125,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",125,null],[11,"clear","","Clears the buffer, removing all values.",125,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",125,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",125,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",125,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",125,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",125,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",125,null],[11,"push_front","","Inserts an element first in the sequence.",125,null],[11,"push_back","","Appends an element to the back of a buffer",125,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",125,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",125,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",125,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",125,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",125,null],[11,"split_off","","Splits the collection into two at the given index.",125,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",125,null],[11,"retain","","Retains only the elements specified by the predicate.",125,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",125,null],[11,"clone","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next_back","","",127,null],[11,"clone","","",128,null],[11,"next","","",128,null],[11,"size_hint","","",128,null],[11,"next_back","","",128,null],[11,"drop","","",129,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"next_back","","",129,null],[11,"eq","","",125,null],[11,"partial_cmp","","",125,null],[11,"cmp","","",125,null],[11,"hash","","",125,null],[11,"index","","",125,null],[11,"index_mut","","",125,null],[11,"from_iter","","",125,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",125,null],[11,"extend","","",125,null],[11,"extend","","",125,null],[11,"fmt","","",125,null],[11,"from","","",125,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",124,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",130,null],[11,"size_hint","","",130,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"clone","","",132,null],[11,"eq","","",132,null],[11,"ne","","",132,null],[11,"fmt","","",132,null],[11,"fmt","","",132,null],[11,"description","","",132,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"fmt","","",134,null],[11,"fmt","","",134,null],[11,"description","","",134,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"len","","",135,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"len","","",136,null],[11,"clone","std::ffi::c_str","",137,null],[11,"hash","","",137,null],[11,"cmp","","",137,null],[11,"partial_cmp","","",137,null],[11,"lt","","",137,null],[11,"le","","",137,null],[11,"gt","","",137,null],[11,"ge","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"hash","","",138,null],[11,"fmt","","",139,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"fmt","","",141,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"clone","","",141,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",137,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",137,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",137,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",137,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",137,null],[11,"into_bytes","","Returns the underlying byte buffer.",137,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",137,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",137,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",137,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",138,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",138,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",138,null],[11,"as_ptr","","Returns the inner pointer to this C string.",138,null],[11,"to_bytes","","Converts this C string to a byte slice.",138,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",138,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",138,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",138,null],[11,"deref","","",137,null],[11,"fmt","","",137,null],[11,"from","collections::vec","",124,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",138,null],[11,"default","","",137,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",137,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",139,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",139,null],[11,"description","","",139,null],[11,"fmt","","",139,null],[11,"from","std::io::error","",142,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",141,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",141,null],[11,"description","","",141,null],[11,"cause","","",141,null],[11,"fmt","","",141,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"to_owned","","",138,null],[11,"from","","",137,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",137,null],[11,"as_ref","","",138,null],[11,"as_ref","","",137,null],[11,"clone","std::ffi::os_str","",143,null],[11,"new","","Constructs a new empty `OsString`.",143,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",143,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",143,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",143,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",143,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",143,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",143,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",143,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",143,null],[11,"from","","",143,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",143,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",143,null],[11,"new","","Coerces into an `OsStr` slice.",144,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",144,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",144,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",144,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",144,null],[11,"len","","Returns the length of this `OsStr`.",144,null],[11,"deref","","",143,null],[11,"default","","",143,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",143,null],[11,"eq","","",143,null],[11,"eq","","",143,null],[11,"partial_cmp","","",143,null],[11,"lt","","",143,null],[11,"le","","",143,null],[11,"gt","","",143,null],[11,"ge","","",143,null],[11,"partial_cmp","","",143,null],[11,"cmp","","",143,null],[11,"hash","","",143,null],[11,"eq","","",144,null],[11,"eq","","",144,null],[11,"partial_cmp","","",144,null],[11,"lt","","",144,null],[11,"le","","",144,null],[11,"gt","","",144,null],[11,"ge","","",144,null],[11,"partial_cmp","","",144,null],[11,"cmp","","",144,null],[11,"eq","","",143,null],[11,"eq","","",144,null],[11,"partial_cmp","","",143,null],[11,"partial_cmp","","",144,null],[11,"eq","","",143,null],[11,"partial_cmp","","",143,null],[11,"eq","collections::borrow","",145,null],[11,"eq","std::ffi::os_str","",144,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::ffi::os_str","",144,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","","",145,null],[11,"eq","","",145,null],[11,"eq","std::ffi::os_str","",143,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::ffi::os_str","",143,null],[11,"hash","","",144,null],[11,"fmt","","",144,null],[11,"borrow","","",143,null],[11,"to_owned","","",144,null],[11,"as_ref","","",144,null],[11,"as_ref","","",143,null],[11,"as_ref","collections::string","",146,null],[11,"clone","std::fs","",147,null],[11,"clone","","",148,null],[11,"fmt","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"clone","","",149,null],[11,"hash","","",150,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"clone","","",150,null],[11,"open","","Attempts to open a file in read-only mode.",151,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",151,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",151,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",151,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",151,null],[11,"metadata","","Queries metadata about the underlying file.",151,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",151,null],[11,"fmt","","",151,null],[11,"read","","",151,null],[11,"read_to_end","","",151,null],[11,"write","","",151,null],[11,"flush","","",151,null],[11,"seek","","",151,null],[11,"new","","Creates a blank new set of options ready for configuration.",148,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",148,null],[11,"write","","Sets the option for write access.",148,null],[11,"append","","Sets the option for the append mode.",148,null],[11,"truncate","","Sets the option for truncating a previous file.",148,null],[11,"create","","Sets the option for creating a new file.",148,null],[11,"create_new","","Sets the option to always create a new file.",148,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",148,null],[11,"file_type","","Returns the file type for this metadata.",147,null],[11,"is_dir","","Returns whether this metadata is for a directory.",147,null],[11,"is_file","","Returns whether this metadata is for a regular file.",147,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",147,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",147,null],[11,"modified","","Returns the last modification time listed in this metadata.",147,null],[11,"accessed","","Returns the last access time of this metadata.",147,null],[11,"created","","Returns the creation time listed in the this metadata.",147,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",149,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",149,null],[11,"is_dir","","Test whether this file type represents a directory.",150,null],[11,"is_file","","Test whether this file type represents a regular file.",150,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",150,null],[11,"next","","",152,null],[11,"path","","Returns the full path to the file that this entry represents.",153,null],[11,"metadata","","Return the metadata for the file that this entry points at.",153,null],[11,"file_type","","Return the file type for the file that this entry points at.",153,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",153,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",154,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",154,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",154,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",155,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",155,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",155,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",155,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",155,null],[11,"read","","",155,null],[11,"fill_buf","","",155,null],[11,"consume","","",155,null],[11,"fmt","","",155,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",155,null],[11,"fmt","","",156,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",157,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",157,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",157,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",157,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",157,null],[11,"write","","",157,null],[11,"flush","","",157,null],[11,"fmt","","",157,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",157,null],[11,"drop","","",157,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",156,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",156,null],[11,"from","std::io::error","",142,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",156,null],[11,"fmt","","",156,null],[11,"new","","Creates a new `LineWriter`.",158,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",158,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",158,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",158,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",158,null],[11,"write","","",158,null],[11,"flush","","",158,null],[11,"fmt","","",158,null],[11,"fmt","std::io::cursor","",159,null],[11,"clone","","",159,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",159,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",159,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",159,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",159,null],[11,"position","","Returns the current position of this cursor.",159,null],[11,"set_position","","Sets the position of this cursor.",159,null],[11,"seek","","",159,null],[11,"read","","",159,null],[11,"fill_buf","","",159,null],[11,"consume","","",159,null],[11,"write","","",159,null],[11,"flush","","",159,null],[11,"write","","",159,null],[11,"flush","","",159,null],[11,"write","","",159,null],[11,"flush","","",159,null],[11,"fmt","std::io::error","",142,null],[11,"fmt","","",160,null],[11,"clone","","",160,null],[11,"eq","","",160,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",142,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",142,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",142,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",142,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",142,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",142,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",142,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",142,null],[11,"fmt","","",142,null],[11,"description","","",142,null],[11,"cause","","",142,null],[11,"read","alloc::boxed","",74,null],[11,"read_to_end","","",74,null],[11,"read_to_string","","",74,null],[11,"read_exact","","",74,null],[11,"write","","",74,null],[11,"flush","","",74,null],[11,"write_all","","",74,null],[11,"write_fmt","","",74,null],[11,"seek","","",74,null],[11,"fill_buf","","",74,null],[11,"consume","","",74,null],[11,"read_until","","",74,null],[11,"read_line","","",74,null],[11,"write","collections::vec","",124,null],[11,"write_all","","",124,null],[11,"flush","","",124,null],[11,"read","std::io::util","",161,null],[11,"fill_buf","","",161,null],[11,"consume","","",161,null],[11,"read","","",162,null],[11,"write","","",163,null],[11,"flush","","",163,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",164,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",164,null],[11,"read","","",164,null],[11,"read_to_end","","",164,null],[11,"read_to_string","","",164,null],[11,"read_exact","","",164,null],[11,"read","","",165,null],[11,"read_to_end","","",165,null],[11,"fill_buf","","",165,null],[11,"consume","","",165,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",166,null],[11,"write","","",166,null],[11,"flush","","",166,null],[11,"write_all","","",166,null],[11,"write_fmt","","",166,null],[11,"write","","",167,null],[11,"flush","","",167,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",168,null],[11,"write","","",168,null],[11,"flush","","",168,null],[11,"write_all","","",168,null],[11,"write_fmt","","",168,null],[11,"write","","",169,null],[11,"flush","","",169,null],[11,"fmt","std::io","",170,null],[11,"clone","","",170,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"read","","",171,null],[11,"fill_buf","","",171,null],[11,"consume","","",171,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",172,null],[11,"read","","",172,null],[11,"fill_buf","","",172,null],[11,"consume","","",172,null],[11,"next","","",173,null],[11,"fmt","","",174,null],[11,"next","","",175,null],[11,"description","","",174,null],[11,"cause","","",174,null],[11,"fmt","","",174,null],[11,"next","","",176,null],[11,"next","","",177,null],[11,"cmp","std::net::ip","",178,null],[11,"partial_cmp","","",178,null],[11,"lt","","",178,null],[11,"le","","",178,null],[11,"gt","","",178,null],[11,"ge","","",178,null],[11,"hash","","",178,null],[11,"fmt","","",178,null],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"clone","","",178,null],[11,"fmt","","",179,null],[11,"hash","","",179,null],[11,"clone","","",179,null],[11,"eq","","",179,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",180,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",180,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",180,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",180,null],[11,"is_private","","Returns true if this is a private address.",180,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",180,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",180,null],[11,"is_multicast","","Returns true if this is a multicast address.",180,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",180,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",180,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",180,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",180,null],[11,"fmt","","",178,null],[11,"fmt","","",180,null],[11,"fmt","","",180,null],[11,"clone","","",180,null],[11,"eq","","",180,null],[11,"hash","","",180,null],[11,"partial_cmp","","",180,null],[11,"cmp","","",180,null],[11,"from","","",180,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",180,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",181,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",181,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",181,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",181,null],[11,"is_global","","Returns true if the address appears to be globally routable.",181,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",181,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",181,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",181,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",181,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",181,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",181,null],[11,"is_multicast","","Returns true if this is a multicast address.",181,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",181,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",181,null],[11,"fmt","","",181,null],[11,"fmt","","",181,null],[11,"clone","","",181,null],[11,"eq","","",181,null],[11,"hash","","",181,null],[11,"partial_cmp","","",181,null],[11,"cmp","","",181,null],[11,"from","","",181,null],[11,"fmt","std::net::addr","",182,null],[11,"hash","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",182,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",182,null],[11,"set_ip","","Change the IP address associated with this socket address.",182,null],[11,"port","","Returns the port number associated with this socket address.",182,null],[11,"set_port","","Change the port number associated with this socket address.",182,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",183,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",183,null],[11,"set_ip","","Change the IP address associated with this socket address.",183,null],[11,"port","","Returns the port number associated with this socket address.",183,null],[11,"set_port","","Change the port number associated with this socket address.",183,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",184,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",184,null],[11,"set_ip","","Change the IP address associated with this socket address.",184,null],[11,"port","","Returns the port number associated with this socket address.",184,null],[11,"set_port","","Change the port number associated with this socket address.",184,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",184,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",184,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",184,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",184,null],[11,"fmt","","",182,null],[11,"fmt","","",183,null],[11,"fmt","","",183,null],[11,"fmt","","",184,null],[11,"fmt","","",184,null],[11,"clone","","",183,null],[11,"clone","","",184,null],[11,"eq","","",183,null],[11,"eq","","",184,null],[11,"hash","","",183,null],[11,"hash","","",184,null],[11,"to_socket_addrs","","",182,null],[11,"to_socket_addrs","","",183,null],[11,"to_socket_addrs","","",184,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",185,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",185,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",185,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",185,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",185,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",185,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",185,null],[11,"read_timeout","","Returns the read timeout of this socket.",185,null],[11,"write_timeout","","Returns the write timeout of this socket.",185,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",185,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",185,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",185,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",185,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",185,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",185,null],[11,"read","","",185,null],[11,"read_to_end","","",185,null],[11,"write","","",185,null],[11,"flush","","",185,null],[11,"fmt","","",185,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",186,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",186,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",186,null],[11,"accept","","Accept a new incoming connection from this listener.",186,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",186,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",186,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",186,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",186,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",186,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",186,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",186,null],[11,"next","","",187,null],[11,"fmt","","",186,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",188,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",188,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",188,null],[11,"local_addr","","Returns the socket address that this socket was created from.",188,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",188,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",188,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",188,null],[11,"read_timeout","","Returns the read timeout of this socket.",188,null],[11,"write_timeout","","Returns the write timeout of this socket.",188,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",188,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",188,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",188,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",188,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",188,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",188,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",188,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",188,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",188,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",188,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",188,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",188,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",188,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",188,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",188,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",188,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",188,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",188,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",188,null],[11,"fmt","","",188,null],[11,"from_str","std::net::ip","",178,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",180,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",181,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",183,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",184,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",182,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",189,null],[11,"ne","","",189,null],[11,"clone","","",189,null],[11,"fmt","","",189,null],[11,"fmt","","",189,null],[11,"description","","",189,null],[11,"fmt","std::net","",190,null],[11,"eq","","",190,null],[11,"clone","","",190,null],[11,"next","","",191,null],[11,"clone","std::os::linux::raw::arch","",192,null],[11,"as_raw_stat","std::fs","",147,null],[11,"st_dev","","",147,null],[11,"st_ino","","",147,null],[11,"st_mode","","",147,null],[11,"st_nlink","","",147,null],[11,"st_uid","","",147,null],[11,"st_gid","","",147,null],[11,"st_rdev","","",147,null],[11,"st_size","","",147,null],[11,"st_atime","","",147,null],[11,"st_atime_nsec","","",147,null],[11,"st_mtime","","",147,null],[11,"st_mtime_nsec","","",147,null],[11,"st_ctime","","",147,null],[11,"st_ctime_nsec","","",147,null],[11,"st_blksize","","",147,null],[11,"st_blocks","","",147,null],[11,"as_raw_fd","","",151,null],[11,"from_raw_fd","","",151,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",151,null],[11,"as_raw_fd","std::net::tcp","",185,null],[11,"as_raw_fd","","",186,null],[11,"as_raw_fd","std::net::udp","",188,null],[11,"from_raw_fd","std::net::tcp","",185,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",186,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",188,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",185,null],[11,"into_raw_fd","","",186,null],[11,"into_raw_fd","std::net::udp","",188,null],[11,"from_vec","std::ffi::os_str","",143,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",143,null],[11,"from_bytes","","",144,null],[11,"as_bytes","","",144,null],[11,"mode","std::fs","",149,null],[11,"set_mode","","",149,null],[11,"from_mode","","",149,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",148,null],[11,"custom_flags","","",148,null],[11,"dev","","",147,null],[11,"ino","","",147,null],[11,"mode","","",147,null],[11,"nlink","","",147,null],[11,"uid","","",147,null],[11,"gid","","",147,null],[11,"rdev","","",147,null],[11,"size","","",147,null],[11,"atime","","",147,null],[11,"atime_nsec","","",147,null],[11,"mtime","","",147,null],[11,"mtime_nsec","","",147,null],[11,"ctime","","",147,null],[11,"ctime_nsec","","",147,null],[11,"blksize","","",147,null],[11,"blocks","","",147,null],[11,"is_block_device","","",150,null],[11,"is_char_device","","",150,null],[11,"is_fifo","","",150,null],[11,"is_socket","","",150,null],[11,"ino","","",153,null],[11,"mode","","",154,null],[11,"uid","std::process","",193,null],[11,"gid","","",193,null],[11,"before_exec","","",193,null],[11,"exec","","",193,null],[11,"from_raw","","",194,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",194,null],[11,"from_raw_fd","","",195,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",196,null],[11,"as_raw_fd","","",197,null],[11,"as_raw_fd","","",198,null],[11,"into_raw_fd","","",196,null],[11,"into_raw_fd","","",197,null],[11,"into_raw_fd","","",198,null],[11,"as_pthread_t","std::thread","",93,null],[11,"into_pthread_t","","",93,null],[11,"clone","std::sys::ext::net","",199,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",199,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",199,null],[11,"fmt","","",199,null],[11,"fmt","","",200,null],[11,"connect","","Connects to the socket named by `path`.",200,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",200,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",200,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",200,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",200,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",200,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",200,null],[11,"read_timeout","","Returns the read timeout of this socket.",200,null],[11,"write_timeout","","Returns the write timeout of this socket.",200,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",200,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",200,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",200,null],[11,"read","","",200,null],[11,"read_to_end","","",200,null],[11,"write","","",200,null],[11,"flush","","",200,null],[11,"as_raw_fd","","",200,null],[11,"from_raw_fd","","",200,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",200,null],[11,"fmt","","",201,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",201,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",201,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",201,null],[11,"local_addr","","Returns the local socket address of this listener.",201,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",201,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",201,null],[11,"incoming","","Returns an iterator over incoming connections.",201,null],[11,"as_raw_fd","","",201,null],[11,"from_raw_fd","","",201,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",201,null],[11,"fmt","","",202,null],[11,"next","","",202,null],[11,"size_hint","","",202,null],[11,"fmt","","",203,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",203,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",203,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",203,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",203,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",203,null],[11,"local_addr","","Returns the address of this socket.",203,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",203,null],[11,"recv_from","","Receives data from the socket.",203,null],[11,"recv","","Receives data from the socket.",203,null],[11,"send_to","","Sends data on the socket to the specified address.",203,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",203,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",203,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",203,null],[11,"read_timeout","","Returns the read timeout of this socket.",203,null],[11,"write_timeout","","Returns the write timeout of this socket.",203,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",203,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",203,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",203,null],[11,"as_raw_fd","","",203,null],[11,"from_raw_fd","","",203,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",203,null],[11,"deref","std::panic","",204,null],[11,"deref_mut","","",204,null],[11,"call_once","","",204,null],[11,"eq","std::path","",205,null],[11,"ne","","",205,null],[11,"cmp","","",205,null],[11,"partial_cmp","","",205,null],[11,"lt","","",205,null],[11,"le","","",205,null],[11,"gt","","",205,null],[11,"ge","","",205,null],[11,"hash","","",205,null],[11,"fmt","","",205,null],[11,"clone","","",205,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",205,null],[11,"fmt","","",206,null],[11,"clone","","",206,null],[11,"kind","","The parsed prefix data.",206,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",206,null],[11,"eq","","",206,null],[11,"partial_cmp","","",206,null],[11,"cmp","","",206,null],[11,"hash","","",206,null],[11,"fmt","","",207,null],[11,"hash","","",207,null],[11,"cmp","","",207,null],[11,"partial_cmp","","",207,null],[11,"lt","","",207,null],[11,"le","","",207,null],[11,"gt","","",207,null],[11,"ge","","",207,null],[11,"eq","","",207,null],[11,"ne","","",207,null],[11,"clone","","",207,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",207,null],[11,"as_ref","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",208,null],[11,"as_ref","","",208,null],[11,"as_ref","","",208,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",209,null],[11,"as_ref","","",209,null],[11,"as_ref","","",209,null],[11,"next","","",209,null],[11,"next_back","","",209,null],[11,"next","","",208,null],[11,"next_back","","",208,null],[11,"eq","","",208,null],[11,"partial_cmp","","",208,null],[11,"cmp","","",208,null],[11,"clone","","",210,null],[11,"new","","Allocates an empty `PathBuf`.",210,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",210,null],[11,"push","","Extends `self` with `path`.",210,null],[11,"pop","","Truncate `self` to `self.parent()`.",210,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",210,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",210,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",210,null],[11,"from","","",210,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",210,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",210,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",210,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",210,null],[11,"fmt","","",210,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",211,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",211,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",211,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",211,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",211,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",211,null],[11,"is_relative","","A path is *relative* if it is not absolute.",211,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",211,null],[11,"parent","","The path without its final component, if any.",211,null],[11,"file_name","","The final component of the path, if it is a normal file.",211,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",211,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",211,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",211,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",211,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",211,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",211,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",211,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",211,null],[11,"components","","Produce an iterator over the components of the path.",211,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",211,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",211,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",211,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",211,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",211,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",211,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",211,null],[11,"exists","","Returns whether the path points at an existing entity.",211,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",211,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",211,null],[11,"deref","","",210,null],[11,"borrow","","",210,null],[11,"from","collections::borrow","",145,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",145,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",211,null],[11,"eq","","",210,null],[11,"hash","","",210,null],[11,"partial_cmp","","",210,null],[11,"cmp","","",210,null],[11,"as_ref","","",210,null],[11,"into","","",210,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"clone","","",212,null],[11,"fmt","","",212,null],[11,"as_ref","","",211,null],[11,"fmt","","",211,null],[11,"fmt","","",213,null],[11,"fmt","","",213,null],[11,"eq","","",211,null],[11,"hash","","",211,null],[11,"partial_cmp","","",211,null],[11,"cmp","","",211,null],[11,"as_ref","","",211,null],[11,"as_ref","std::ffi::os_str","",144,null],[11,"as_ref","collections::borrow","",145,null],[11,"as_ref","std::ffi::os_str","",143,null],[11,"as_ref","collections::string","",146,null],[11,"as_ref","std::path","",210,null],[11,"eq","","",210,null],[11,"eq","","",211,null],[11,"partial_cmp","","",210,null],[11,"partial_cmp","","",211,null],[11,"eq","","",210,null],[11,"partial_cmp","","",210,null],[11,"eq","collections::borrow","",145,null],[11,"eq","std::path","",211,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::path","",211,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","","",145,null],[11,"eq","","",145,null],[11,"eq","std::path","",210,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::path","",210,null],[11,"eq","","",210,null],[11,"eq","std::ffi::os_str","",144,null],[11,"partial_cmp","std::path","",210,null],[11,"partial_cmp","std::ffi::os_str","",144,null],[11,"eq","std::path","",210,null],[11,"partial_cmp","","",210,null],[11,"eq","","",210,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","std::path","",210,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"eq","std::path","",210,null],[11,"eq","std::ffi::os_str","",143,null],[11,"partial_cmp","std::path","",210,null],[11,"partial_cmp","std::ffi::os_str","",143,null],[11,"eq","std::path","",211,null],[11,"eq","std::ffi::os_str","",144,null],[11,"partial_cmp","std::path","",211,null],[11,"partial_cmp","std::ffi::os_str","",144,null],[11,"eq","std::path","",211,null],[11,"partial_cmp","","",211,null],[11,"eq","","",211,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","std::path","",211,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"eq","std::path","",211,null],[11,"eq","std::ffi::os_str","",143,null],[11,"partial_cmp","std::path","",211,null],[11,"partial_cmp","std::ffi::os_str","",143,null],[11,"eq","","",144,null],[11,"partial_cmp","","",144,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","","",145,null],[11,"eq","std::ffi::os_str","",143,null],[11,"partial_cmp","","",143,null],[11,"eq","collections::borrow","",145,null],[11,"eq","std::ffi::os_str","",144,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::ffi::os_str","",144,null],[11,"eq","collections::borrow","",145,null],[11,"partial_cmp","","",145,null],[11,"eq","","",145,null],[11,"eq","std::ffi::os_str","",143,null],[11,"partial_cmp","collections::borrow","",145,null],[11,"partial_cmp","std::ffi::os_str","",143,null],[11,"fmt","std::path","",212,null],[11,"description","","",212,null],[11,"write","std::process","",196,null],[11,"flush","","",196,null],[11,"read","","",197,null],[11,"read_to_end","","",197,null],[11,"read","","",198,null],[11,"read_to_end","","",198,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",193,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",193,null],[11,"args","","Add multiple arguments to pass to the program.",193,null],[11,"env","","Inserts or updates an environment variable mapping.",193,null],[11,"env_remove","","Removes an environment variable mapping.",193,null],[11,"env_clear","","Clears the entire environment map for the child process.",193,null],[11,"current_dir","","Sets the working directory for the child process.",193,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",193,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",193,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",193,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",193,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",193,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",193,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",193,null],[11,"clone","","",214,null],[11,"eq","","",214,null],[11,"ne","","",214,null],[11,"fmt","","",214,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",195,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",195,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",195,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",194,null],[11,"clone","","",194,null],[11,"eq","","",194,null],[11,"ne","","",194,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",194,null],[11,"code","","Returns the exit code of the process, if any.",194,null],[11,"fmt","","",194,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",215,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",215,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",215,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",215,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",216,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",216,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",216,null],[11,"id","","Retrieves the id of this handle.",217,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",217,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",217,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",217,null],[11,"drop","","",216,null],[11,"drop","","",217,null],[11,"fmt","","",216,null],[11,"fmt","","",217,null],[11,"clone","std::sync::mpsc","",218,null],[11,"eq","","",218,null],[11,"ne","","",218,null],[11,"fmt","","",219,null],[11,"clone","","",219,null],[11,"eq","","",219,null],[11,"fmt","","",220,null],[11,"clone","","",220,null],[11,"eq","","",220,null],[11,"clone","","",221,null],[11,"eq","","",221,null],[11,"ne","","",221,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",222,null],[11,"clone","","",222,null],[11,"drop","","",222,null],[11,"fmt","","",222,null],[11,"send","","Sends a value on this synchronous channel.",223,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",223,null],[11,"clone","","",223,null],[11,"drop","","",223,null],[11,"fmt","","",223,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",224,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",224,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",224,null],[11,"next","","",225,null],[11,"next","","",226,null],[11,"into_iter","","",224,null],[11,"drop","","",224,null],[11,"fmt","","",224,null],[11,"fmt","","",218,null],[11,"fmt","","",218,null],[11,"description","","",218,null],[11,"cause","","",218,null],[11,"fmt","","",221,null],[11,"fmt","","",221,null],[11,"description","","",221,null],[11,"cause","","",221,null],[11,"fmt","","",219,null],[11,"description","","",219,null],[11,"cause","","",219,null],[11,"fmt","","",220,null],[11,"description","","",220,null],[11,"cause","","",220,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",227,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",227,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",228,null],[11,"clone","std::sync::condvar","",229,null],[11,"eq","","",229,null],[11,"ne","","",229,null],[11,"fmt","","",229,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",229,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",230,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",230,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",230,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",230,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",230,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",230,null],[11,"default","","",230,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",230,null],[11,"new","","Creates a new condition variable",231,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",231,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",231,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",231,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",231,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",231,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",231,null],[11,"drop","std::sync::mutex","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",73,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",232,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",232,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",232,null],[11,"destroy","","Deallocates resources associated with this static mutex.",232,null],[11,"deref","","",233,null],[11,"deref_mut","","",233,null],[11,"drop","","",233,null],[11,"new","std::sync::once","Creates a new `Once` value.",234,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",234,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",234,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",235,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",236,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",236,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",236,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",236,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",236,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",236,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",236,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",236,null],[11,"drop","","",236,null],[11,"fmt","","",236,null],[11,"default","","",236,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",237,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",237,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",237,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",237,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",237,null],[11,"destroy","","Deallocates all resources associated with this static lock.",237,null],[11,"deref","","",238,null],[11,"deref","","",239,null],[11,"deref_mut","","",239,null],[11,"drop","","",238,null],[11,"drop","","",239,null],[11,"default","core::sync::atomic","",240,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",241,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",242,null],[11,"clone","","",242,null],[11,"new","","Creates a new `AtomicBool`.",240,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",240,null],[11,"store","","Stores a value into the bool.",240,null],[11,"swap","","Stores a value into the bool, returning the old value.",240,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",240,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",240,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",240,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",240,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",240,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",240,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",240,null],[11,"new","","Creates a new `AtomicPtr`.",241,null],[11,"load","","Loads a value from the pointer.",241,null],[11,"store","","Stores a value into the pointer.",241,null],[11,"swap","","Stores a value into the pointer, returning the old value.",241,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",241,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",241,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",241,null],[11,"default","","",243,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",243,null],[11,"new","","Creates a new atomic integer.",243,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",243,null],[11,"store","","Stores a value into the atomic integer.",243,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",243,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",243,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",243,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",243,null],[11,"fetch_add","","Add to the current value, returning the previous value.",243,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",243,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",243,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",243,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",243,null],[11,"default","","",244,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",244,null],[11,"new","","Creates a new atomic integer.",244,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",244,null],[11,"store","","Stores a value into the atomic integer.",244,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",244,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",244,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",244,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",244,null],[11,"fetch_add","","Add to the current value, returning the previous value.",244,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",244,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",244,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",244,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",244,null],[11,"default","","",245,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",245,null],[11,"new","","Creates a new atomic integer.",245,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",245,null],[11,"store","","Stores a value into the atomic integer.",245,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",245,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",245,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",245,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",245,null],[11,"fetch_add","","Add to the current value, returning the previous value.",245,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",245,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",245,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",245,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",245,null],[11,"default","","",246,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",246,null],[11,"new","","Creates a new atomic integer.",246,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",246,null],[11,"store","","Stores a value into the atomic integer.",246,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",246,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",246,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",246,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",246,null],[11,"fetch_add","","Add to the current value, returning the previous value.",246,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",246,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",246,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",246,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",246,null],[11,"default","","",247,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",247,null],[11,"new","","Creates a new atomic integer.",247,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",247,null],[11,"store","","Stores a value into the atomic integer.",247,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",247,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",247,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",247,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",247,null],[11,"fetch_add","","Add to the current value, returning the previous value.",247,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",247,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",247,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",247,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",247,null],[11,"default","","",248,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",248,null],[11,"new","","Creates a new atomic integer.",248,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",248,null],[11,"store","","Stores a value into the atomic integer.",248,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",248,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",248,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",248,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",248,null],[11,"fetch_add","","Add to the current value, returning the previous value.",248,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",248,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",248,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",248,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",248,null],[11,"default","","",249,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",249,null],[11,"new","","Creates a new atomic integer.",249,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",249,null],[11,"store","","Stores a value into the atomic integer.",249,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",249,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",249,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",249,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",249,null],[11,"fetch_add","","Add to the current value, returning the previous value.",249,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",249,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",249,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",249,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",249,null],[11,"default","","",250,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",250,null],[11,"new","","Creates a new atomic integer.",250,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",250,null],[11,"store","","Stores a value into the atomic integer.",250,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",250,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",250,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",250,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",250,null],[11,"fetch_add","","Add to the current value, returning the previous value.",250,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",250,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",250,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",250,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",250,null],[11,"default","","",251,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",251,null],[11,"new","","Creates a new atomic integer.",251,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",251,null],[11,"store","","Stores a value into the atomic integer.",251,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",251,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",251,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",251,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",251,null],[11,"fetch_add","","Add to the current value, returning the previous value.",251,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",251,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",251,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",251,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",251,null],[11,"default","","",252,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",252,null],[11,"new","","Creates a new atomic integer.",252,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",252,null],[11,"store","","Stores a value into the atomic integer.",252,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",252,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",252,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",252,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",252,null],[11,"fetch_add","","Add to the current value, returning the previous value.",252,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",252,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",252,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",252,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",252,null],[11,"fmt","","",240,null],[11,"fmt","","",241,null],[11,"hash","std::time::duration","",253,null],[11,"fmt","","",253,null],[11,"cmp","","",253,null],[11,"partial_cmp","","",253,null],[11,"lt","","",253,null],[11,"le","","",253,null],[11,"gt","","",253,null],[11,"ge","","",253,null],[11,"eq","","",253,null],[11,"ne","","",253,null],[11,"clone","","",253,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",253,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",253,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",253,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",253,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",253,null],[11,"add","","",253,null],[11,"add_assign","","",253,null],[11,"sub","","",253,null],[11,"sub_assign","","",253,null],[11,"mul","","",253,null],[11,"mul_assign","","",253,null],[11,"div","","",253,null],[11,"div_assign","","",253,null],[11,"cmp","std::time","",254,null],[11,"partial_cmp","","",254,null],[11,"lt","","",254,null],[11,"le","","",254,null],[11,"gt","","",254,null],[11,"ge","","",254,null],[11,"eq","","",254,null],[11,"ne","","",254,null],[11,"clone","","",254,null],[11,"cmp","","",255,null],[11,"partial_cmp","","",255,null],[11,"lt","","",255,null],[11,"le","","",255,null],[11,"gt","","",255,null],[11,"ge","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"clone","","",255,null],[11,"fmt","","",256,null],[11,"clone","","",256,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",254,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",254,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",254,null],[11,"add","","",254,null],[11,"add_assign","","",254,null],[11,"sub","","",254,null],[11,"sub_assign","","",254,null],[11,"sub","","",254,null],[11,"fmt","","",254,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",255,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",255,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",255,null],[11,"add","","",255,null],[11,"add_assign","","",255,null],[11,"sub","","",255,null],[11,"sub_assign","","",255,null],[11,"fmt","","",255,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",256,null],[11,"description","","",256,null],[11,"fmt","","",256,null],[11,"fmt","std::sys_common::poison","",257,null],[11,"fmt","","",257,null],[11,"description","","",257,null],[11,"new","","Creates a `PoisonError`.",257,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",257,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",257,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",257,null],[11,"from","","",258,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",258,null],[11,"fmt","","",258,null],[11,"description","","",258,null],[11,"cause","","",258,null],[11,"clone","libc::unix","",259,null],[11,"clone","","",260,null],[11,"clone","","",261,null],[11,"clone","","",262,null],[11,"clone","","",263,null],[11,"clone","","",264,null],[11,"clone","","",265,null],[11,"clone","","",266,null],[11,"clone","","",267,null],[11,"clone","","",268,null],[11,"clone","","",269,null],[11,"clone","","",270,null],[11,"clone","","",271,null],[11,"clone","libc::unix::notbsd","",272,null],[11,"clone","","",273,null],[11,"clone","","",274,null],[11,"clone","","",275,null],[11,"clone","","",276,null],[11,"clone","","",277,null],[11,"clone","","",278,null],[11,"clone","","",279,null],[11,"clone","","",280,null],[11,"clone","","",281,null],[11,"clone","","",282,null],[11,"clone","","",283,null],[11,"clone","","",284,null],[11,"clone","","",285,null],[11,"clone","","",286,null],[11,"clone","libc::unix::notbsd::linux","",287,null],[11,"clone","","",288,null],[11,"clone","","",289,null],[11,"clone","","",290,null],[11,"clone","","",291,null],[11,"clone","","",292,null],[11,"clone","","",293,null],[11,"clone","","",294,null],[11,"clone","","",295,null],[11,"clone","","",296,null],[11,"clone","","",297,null],[11,"clone","","",298,null],[11,"clone","","",299,null],[11,"clone","","",300,null],[11,"clone","","",301,null],[11,"clone","","",302,null],[11,"clone","libc::unix::notbsd::linux::other","",303,null],[11,"clone","","",304,null],[11,"clone","","",305,null],[11,"clone","","",306,null],[11,"clone","","",307,null],[11,"clone","","",308,null],[11,"clone","","",309,null],[11,"clone","","",310,null],[11,"clone","","",311,null],[11,"clone","","",312,null],[11,"clone","","",313,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",314,null],[11,"clone","","",315,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",316,null],[11,"clone","","",317,null],[11,"clone","","",318,null],[11,"clone","","",319,null],[11,"clone","","",320,null],[11,"clone","","",321,null],[11,"clone","","",322,null],[11,"clone","","",323,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",324,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",324,null],[11,"file","","Returns the name of the source file from which the panic originated.",325,null],[11,"line","","Returns the line number from which the panic originated.",325,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",326,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",326,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",326,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",326,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",326,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",326,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",326,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",326,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",326,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",326,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",326,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",326,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",326,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",326,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",326,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",326,null],[11,"hash","","",326,null],[11,"fmt","","",326,null],[11,"fmt","","",326,null],[11,"fmt","","",326,null],[11,"from","","",326,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",327,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",327,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",327,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",327,null],[11,"fmt","","",327,null],[11,"default","","",327,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",326,null],[11,"as_ref","","",326,null],[11,"borrow","collections::borrow","",145,null],[11,"clone","","",145,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",145,null],[11,"into_owned","","Extracts the owned data.",145,null],[11,"deref","","",145,null],[11,"cmp","","",145,null],[11,"eq","","",145,null],[11,"partial_cmp","","",145,null],[11,"fmt","","",145,null],[11,"fmt","","",145,null],[11,"hash","","",145,null],[11,"as_ref","","",145,null],[11,"hash","core::result","",328,null],[11,"fmt","","",328,null],[11,"cmp","","",328,null],[11,"partial_cmp","","",328,null],[11,"lt","","",328,null],[11,"le","","",328,null],[11,"gt","","",328,null],[11,"ge","","",328,null],[11,"eq","","",328,null],[11,"ne","","",328,null],[11,"clone","","",328,null],[11,"is_ok","","Returns true if the result is `Ok`",328,null],[11,"is_err","","Returns true if the result is `Err`",328,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",328,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",328,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",328,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",328,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",328,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",328,null],[11,"iter","","Returns an iterator over the possibly contained value.",328,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",328,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",328,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",328,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",328,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",328,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",328,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",328,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",328,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",328,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",328,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",328,null],[11,"fmt","","",329,null],[11,"next","","",329,null],[11,"size_hint","","",329,null],[11,"next_back","","",329,null],[11,"clone","","",329,null],[11,"fmt","","",330,null],[11,"next","","",330,null],[11,"size_hint","","",330,null],[11,"next_back","","",330,null],[11,"fmt","","",331,null],[11,"next","","",331,null],[11,"size_hint","","",331,null],[11,"next_back","","",331,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",328,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","sdl2","",332,null],[11,"fmt","","",332,null],[11,"is","","Returns true if the boxed type is the same as `T`",332,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",332,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",332,null],[11,"is","","Forwards to the method defined on the type `Any`.",332,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",332,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",332,null],[11,"hash","core::any","",333,null],[11,"fmt","","",333,null],[11,"eq","","",333,null],[11,"ne","","",333,null],[11,"clone","","",333,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",333,{"inputs":[],"output":{"name":"typeid"}}],[11,"fmt","core::iter::range","",334,null],[11,"clone","","",334,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",335,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",336,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",337,null],[11,"next","core::iter::range","",334,null],[11,"size_hint","","",334,null],[11,"next","","",334,null],[11,"size_hint","","",334,null],[11,"next","","",334,null],[11,"size_hint","","",334,null],[11,"next","core::ops","",336,null],[11,"size_hint","","",336,null],[11,"next_back","","",336,null],[11,"next","","",335,null],[11,"next","","",337,null],[11,"size_hint","","",337,null],[11,"next_back","","",337,null],[11,"fmt","core::iter::sources","",338,null],[11,"clone","","",338,null],[11,"next","","",338,null],[11,"size_hint","","",338,null],[11,"next_back","","",338,null],[11,"fmt","","",339,null],[11,"next","","",339,null],[11,"size_hint","","",339,null],[11,"next_back","","",339,null],[11,"len","","",339,null],[11,"clone","","",339,null],[11,"default","","",339,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",340,null],[11,"clone","","",340,null],[11,"next","","",340,null],[11,"size_hint","","",340,null],[11,"next_back","","",340,null],[11,"len","","",340,null],[11,"fmt","core::iter","",341,null],[11,"clone","","",341,null],[11,"next","","",341,null],[11,"size_hint","","",341,null],[11,"next_back","","",341,null],[11,"fmt","","",342,null],[11,"clone","","",342,null],[11,"next","","",342,null],[11,"size_hint","","",342,null],[11,"next_back","","",342,null],[11,"fmt","","",343,null],[11,"clone","","",343,null],[11,"next","","",343,null],[11,"size_hint","","",343,null],[11,"fmt","","",344,null],[11,"clone","","",344,null],[11,"next","","",344,null],[11,"count","","",344,null],[11,"nth","","",344,null],[11,"find","","",344,null],[11,"last","","",344,null],[11,"size_hint","","",344,null],[11,"next_back","","",344,null],[11,"fmt","","",345,null],[11,"clone","","",345,null],[11,"next","","",345,null],[11,"size_hint","","",345,null],[11,"next_back","","",345,null],[11,"clone","","",346,null],[11,"fmt","","",346,null],[11,"next","","",346,null],[11,"size_hint","","",346,null],[11,"next_back","","",346,null],[11,"clone","","",347,null],[11,"fmt","","",347,null],[11,"next","","",347,null],[11,"size_hint","","",347,null],[11,"next_back","","",347,null],[11,"clone","","",348,null],[11,"fmt","","",348,null],[11,"next","","",348,null],[11,"size_hint","","",348,null],[11,"next_back","","",348,null],[11,"fmt","","",349,null],[11,"clone","","",349,null],[11,"next","","# Overflow Behavior",349,null],[11,"size_hint","","",349,null],[11,"nth","","",349,null],[11,"count","","",349,null],[11,"next_back","","",349,null],[11,"fmt","","",350,null],[11,"clone","","",350,null],[11,"next","","",350,null],[11,"count","","",350,null],[11,"nth","","",350,null],[11,"last","","",350,null],[11,"size_hint","","",350,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",350,null],[11,"is_empty","","Checks if the iterator has finished iterating.",350,null],[11,"clone","","",351,null],[11,"fmt","","",351,null],[11,"next","","",351,null],[11,"size_hint","","",351,null],[11,"clone","","",352,null],[11,"fmt","","",352,null],[11,"next","","",352,null],[11,"size_hint","","",352,null],[11,"fmt","","",353,null],[11,"clone","","",353,null],[11,"next","","",353,null],[11,"nth","","",353,null],[11,"count","","",353,null],[11,"last","","",353,null],[11,"size_hint","","",353,null],[11,"next_back","","",353,null],[11,"fmt","","",354,null],[11,"clone","","",354,null],[11,"next","","",354,null],[11,"nth","","",354,null],[11,"size_hint","","",354,null],[11,"clone","","",355,null],[11,"fmt","","",355,null],[11,"next","","",355,null],[11,"size_hint","","",355,null],[11,"clone","","",356,null],[11,"fmt","","",356,null],[11,"next","","",356,null],[11,"size_hint","","",356,null],[11,"next_back","","",356,null],[11,"fmt","","",357,null],[11,"clone","","",357,null],[11,"next","","",357,null],[11,"nth","","",357,null],[11,"last","","",357,null],[11,"count","","",357,null],[11,"size_hint","","",357,null],[11,"next_back","","",357,null],[11,"clone","","",358,null],[11,"fmt","","",358,null],[11,"next","","",358,null],[11,"size_hint","","",358,null],[11,"next_back","","",358,null],[11,"borrow","collections::vec","",124,null],[11,"borrow_mut","","",124,null],[11,"fmt","core::hash::sip","",359,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",359,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",359,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",359,null],[11,"finish","","",359,null],[11,"clone","","",359,null],[11,"default","","",359,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",360,null],[11,"build_hasher","","",360,null],[11,"clone","","",360,null],[11,"default","","",360,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","collections::str","",361,null],[11,"next","","",361,null],[11,"size_hint","","",361,null],[11,"borrow","collections::string","",146,null],[11,"fmt","core::str::pattern","",362,null],[11,"eq","","",362,null],[11,"ne","","",362,null],[11,"clone","","",362,null],[11,"fmt","","",363,null],[11,"clone","","",363,null],[11,"haystack","","",363,null],[11,"next","","",363,null],[11,"next_match","","",363,null],[11,"next_reject","","",363,null],[11,"next_back","","",363,null],[11,"next_match_back","","",363,null],[11,"next_reject_back","","",363,null],[11,"fmt","","",364,null],[11,"clone","","",364,null],[11,"haystack","","",364,null],[11,"next","","",364,null],[11,"next_match","","",364,null],[11,"next_reject","","",364,null],[11,"next_back","","",364,null],[11,"next_match_back","","",364,null],[11,"next_reject_back","","",364,null],[11,"clone","","",365,null],[11,"fmt","","",365,null],[11,"haystack","","",365,null],[11,"next","","",365,null],[11,"next_match","","",365,null],[11,"next_reject","","",365,null],[11,"next_back","","",365,null],[11,"next_match_back","","",365,null],[11,"next_reject_back","","",365,null],[11,"fmt","","",366,null],[11,"clone","","",366,null],[11,"haystack","","",366,null],[11,"next","","",366,null],[11,"next_match","","",366,null],[11,"next_back","","",366,null],[11,"next_match_back","","",366,null],[11,"hash","core::marker","",367,null],[11,"eq","","",367,null],[11,"partial_cmp","","",367,null],[11,"cmp","","",367,null],[11,"clone","","",367,null],[11,"default","","",367,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",368,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",368,null],[11,"set","","Sets the contained value.",368,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",368,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",368,null],[11,"clone","","",368,null],[11,"default","","",368,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",368,null],[11,"partial_cmp","","",368,null],[11,"lt","","",368,null],[11,"le","","",368,null],[11,"gt","","",368,null],[11,"ge","","",368,null],[11,"cmp","","",368,null],[11,"fmt","","",369,null],[11,"eq","","",369,null],[11,"clone","","",369,null],[11,"new","","Creates a new `RefCell` containing `value`.",370,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",370,null],[11,"borrow_state","","Query the current state of this `RefCell`",370,null],[11,"borrow","","Immutably borrows the wrapped value.",370,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",370,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",370,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",370,null],[11,"clone","","",370,null],[11,"default","","",370,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",370,null],[11,"partial_cmp","","",370,null],[11,"lt","","",370,null],[11,"le","","",370,null],[11,"gt","","",370,null],[11,"ge","","",370,null],[11,"cmp","","",370,null],[11,"deref","","",371,null],[11,"clone","","Copies a `Ref`.",371,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",371,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",372,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",372,null],[11,"deref_mut","","",372,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",373,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",373,null],[11,"get","","Gets a mutable pointer to the wrapped value.",373,null],[11,"default","","",373,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"eq","core::ops","",374,null],[11,"clone","","",374,null],[11,"fmt","","",374,null],[11,"eq","","",336,null],[11,"ne","","",336,null],[11,"clone","","",336,null],[11,"fmt","","",336,null],[11,"contains","","# Examples",336,null],[11,"eq","","",335,null],[11,"ne","","",335,null],[11,"clone","","",335,null],[11,"fmt","","",335,null],[11,"contains","","# Examples",335,null],[11,"eq","","",375,null],[11,"ne","","",375,null],[11,"clone","","",375,null],[11,"fmt","","",375,null],[11,"contains","","# Examples",375,null],[11,"eq","","",337,null],[11,"ne","","",337,null],[11,"clone","","",337,null],[11,"fmt","","",337,null],[11,"from","","",337,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",337,null],[11,"eq","","",376,null],[11,"ne","","",376,null],[11,"clone","","",376,null],[11,"fmt","","",376,null],[11,"contains","","# Examples",376,null],[11,"hash","core::option","",377,null],[11,"fmt","","",377,null],[11,"cmp","","",377,null],[11,"partial_cmp","","",377,null],[11,"lt","","",377,null],[11,"le","","",377,null],[11,"gt","","",377,null],[11,"ge","","",377,null],[11,"eq","","",377,null],[11,"ne","","",377,null],[11,"clone","","",377,null],[11,"is_some","","Returns `true` if the option is a `Some` value",377,null],[11,"is_none","","Returns `true` if the option is a `None` value",377,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",377,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",377,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",377,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",377,null],[11,"unwrap_or","","Returns the contained value or a default.",377,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",377,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",377,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",377,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",377,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",377,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",377,null],[11,"iter","","Returns an iterator over the possibly contained value.",377,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",377,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",377,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",377,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",377,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",377,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",377,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",377,null],[11,"unwrap_or_default","","Returns the contained value or a default",377,null],[11,"default","","",377,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",377,null],[11,"fmt","","",378,null],[11,"next","","",378,null],[11,"size_hint","","",378,null],[11,"next_back","","",378,null],[11,"clone","","",378,null],[11,"fmt","","",379,null],[11,"next","","",379,null],[11,"size_hint","","",379,null],[11,"next_back","","",379,null],[11,"fmt","","",380,null],[11,"clone","","",380,null],[11,"next","","",380,null],[11,"size_hint","","",380,null],[11,"next_back","","",380,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",377,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",146,null],[11,"partial_cmp","","",146,null],[11,"lt","","",146,null],[11,"le","","",146,null],[11,"gt","","",146,null],[11,"ge","","",146,null],[11,"fmt","","",80,null],[11,"fmt","","",81,null],[11,"new","","Creates a new empty `String`.",146,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",146,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",146,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",146,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",146,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",146,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",146,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",146,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",146,null],[11,"as_str","","Extracts a string slice containing the entire string.",146,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",146,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",146,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",146,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",146,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",146,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",146,null],[11,"push","","Appends the given `char` to the end of this `String`.",146,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",146,null],[11,"truncate","","Shortens this `String` to the specified length.",146,null],[11,"pop","","Removes the last character from the string buffer and returns it.",146,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",146,null],[11,"insert","","Inserts a character into this `String` at a byte position.",146,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",146,null],[11,"len","","Returns the length of this `String`, in bytes.",146,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",146,null],[11,"clear","","Truncates this `String`, removing all contents.",146,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",146,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",146,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",80,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",80,null],[11,"fmt","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",146,null],[11,"clone_from","","",146,null],[11,"from_iter","","",146,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",146,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",146,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",146,null],[11,"extend","","",146,null],[11,"extend","","",146,null],[11,"extend","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"eq","collections::borrow","",145,null],[11,"ne","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"eq","collections::string","",146,null],[11,"ne","","",146,null],[11,"default","","",146,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",146,null],[11,"fmt","","",146,null],[11,"hash","","",146,null],[11,"add","","",146,null],[11,"index","","",146,null],[11,"index","","",146,null],[11,"index","","",146,null],[11,"index","","",146,null],[11,"index","","",146,null],[11,"index","","",146,null],[11,"index_mut","","",146,null],[11,"index_mut","","",146,null],[11,"index_mut","","",146,null],[11,"index_mut","","",146,null],[11,"index_mut","","",146,null],[11,"index_mut","","",146,null],[11,"deref","","",146,null],[11,"deref_mut","","",146,null],[11,"from_str","","",146,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",82,null],[11,"fmt","","",82,null],[11,"fmt","","",82,null],[11,"eq","","",82,null],[11,"as_ref","","",146,null],[11,"as_ref","","",146,null],[11,"from","","",146,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",145,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",145,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",146,null],[11,"write_str","","",146,null],[11,"write_char","","",146,null],[11,"drop","","",381,null],[11,"next","","",381,null],[11,"size_hint","","",381,null],[11,"next_back","","",381,null],[11,"new","core::ptr","Creates a new `Unique`.",382,null],[11,"get","","Dereferences the content.",382,null],[11,"get_mut","","Mutably dereferences the content.",382,null],[11,"deref","","",382,null],[11,"fmt","","",382,null],[11,"new","","Creates a new `Shared`.",383,null],[11,"clone","","",383,null],[11,"deref","","",383,null],[11,"fmt","","",383,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",124,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",124,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",124,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",124,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",124,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",124,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",124,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",124,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",124,null],[11,"as_slice","","Extracts a slice containing the entire vector.",124,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",124,null],[11,"set_len","","Sets the length of a vector.",124,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",124,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",124,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",124,null],[11,"retain","","Retains only the elements specified by the predicate.",124,null],[11,"push","","Appends an element to the back of a collection.",124,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",124,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",124,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",124,null],[11,"clear","","Clears the vector, removing all values.",124,null],[11,"len","","Returns the number of elements in the vector.",124,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",124,null],[11,"split_off","","Splits the collection into two at the given index.",124,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",124,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",124,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",124,null],[11,"clone","","",124,null],[11,"clone_from","","",124,null],[11,"hash","","",124,null],[11,"index","","",124,null],[11,"index_mut","","",124,null],[11,"index","","",124,null],[11,"index","","",124,null],[11,"index","","",124,null],[11,"index","","",124,null],[11,"index","","",124,null],[11,"index","","",124,null],[11,"index_mut","","",124,null],[11,"index_mut","","",124,null],[11,"index_mut","","",124,null],[11,"index_mut","","",124,null],[11,"index_mut","","",124,null],[11,"index_mut","","",124,null],[11,"deref","","",124,null],[11,"deref_mut","","",124,null],[11,"from_iter","","",124,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",124,null],[11,"extend","","",124,null],[11,"extend","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","collections::borrow","",145,null],[11,"ne","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"eq","collections::vec","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"partial_cmp","","",124,null],[11,"cmp","","",124,null],[11,"drop","","",124,null],[11,"default","","",124,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",124,null],[11,"as_ref","","",124,null],[11,"as_mut","","",124,null],[11,"as_ref","","",124,null],[11,"as_mut","","",124,null],[11,"from","","",124,null],[11,"from","","",124,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",145,null],[11,"from","","",145,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",145,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",384,null],[11,"size_hint","","",384,null],[11,"count","","",384,null],[11,"next_back","","",384,null],[11,"clone","","",384,null],[11,"drop","","",384,null],[11,"next","","",385,null],[11,"size_hint","","",385,null],[11,"next_back","","",385,null],[11,"drop","","",385,null],[11,"clone","core::raw","",386,null],[11,"hash","core::cmp","",387,null],[11,"fmt","","",387,null],[11,"eq","","",387,null],[11,"clone","","",387,null],[11,"reverse","","Reverse the `Ordering`.",387,null],[11,"cmp","","",387,null],[11,"partial_cmp","","",387,null],[11,"next","rustc_unicode::char","",388,null],[11,"next","","",389,null],[11,"clone","","",390,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"next","","",390,null],[11,"size_hint","","",390,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",83,null],[11,"fmt","","",83,null],[11,"clone","alloc::boxed","",391,null],[11,"pointer","","",392,null],[11,"make_place","","",392,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",392,null],[11,"finalize","","",74,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",391,null],[11,"drop","","",392,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",74,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",74,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",74,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",74,null],[11,"clone","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"partial_cmp","","",74,null],[11,"lt","","",74,null],[11,"le","","",74,null],[11,"ge","","",74,null],[11,"gt","","",74,null],[11,"cmp","","",74,null],[11,"hash","","",74,null],[11,"from","","",74,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",74,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",74,null],[11,"fmt","","",74,null],[11,"fmt","","",74,null],[11,"fmt","","",74,null],[11,"deref","","",74,null],[11,"deref_mut","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"call_once","","",74,null],[11,"call_once","","",74,null],[11,"clone","","",74,null],[11,"borrow","","",74,null],[11,"borrow_mut","","",74,null],[11,"as_ref","","",74,null],[11,"as_mut","","",74,null],[11,"flush_event","sdl2","Removes all events in the event queue that match the specified event type.",393,null],[11,"flush_events","","Removes all events in the event queue that match the specified type range.",393,null],[11,"peek_events","","Reads the events at the front of the event queue, until the maximum amount\nof events is read.",393,null],[11,"push_event","","Pushes an event to the event queue.",393,null],[11,"register_event","","Register a custom SDL event.",393,null],[11,"register_events","","Registers custom SDL events.",393,null],[11,"register_custom_event","","Register a custom event",393,null],[11,"push_custom_event","","Push a custom event",393,null],[11,"fmt","sdl2::event","",70,null],[11,"hash","","",70,null],[11,"eq","","",70,null],[11,"clone","","",70,null],[11,"from_i64","","",70,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",70,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",71,null],[11,"hash","","",71,null],[11,"eq","","",71,null],[11,"clone","","",71,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",72,null],[11,"is_user_event","","",72,null],[11,"as_user_event_type","","",72,null],[11,"is_event_enabled","sdl2","Query if an event type is enabled.",394,null],[11,"enable_event","","Enable an event type. Returns if the event type was enabled before the call.",394,null],[11,"disable_event","","Disable an event type. Returns if the event type was enabled before the call.",394,null],[11,"poll_event","","Polls for currently pending events.",394,null],[11,"poll_iter","","Returns a polling iterator that calls `poll_event()`.\nThe iterator will terminate once there are no more pending events.",394,null],[11,"pump_events","","Pumps the event loop, gathering events from the input devices.",394,null],[11,"wait_event","","Waits indefinitely for the next available event.",394,null],[11,"wait_event_timeout","","Waits until the specified timeout (in milliseconds) for the next available event.",394,null],[11,"wait_iter","","Returns a waiting iterator that calls `wait_event()`.",394,null],[11,"wait_timeout_iter","","Returns a waiting iterator that calls `wait_event_timeout()`.",394,null],[11,"keyboard_state","","",394,null],[11,"next","sdl2::event","",395,null],[11,"next","","",396,null],[11,"next","","",397,null],[0,"filesystem","sdl2","",null,null],[4,"PrefPathError","sdl2::filesystem","",null,null],[13,"InvalidOrganizationName","","",398,null],[13,"InvalidApplicationName","","",398,null],[13,"SdlError","","",398,null],[5,"base_path","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"pref_path","","Return the preferred directory for the application to write files on this\nsystem, based on the given organization and application name.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"gesture","sdl2","",null,null],[0,"touch","","",null,null],[5,"num_touch_devices","sdl2::touch","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"touch_device","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"touchdevice"}}],[5,"num_touch_fingers","","",null,{"inputs":[{"name":"touchdevice"}],"output":{"name":"i32"}}],[5,"touch_finger","","",null,{"inputs":[{"name":"touchdevice"},{"name":"i32"}],"output":{"name":"option"}}],[6,"Finger","","",null,null],[6,"TouchDevice","","",null,null],[0,"joystick","sdl2","",null,null],[3,"Joystick","sdl2::joystick","Wrapper around the SDL_Joystick object",null,null],[3,"Guid","","Wrapper around a SDL_JoystickGUID, a globally unique identifier\nfor a joystick.",null,null],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all\ncombinations make sense: 5 for instance would mean up and down at\nthe same time... To simplify things I turn it into an enum which\nis how the SDL2 docs present it anyway (using macros).",null,null],[13,"Centered","","",399,null],[13,"Up","","",399,null],[13,"Right","","",399,null],[13,"Down","","",399,null],[13,"Left","","",399,null],[13,"RightUp","","",399,null],[13,"RightDown","","",399,null],[13,"LeftUp","","",399,null],[13,"Leftdown","","",399,null],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",400,null],[11,"open","","Attempt to open the joystick at number `id` and return it.",400,null],[11,"name_for_index","","Return the name of the joystick at index `id`",400,null],[11,"device_guid","","Get the GUID for the joystick number `id`",400,null],[11,"set_event_state","","If state is `true` joystick events are processed, otherwise\nthey&#39;re ignored.",400,null],[11,"event_state","","Return `true` if joystick events are processed.",400,null],[11,"update","","Force joystick update when not using the event loop",400,null],[11,"subsystem","sdl2::joystick","",401,null],[11,"name","","Return the name of the joystick or an empty string if no name\nis found.",401,null],[11,"attached","","Return true if the joystick has been opened and currently\nconnected.",401,null],[11,"instance_id","","",401,null],[11,"guid","","Retreive the joystick&#39;s GUID",401,null],[11,"num_axes","","Retreive the number of axes for this joystick",401,null],[11,"axis","","Gets the position of the given `axis`.",401,null],[11,"num_buttons","","Retreive the number of buttons for this joystick",401,null],[11,"button","","Return `Ok(true)` if `button` is pressed.",401,null],[11,"num_balls","","Retreive the number of balls for this joystick",401,null],[11,"ball","","Return a pair `(dx, dy)` containing the difference in axis\nposition since the last poll",401,null],[11,"num_hats","","Retreive the number of balls for this joystick",401,null],[11,"hat","","Return the position of `hat` for this joystick",401,null],[11,"drop","","",401,null],[11,"hash","","",402,null],[11,"eq","","",402,null],[11,"ne","","",402,null],[11,"clone","","",402,null],[11,"from_string","","Create a GUID from a string representation.",402,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_zero","","Return `true` if GUID is full 0s",402,null],[11,"string","","Return a String representation of GUID",402,null],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",402,null],[11,"fmt","","",402,null],[11,"fmt","","",399,null],[11,"hash","","",399,null],[11,"eq","","",399,null],[11,"clone","","",399,null],[11,"from_raw","","",399,{"inputs":[{"name":"u8"}],"output":{"name":"hatstate"}}],[0,"controller","sdl2","",null,null],[3,"GameController","sdl2::controller","Wrapper around the SDL_GameController object",null,null],[4,"AddMappingError","","",null,null],[13,"InvalidMapping","","",403,null],[13,"SdlError","","",403,null],[4,"Axis","","",null,null],[13,"LeftX","","",404,null],[13,"LeftY","","",404,null],[13,"RightX","","",404,null],[13,"RightY","","",404,null],[13,"TriggerLeft","","",404,null],[13,"TriggerRight","","",404,null],[4,"Button","","",null,null],[13,"A","","",405,null],[13,"B","","",405,null],[13,"X","","",405,null],[13,"Y","","",405,null],[13,"Back","","",405,null],[13,"Guide","","",405,null],[13,"Start","","",405,null],[13,"LeftStick","","",405,null],[13,"RightStick","","",405,null],[13,"LeftShoulder","","",405,null],[13,"RightShoulder","","",405,null],[13,"DPadUp","","",405,null],[13,"DPadDown","","",405,null],[13,"DPadLeft","","",405,null],[13,"DPadRight","","",405,null],[4,"MappingStatus","","Possible return values for `add_mapping`",null,null],[13,"Added","","",406,null],[13,"Updated","","",406,null],[11,"fmt","","",403,null],[11,"num_joysticks","sdl2","Retreive the total number of attached joysticks *and* controllers identified by SDL.",407,null],[11,"is_game_controller","","Return true if the joystick at index `id` is a game controller.",407,null],[11,"open","","Attempt to open the controller number `id` and return\nit. Controller IDs are the same as joystick IDs and the\nmaximum number can be retreived using the `SDL_NumJoysticks`\nfunction.",407,null],[11,"name_for_index","","Return the name of the controller at the given index.",407,null],[11,"set_event_state","","If state is `true` controller events are processed, otherwise\nthey&#39;re ignored.",407,null],[11,"event_state","","Return `true` if controller events are processed.",407,null],[11,"add_mapping","","Add a new mapping from a mapping string",407,null],[11,"mapping_for_guid","","",407,null],[11,"update","","Force controller update when not using the event loop",407,null],[11,"fmt","sdl2::controller","",404,null],[11,"hash","","",404,null],[11,"eq","","",404,null],[11,"clone","","",404,null],[11,"from_string","","Return the Axis from a string description in the same format\nused by the game controller mapping strings.",404,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given axis in the same format using by\nthe game controller mapping strings",404,null],[11,"from_ll","","",404,{"inputs":[{"name":"sdl_gamecontrolleraxis"}],"output":{"name":"option"}}],[11,"fmt","","",405,null],[11,"hash","","",405,null],[11,"eq","","",405,null],[11,"clone","","",405,null],[11,"from_string","","Return the Button from a string description in the same format\nused by the game controller mapping strings.",405,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"string","","Return a string for a given button in the same format using by\nthe game controller mapping strings",405,null],[11,"from_ll","","",405,{"inputs":[{"name":"sdl_gamecontrollerbutton"}],"output":{"name":"option"}}],[11,"fmt","","",406,null],[11,"hash","","",406,null],[11,"eq","","",406,null],[11,"clone","","",406,null],[11,"subsystem","","",408,null],[11,"name","","Return the name of the controller or an empty string if no\nname is found.",408,null],[11,"mapping","","Return a String describing the controller&#39;s button and axis\nmappings",408,null],[11,"attached","","Return true if the controller has been opened and currently\nconnected.",408,null],[11,"axis","","Get the position of the given `axis`",408,null],[11,"button","","Returns `true` if `button` is pressed.",408,null],[11,"drop","","",408,null],[0,"haptic","sdl2","Haptic Functions",null,null],[0,"keyboard","","",null,null],[3,"Mod","sdl2::keyboard","",null,null],[3,"KeyboardState","","",null,null],[3,"ScancodeIterator","","",null,null],[3,"PressedScancodeIterator","","",null,null],[3,"KeyboardUtil","","Keyboard utility functions. Access with `Sdl::keyboard()`.",null,null],[3,"TextInputUtil","","Text input utility functions. Access with `VideoSubsystem::text_input()`.",null,null],[4,"Keycode","","",null,null],[13,"Backspace","","",409,null],[13,"Tab","","",409,null],[13,"Return","","",409,null],[13,"Escape","","",409,null],[13,"Space","","",409,null],[13,"Exclaim","","",409,null],[13,"Quotedbl","","",409,null],[13,"Hash","","",409,null],[13,"Dollar","","",409,null],[13,"Percent","","",409,null],[13,"Ampersand","","",409,null],[13,"Quote","","",409,null],[13,"LeftParen","","",409,null],[13,"RightParen","","",409,null],[13,"Asterisk","","",409,null],[13,"Plus","","",409,null],[13,"Comma","","",409,null],[13,"Minus","","",409,null],[13,"Period","","",409,null],[13,"Slash","","",409,null],[13,"Num0","","",409,null],[13,"Num1","","",409,null],[13,"Num2","","",409,null],[13,"Num3","","",409,null],[13,"Num4","","",409,null],[13,"Num5","","",409,null],[13,"Num6","","",409,null],[13,"Num7","","",409,null],[13,"Num8","","",409,null],[13,"Num9","","",409,null],[13,"Colon","","",409,null],[13,"Semicolon","","",409,null],[13,"Less","","",409,null],[13,"Equals","","",409,null],[13,"Greater","","",409,null],[13,"Question","","",409,null],[13,"At","","",409,null],[13,"LeftBracket","","",409,null],[13,"Backslash","","",409,null],[13,"RightBracket","","",409,null],[13,"Caret","","",409,null],[13,"Underscore","","",409,null],[13,"Backquote","","",409,null],[13,"A","","",409,null],[13,"B","","",409,null],[13,"C","","",409,null],[13,"D","","",409,null],[13,"E","","",409,null],[13,"F","","",409,null],[13,"G","","",409,null],[13,"H","","",409,null],[13,"I","","",409,null],[13,"J","","",409,null],[13,"K","","",409,null],[13,"L","","",409,null],[13,"M","","",409,null],[13,"N","","",409,null],[13,"O","","",409,null],[13,"P","","",409,null],[13,"Q","","",409,null],[13,"R","","",409,null],[13,"S","","",409,null],[13,"T","","",409,null],[13,"U","","",409,null],[13,"V","","",409,null],[13,"W","","",409,null],[13,"X","","",409,null],[13,"Y","","",409,null],[13,"Z","","",409,null],[13,"Delete","","",409,null],[13,"CapsLock","","",409,null],[13,"F1","","",409,null],[13,"F2","","",409,null],[13,"F3","","",409,null],[13,"F4","","",409,null],[13,"F5","","",409,null],[13,"F6","","",409,null],[13,"F7","","",409,null],[13,"F8","","",409,null],[13,"F9","","",409,null],[13,"F10","","",409,null],[13,"F11","","",409,null],[13,"F12","","",409,null],[13,"PrintScreen","","",409,null],[13,"ScrollLock","","",409,null],[13,"Pause","","",409,null],[13,"Insert","","",409,null],[13,"Home","","",409,null],[13,"PageUp","","",409,null],[13,"End","","",409,null],[13,"PageDown","","",409,null],[13,"Right","","",409,null],[13,"Left","","",409,null],[13,"Down","","",409,null],[13,"Up","","",409,null],[13,"NumLockClear","","",409,null],[13,"KpDivide","","",409,null],[13,"KpMultiply","","",409,null],[13,"KpMinus","","",409,null],[13,"KpPlus","","",409,null],[13,"KpEnter","","",409,null],[13,"Kp1","","",409,null],[13,"Kp2","","",409,null],[13,"Kp3","","",409,null],[13,"Kp4","","",409,null],[13,"Kp5","","",409,null],[13,"Kp6","","",409,null],[13,"Kp7","","",409,null],[13,"Kp8","","",409,null],[13,"Kp9","","",409,null],[13,"Kp0","","",409,null],[13,"KpPeriod","","",409,null],[13,"Application","","",409,null],[13,"Power","","",409,null],[13,"KpEquals","","",409,null],[13,"F13","","",409,null],[13,"F14","","",409,null],[13,"F15","","",409,null],[13,"F16","","",409,null],[13,"F17","","",409,null],[13,"F18","","",409,null],[13,"F19","","",409,null],[13,"F20","","",409,null],[13,"F21","","",409,null],[13,"F22","","",409,null],[13,"F23","","",409,null],[13,"F24","","",409,null],[13,"Execute","","",409,null],[13,"Help","","",409,null],[13,"Menu","","",409,null],[13,"Select","","",409,null],[13,"Stop","","",409,null],[13,"Again","","",409,null],[13,"Undo","","",409,null],[13,"Cut","","",409,null],[13,"Copy","","",409,null],[13,"Paste","","",409,null],[13,"Find","","",409,null],[13,"Mute","","",409,null],[13,"VolumeUp","","",409,null],[13,"VolumeDown","","",409,null],[13,"KpComma","","",409,null],[13,"KpEqualsAS400","","",409,null],[13,"AltErase","","",409,null],[13,"Sysreq","","",409,null],[13,"Cancel","","",409,null],[13,"Clear","","",409,null],[13,"Prior","","",409,null],[13,"Return2","","",409,null],[13,"Separator","","",409,null],[13,"Out","","",409,null],[13,"Oper","","",409,null],[13,"ClearAgain","","",409,null],[13,"CrSel","","",409,null],[13,"ExSel","","",409,null],[13,"Kp00","","",409,null],[13,"Kp000","","",409,null],[13,"ThousandsSeparator","","",409,null],[13,"DecimalSeparator","","",409,null],[13,"CurrencyUnit","","",409,null],[13,"CurrencySubUnit","","",409,null],[13,"KpLeftParen","","",409,null],[13,"KpRightParen","","",409,null],[13,"KpLeftBrace","","",409,null],[13,"KpRightBrace","","",409,null],[13,"KpTab","","",409,null],[13,"KpBackspace","","",409,null],[13,"KpA","","",409,null],[13,"KpB","","",409,null],[13,"KpC","","",409,null],[13,"KpD","","",409,null],[13,"KpE","","",409,null],[13,"KpF","","",409,null],[13,"KpXor","","",409,null],[13,"KpPower","","",409,null],[13,"KpPercent","","",409,null],[13,"KpLess","","",409,null],[13,"KpGreater","","",409,null],[13,"KpAmpersand","","",409,null],[13,"KpDblAmpersand","","",409,null],[13,"KpVerticalBar","","",409,null],[13,"KpDblVerticalBar","","",409,null],[13,"KpColon","","",409,null],[13,"KpHash","","",409,null],[13,"KpSpace","","",409,null],[13,"KpAt","","",409,null],[13,"KpExclam","","",409,null],[13,"KpMemStore","","",409,null],[13,"KpMemRecall","","",409,null],[13,"KpMemClear","","",409,null],[13,"KpMemAdd","","",409,null],[13,"KpMemSubtract","","",409,null],[13,"KpMemMultiply","","",409,null],[13,"KpMemDivide","","",409,null],[13,"KpPlusMinus","","",409,null],[13,"KpCear","","",409,null],[13,"KpClearEntry","","",409,null],[13,"KpBinary","","",409,null],[13,"KpOctal","","",409,null],[13,"KpDecimal","","",409,null],[13,"KpHexadecimal","","",409,null],[13,"LCtrl","","",409,null],[13,"LShift","","",409,null],[13,"LAlt","","",409,null],[13,"LGui","","",409,null],[13,"RCtrl","","",409,null],[13,"RShift","","",409,null],[13,"RAlt","","",409,null],[13,"RGui","","",409,null],[13,"Mode","","",409,null],[13,"AudioNext","","",409,null],[13,"AudioPrev","","",409,null],[13,"AudioStop","","",409,null],[13,"AudioPlay","","",409,null],[13,"AudioMute","","",409,null],[13,"MediaSelect","","",409,null],[13,"Www","","",409,null],[13,"Mail","","",409,null],[13,"Calculator","","",409,null],[13,"Computer","","",409,null],[13,"AcSearch","","",409,null],[13,"AcHome","","",409,null],[13,"AcBack","","",409,null],[13,"AcForward","","",409,null],[13,"AcStop","","",409,null],[13,"AcRefresh","","",409,null],[13,"AcBookmarks","","",409,null],[13,"BrightnessDown","","",409,null],[13,"BrightnessUp","","",409,null],[13,"DisplaySwitch","","",409,null],[13,"KbdIllumToggle","","",409,null],[13,"KbdIllumDown","","",409,null],[13,"KbdIllumUp","","",409,null],[13,"Eject","","",409,null],[13,"Sleep","","",409,null],[4,"Scancode","","",null,null],[13,"A","","",410,null],[13,"B","","",410,null],[13,"C","","",410,null],[13,"D","","",410,null],[13,"E","","",410,null],[13,"F","","",410,null],[13,"G","","",410,null],[13,"H","","",410,null],[13,"I","","",410,null],[13,"J","","",410,null],[13,"K","","",410,null],[13,"L","","",410,null],[13,"M","","",410,null],[13,"N","","",410,null],[13,"O","","",410,null],[13,"P","","",410,null],[13,"Q","","",410,null],[13,"R","","",410,null],[13,"S","","",410,null],[13,"T","","",410,null],[13,"U","","",410,null],[13,"V","","",410,null],[13,"W","","",410,null],[13,"X","","",410,null],[13,"Y","","",410,null],[13,"Z","","",410,null],[13,"Num1","","",410,null],[13,"Num2","","",410,null],[13,"Num3","","",410,null],[13,"Num4","","",410,null],[13,"Num5","","",410,null],[13,"Num6","","",410,null],[13,"Num7","","",410,null],[13,"Num8","","",410,null],[13,"Num9","","",410,null],[13,"Num0","","",410,null],[13,"Return","","",410,null],[13,"Escape","","",410,null],[13,"Backspace","","",410,null],[13,"Tab","","",410,null],[13,"Space","","",410,null],[13,"Minus","","",410,null],[13,"Equals","","",410,null],[13,"LeftBracket","","",410,null],[13,"RightBracket","","",410,null],[13,"Backslash","","",410,null],[13,"NonUsHash","","",410,null],[13,"Semicolon","","",410,null],[13,"Apostrophe","","",410,null],[13,"Grave","","",410,null],[13,"Comma","","",410,null],[13,"Period","","",410,null],[13,"Slash","","",410,null],[13,"CapsLock","","",410,null],[13,"F1","","",410,null],[13,"F2","","",410,null],[13,"F3","","",410,null],[13,"F4","","",410,null],[13,"F5","","",410,null],[13,"F6","","",410,null],[13,"F7","","",410,null],[13,"F8","","",410,null],[13,"F9","","",410,null],[13,"F10","","",410,null],[13,"F11","","",410,null],[13,"F12","","",410,null],[13,"PrintScreen","","",410,null],[13,"ScrollLock","","",410,null],[13,"Pause","","",410,null],[13,"Insert","","",410,null],[13,"Home","","",410,null],[13,"PageUp","","",410,null],[13,"Delete","","",410,null],[13,"End","","",410,null],[13,"PageDown","","",410,null],[13,"Right","","",410,null],[13,"Left","","",410,null],[13,"Down","","",410,null],[13,"Up","","",410,null],[13,"NumLockClear","","",410,null],[13,"KpDivide","","",410,null],[13,"KpMultiply","","",410,null],[13,"KpMinus","","",410,null],[13,"KpPlus","","",410,null],[13,"KpEnter","","",410,null],[13,"Kp1","","",410,null],[13,"Kp2","","",410,null],[13,"Kp3","","",410,null],[13,"Kp4","","",410,null],[13,"Kp5","","",410,null],[13,"Kp6","","",410,null],[13,"Kp7","","",410,null],[13,"Kp8","","",410,null],[13,"Kp9","","",410,null],[13,"Kp0","","",410,null],[13,"KpPeriod","","",410,null],[13,"NonUsBackslash","","",410,null],[13,"Application","","",410,null],[13,"Power","","",410,null],[13,"KpEquals","","",410,null],[13,"F13","","",410,null],[13,"F14","","",410,null],[13,"F15","","",410,null],[13,"F16","","",410,null],[13,"F17","","",410,null],[13,"F18","","",410,null],[13,"F19","","",410,null],[13,"F20","","",410,null],[13,"F21","","",410,null],[13,"F22","","",410,null],[13,"F23","","",410,null],[13,"F24","","",410,null],[13,"Execute","","",410,null],[13,"Help","","",410,null],[13,"Menu","","",410,null],[13,"Select","","",410,null],[13,"Stop","","",410,null],[13,"Again","","",410,null],[13,"Undo","","",410,null],[13,"Cut","","",410,null],[13,"Copy","","",410,null],[13,"Paste","","",410,null],[13,"Find","","",410,null],[13,"Mute","","",410,null],[13,"VolumeUp","","",410,null],[13,"VolumeDown","","",410,null],[13,"KpComma","","",410,null],[13,"KpEqualsAS400","","",410,null],[13,"International1","","",410,null],[13,"International2","","",410,null],[13,"International3","","",410,null],[13,"International4","","",410,null],[13,"International5","","",410,null],[13,"International6","","",410,null],[13,"International7","","",410,null],[13,"International8","","",410,null],[13,"International9","","",410,null],[13,"Lang1","","",410,null],[13,"Lang2","","",410,null],[13,"Lang3","","",410,null],[13,"Lang4","","",410,null],[13,"Lang5","","",410,null],[13,"Lang6","","",410,null],[13,"Lang7","","",410,null],[13,"Lang8","","",410,null],[13,"Lang9","","",410,null],[13,"AltErase","","",410,null],[13,"SysReq","","",410,null],[13,"Cancel","","",410,null],[13,"Clear","","",410,null],[13,"Prior","","",410,null],[13,"Return2","","",410,null],[13,"Separator","","",410,null],[13,"Out","","",410,null],[13,"Oper","","",410,null],[13,"ClearAgain","","",410,null],[13,"Crse","","",410,null],[13,"ExseL","","",410,null],[13,"Kp00","","",410,null],[13,"Kp000","","",410,null],[13,"ThousandsSeparator","","",410,null],[13,"DecimalSeparator","","",410,null],[13,"CurrencyUnit","","",410,null],[13,"CurrencySubUnit","","",410,null],[13,"KpLeftParen","","",410,null],[13,"KpRightParen","","",410,null],[13,"KpLeftBrace","","",410,null],[13,"KpRightBrace","","",410,null],[13,"KpTab","","",410,null],[13,"KpBackspace","","",410,null],[13,"KpA","","",410,null],[13,"KpB","","",410,null],[13,"KpC","","",410,null],[13,"KpD","","",410,null],[13,"KpE","","",410,null],[13,"KpF","","",410,null],[13,"KpXor","","",410,null],[13,"KpPower","","",410,null],[13,"KpPercent","","",410,null],[13,"KpLess","","",410,null],[13,"KpGreater","","",410,null],[13,"KpAmpersand","","",410,null],[13,"KpDblAmpersand","","",410,null],[13,"KpVerticalBar","","",410,null],[13,"KpDblVerticalBar","","",410,null],[13,"KpColon","","",410,null],[13,"KpHash","","",410,null],[13,"KpSpace","","",410,null],[13,"KpAt","","",410,null],[13,"KpExclam","","",410,null],[13,"KpMemStore","","",410,null],[13,"KpMemRecall","","",410,null],[13,"KpMemClear","","",410,null],[13,"KpMemAdd","","",410,null],[13,"KpMemSubtract","","",410,null],[13,"KpMemMultiply","","",410,null],[13,"KpMemDivide","","",410,null],[13,"KpPlusMinus","","",410,null],[13,"KpClear","","",410,null],[13,"KpClearEntry","","",410,null],[13,"KpBinary","","",410,null],[13,"KpOoctal","","",410,null],[13,"KpDecimal","","",410,null],[13,"KpHexadecimal","","",410,null],[13,"LCtrl","","",410,null],[13,"LShift","","",410,null],[13,"LAlt","","",410,null],[13,"LGui","","",410,null],[13,"RCtrl","","",410,null],[13,"RShift","","",410,null],[13,"RAlt","","",410,null],[13,"RGui","","",410,null],[13,"Mode","","",410,null],[13,"AudioNext","","",410,null],[13,"AudioPrev","","",410,null],[13,"AudioStop","","",410,null],[13,"AudioPlay","","",410,null],[13,"AudioMute","","",410,null],[13,"MediaSelect","","",410,null],[13,"Www","","",410,null],[13,"Mail","","",410,null],[13,"Calculator","","",410,null],[13,"Computer","","",410,null],[13,"AcSearch","","",410,null],[13,"AcHome","","",410,null],[13,"AcBack","","",410,null],[13,"AcForward","","",410,null],[13,"AcStop","","",410,null],[13,"AcRefresh","","",410,null],[13,"AcBookmarks","","",410,null],[13,"BrightnessDown","","",410,null],[13,"BrightnessUp","","",410,null],[13,"DisplaySwitch","","",410,null],[13,"KbdIllumToggle","","",410,null],[13,"KbdIllumDown","","",410,null],[13,"KbdIllumUp","","",410,null],[13,"Eject","","",410,null],[13,"Sleep","","",410,null],[13,"App1","","",410,null],[13,"App2","","",410,null],[13,"Num","","",410,null],[11,"fmt","","",409,null],[11,"hash","","",409,null],[11,"eq","","",409,null],[11,"clone","","",409,null],[11,"to_i64","","",409,null],[11,"to_u64","","",409,null],[11,"to_isize","","",409,null],[11,"from_i64","","",409,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",409,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",409,null],[11,"from_scancode","","Gets the virtual key from a scancode. Returns None if there is no corresponding virtual key.",409,{"inputs":[{"name":"scancode"}],"output":{"name":"option"}}],[11,"from_name","","",409,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",409,null],[11,"fmt","","",410,null],[11,"hash","","",410,null],[11,"eq","","",410,null],[11,"clone","","",410,null],[11,"to_i64","","",410,null],[11,"to_u64","","",410,null],[11,"to_isize","","",410,null],[11,"from_i64","","",410,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",410,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",410,null],[11,"from_keycode","","Gets the scancode from a virtual key. Returns None if there is no corresponding scancode.",410,{"inputs":[{"name":"keycode"}],"output":{"name":"option"}}],[11,"from_name","","",410,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"name","","",410,null],[17,"NOMOD","","",null,null],[17,"LSHIFTMOD","","",null,null],[17,"RSHIFTMOD","","",null,null],[17,"LCTRLMOD","","",null,null],[17,"RCTRLMOD","","",null,null],[17,"LALTMOD","","",null,null],[17,"RALTMOD","","",null,null],[17,"LGUIMOD","","",null,null],[17,"RGUIMOD","","",null,null],[17,"NUMMOD","","",null,null],[17,"CAPSMOD","","",null,null],[17,"MODEMOD","","",null,null],[17,"RESERVEDMOD","","",null,null],[11,"hash","","",411,null],[11,"cmp","","",411,null],[11,"partial_cmp","","",411,null],[11,"lt","","",411,null],[11,"le","","",411,null],[11,"gt","","",411,null],[11,"ge","","",411,null],[11,"clone","","",411,null],[11,"eq","","",411,null],[11,"ne","","",411,null],[11,"fmt","","",411,null],[11,"empty","","Returns an empty set of flags.",411,{"inputs":[],"output":{"name":"mod"}}],[11,"all","","Returns the set containing all flags.",411,{"inputs":[],"output":{"name":"mod"}}],[11,"bits","","Returns the raw value of the flags currently stored.",411,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",411,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",411,{"inputs":[{"name":"u32"}],"output":{"name":"mod"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",411,null],[11,"is_all","","Returns `true` if all flags are currently set.",411,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",411,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",411,null],[11,"insert","","Inserts the specified flags in-place.",411,null],[11,"remove","","Removes the specified flags in-place.",411,null],[11,"toggle","","Toggles the specified flags in-place.",411,null],[11,"bitor","","Returns the union of the two sets of flags.",411,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",411,null],[11,"bitand","","Returns the intersection between the two sets of flags.",411,null],[11,"sub","","Returns the set difference of the two sets of flags.",411,null],[11,"not","","Returns the complement of this set of flags.",411,null],[11,"from_iter","","",411,{"inputs":[{"name":"t"}],"output":{"name":"mod"}}],[11,"new","","",412,{"inputs":[{"name":"eventpump"}],"output":{"name":"keyboardstate"}}],[11,"is_scancode_pressed","","Returns true if the scancode is pressed.",412,null],[11,"scancodes","","Returns an iterator all scancodes with a boolean indicating if the scancode is pressed.",412,null],[11,"pressed_scancodes","","Returns an iterator of pressed scancodes.",412,null],[11,"next","","",413,null],[11,"next","","",414,null],[11,"keyboard","sdl2","",415,null],[11,"text_input","","",68,null],[11,"focused_window_id","sdl2::keyboard","Gets the id of the window which currently has keyboard focus.",416,null],[11,"mod_state","","",416,null],[11,"set_mod_state","","",416,null],[11,"start","","",417,null],[11,"is_active","","",417,null],[11,"stop","","",417,null],[11,"set_rect","","",417,null],[11,"has_screen_keyboard_support","","",417,null],[11,"is_screen_keyboard_shown","","",417,null],[0,"mouse","sdl2","",null,null],[3,"Cursor","sdl2::mouse","",null,null],[3,"MouseState","","",null,null],[3,"MouseUtil","","Mouse utility functions. Access with `Sdl::mouse()`.",null,null],[4,"SystemCursor","","",null,null],[13,"Arrow","","",418,null],[13,"IBeam","","",418,null],[13,"Wait","","",418,null],[13,"Crosshair","","",418,null],[13,"WaitArrow","","",418,null],[13,"SizeNWSE","","",418,null],[13,"SizeNESW","","",418,null],[13,"SizeWE","","",418,null],[13,"SizeNS","","",418,null],[13,"SizeAll","","",418,null],[13,"No","","",418,null],[13,"Hand","","",418,null],[4,"Mouse","","",null,null],[13,"Left","","",419,null],[13,"Middle","","",419,null],[13,"Right","","",419,null],[13,"X1","","",419,null],[13,"X2","","",419,null],[13,"Unknown","","",419,null],[11,"fmt","","",418,null],[11,"hash","","",418,null],[11,"eq","","",418,null],[11,"clone","","",418,null],[11,"drop","","",420,null],[11,"new","","",420,null],[11,"from_surface","","",420,{"inputs":[{"name":"s"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"from_system","","",420,{"inputs":[{"name":"systemcursor"}],"output":{"name":"result"}}],[11,"set","","",420,null],[11,"fmt","","",419,null],[11,"hash","","",419,null],[11,"eq","","",419,null],[11,"ne","","",419,null],[11,"clone","","",419,null],[11,"from_ll","","",419,{"inputs":[{"name":"u8"}],"output":{"name":"mouse"}}],[11,"hash","","",421,null],[11,"eq","","",421,null],[11,"ne","","",421,null],[11,"clone","","",421,null],[11,"button","","Tests if a mouse button was pressed.",421,null],[11,"left","","Tests if the left mouse button was pressed.",421,null],[11,"middle","","Tests if the middle mouse button was pressed.",421,null],[11,"right","","Tests if the right mouse button was pressed.",421,null],[11,"x1","","Tests if the X1 mouse button was pressed.",421,null],[11,"x2","","Tests if the X2 mouse button was pressed.",421,null],[11,"from_flags","","",421,{"inputs":[{"name":"u32"}],"output":{"name":"mousestate"}}],[11,"mouse","sdl2","",415,null],[11,"focused_window_id","sdl2::mouse","Gets the id of the window which currently has mouse focus.",422,null],[11,"mouse_state","","",422,null],[11,"relative_mouse_state","","",422,null],[11,"warp_mouse_in_window","","",422,null],[11,"set_relative_mouse_mode","","",422,null],[11,"relative_mouse_mode","","",422,null],[11,"is_cursor_showing","","",422,null],[11,"show_cursor","","",422,null],[0,"rect","sdl2","Rectangles and points.",null,null],[3,"Rect","sdl2::rect","A rectangle.",null,null],[3,"Point","","Immutable point type, consisting of x and y.",null,null],[5,"max_int_value","","The maximal integer value that can be used for rectangles.",null,{"inputs":[],"output":{"name":"u32"}}],[5,"min_int_value","","The minimal integer value that can be used for rectangle positions\nand points.",null,{"inputs":[],"output":{"name":"i32"}}],[11,"hash","","",423,null],[11,"eq","","",423,null],[11,"ne","","",423,null],[11,"clone","","",423,null],[11,"fmt","","",423,null],[11,"new","","Creates a new rectangle from the given values.",423,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rect"}}],[11,"from_center","","Creates a new rectangle centered on the given position.",423,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rect"}}],[11,"x","","The horizontal position of this rectangle.",423,null],[11,"y","","The vertical position of this rectangle.",423,null],[11,"width","","The width of this rectangle.",423,null],[11,"height","","The height of this rectangle.",423,null],[11,"set_x","","Sets the horizontal position of this rectangle to the given value,\nclamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"set_y","","Sets the vertical position of this rectangle to the given value,\nclamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"set_width","","Sets the width of this rectangle to the given value,\nclamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"set_height","","Sets the height of this rectangle to the given value,\nclamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"left","","Returns the x-position of the left side of this rectangle.",423,null],[11,"right","","Returns the x-position of the right side of this rectangle.",423,null],[11,"top","","Returns the y-position of the top side of this rectangle.",423,null],[11,"bottom","","Returns the y-position of the bottom side of this rectangle.",423,null],[11,"center","","Returns the center of this rectangle.",423,null],[11,"set_right","","Sets the position of the right side of this rectangle to the given\nvalue, clamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"set_bottom","","Sets the position of the bottom side of this rectangle to the given\nvalue, clamped to be less than or equal to i32::max_value() / 2.",423,null],[11,"center_on","","Centers the rectangle on the given point.",423,null],[11,"offset","","Move this rect and clamp the positions to prevent over/underflow.\nThis also clamps the size to prevent overflow.",423,null],[11,"reposition","","Moves this rect to the given position after clamping the values.",423,null],[11,"resize","","Resizes this rect to the given size after clamping the values.",423,null],[11,"contains","","Checks whether this rect contains a given point.",423,null],[11,"raw","","Returns the underlying C Rect.",423,null],[11,"raw_mut","","",423,null],[11,"raw_slice","","",423,null],[11,"from_ll","","",423,{"inputs":[{"name":"sdl_rect"}],"output":{"name":"rect"}}],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points.\nIf a clipping rectangle is given, only points that are within it will be\nconsidered.",423,null],[11,"has_intersection","","Determine whether two rectangles intersect.",423,null],[11,"intersection","","Calculate the intersection of two rectangles.\nThe bitwise AND operator `&amp;` can also be used.",423,null],[11,"union","","Calculate the union of two rectangles.\nThe bitwise OR operator `|` can also be used.",423,null],[11,"intersect_line","","Calculates the intersection of a rectangle and a line segment and\nreturns the points of their intersection.",423,null],[11,"into","","",423,null],[11,"from","","",423,null],[11,"bitand","","",423,null],[11,"bitor","","",423,null],[11,"hash","","",424,null],[11,"fmt","","",424,null],[11,"eq","","",424,null],[11,"ne","","",424,null],[11,"clone","","",424,null],[11,"from","","",424,null],[11,"into","","",424,null],[11,"new","","",424,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"point"}}],[11,"from_ll","","",424,{"inputs":[{"name":"sdl_point"}],"output":{"name":"point"}}],[11,"raw_slice","","",424,null],[11,"raw","","",424,null],[11,"offset","","",424,null],[11,"x","","",424,null],[11,"y","","",424,null],[0,"surface","sdl2","",null,null],[3,"Surface","sdl2::surface","",null,null],[3,"SurfaceRef","","An unsized Surface reference.",null,null],[11,"drop","","",425,null],[11,"deref","","",425,null],[11,"deref_mut","","",425,null],[11,"as_ref","","",425,null],[11,"as_mut","","",425,null],[11,"from_ll","","",425,null],[11,"new","","Creates a new surface using a pixel format.",425,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"pixelformatenum"}],"output":{"name":"result"}}],[11,"from_pixelmasks","","Creates a new surface using pixel masks.",425,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"pixelmasks"}],"output":{"name":"result"}}],[11,"from_data","","Creates a new surface from an existing buffer, using a pixel format.",425,null],[11,"from_data_pixelmasks","","Creates a new surface from an existing buffer, using pixel masks.",425,null],[11,"load_bmp_rw","","",425,{"inputs":[{"name":"rwops"}],"output":{"name":"result"}}],[11,"load_bmp","","",425,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_ll","","",426,null],[11,"from_ll_mut","","",426,null],[11,"raw","","",426,null],[11,"width","","",426,null],[11,"height","","",426,null],[11,"pitch","","",426,null],[11,"size","","",426,null],[11,"rect","","",426,null],[11,"pixel_format","","",426,null],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",426,null],[11,"with_lock_mut","","Locks a surface so that the pixels can be directly accessed safely.",426,null],[11,"without_lock","","Returns the Surface&#39;s pixel buffer if the Surface doesn&#39;t require locking\n(e.g. it&#39;s a software surface).",426,null],[11,"without_lock_mut","","Returns the Surface&#39;s pixel buffer if the Surface doesn&#39;t require locking\n(e.g. it&#39;s a software surface).",426,null],[11,"must_lock","","Returns true if the Surface needs to be locked before accessing the Surface pixels.",426,null],[11,"save_bmp_rw","","",426,null],[11,"save_bmp","","",426,null],[11,"set_palette","","",426,null],[11,"enable_RLE","","",426,null],[11,"disable_RLE","","",426,null],[11,"set_color_key","","",426,null],[11,"color_key","","The function will fail if the surface doesn&#39;t have color key enabled.",426,null],[11,"set_color_mod","","",426,null],[11,"color_mod","","",426,null],[11,"fill_rect","","",426,null],[11,"fill_rects","","",426,null],[11,"set_alpha_mod","","",426,null],[11,"alpha_mod","","",426,null],[11,"set_blend_mode","","The function will fail if the blend mode is not supported by SDL.",426,null],[11,"blend_mode","","",426,null],[11,"set_clip_rect","","Sets the clip rectangle for the surface.",426,null],[11,"clip_rect","","Gets the clip rectangle for the surface.",426,null],[11,"convert","","Copies the surface into a new one that is optimized for blitting to a surface of a specified pixel format.",426,null],[11,"blit","","Performs surface blitting (surface copying).",426,null],[11,"lower_blit","","Performs low-level surface blitting.",426,null],[11,"blit_scaled","","Performs scaled surface bliting (surface copying).",426,null],[11,"lower_blit_scaled","","Performs low-level scaled surface blitting.",426,null],[0,"pixels","sdl2","",null,null],[3,"Palette","sdl2::pixels","",null,null],[3,"PixelMasks","","",null,null],[12,"bpp","","Bits per pixel; usually 15, 16, or 32",427,null],[12,"rmask","","The red mask",427,null],[12,"gmask","","The green mask",427,null],[12,"bmask","","The blue mask",427,null],[12,"amask","","The alpha mask",427,null],[3,"PixelFormat","","",null,null],[4,"Color","","",null,null],[13,"RGB","","",428,null],[13,"RGBA","","",428,null],[4,"PixelFormatEnum","","",null,null],[13,"Unknown","","",429,null],[13,"Index1LSB","","",429,null],[13,"Index1MSB","","",429,null],[13,"Index4LSB","","",429,null],[13,"Index4MSB","","",429,null],[13,"Index8","","",429,null],[13,"RGB332","","",429,null],[13,"RGB444","","",429,null],[13,"RGB555","","",429,null],[13,"BGR555","","",429,null],[13,"ARGB4444","","",429,null],[13,"RGBA4444","","",429,null],[13,"ABGR4444","","",429,null],[13,"BGRA4444","","",429,null],[13,"ARGB1555","","",429,null],[13,"RGBA5551","","",429,null],[13,"ABGR1555","","",429,null],[13,"BGRA5551","","",429,null],[13,"RGB565","","",429,null],[13,"BGR565","","",429,null],[13,"RGB24","","",429,null],[13,"BGR24","","",429,null],[13,"RGB888","","",429,null],[13,"RGBX8888","","",429,null],[13,"BGR888","","",429,null],[13,"BGRX8888","","",429,null],[13,"ARGB8888","","",429,null],[13,"RGBA8888","","",429,null],[13,"ABGR8888","","",429,null],[13,"BGRA8888","","",429,null],[13,"ARGB2101010","","",429,null],[13,"YV12","","",429,null],[13,"IYUV","","",429,null],[13,"YUY2","","",429,null],[13,"UYVY","","",429,null],[13,"YVYU","","",429,null],[11,"raw","","",430,null],[11,"fmt","","",428,null],[11,"hash","","",428,null],[11,"eq","","",428,null],[11,"ne","","",428,null],[11,"clone","","",428,null],[11,"to_u32","","",428,null],[11,"from_u32","","",428,{"inputs":[{"name":"pixelformat"},{"name":"u32"}],"output":{"name":"color"}}],[11,"rgb","","",428,null],[11,"rand","","",428,{"inputs":[{"name":"r"}],"output":{"name":"color"}}],[11,"raw","","",431,null],[11,"from_ll","","",431,null],[11,"fmt","","",429,null],[11,"hash","","",429,null],[11,"eq","","",429,null],[11,"clone","","",429,null],[11,"from_masks","","",429,{"inputs":[{"name":"pixelmasks"}],"output":{"name":"pixelformatenum"}}],[11,"into_masks","","",429,null],[11,"byte_size_from_pitch_and_height","","Calculates the total byte size of an image buffer, given its pitch\nand height.",429,null],[11,"byte_size_of_pixels","","",429,null],[11,"byte_size_per_pixel","","",429,null],[11,"from_i64","","",429,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",429,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[0,"video","sdl2","",null,null],[3,"DisplayMode","sdl2::video","",null,null],[12,"format","","",432,null],[12,"w","","",432,null],[12,"h","","",432,null],[12,"refresh_rate","","",432,null],[3,"GLContext","","",null,null],[3,"Window","","",null,null],[3,"WindowRef","","An unsized Window reference.",null,null],[3,"WindowBuilder","","The type that allows you to build windows.",null,null],[3,"DriverIterator","","",null,null],[4,"GLProfile","","",null,null],[13,"Core","","OpenGL core profile - deprecated functions are disabled",433,null],[13,"Compatibility","","OpenGL compatibility profile - deprecated functions are allowed",433,null],[13,"GLES","","OpenGL ES profile - only a subset of the base OpenGL functionality is available",433,null],[4,"FullscreenType","","",null,null],[13,"Off","","",434,null],[13,"True","","",434,null],[13,"Desktop","","",434,null],[4,"WindowPos","","",null,null],[13,"Undefined","","",435,null],[13,"Centered","","",435,null],[13,"Positioned","","",435,null],[4,"WindowBuildError","","",null,null],[13,"HeightOverflows","","",436,null],[13,"WidthOverflows","","",436,null],[13,"InvalidTitle","","",436,null],[13,"SdlError","","",436,null],[5,"drivers","","Gets an iterator of all video drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[0,"gl_attr","","OpenGL context getters and setters",null,null],[3,"GLAttr","sdl2::video::gl_attr","OpenGL context getters and setters. Obtain with `VideoSubsystem::gl_attr()`.",null,null],[3,"ContextFlagsBuilder","","The type that allows you to build a OpenGL context configuration.",null,null],[3,"ContextFlags","","",null,null],[11,"gl_attr","sdl2","Obtains access to the OpenGL window attributes.",68,null],[11,"set_red_size","sdl2::video::gl_attr","**Sets** the attribute:\nthe minimum number of bits for the red channel of the color buffer; defaults to 3",437,null],[11,"red_size","","**Gets** the attribute:\nthe minimum number of bits for the red channel of the color buffer; defaults to 3",437,null],[11,"set_green_size","","**Sets** the attribute:\nthe minimum number of bits for the green channel of the color buffer; defaults to 3",437,null],[11,"green_size","","**Gets** the attribute:\nthe minimum number of bits for the green channel of the color buffer; defaults to 3",437,null],[11,"set_blue_size","","**Sets** the attribute:\nthe minimum number of bits for the blue channel of the color buffer; defaults to 2",437,null],[11,"blue_size","","**Gets** the attribute:\nthe minimum number of bits for the blue channel of the color buffer; defaults to 2",437,null],[11,"set_alpha_size","","**Sets** the attribute:\nthe minimum number of bits for the alpha channel of the color buffer; defaults to 0",437,null],[11,"alpha_size","","**Gets** the attribute:\nthe minimum number of bits for the alpha channel of the color buffer; defaults to 0",437,null],[11,"set_buffer_size","","**Sets** the attribute:\nthe minimum number of bits for frame buffer size; defaults to 0",437,null],[11,"buffer_size","","**Gets** the attribute:\nthe minimum number of bits for frame buffer size; defaults to 0",437,null],[11,"set_double_buffer","","**Sets** the attribute:\nwhether the output is single or double buffered; defaults to double buffering on",437,null],[11,"double_buffer","","**Gets** the attribute:\nwhether the output is single or double buffered; defaults to double buffering on",437,null],[11,"set_depth_size","","**Sets** the attribute:\nthe minimum number of bits in the depth buffer; defaults to 16",437,null],[11,"depth_size","","**Gets** the attribute:\nthe minimum number of bits in the depth buffer; defaults to 16",437,null],[11,"set_stencil_size","","**Sets** the attribute:\nthe minimum number of bits in the stencil buffer; defaults to 0",437,null],[11,"stencil_size","","**Gets** the attribute:\nthe minimum number of bits in the stencil buffer; defaults to 0",437,null],[11,"set_accum_red_size","","**Sets** the attribute:\nthe minimum number of bits for the red channel of the accumulation buffer; defaults to 0",437,null],[11,"accum_red_size","","**Gets** the attribute:\nthe minimum number of bits for the red channel of the accumulation buffer; defaults to 0",437,null],[11,"set_accum_green_size","","**Sets** the attribute:\nthe minimum number of bits for the green channel of the accumulation buffer; defaults to 0",437,null],[11,"accum_green_size","","**Gets** the attribute:\nthe minimum number of bits for the green channel of the accumulation buffer; defaults to 0",437,null],[11,"set_accum_blue_size","","**Sets** the attribute:\nthe minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",437,null],[11,"accum_blue_size","","**Gets** the attribute:\nthe minimum number of bits for the blue channel of the accumulation buffer; defaults to 0",437,null],[11,"set_accum_alpha_size","","**Sets** the attribute:\nthe minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",437,null],[11,"accum_alpha_size","","**Gets** the attribute:\nthe minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0",437,null],[11,"set_stereo","","**Sets** the attribute:\nwhether the output is stereo 3D; defaults to off",437,null],[11,"stereo","","**Gets** the attribute:\nwhether the output is stereo 3D; defaults to off",437,null],[11,"set_multisample_buffers","","**Sets** the attribute:\nthe number of buffers used for multisample anti-aliasing; defaults to 0",437,null],[11,"multisample_buffers","","**Gets** the attribute:\nthe number of buffers used for multisample anti-aliasing; defaults to 0",437,null],[11,"set_multisample_samples","","**Sets** the attribute:\nthe number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",437,null],[11,"multisample_samples","","**Gets** the attribute:\nthe number of samples used around the current pixel used for multisample anti-aliasing; defaults to 0",437,null],[11,"set_accelerated_visual","","**Sets** the attribute:\nwhether to require hardware acceleration; false to force software rendering; defaults to allow either",437,null],[11,"accelerated_visual","","**Gets** the attribute:\nwhether to require hardware acceleration; false to force software rendering; defaults to allow either",437,null],[11,"set_context_major_version","","**Sets** the attribute:\nOpenGL context major version",437,null],[11,"context_major_version","","**Gets** the attribute:\nOpenGL context major version",437,null],[11,"set_context_minor_version","","**Sets** the attribute:\nOpenGL context minor version",437,null],[11,"context_minor_version","","**Gets** the attribute:\nOpenGL context minor version",437,null],[11,"set_context_profile","","**Sets** the attribute:\ntype of GL context (Core, Compatibility, ES)",437,null],[11,"context_profile","","**Gets** the attribute:\ntype of GL context (Core, Compatibility, ES)",437,null],[11,"set_share_with_current_context","","**Sets** the attribute:\nOpenGL context sharing; defaults to false",437,null],[11,"share_with_current_context","","**Gets** the attribute:\nOpenGL context sharing; defaults to false",437,null],[11,"set_framebuffer_srgb_compatible","","**Sets** the attribute:\nrequests sRGB capable visual; defaults to false (&gt;= SDL 2.0.1)",437,null],[11,"framebuffer_srgb_compatible","","**Gets** the attribute:\nrequests sRGB capable visual; defaults to false (&gt;= SDL 2.0.1)",437,null],[11,"set_context_version","","**Sets** the OpenGL context major and minor versions.",437,null],[11,"context_version","","**Gets** the OpenGL context major and minor versions as a tuple.",437,null],[11,"set","","Finishes the builder and applies the GL context flags to the GL context.",438,null],[11,"debug","","Sets the context into &quot;debug&quot; mode.",438,null],[11,"forward_compatible","","Sets the context into &quot;forward compatible&quot; mode.",438,null],[11,"robust_access","","",438,null],[11,"reset_isolation","","",438,null],[11,"has_debug","","",439,null],[11,"has_forward_compatible","","",439,null],[11,"has_robust_access","","",439,null],[11,"has_reset_isolation","","",439,null],[11,"set_context_flags","","**Sets** any combination of OpenGL context configuration flags.",437,null],[11,"context_flags","","**Gets** the applied OpenGL context configuration flags.",437,null],[11,"fmt","sdl2::video","",433,null],[11,"hash","","",433,null],[11,"eq","","",433,null],[11,"clone","","",433,null],[11,"fmt","","",432,null],[11,"hash","","",432,null],[11,"eq","","",432,null],[11,"ne","","",432,null],[11,"clone","","",432,null],[11,"new","","",432,{"inputs":[{"name":"u32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"displaymode"}}],[11,"from_ll","","",432,{"inputs":[{"name":"sdl_displaymode"}],"output":{"name":"displaymode"}}],[11,"to_ll","","",432,null],[11,"fmt","","",434,null],[11,"hash","","",434,null],[11,"eq","","",434,null],[11,"clone","","",434,null],[11,"fmt","","",435,null],[11,"hash","","",435,null],[11,"eq","","",435,null],[11,"ne","","",435,null],[11,"clone","","",435,null],[11,"drop","","",440,null],[11,"is_current","","Returns true if the OpenGL context is the current one in the thread.",440,null],[11,"raw","","",440,null],[11,"window","sdl2","Initializes a new `WindowBuilder`; a convenience method that calls `WindowBuilder::new()`.",68,null],[11,"current_video_driver","","",68,null],[11,"num_video_displays","","",68,null],[11,"display_name","","",68,null],[11,"display_bounds","","",68,null],[11,"num_display_modes","","",68,null],[11,"display_mode","","",68,null],[11,"desktop_display_mode","","",68,null],[11,"current_display_mode","","",68,null],[11,"closest_display_mode","","",68,null],[11,"is_screen_saver_enabled","","",68,null],[11,"enable_screen_saver","","",68,null],[11,"disable_screen_saver","","",68,null],[11,"gl_load_library_default","","Loads the default OpenGL library.",68,null],[11,"gl_load_library","","Loads the OpenGL library using a platform-dependent OpenGL library name (usually a file path).",68,null],[11,"gl_unload_library","","Unloads the current OpenGL library.",68,null],[11,"gl_get_proc_address","","Gets the pointer to the named OpenGL function.",68,null],[11,"gl_extension_supported","","",68,null],[11,"gl_get_current_window_id","","",68,null],[11,"gl_release_current_context","","Releases the thread&#39;s current OpenGL context, i.e. sets the current OpenGL context to nothing.",68,null],[11,"gl_set_swap_interval","","",68,null],[11,"gl_get_swap_interval","","",68,null],[11,"drop","sdl2::video","",441,null],[11,"fmt","","",436,null],[11,"fmt","","",436,null],[11,"description","","",436,null],[11,"fmt","","",442,null],[11,"new","","Initializes a new `WindowBuilder`.",442,{"inputs":[{"name":"videosubsystem"},{"name":"str"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",442,null],[11,"window_flags","","Gets the underlying window flags.",442,null],[11,"set_window_flags","","Sets the underlying window flags.\nThis will effectively undo any previous build operations, excluding window size and position.",442,null],[11,"position","","Sets the window position.",442,null],[11,"position_centered","","Centers the window.",442,null],[11,"fullscreen","","Sets the window to fullscreen.",442,null],[11,"fullscreen_desktop","","Sets the window to fullscreen at the current desktop resolution.",442,null],[11,"opengl","","Sets the window to be usable with an OpenGL context",442,null],[11,"hidden","","Hides the window.",442,null],[11,"borderless","","Removes the window decoration.",442,null],[11,"resizable","","Sets the window to be resizable.",442,null],[11,"minimized","","Minimizes the window.",442,null],[11,"maximized","","Maximizes the window.",442,null],[11,"input_grabbed","","Sets the window to have grabbed input focus.",442,null],[11,"allow_highdpi","","Creates the window in high-DPI mode if supported (&gt;= SDL 2.0.1)",442,null],[11,"raw","","",441,null],[11,"from_ll","","",441,null],[11,"subsystem","","",441,null],[11,"renderer","","Initializes a new `RendererBuilder`; a convenience method that calls `RendererBuilder::new()`.",441,null],[11,"deref","","",441,null],[11,"deref_mut","","",441,null],[11,"raw","","",443,null],[11,"from_ll","","",443,null],[11,"from_ll_mut","","",443,null],[11,"id","","",443,null],[11,"gl_create_context","","",443,null],[11,"gl_set_context_to_current","","Set the window&#39;s OpenGL context to the current context on the thread.",443,null],[11,"gl_make_current","","",443,null],[11,"gl_swap_window","","",443,null],[11,"display_index","","",443,null],[11,"set_display_mode","","",443,null],[11,"display_mode","","",443,null],[11,"window_pixel_format","","",443,null],[11,"window_flags","","",443,null],[11,"set_title","","",443,null],[11,"title","","",443,null],[11,"set_icon","","",443,null],[11,"set_position","","",443,null],[11,"position","","",443,null],[11,"set_size","","",443,null],[11,"size","","",443,null],[11,"drawable_size","","",443,null],[11,"set_minimum_size","","",443,null],[11,"minimum_size","","",443,null],[11,"set_maximum_size","","",443,null],[11,"maximum_size","","",443,null],[11,"set_bordered","","",443,null],[11,"show","","",443,null],[11,"hide","","",443,null],[11,"raise","","",443,null],[11,"maximize","","",443,null],[11,"minimize","","",443,null],[11,"restore","","",443,null],[11,"set_fullscreen","","",443,null],[11,"surface","","",443,null],[11,"surface_mut","","",443,null],[11,"update_surface","","",443,null],[11,"update_surface_rects","","",443,null],[11,"set_grab","","",443,null],[11,"grab","","",443,null],[11,"set_brightness","","",443,null],[11,"brightness","","",443,null],[11,"set_gamma_ramp","","",443,null],[11,"gamma_ramp","","",443,null],[11,"clone","","",444,null],[11,"next","","",444,null],[11,"size_hint","","",444,null],[0,"timer","sdl2","",null,null],[3,"Timer","sdl2::timer","",null,null],[6,"TimerCallback","","",null,null],[11,"add_timer","sdl2","Constructs a new timer using the boxed closure `callback`.",445,null],[11,"ticks","","Gets the number of milliseconds elapsed since the timer subsystem was initialized.",445,null],[11,"delay","","Sleeps the current thread for the specified amount of milliseconds.",445,null],[11,"performance_counter","","",445,null],[11,"performance_frequency","","",445,null],[11,"into_inner","sdl2::timer","Returns the closure as a trait-object and cancels the timer\nby consuming it...",446,null],[11,"drop","","",446,null],[0,"render","sdl2","2D accelerated rendering",null,null],[3,"RendererInfo","sdl2::render","A structure that contains information on the capabilities of a render driver\nor the current render context.",null,null],[12,"name","","",447,null],[12,"flags","","",447,null],[12,"texture_formats","","",447,null],[12,"max_texture_width","","",447,null],[12,"max_texture_height","","",447,null],[3,"Renderer","","2D rendering context",null,null],[3,"RendererBuilder","","The type that allows you to build Window-based renderers.",null,null],[3,"RenderTarget","","A handle for getting/setting the render target of the render context.",null,null],[3,"TextureQuery","","",null,null],[12,"format","","",448,null],[12,"access","","",448,null],[12,"width","","",448,null],[12,"height","","",448,null],[3,"Texture","","A texture for a rendering context.",null,null],[3,"DriverIterator","","",null,null],[4,"TextureAccess","","",null,null],[13,"Static","","",449,null],[13,"Streaming","","",449,null],[13,"Target","","",449,null],[4,"BlendMode","","",null,null],[13,"None","","",450,null],[13,"Blend","","",450,null],[13,"Add","","",450,null],[13,"Mod","","",450,null],[4,"RendererParent","","",null,null],[13,"Surface","","",451,null],[13,"Window","","",451,null],[4,"TextureValueError","","",null,null],[13,"WidthOverflows","","",452,null],[13,"HeightOverflows","","",452,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",452,null],[13,"SdlError","","",452,null],[4,"UpdateTextureError","","",null,null],[13,"PitchOverflows","","",453,null],[13,"PitchMustBeMultipleOfTwoForFormat","","",453,null],[13,"XMustBeMultipleOfTwoForFormat","","",453,null],[13,"YMustBeMultipleOfTwoForFormat","","",453,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",453,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",453,null],[13,"SdlError","","",453,null],[4,"UpdateTextureYUVError","","",null,null],[13,"PitchOverflows","","",454,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",454,null],[12,"value","","",454,null],[13,"InvalidPlaneLength","sdl2::render","",454,null],[12,"plane","sdl2::render::UpdateTextureYUVError","",454,null],[12,"length","","",454,null],[12,"pitch","","",454,null],[12,"height","","",454,null],[13,"XMustBeMultipleOfTwoForFormat","sdl2::render","",454,null],[13,"YMustBeMultipleOfTwoForFormat","","",454,null],[13,"WidthMustBeMultipleOfTwoForFormat","","",454,null],[13,"HeightMustBeMultipleOfTwoForFormat","","",454,null],[13,"RectNotInsideTexture","","",454,null],[13,"SdlError","","",454,null],[5,"drivers","","Gets an iterator of all render drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[11,"fmt","","",449,null],[11,"hash","","",449,null],[11,"eq","","",449,null],[11,"clone","","",449,null],[11,"from_i64","","",449,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",449,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",447,null],[11,"hash","","",447,null],[11,"eq","","",447,null],[11,"ne","","",447,null],[11,"clone","","",447,null],[11,"fmt","","",450,null],[11,"hash","","",450,null],[11,"eq","","",450,null],[11,"clone","","",450,null],[11,"from_i64","","",450,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",450,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_ll","","",447,{"inputs":[{"name":"sdl_rendererinfo"}],"output":{"name":"rendererinfo"}}],[11,"drop","","",455,null],[11,"new","","Initializes a new `RendererBuilder`.",456,{"inputs":[{"name":"window"}],"output":{"name":"rendererbuilder"}}],[11,"build","","Builds the renderer.",456,null],[11,"index","","Sets the index of the rendering driver to initialize.",456,null],[11,"software","","Set the renderer to a software fallback.",456,null],[11,"accelerated","","Set the renderer to use hardware acceleration.",456,null],[11,"present_vsync","","Synchronize renderer present with the refresh rate.",456,null],[11,"target_texture","","Set the renderer to support rendering to a texture.",456,null],[11,"from_surface","","Creates a 2D software rendering context for a surface.",455,{"inputs":[{"name":"surface"}],"output":{"name":"result"}}],[11,"info","","Gets information about the rendering context.",455,null],[11,"window","","Gets the associated window reference of the Renderer, if there is one.",455,null],[11,"window_mut","","Gets the associated window reference of the Renderer, if there is one.",455,null],[11,"surface","","Gets the associated surface reference of the Renderer, if there is one.",455,null],[11,"surface_mut","","Gets the associated surface reference of the Renderer, if there is one.",455,null],[11,"into_window","","",455,null],[11,"into_surface","","",455,null],[11,"raw","","Unwraps the window or surface the rendering context was created from.",455,null],[11,"from_ll","","",455,null],[11,"fmt","","",452,null],[11,"create_texture","","Creates a texture for a rendering context.",455,null],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, size)`",455,null],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, size)`",455,null],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, size)`",455,null],[11,"create_texture_from_surface","","Creates a texture from an existing surface.\n# Remarks\nThe access hint for the created texture is `TextureAccess::Static`.",455,null],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",455,null],[11,"render_target","","Gets the render target handle.",455,null],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",455,null],[11,"draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",455,null],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",455,null],[11,"blend_mode","","Gets the blend mode used for drawing operations.",455,null],[11,"clear","","Clears the current rendering target with the drawing color.",455,null],[11,"present","","Updates the screen with any rendering performed since the previous call.",455,null],[11,"output_size","","Gets the output size of a rendering context.",455,null],[11,"set_logical_size","","Sets a device independent resolution for rendering.",455,null],[11,"logical_size","","Gets device independent resolution for rendering.",455,null],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",455,null],[11,"viewport","","Gets the drawing area for the current target.",455,null],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",455,null],[11,"clip_rect","","Gets the clip rectangle for the current target.",455,null],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",455,null],[11,"scale","","Gets the drawing scale for the current target.",455,null],[11,"draw_point","","Draws a point on the current rendering target.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"draw_points","","Draws multiple points on the current rendering target.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"draw_line","","Draws a line on the current rendering target.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"draw_lines","","Draws a series of connected lines on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",455,null],[11,"draw_rect","","Draws a rectangle on the current rendering target.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"draw_rects","","Draws some number of rectangles on the current rendering target.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing\ncolor.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with\nthe drawing color.\nErrors if drawing fails for any reason (e.g. driver failure)",455,null],[11,"copy","","Copies a portion of the texture to the current rendering target.",455,null],[11,"copy_ex","","Copies a portion of the texture to the current rendering target,\noptionally rotating it by angle around the given center and also\nflipping it top-bottom and/or left-right.",455,null],[11,"read_pixels","","Reads pixels from the current rendering target.\n# Remarks\nWARNING: This is a very slow operation, and should not be used frequently.",455,null],[11,"reset","","Resets the render target to the default render target.",457,null],[11,"set","","Sets the render target to the provided texture.\nThe texture must be created with the texture access: `sdl2::render::TextureAccess::Target`.",457,null],[11,"create_and_set","","Creates a new texture and sets it as the render target.",457,null],[11,"fmt","","",448,null],[11,"hash","","",448,null],[11,"eq","","",448,null],[11,"ne","","",448,null],[11,"clone","","",448,null],[11,"drop","","",458,null],[11,"fmt","","",453,null],[11,"fmt","","",454,null],[11,"query","","Queries the attributes of the texture.",458,null],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",458,null],[11,"color_mod","","Gets the additional color value multiplied into render copy operations.",458,null],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",458,null],[11,"alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",458,null],[11,"set_blend_mode","","Sets the blend mode for a texture, used by `Renderer::copy()`.",458,null],[11,"blend_mode","","Gets the blend mode used for texture copy operations.",458,null],[11,"update","","Updates the given texture rectangle with new pixel data.",458,null],[11,"update_yuv","","Updates a rectangle within a planar YV12 or IYUV texture with new pixel data.",458,null],[11,"with_lock","","Locks the texture for **write-only** pixel access.\nThe texture must have been created with streaming access.",458,null],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current\ncontext for use with when rendering OpenGL primitives directly.",458,null],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",458,null],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",458,null],[11,"from_ll","","",458,null],[11,"raw","","",458,null],[11,"clone","","",459,null],[11,"next","","",459,null],[11,"size_hint","","",459,null],[0,"rwops","sdl2","",null,null],[3,"RWops","sdl2::rwops","A structure that provides an abstract interface to stream I/O.",null,null],[11,"raw","","",460,null],[11,"from_ll","","",460,null],[11,"from_file","","Creates an SDL file stream.",460,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_bytes","","Prepares a read-only memory buffer for use with `RWops`.",460,null],[11,"from_bytes_mut","","Prepares a read-write memory buffer for use with `RWops`.",460,null],[11,"len","","Gets the stream&#39;s total size in bytes.",460,null],[11,"drop","","",460,null],[11,"read","","",460,null],[11,"write","","",460,null],[11,"flush","","",460,null],[11,"seek","","",460,null],[11,"fmt","sdl2","",66,null],[11,"hash","","",66,null],[11,"eq","","",66,null],[11,"clone","","",66,null],[11,"clone","","",415,null],[11,"audio","","Initializes the audio subsystem.",415,null],[11,"event","","Initializes the event subsystem.",415,null],[11,"joystick","","Initializes the joystick subsystem.",415,null],[11,"haptic","","Initializes the haptic subsystem.",415,null],[11,"game_controller","","Initializes the game controller subsystem.",415,null],[11,"timer","","Initializes the timer subsystem.",415,null],[11,"video","","Initializes the video subsystem.",415,null],[11,"event_pump","","Obtains the SDL event pump.",415,null],[11,"clone","","",461,null],[11,"fmt","","",461,null],[11,"sdl","","Obtain an SDL context.",461,null],[11,"clone","","",407,null],[11,"fmt","","",407,null],[11,"sdl","","Obtain an SDL context.",407,null],[11,"clone","","",462,null],[11,"fmt","","",462,null],[11,"sdl","","Obtain an SDL context.",462,null],[11,"clone","","",400,null],[11,"fmt","","",400,null],[11,"sdl","","Obtain an SDL context.",400,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"sdl","","Obtain an SDL context.",68,null],[11,"clone","","",445,null],[11,"sdl","","Obtain an SDL context.",445,null],[11,"clone","","",393,null],[11,"sdl","","Obtain an SDL context.",393,null],[11,"drop","","",394,null],[0,"audio","","Audio Functions",null,null],[3,"DriverIterator","sdl2::audio","",null,null],[3,"AudioSpecWAV","","",null,null],[12,"freq","","",463,null],[12,"format","","",463,null],[12,"channels","","",463,null],[3,"AudioSpecDesired","","",null,null],[12,"freq","","DSP frequency (samples per second). Set to None for the device&#39;s fallback frequency.",464,null],[12,"channels","","Number of separate audio channels. Set to None for the device&#39;s fallback number of channels.",464,null],[12,"samples","","Audio buffer size in samples (power of 2). Set to None for the device&#39;s fallback sample size.",464,null],[3,"AudioSpec","","",null,null],[12,"freq","","",465,null],[12,"format","","",465,null],[12,"channels","","",465,null],[12,"silence","","",465,null],[12,"samples","","",465,null],[12,"size","","",465,null],[3,"AudioDevice","","Wraps SDL_AudioDeviceID and owns the callback data used by the audio device.",null,null],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`.",null,null],[3,"AudioCVT","","",null,null],[4,"AudioFormat","","",null,null],[13,"U8","","Unsigned 8-bit samples",466,null],[13,"S8","","Signed 8-bit samples",466,null],[13,"U16LSB","","Unsigned 16-bit samples, little-endian",466,null],[13,"U16MSB","","Unsigned 16-bit samples, big-endian",466,null],[13,"S16LSB","","Signed 16-bit samples, little-endian",466,null],[13,"S16MSB","","Signed 16-bit samples, big-endian",466,null],[13,"S32LSB","","Signed 32-bit samples, little-endian",466,null],[13,"S32MSB","","Signed 32-bit samples, big-endian",466,null],[13,"F32LSB","","32-bit floating point samples, little-endian",466,null],[13,"F32MSB","","32-bit floating point samples, big-endian",466,null],[4,"AudioStatus","","",null,null],[13,"Stopped","","",467,null],[13,"Playing","","",467,null],[13,"Paused","","",467,null],[5,"drivers","","Gets an iterator of all audio drivers compiled into the SDL2 library.",null,{"inputs":[],"output":{"name":"driveriterator"}}],[8,"AudioCallback","","",null,null],[16,"Channel","","",468,null],[10,"callback","","",468,null],[8,"AudioFormatNum","","A phantom type for retreiving the SDL_AudioFormat of a given generic type.\nAll format types are returned as native-endian.",null,null],[10,"audio_format","","",469,{"inputs":[],"output":{"name":"audioformat"}}],[10,"zero","","",469,{"inputs":[],"output":{"name":"self"}}],[11,"open_playback","sdl2","Opens a new audio device given the desired parameters and callback.",461,null],[11,"current_audio_driver","","",461,null],[11,"num_audio_playback_devices","","",461,null],[11,"audio_playback_device_name","","",461,null],[11,"hash","sdl2::audio","",466,null],[11,"fmt","","",466,null],[11,"eq","","",466,null],[11,"clone","","",466,null],[11,"u16_sys","","Unsigned 16-bit samples, native endian",466,{"inputs":[],"output":{"name":"audioformat"}}],[11,"s16_sys","","Signed 16-bit samples, native endian",466,{"inputs":[],"output":{"name":"audioformat"}}],[11,"s32_sys","","Signed 32-bit samples, native endian",466,{"inputs":[],"output":{"name":"audioformat"}}],[11,"f32_sys","","32-bit floating point samples, native endian",466,{"inputs":[],"output":{"name":"audioformat"}}],[11,"fmt","","",467,null],[11,"hash","","",467,null],[11,"eq","","",467,null],[11,"clone","","",467,null],[11,"from_i64","","",467,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",467,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",470,null],[11,"next","","",470,null],[11,"size_hint","","",470,null],[11,"load_wav","","Loads a WAVE from the file path.",463,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"load_wav_rw","","Loads a WAVE from the data source.",463,{"inputs":[{"name":"rwops"}],"output":{"name":"result"}}],[11,"buffer","","",463,null],[11,"drop","","",463,null],[11,"clone","","",464,null],[11,"fmt","","",465,null],[11,"hash","","",465,null],[11,"eq","","",465,null],[11,"ne","","",465,null],[11,"clone","","",465,null],[11,"open_playback","","Opens a new audio device given the desired parameters and callback.",471,{"inputs":[{"name":"audiosubsystem"},{"name":"option"},{"name":"audiospecdesired"},{"name":"f"}],"output":{"name":"result"}}],[11,"subsystem","","",471,null],[11,"status","","",471,null],[11,"pause","","Pauses playback of the audio device.",471,null],[11,"resume","","Starts playback of the audio device.",471,null],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",471,null],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",471,null],[11,"deref","","",472,null],[11,"deref_mut","","",472,null],[11,"drop","","",472,null],[11,"clone","","",473,null],[11,"new","","",473,{"inputs":[{"name":"audioformat"},{"name":"u8"},{"name":"i32"},{"name":"audioformat"},{"name":"u8"},{"name":"i32"}],"output":{"name":"result"}}],[11,"convert","","Convert audio data to a desired audio format.",473,null],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes\ninto `convert()` is unchanged from the result.",473,null],[11,"capacity","","Gets the buffer capacity that can contain both the original and\nconverted data.",473,null],[0,"version","sdl2","Querying SDL Version",null,null],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use.",null,null],[12,"major","","major version",474,null],[12,"minor","","minor version",474,null],[12,"patch","","update version (patchlevel)",474,null],[5,"version","","Get the version of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"version"}}],[5,"revision","","Get the code revision of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"string"}}],[5,"revision_number","","Get the revision number of SDL that is linked against your program.",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","","",474,null],[11,"hash","","",474,null],[11,"eq","","",474,null],[11,"ne","","",474,null],[11,"clone","","",474,null],[11,"from_ll","","Convert a raw *SDL_version to Version.",474,{"inputs":[{"name":"sdl_version"}],"output":{"name":"version"}}],[11,"fmt","","",474,null],[0,"messagebox","sdl2","",null,null],[3,"MessageBoxFlag","sdl2::messagebox","",null,null],[4,"ShowMessageError","","",null,null],[13,"InvalidTitle","","",475,null],[13,"InvalidMessage","","",475,null],[13,"SdlError","","",475,null],[5,"show_simple_message_box","","",null,{"inputs":[{"name":"messageboxflag"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[17,"MESSAGEBOX_ERROR","","",null,null],[17,"MESSAGEBOX_WARNING","","",null,null],[17,"MESSAGEBOX_INFORMATION","","",null,null],[11,"hash","","",476,null],[11,"cmp","","",476,null],[11,"partial_cmp","","",476,null],[11,"lt","","",476,null],[11,"le","","",476,null],[11,"gt","","",476,null],[11,"ge","","",476,null],[11,"clone","","",476,null],[11,"eq","","",476,null],[11,"ne","","",476,null],[11,"fmt","","",476,null],[11,"empty","","Returns an empty set of flags.",476,{"inputs":[],"output":{"name":"messageboxflag"}}],[11,"all","","Returns the set containing all flags.",476,{"inputs":[],"output":{"name":"messageboxflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",476,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",476,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",476,{"inputs":[{"name":"u32"}],"output":{"name":"messageboxflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",476,null],[11,"is_all","","Returns `true` if all flags are currently set.",476,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",476,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",476,null],[11,"insert","","Inserts the specified flags in-place.",476,null],[11,"remove","","Removes the specified flags in-place.",476,null],[11,"toggle","","Toggles the specified flags in-place.",476,null],[11,"bitor","","Returns the union of the two sets of flags.",476,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",476,null],[11,"bitand","","Returns the intersection between the two sets of flags.",476,null],[11,"sub","","Returns the set difference of the two sets of flags.",476,null],[11,"not","","Returns the complement of this set of flags.",476,null],[11,"from_iter","","",476,{"inputs":[{"name":"t"}],"output":{"name":"messageboxflag"}}],[0,"hint","sdl2","",null,null],[4,"Hint","sdl2::hint","",null,null],[13,"Default","","",477,null],[13,"Normal","","",477,null],[13,"Override","","",477,null],[5,"set","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"get","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"set_with_priority","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"hint"}],"output":{"name":"bool"}}],[11,"fmt","sdl2","",67,null],[11,"fmt","","",67,null],[11,"description","","",67,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sem_t"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[4,"Error"],[4,"IntegerOrSdlError"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"EventType"],[4,"WindowEventId"],[4,"Event"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[4,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"RangeFull"],[3,"RangeTo"],[3,"RangeToInclusive"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"TraitObject"],[4,"Ordering"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"EventSubsystem"],[3,"EventPump"],[3,"EventPollIterator"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[4,"PrefPathError"],[4,"HatState"],[3,"JoystickSubsystem"],[3,"Joystick"],[3,"Guid"],[4,"AddMappingError"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameControllerSubsystem"],[3,"GameController"],[4,"Keycode"],[4,"Scancode"],[3,"Mod"],[3,"KeyboardState"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[3,"Sdl"],[3,"KeyboardUtil"],[3,"TextInputUtil"],[4,"SystemCursor"],[4,"Mouse"],[3,"Cursor"],[3,"MouseState"],[3,"MouseUtil"],[3,"Rect"],[3,"Point"],[3,"Surface"],[3,"SurfaceRef"],[3,"PixelMasks"],[4,"Color"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[4,"WindowBuildError"],[3,"GLAttr"],[3,"ContextFlagsBuilder"],[3,"ContextFlags"],[3,"GLContext"],[3,"Window"],[3,"WindowBuilder"],[3,"WindowRef"],[3,"DriverIterator"],[3,"TimerSubsystem"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"TextureAccess"],[4,"BlendMode"],[4,"RendererParent"],[4,"TextureValueError"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[3,"Renderer"],[3,"RendererBuilder"],[3,"RenderTarget"],[3,"Texture"],[3,"DriverIterator"],[3,"RWops"],[3,"AudioSubsystem"],[3,"HapticSubsystem"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioFormat"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"DriverIterator"],[3,"AudioDevice"],[3,"AudioDeviceLockGuard"],[3,"AudioCVT"],[3,"Version"],[4,"ShowMessageError"],[3,"MessageBoxFlag"],[4,"Hint"]]};
searchIndex["osmesa_sys"] = {"doc":"","items":[[3,"OsMesa","osmesa_sys","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,null],[11,"try_lock","","Attempts to acquire this lock.",1,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,null],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,null],[11,"description","","",4,null],[11,"description","core::num","",5,null],[11,"description","","",6,null],[11,"description","core::num::dec2flt","",7,null],[11,"description","collections::string","",8,null],[11,"description","","",9,null],[11,"description","","",10,null],[11,"description","rustc_unicode::char","",11,null],[11,"description","alloc::boxed","",2,null],[11,"cause","","",2,null],[11,"description","core::fmt","",12,null],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",13,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",13,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",13,null],[11,"is","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",13,null],[11,"is","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",13,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",13,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"clone","std::thread::local","",15,null],[11,"eq","","",15,null],[11,"with","","Acquires a reference to the value in this TLS key.",16,null],[11,"state","","Query the current state of this key.",16,null],[11,"new","std::thread::local::elf","",17,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",17,null],[11,"new","std::thread::local::os","",18,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",18,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",19,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",19,null],[11,"stack_size","","Sets the size of the stack for the new thread.",19,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",19,null],[11,"clone","","",20,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",20,null],[11,"name","","Gets the thread&#39;s name.",20,null],[11,"fmt","","",20,null],[11,"thread","","Extracts a handle to the underlying thread",21,null],[11,"join","","Waits for the associated thread to finish.",21,null],[11,"clone","std::collections::hash::map","",22,null],[11,"new","","Creates an empty HashMap.",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",22,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",22,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",22,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",22,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",22,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",22,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",22,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",22,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",22,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",22,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",22,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",22,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",22,null],[11,"len","","Returns the number of elements in the map.",22,null],[11,"is_empty","","Returns true if the map contains no elements.",22,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",22,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",22,null],[11,"get","","Returns a reference to the value corresponding to the key.",22,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",22,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",22,null],[11,"insert","","Inserts a key-value pair into the map.",22,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",22,null],[11,"eq","","",22,null],[11,"fmt","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",22,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"len","","",23,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"len","","",29,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",30,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",30,null],[11,"key","","Returns a reference to this entry&#39;s key.",30,null],[11,"key","","Gets a reference to the key in the entry.",31,null],[11,"get","","Gets a reference to the value in the entry.",31,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",31,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",31,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",31,null],[11,"remove","","Takes the value out of the entry, and returns it",31,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",32,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",32,null],[11,"from_iter","","",22,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",22,null],[11,"extend","","",22,null],[11,"clone","","",33,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",34,null],[11,"new","","Creates an empty HashSet.",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",34,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",34,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",34,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",34,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",34,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",34,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",34,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",34,null],[11,"difference","","Visit the values representing the difference.",34,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",34,null],[11,"intersection","","Visit the values representing the intersection.",34,null],[11,"union","","Visit the values representing the union.",34,null],[11,"len","","Returns the number of elements in the set.",34,null],[11,"is_empty","","Returns true if the set contains no elements.",34,null],[11,"drain","","Clears the set, returning all elements in an iterator.",34,null],[11,"clear","","Clears the set, removing all values.",34,null],[11,"contains","","Returns `true` if the set contains a value.",34,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",34,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",34,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",34,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",34,null],[11,"insert","","Adds a value to the set.",34,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",34,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",34,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",34,null],[11,"eq","","",34,null],[11,"fmt","","",34,null],[11,"from_iter","","",34,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",34,null],[11,"extend","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",34,null],[11,"clone","","",35,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"len","","",35,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"len","","",37,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"clone","collections::linked_list","",42,null],[11,"clone","","",43,null],[11,"default","","",44,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",44,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",44,null],[11,"iter","","Provides a forward iterator.",44,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",44,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",44,null],[11,"len","","Returns the length of the `LinkedList`.",44,null],[11,"clear","","Removes all elements from the `LinkedList`.",44,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",44,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",44,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",44,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",44,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",44,null],[11,"push_front","","Adds an element first in the list.",44,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",44,null],[11,"push_back","","Appends an element to the back of a list",44,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",44,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",44,null],[11,"front_place","","Returns a place for insertion at the front of the list.",44,null],[11,"back_place","","Returns a place for insertion at the back of the list.",44,null],[11,"drop","","",44,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",45,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",45,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"from_iter","","",44,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",44,null],[11,"extend","","",44,null],[11,"extend","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"partial_cmp","","",44,null],[11,"cmp","","",44,null],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"hash","","",44,null],[11,"make_place","","",46,null],[11,"pointer","","",46,null],[11,"finalize","","",46,null],[11,"make_place","","",47,null],[11,"pointer","","",47,null],[11,"finalize","","",47,null],[11,"clone","collections::binary_heap","",48,null],[11,"clone_from","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",48,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",48,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",48,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",48,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",48,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",48,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",48,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",48,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",48,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",48,null],[11,"push","","Pushes an item onto the binary heap.",48,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",48,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",48,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",48,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",48,null],[11,"len","","Returns the length of the binary heap.",48,null],[11,"is_empty","","Checks if the binary heap is empty.",48,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",48,null],[11,"clear","","Drops all items from the binary heap.",48,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",48,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"from","","",48,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",48,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",48,null],[11,"extend","","",48,null],[11,"extend","","",48,null],[11,"clone","collections::vec_deque","",53,null],[11,"drop","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",53,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",53,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",53,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",53,null],[11,"swap","","Swaps elements at indices `i` and `j`.",53,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",53,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",53,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",53,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",53,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",53,null],[11,"iter","","Returns a front-to-back iterator.",53,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",53,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",53,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",53,null],[11,"len","","Returns the number of elements in the `VecDeque`.",53,null],[11,"is_empty","","Returns true if the buffer contains no elements",53,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",53,null],[11,"clear","","Clears the buffer, removing all values.",53,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",53,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",53,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",53,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",53,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",53,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",53,null],[11,"push_front","","Inserts an element first in the sequence.",53,null],[11,"push_back","","Appends an element to the back of a buffer",53,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",53,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",53,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",53,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",53,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",53,null],[11,"split_off","","Splits the collection into two at the given index.",53,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",53,null],[11,"retain","","Retains only the elements specified by the predicate.",53,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",53,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"drop","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"eq","","",53,null],[11,"partial_cmp","","",53,null],[11,"cmp","","",53,null],[11,"hash","","",53,null],[11,"index","","",53,null],[11,"index_mut","","",53,null],[11,"from_iter","","",53,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",53,null],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"fmt","","",53,null],[11,"from","","",53,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",52,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",58,null],[11,"size_hint","","",58,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"fmt","","",60,null],[11,"fmt","","",60,null],[11,"description","","",60,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"fmt","","",62,null],[11,"fmt","","",62,null],[11,"description","","",62,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"len","","",63,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"len","","",64,null],[11,"clone","std::ffi::c_str","",65,null],[11,"hash","","",65,null],[11,"cmp","","",65,null],[11,"partial_cmp","","",65,null],[11,"lt","","",65,null],[11,"le","","",65,null],[11,"gt","","",65,null],[11,"ge","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"hash","","",66,null],[11,"fmt","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",65,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",65,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",65,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",65,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",65,null],[11,"into_bytes","","Returns the underlying byte buffer.",65,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",65,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",65,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",65,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",66,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",66,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",66,null],[11,"as_ptr","","Returns the inner pointer to this C string.",66,null],[11,"to_bytes","","Converts this C string to a byte slice.",66,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",66,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",66,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",66,null],[11,"deref","","",65,null],[11,"fmt","","",65,null],[11,"from","collections::vec","",52,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",66,null],[11,"default","","",65,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",65,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",67,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",67,null],[11,"description","","",67,null],[11,"fmt","","",67,null],[11,"from","std::io::error","",70,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",69,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",69,null],[11,"description","","",69,null],[11,"cause","","",69,null],[11,"fmt","","",69,null],[11,"eq","","",66,null],[11,"partial_cmp","","",66,null],[11,"cmp","","",66,null],[11,"to_owned","","",66,null],[11,"from","","",65,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",65,null],[11,"as_ref","","",66,null],[11,"as_ref","","",65,null],[11,"clone","std::ffi::os_str","",71,null],[11,"new","","Constructs a new empty `OsString`.",71,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",71,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",71,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",71,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",71,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",71,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",71,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",71,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",71,null],[11,"from","","",71,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",71,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",71,null],[11,"new","","Coerces into an `OsStr` slice.",72,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",72,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",72,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",72,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",72,null],[11,"len","","Returns the length of this `OsStr`.",72,null],[11,"deref","","",71,null],[11,"default","","",71,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",71,null],[11,"eq","","",71,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"partial_cmp","","",71,null],[11,"cmp","","",71,null],[11,"hash","","",71,null],[11,"eq","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"lt","","",72,null],[11,"le","","",72,null],[11,"gt","","",72,null],[11,"ge","","",72,null],[11,"partial_cmp","","",72,null],[11,"cmp","","",72,null],[11,"eq","","",71,null],[11,"eq","","",72,null],[11,"partial_cmp","","",71,null],[11,"partial_cmp","","",72,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"eq","collections::borrow","",73,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","","",73,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"hash","","",72,null],[11,"fmt","","",72,null],[11,"borrow","","",71,null],[11,"to_owned","","",72,null],[11,"as_ref","","",72,null],[11,"as_ref","","",71,null],[11,"as_ref","collections::string","",74,null],[11,"clone","std::fs","",75,null],[11,"clone","","",76,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"hash","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"open","","Attempts to open a file in read-only mode.",79,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",79,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",79,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",79,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",79,null],[11,"metadata","","Queries metadata about the underlying file.",79,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",79,null],[11,"fmt","","",79,null],[11,"read","","",79,null],[11,"read_to_end","","",79,null],[11,"write","","",79,null],[11,"flush","","",79,null],[11,"seek","","",79,null],[11,"new","","Creates a blank new set of options ready for configuration.",76,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",76,null],[11,"write","","Sets the option for write access.",76,null],[11,"append","","Sets the option for the append mode.",76,null],[11,"truncate","","Sets the option for truncating a previous file.",76,null],[11,"create","","Sets the option for creating a new file.",76,null],[11,"create_new","","Sets the option to always create a new file.",76,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",76,null],[11,"file_type","","Returns the file type for this metadata.",75,null],[11,"is_dir","","Returns whether this metadata is for a directory.",75,null],[11,"is_file","","Returns whether this metadata is for a regular file.",75,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",75,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",75,null],[11,"modified","","Returns the last modification time listed in this metadata.",75,null],[11,"accessed","","Returns the last access time of this metadata.",75,null],[11,"created","","Returns the creation time listed in the this metadata.",75,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",77,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",77,null],[11,"is_dir","","Test whether this file type represents a directory.",78,null],[11,"is_file","","Test whether this file type represents a regular file.",78,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",78,null],[11,"next","","",80,null],[11,"path","","Returns the full path to the file that this entry represents.",81,null],[11,"metadata","","Return the metadata for the file that this entry points at.",81,null],[11,"file_type","","Return the file type for the file that this entry points at.",81,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",81,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",82,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",82,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",82,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",83,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",83,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",83,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",83,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",83,null],[11,"read","","",83,null],[11,"fill_buf","","",83,null],[11,"consume","","",83,null],[11,"fmt","","",83,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",83,null],[11,"fmt","","",84,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",85,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",85,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",85,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",85,null],[11,"write","","",85,null],[11,"flush","","",85,null],[11,"fmt","","",85,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",85,null],[11,"drop","","",85,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",84,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",84,null],[11,"from","std::io::error","",70,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",84,null],[11,"fmt","","",84,null],[11,"new","","Creates a new `LineWriter`.",86,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",86,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",86,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",86,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"fmt","","",86,null],[11,"fmt","std::io::cursor","",87,null],[11,"clone","","",87,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",87,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",87,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",87,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",87,null],[11,"position","","Returns the current position of this cursor.",87,null],[11,"set_position","","Sets the position of this cursor.",87,null],[11,"seek","","",87,null],[11,"read","","",87,null],[11,"fill_buf","","",87,null],[11,"consume","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"fmt","std::io::error","",70,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"eq","","",88,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",70,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",70,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",70,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",70,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",70,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",70,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",70,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",70,null],[11,"fmt","","",70,null],[11,"description","","",70,null],[11,"cause","","",70,null],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,null],[11,"read_to_string","","",2,null],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,null],[11,"write_all","","",2,null],[11,"write_fmt","","",2,null],[11,"seek","","",2,null],[11,"fill_buf","","",2,null],[11,"consume","","",2,null],[11,"read_until","","",2,null],[11,"read_line","","",2,null],[11,"write","collections::vec","",52,null],[11,"write_all","","",52,null],[11,"flush","","",52,null],[11,"read","std::io::util","",89,null],[11,"fill_buf","","",89,null],[11,"consume","","",89,null],[11,"read","","",90,null],[11,"write","","",91,null],[11,"flush","","",91,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",92,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",92,null],[11,"read","","",92,null],[11,"read_to_end","","",92,null],[11,"read_to_string","","",92,null],[11,"read_exact","","",92,null],[11,"read","","",93,null],[11,"read_to_end","","",93,null],[11,"fill_buf","","",93,null],[11,"consume","","",93,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",94,null],[11,"write","","",94,null],[11,"flush","","",94,null],[11,"write_all","","",94,null],[11,"write_fmt","","",94,null],[11,"write","","",95,null],[11,"flush","","",95,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",96,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"write_all","","",96,null],[11,"write_fmt","","",96,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"fmt","std::io","",98,null],[11,"clone","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"read","","",99,null],[11,"fill_buf","","",99,null],[11,"consume","","",99,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",100,null],[11,"read","","",100,null],[11,"fill_buf","","",100,null],[11,"consume","","",100,null],[11,"next","","",101,null],[11,"fmt","","",102,null],[11,"next","","",103,null],[11,"description","","",102,null],[11,"cause","","",102,null],[11,"fmt","","",102,null],[11,"next","","",104,null],[11,"next","","",105,null],[11,"cmp","std::net::ip","",106,null],[11,"partial_cmp","","",106,null],[11,"lt","","",106,null],[11,"le","","",106,null],[11,"gt","","",106,null],[11,"ge","","",106,null],[11,"hash","","",106,null],[11,"fmt","","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"hash","","",107,null],[11,"clone","","",107,null],[11,"eq","","",107,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",108,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",108,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",108,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",108,null],[11,"is_private","","Returns true if this is a private address.",108,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",108,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",108,null],[11,"is_multicast","","Returns true if this is a multicast address.",108,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",108,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",108,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",108,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",108,null],[11,"fmt","","",106,null],[11,"fmt","","",108,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"eq","","",108,null],[11,"hash","","",108,null],[11,"partial_cmp","","",108,null],[11,"cmp","","",108,null],[11,"from","","",108,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",108,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",109,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",109,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",109,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",109,null],[11,"is_global","","Returns true if the address appears to be globally routable.",109,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",109,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",109,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",109,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",109,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",109,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",109,null],[11,"is_multicast","","Returns true if this is a multicast address.",109,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",109,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",109,null],[11,"fmt","","",109,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"eq","","",109,null],[11,"hash","","",109,null],[11,"partial_cmp","","",109,null],[11,"cmp","","",109,null],[11,"from","","",109,null],[11,"fmt","std::net::addr","",110,null],[11,"hash","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",110,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",110,null],[11,"set_ip","","Change the IP address associated with this socket address.",110,null],[11,"port","","Returns the port number associated with this socket address.",110,null],[11,"set_port","","Change the port number associated with this socket address.",110,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",111,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,null],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,null],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",112,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",112,null],[11,"set_ip","","Change the IP address associated with this socket address.",112,null],[11,"port","","Returns the port number associated with this socket address.",112,null],[11,"set_port","","Change the port number associated with this socket address.",112,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",112,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",112,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",112,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",112,null],[11,"fmt","","",110,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",112,null],[11,"fmt","","",112,null],[11,"clone","","",111,null],[11,"clone","","",112,null],[11,"eq","","",111,null],[11,"eq","","",112,null],[11,"hash","","",111,null],[11,"hash","","",112,null],[11,"to_socket_addrs","","",110,null],[11,"to_socket_addrs","","",111,null],[11,"to_socket_addrs","","",112,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",113,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",113,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",113,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",113,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",113,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",113,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",113,null],[11,"read_timeout","","Returns the read timeout of this socket.",113,null],[11,"write_timeout","","Returns the write timeout of this socket.",113,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",113,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",113,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",113,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",113,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",113,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",113,null],[11,"read","","",113,null],[11,"read_to_end","","",113,null],[11,"write","","",113,null],[11,"flush","","",113,null],[11,"fmt","","",113,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",114,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",114,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",114,null],[11,"accept","","Accept a new incoming connection from this listener.",114,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",114,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",114,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",114,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",114,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",114,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",114,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",114,null],[11,"next","","",115,null],[11,"fmt","","",114,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",116,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",116,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",116,null],[11,"local_addr","","Returns the socket address that this socket was created from.",116,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",116,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",116,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",116,null],[11,"read_timeout","","Returns the read timeout of this socket.",116,null],[11,"write_timeout","","Returns the write timeout of this socket.",116,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",116,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",116,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",116,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",116,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",116,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",116,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",116,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",116,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",116,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",116,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",116,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",116,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",116,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",116,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",116,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",116,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",116,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",116,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",116,null],[11,"fmt","","",116,null],[11,"from_str","std::net::ip","",106,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",112,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"fmt","","",117,null],[11,"fmt","","",117,null],[11,"description","","",117,null],[11,"fmt","std::net","",118,null],[11,"eq","","",118,null],[11,"clone","","",118,null],[11,"next","","",119,null],[11,"clone","std::os::linux::raw::arch","",120,null],[11,"as_raw_stat","std::fs","",75,null],[11,"st_dev","","",75,null],[11,"st_ino","","",75,null],[11,"st_mode","","",75,null],[11,"st_nlink","","",75,null],[11,"st_uid","","",75,null],[11,"st_gid","","",75,null],[11,"st_rdev","","",75,null],[11,"st_size","","",75,null],[11,"st_atime","","",75,null],[11,"st_atime_nsec","","",75,null],[11,"st_mtime","","",75,null],[11,"st_mtime_nsec","","",75,null],[11,"st_ctime","","",75,null],[11,"st_ctime_nsec","","",75,null],[11,"st_blksize","","",75,null],[11,"st_blocks","","",75,null],[11,"as_raw_fd","","",79,null],[11,"from_raw_fd","","",79,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",79,null],[11,"as_raw_fd","std::net::tcp","",113,null],[11,"as_raw_fd","","",114,null],[11,"as_raw_fd","std::net::udp","",116,null],[11,"from_raw_fd","std::net::tcp","",113,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",114,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",116,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",113,null],[11,"into_raw_fd","","",114,null],[11,"into_raw_fd","std::net::udp","",116,null],[11,"from_vec","std::ffi::os_str","",71,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",71,null],[11,"from_bytes","","",72,null],[11,"as_bytes","","",72,null],[11,"mode","std::fs","",77,null],[11,"set_mode","","",77,null],[11,"from_mode","","",77,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",76,null],[11,"custom_flags","","",76,null],[11,"dev","","",75,null],[11,"ino","","",75,null],[11,"mode","","",75,null],[11,"nlink","","",75,null],[11,"uid","","",75,null],[11,"gid","","",75,null],[11,"rdev","","",75,null],[11,"size","","",75,null],[11,"atime","","",75,null],[11,"atime_nsec","","",75,null],[11,"mtime","","",75,null],[11,"mtime_nsec","","",75,null],[11,"ctime","","",75,null],[11,"ctime_nsec","","",75,null],[11,"blksize","","",75,null],[11,"blocks","","",75,null],[11,"is_block_device","","",78,null],[11,"is_char_device","","",78,null],[11,"is_fifo","","",78,null],[11,"is_socket","","",78,null],[11,"ino","","",81,null],[11,"mode","","",82,null],[11,"uid","std::process","",121,null],[11,"gid","","",121,null],[11,"before_exec","","",121,null],[11,"exec","","",121,null],[11,"from_raw","","",122,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",122,null],[11,"from_raw_fd","","",123,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",124,null],[11,"as_raw_fd","","",125,null],[11,"as_raw_fd","","",126,null],[11,"into_raw_fd","","",124,null],[11,"into_raw_fd","","",125,null],[11,"into_raw_fd","","",126,null],[11,"as_pthread_t","std::thread","",21,null],[11,"into_pthread_t","","",21,null],[11,"clone","std::sys::ext::net","",127,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",127,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",127,null],[11,"fmt","","",127,null],[11,"fmt","","",128,null],[11,"connect","","Connects to the socket named by `path`.",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",128,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",128,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",128,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",128,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",128,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",128,null],[11,"read_timeout","","Returns the read timeout of this socket.",128,null],[11,"write_timeout","","Returns the write timeout of this socket.",128,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",128,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",128,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",128,null],[11,"read","","",128,null],[11,"read_to_end","","",128,null],[11,"write","","",128,null],[11,"flush","","",128,null],[11,"as_raw_fd","","",128,null],[11,"from_raw_fd","","",128,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",128,null],[11,"fmt","","",129,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",129,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",129,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",129,null],[11,"local_addr","","Returns the local socket address of this listener.",129,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",129,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",129,null],[11,"incoming","","Returns an iterator over incoming connections.",129,null],[11,"as_raw_fd","","",129,null],[11,"from_raw_fd","","",129,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",129,null],[11,"fmt","","",130,null],[11,"next","","",130,null],[11,"size_hint","","",130,null],[11,"fmt","","",131,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",131,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",131,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",131,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",131,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",131,null],[11,"local_addr","","Returns the address of this socket.",131,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",131,null],[11,"recv_from","","Receives data from the socket.",131,null],[11,"recv","","Receives data from the socket.",131,null],[11,"send_to","","Sends data on the socket to the specified address.",131,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",131,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",131,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",131,null],[11,"read_timeout","","Returns the read timeout of this socket.",131,null],[11,"write_timeout","","Returns the write timeout of this socket.",131,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",131,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",131,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",131,null],[11,"as_raw_fd","","",131,null],[11,"from_raw_fd","","",131,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",131,null],[11,"deref","std::panic","",132,null],[11,"deref_mut","","",132,null],[11,"call_once","","",132,null],[11,"eq","std::path","",133,null],[11,"ne","","",133,null],[11,"cmp","","",133,null],[11,"partial_cmp","","",133,null],[11,"lt","","",133,null],[11,"le","","",133,null],[11,"gt","","",133,null],[11,"ge","","",133,null],[11,"hash","","",133,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",133,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"kind","","The parsed prefix data.",134,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",134,null],[11,"eq","","",134,null],[11,"partial_cmp","","",134,null],[11,"cmp","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",135,null],[11,"hash","","",135,null],[11,"cmp","","",135,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",135,null],[11,"as_ref","","",135,null],[11,"clone","","",136,null],[11,"clone","","",137,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",136,null],[11,"as_ref","","",136,null],[11,"as_ref","","",136,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",137,null],[11,"as_ref","","",137,null],[11,"as_ref","","",137,null],[11,"next","","",137,null],[11,"next_back","","",137,null],[11,"next","","",136,null],[11,"next_back","","",136,null],[11,"eq","","",136,null],[11,"partial_cmp","","",136,null],[11,"cmp","","",136,null],[11,"clone","","",138,null],[11,"new","","Allocates an empty `PathBuf`.",138,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",138,null],[11,"push","","Extends `self` with `path`.",138,null],[11,"pop","","Truncate `self` to `self.parent()`.",138,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",138,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",138,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",138,null],[11,"from","","",138,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",138,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",138,null],[11,"fmt","","",138,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",139,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",139,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",139,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",139,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",139,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",139,null],[11,"is_relative","","A path is *relative* if it is not absolute.",139,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",139,null],[11,"parent","","The path without its final component, if any.",139,null],[11,"file_name","","The final component of the path, if it is a normal file.",139,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",139,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",139,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",139,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",139,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",139,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",139,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",139,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",139,null],[11,"components","","Produce an iterator over the components of the path.",139,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",139,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",139,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",139,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",139,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",139,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",139,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",139,null],[11,"exists","","Returns whether the path points at an existing entity.",139,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",139,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",139,null],[11,"deref","","",138,null],[11,"borrow","","",138,null],[11,"from","collections::borrow","",73,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",73,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",139,null],[11,"eq","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"as_ref","","",138,null],[11,"into","","",138,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"fmt","","",140,null],[11,"as_ref","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"eq","","",139,null],[11,"hash","","",139,null],[11,"partial_cmp","","",139,null],[11,"cmp","","",139,null],[11,"as_ref","","",139,null],[11,"as_ref","std::ffi::os_str","",72,null],[11,"as_ref","collections::borrow","",73,null],[11,"as_ref","std::ffi::os_str","",71,null],[11,"as_ref","collections::string","",74,null],[11,"as_ref","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","","",139,null],[11,"partial_cmp","","",138,null],[11,"partial_cmp","","",139,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","collections::borrow","",73,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::path","",139,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","","",73,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","","",138,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"eq","std::path","",138,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","","",139,null],[11,"eq","","",139,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","","",71,null],[11,"eq","collections::borrow","",73,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","collections::borrow","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","","",73,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",73,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"fmt","std::path","",140,null],[11,"description","","",140,null],[11,"write","std::process","",124,null],[11,"flush","","",124,null],[11,"read","","",125,null],[11,"read_to_end","","",125,null],[11,"read","","",126,null],[11,"read_to_end","","",126,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",121,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",121,null],[11,"args","","Add multiple arguments to pass to the program.",121,null],[11,"env","","Inserts or updates an environment variable mapping.",121,null],[11,"env_remove","","Removes an environment variable mapping.",121,null],[11,"env_clear","","Clears the entire environment map for the child process.",121,null],[11,"current_dir","","Sets the working directory for the child process.",121,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",121,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",121,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",121,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",121,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",121,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",121,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",121,null],[11,"clone","","",142,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"fmt","","",142,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",122,null],[11,"clone","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",122,null],[11,"code","","Returns the exit code of the process, if any.",122,null],[11,"fmt","","",122,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",143,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",143,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",143,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",143,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",144,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",144,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",144,null],[11,"id","","Retrieves the id of this handle.",145,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",145,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",145,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",145,null],[11,"drop","","",144,null],[11,"drop","","",145,null],[11,"fmt","","",144,null],[11,"fmt","","",145,null],[11,"clone","std::sync::mpsc","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"eq","","",148,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",150,null],[11,"clone","","",150,null],[11,"drop","","",150,null],[11,"fmt","","",150,null],[11,"send","","Sends a value on this synchronous channel.",151,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",151,null],[11,"clone","","",151,null],[11,"drop","","",151,null],[11,"fmt","","",151,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",152,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",152,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",152,null],[11,"next","","",153,null],[11,"next","","",154,null],[11,"into_iter","","",152,null],[11,"drop","","",152,null],[11,"fmt","","",152,null],[11,"fmt","","",146,null],[11,"fmt","","",146,null],[11,"description","","",146,null],[11,"cause","","",146,null],[11,"fmt","","",149,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"cause","","",147,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",155,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",155,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",156,null],[11,"clone","std::sync::condvar","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",157,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",158,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",158,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",158,null],[11,"new","","Creates a new condition variable",159,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",159,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",159,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",159,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",159,null],[11,"drop","std::sync::mutex","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",1,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",160,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",160,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",160,null],[11,"destroy","","Deallocates resources associated with this static mutex.",160,null],[11,"deref","","",161,null],[11,"deref_mut","","",161,null],[11,"drop","","",161,null],[11,"new","std::sync::once","Creates a new `Once` value.",162,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",162,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",162,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",163,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",164,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",164,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",164,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",164,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",164,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",164,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",164,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",164,null],[11,"drop","","",164,null],[11,"fmt","","",164,null],[11,"default","","",164,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",165,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",165,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",165,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",165,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",165,null],[11,"destroy","","Deallocates all resources associated with this static lock.",165,null],[11,"deref","","",166,null],[11,"deref","","",167,null],[11,"deref_mut","","",167,null],[11,"drop","","",166,null],[11,"drop","","",167,null],[11,"default","core::sync::atomic","",168,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",169,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",170,null],[11,"clone","","",170,null],[11,"new","","Creates a new `AtomicBool`.",168,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",168,null],[11,"store","","Stores a value into the bool.",168,null],[11,"swap","","Stores a value into the bool, returning the old value.",168,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",168,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",168,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",168,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",168,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",168,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",168,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",168,null],[11,"new","","Creates a new `AtomicPtr`.",169,null],[11,"load","","Loads a value from the pointer.",169,null],[11,"store","","Stores a value into the pointer.",169,null],[11,"swap","","Stores a value into the pointer, returning the old value.",169,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",169,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",169,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",169,null],[11,"default","","",171,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",171,null],[11,"new","","Creates a new atomic integer.",171,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",171,null],[11,"store","","Stores a value into the atomic integer.",171,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",171,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"fetch_add","","Add to the current value, returning the previous value.",171,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",171,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",171,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",171,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",171,null],[11,"default","","",172,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",172,null],[11,"new","","Creates a new atomic integer.",172,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",172,null],[11,"store","","Stores a value into the atomic integer.",172,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"fetch_add","","Add to the current value, returning the previous value.",172,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",172,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",172,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",172,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",172,null],[11,"default","","",173,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",173,null],[11,"new","","Creates a new atomic integer.",173,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",173,null],[11,"store","","Stores a value into the atomic integer.",173,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"fetch_add","","Add to the current value, returning the previous value.",173,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",173,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",173,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",173,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"fmt","","",168,null],[11,"fmt","","",169,null],[11,"hash","std::time::duration","",181,null],[11,"fmt","","",181,null],[11,"cmp","","",181,null],[11,"partial_cmp","","",181,null],[11,"lt","","",181,null],[11,"le","","",181,null],[11,"gt","","",181,null],[11,"ge","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"clone","","",181,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",181,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",181,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",181,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",181,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",181,null],[11,"add","","",181,null],[11,"add_assign","","",181,null],[11,"sub","","",181,null],[11,"sub_assign","","",181,null],[11,"mul","","",181,null],[11,"mul_assign","","",181,null],[11,"div","","",181,null],[11,"div_assign","","",181,null],[11,"cmp","std::time","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"cmp","","",183,null],[11,"partial_cmp","","",183,null],[11,"lt","","",183,null],[11,"le","","",183,null],[11,"gt","","",183,null],[11,"ge","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"fmt","","",184,null],[11,"clone","","",184,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",182,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",182,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",182,null],[11,"add","","",182,null],[11,"add_assign","","",182,null],[11,"sub","","",182,null],[11,"sub_assign","","",182,null],[11,"sub","","",182,null],[11,"fmt","","",182,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",183,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",183,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",183,null],[11,"add","","",183,null],[11,"add_assign","","",183,null],[11,"sub","","",183,null],[11,"sub_assign","","",183,null],[11,"fmt","","",183,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",184,null],[11,"description","","",184,null],[11,"fmt","","",184,null],[11,"fmt","std::sys_common::poison","",185,null],[11,"fmt","","",185,null],[11,"description","","",185,null],[11,"new","","Creates a `PoisonError`.",185,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",185,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",185,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",185,null],[11,"from","","",186,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",186,null],[11,"fmt","","",186,null],[11,"description","","",186,null],[11,"cause","","",186,null],[11,"clone","libc::unix","",187,null],[11,"clone","","",188,null],[11,"clone","","",189,null],[11,"clone","","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","libc::unix::notbsd","",200,null],[11,"clone","","",201,null],[11,"clone","","",202,null],[11,"clone","","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","libc::unix::notbsd::linux","",215,null],[11,"clone","","",216,null],[11,"clone","","",217,null],[11,"clone","","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","libc::unix::notbsd::linux::other","",231,null],[11,"clone","","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",242,null],[11,"clone","","",243,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",244,null],[11,"clone","","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",252,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",252,null],[11,"file","","Returns the name of the source file from which the panic originated.",253,null],[11,"line","","Returns the line number from which the panic originated.",253,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",254,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",254,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",254,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",254,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",254,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",254,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",254,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",254,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",254,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",254,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",254,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",254,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",254,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",254,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",254,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",254,null],[11,"hash","","",254,null],[11,"fmt","","",254,null],[11,"fmt","","",254,null],[11,"fmt","","",254,null],[11,"from","","",254,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",255,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",255,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",255,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",255,null],[11,"fmt","","",255,null],[11,"default","","",255,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",254,null],[11,"as_ref","","",254,null],[11,"borrow","collections::borrow","",73,null],[11,"clone","","",73,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",73,null],[11,"into_owned","","Extracts the owned data.",73,null],[11,"deref","","",73,null],[11,"cmp","","",73,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"fmt","","",73,null],[11,"fmt","","",73,null],[11,"hash","","",73,null],[11,"as_ref","","",73,null],[11,"hash","core::result","",256,null],[11,"fmt","","",256,null],[11,"cmp","","",256,null],[11,"partial_cmp","","",256,null],[11,"lt","","",256,null],[11,"le","","",256,null],[11,"gt","","",256,null],[11,"ge","","",256,null],[11,"eq","","",256,null],[11,"ne","","",256,null],[11,"clone","","",256,null],[11,"is_ok","","Returns true if the result is `Ok`",256,null],[11,"is_err","","Returns true if the result is `Err`",256,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",256,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",256,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",256,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",256,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",256,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",256,null],[11,"iter","","Returns an iterator over the possibly contained value.",256,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",256,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",256,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",256,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",256,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",256,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",256,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",256,null],[11,"fmt","","",257,null],[11,"next","","",257,null],[11,"size_hint","","",257,null],[11,"next_back","","",257,null],[11,"clone","","",257,null],[11,"fmt","","",258,null],[11,"next","","",258,null],[11,"size_hint","","",258,null],[11,"next_back","","",258,null],[11,"fmt","","",259,null],[11,"next","","",259,null],[11,"size_hint","","",259,null],[11,"next_back","","",259,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",256,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","shared_library::dynamic_library","",260,null],[11,"fmt","","",260,null],[11,"is","","Returns true if the boxed type is the same as `T`",260,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",260,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",260,null],[11,"is","","Forwards to the method defined on the type `Any`.",260,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",260,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",260,null],[11,"hash","core::any","",261,null],[11,"fmt","","",261,null],[11,"eq","","",261,null],[11,"ne","","",261,null],[11,"clone","","",261,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",261,{"inputs":[],"output":{"name":"typeid"}}],[11,"fmt","core::iter::range","",262,null],[11,"clone","","",262,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",263,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",264,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",265,null],[11,"next","core::iter::range","",262,null],[11,"size_hint","","",262,null],[11,"next","","",262,null],[11,"size_hint","","",262,null],[11,"next","","",262,null],[11,"size_hint","","",262,null],[11,"next","core::ops","",264,null],[11,"size_hint","","",264,null],[11,"next_back","","",264,null],[11,"next","","",263,null],[11,"next","","",265,null],[11,"size_hint","","",265,null],[11,"next_back","","",265,null],[11,"fmt","core::iter::sources","",266,null],[11,"clone","","",266,null],[11,"next","","",266,null],[11,"size_hint","","",266,null],[11,"next_back","","",266,null],[11,"fmt","","",267,null],[11,"next","","",267,null],[11,"size_hint","","",267,null],[11,"next_back","","",267,null],[11,"len","","",267,null],[11,"clone","","",267,null],[11,"default","","",267,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",268,null],[11,"clone","","",268,null],[11,"next","","",268,null],[11,"size_hint","","",268,null],[11,"next_back","","",268,null],[11,"len","","",268,null],[11,"fmt","core::iter","",269,null],[11,"clone","","",269,null],[11,"next","","",269,null],[11,"size_hint","","",269,null],[11,"next_back","","",269,null],[11,"fmt","","",270,null],[11,"clone","","",270,null],[11,"next","","",270,null],[11,"size_hint","","",270,null],[11,"next_back","","",270,null],[11,"fmt","","",271,null],[11,"clone","","",271,null],[11,"next","","",271,null],[11,"size_hint","","",271,null],[11,"fmt","","",272,null],[11,"clone","","",272,null],[11,"next","","",272,null],[11,"count","","",272,null],[11,"nth","","",272,null],[11,"find","","",272,null],[11,"last","","",272,null],[11,"size_hint","","",272,null],[11,"next_back","","",272,null],[11,"fmt","","",273,null],[11,"clone","","",273,null],[11,"next","","",273,null],[11,"size_hint","","",273,null],[11,"next_back","","",273,null],[11,"clone","","",274,null],[11,"fmt","","",274,null],[11,"next","","",274,null],[11,"size_hint","","",274,null],[11,"next_back","","",274,null],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"next","","",275,null],[11,"size_hint","","",275,null],[11,"next_back","","",275,null],[11,"clone","","",276,null],[11,"fmt","","",276,null],[11,"next","","",276,null],[11,"size_hint","","",276,null],[11,"next_back","","",276,null],[11,"fmt","","",277,null],[11,"clone","","",277,null],[11,"next","","# Overflow Behavior",277,null],[11,"size_hint","","",277,null],[11,"nth","","",277,null],[11,"count","","",277,null],[11,"next_back","","",277,null],[11,"fmt","","",278,null],[11,"clone","","",278,null],[11,"next","","",278,null],[11,"count","","",278,null],[11,"nth","","",278,null],[11,"last","","",278,null],[11,"size_hint","","",278,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",278,null],[11,"is_empty","","Checks if the iterator has finished iterating.",278,null],[11,"clone","","",279,null],[11,"fmt","","",279,null],[11,"next","","",279,null],[11,"size_hint","","",279,null],[11,"clone","","",280,null],[11,"fmt","","",280,null],[11,"next","","",280,null],[11,"size_hint","","",280,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"next","","",281,null],[11,"nth","","",281,null],[11,"count","","",281,null],[11,"last","","",281,null],[11,"size_hint","","",281,null],[11,"next_back","","",281,null],[11,"fmt","","",282,null],[11,"clone","","",282,null],[11,"next","","",282,null],[11,"nth","","",282,null],[11,"size_hint","","",282,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"next","","",283,null],[11,"size_hint","","",283,null],[11,"clone","","",284,null],[11,"fmt","","",284,null],[11,"next","","",284,null],[11,"size_hint","","",284,null],[11,"next_back","","",284,null],[11,"fmt","","",285,null],[11,"clone","","",285,null],[11,"next","","",285,null],[11,"nth","","",285,null],[11,"last","","",285,null],[11,"count","","",285,null],[11,"size_hint","","",285,null],[11,"next_back","","",285,null],[11,"clone","","",286,null],[11,"fmt","","",286,null],[11,"next","","",286,null],[11,"size_hint","","",286,null],[11,"next_back","","",286,null],[11,"borrow","collections::vec","",52,null],[11,"borrow_mut","","",52,null],[11,"fmt","core::hash::sip","",287,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",287,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",287,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",287,null],[11,"finish","","",287,null],[11,"clone","","",287,null],[11,"default","","",287,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",288,null],[11,"build_hasher","","",288,null],[11,"clone","","",288,null],[11,"default","","",288,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","collections::str","",289,null],[11,"next","","",289,null],[11,"size_hint","","",289,null],[11,"borrow","collections::string","",74,null],[11,"fmt","core::str::pattern","",290,null],[11,"eq","","",290,null],[11,"ne","","",290,null],[11,"clone","","",290,null],[11,"fmt","","",291,null],[11,"clone","","",291,null],[11,"haystack","","",291,null],[11,"next","","",291,null],[11,"next_match","","",291,null],[11,"next_reject","","",291,null],[11,"next_back","","",291,null],[11,"next_match_back","","",291,null],[11,"next_reject_back","","",291,null],[11,"fmt","","",292,null],[11,"clone","","",292,null],[11,"haystack","","",292,null],[11,"next","","",292,null],[11,"next_match","","",292,null],[11,"next_reject","","",292,null],[11,"next_back","","",292,null],[11,"next_match_back","","",292,null],[11,"next_reject_back","","",292,null],[11,"clone","","",293,null],[11,"fmt","","",293,null],[11,"haystack","","",293,null],[11,"next","","",293,null],[11,"next_match","","",293,null],[11,"next_reject","","",293,null],[11,"next_back","","",293,null],[11,"next_match_back","","",293,null],[11,"next_reject_back","","",293,null],[11,"fmt","","",294,null],[11,"clone","","",294,null],[11,"haystack","","",294,null],[11,"next","","",294,null],[11,"next_match","","",294,null],[11,"next_back","","",294,null],[11,"next_match_back","","",294,null],[11,"hash","core::marker","",295,null],[11,"eq","","",295,null],[11,"partial_cmp","","",295,null],[11,"cmp","","",295,null],[11,"clone","","",295,null],[11,"default","","",295,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",296,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",296,null],[11,"set","","Sets the contained value.",296,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",296,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",296,null],[11,"clone","","",296,null],[11,"default","","",296,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",296,null],[11,"partial_cmp","","",296,null],[11,"lt","","",296,null],[11,"le","","",296,null],[11,"gt","","",296,null],[11,"ge","","",296,null],[11,"cmp","","",296,null],[11,"fmt","","",297,null],[11,"eq","","",297,null],[11,"clone","","",297,null],[11,"new","","Creates a new `RefCell` containing `value`.",298,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",298,null],[11,"borrow_state","","Query the current state of this `RefCell`",298,null],[11,"borrow","","Immutably borrows the wrapped value.",298,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",298,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",298,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",298,null],[11,"clone","","",298,null],[11,"default","","",298,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",298,null],[11,"partial_cmp","","",298,null],[11,"lt","","",298,null],[11,"le","","",298,null],[11,"gt","","",298,null],[11,"ge","","",298,null],[11,"cmp","","",298,null],[11,"deref","","",299,null],[11,"clone","","Copies a `Ref`.",299,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",299,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",300,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",300,null],[11,"deref_mut","","",300,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",301,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",301,null],[11,"get","","Gets a mutable pointer to the wrapped value.",301,null],[11,"default","","",301,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"eq","core::ops","",302,null],[11,"clone","","",302,null],[11,"fmt","","",302,null],[11,"eq","","",264,null],[11,"ne","","",264,null],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"contains","","# Examples",264,null],[11,"eq","","",263,null],[11,"ne","","",263,null],[11,"clone","","",263,null],[11,"fmt","","",263,null],[11,"contains","","# Examples",263,null],[11,"eq","","",303,null],[11,"ne","","",303,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"contains","","# Examples",303,null],[11,"eq","","",265,null],[11,"ne","","",265,null],[11,"clone","","",265,null],[11,"fmt","","",265,null],[11,"from","","",265,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",265,null],[11,"eq","","",304,null],[11,"ne","","",304,null],[11,"clone","","",304,null],[11,"fmt","","",304,null],[11,"contains","","# Examples",304,null],[11,"hash","core::option","",305,null],[11,"fmt","","",305,null],[11,"cmp","","",305,null],[11,"partial_cmp","","",305,null],[11,"lt","","",305,null],[11,"le","","",305,null],[11,"gt","","",305,null],[11,"ge","","",305,null],[11,"eq","","",305,null],[11,"ne","","",305,null],[11,"clone","","",305,null],[11,"is_some","","Returns `true` if the option is a `Some` value",305,null],[11,"is_none","","Returns `true` if the option is a `None` value",305,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",305,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",305,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",305,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",305,null],[11,"unwrap_or","","Returns the contained value or a default.",305,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",305,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",305,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",305,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",305,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",305,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",305,null],[11,"iter","","Returns an iterator over the possibly contained value.",305,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",305,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",305,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",305,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",305,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",305,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",305,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",305,null],[11,"unwrap_or_default","","Returns the contained value or a default",305,null],[11,"default","","",305,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",305,null],[11,"fmt","","",306,null],[11,"next","","",306,null],[11,"size_hint","","",306,null],[11,"next_back","","",306,null],[11,"clone","","",306,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"next_back","","",307,null],[11,"fmt","","",308,null],[11,"clone","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",305,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",74,null],[11,"partial_cmp","","",74,null],[11,"lt","","",74,null],[11,"le","","",74,null],[11,"gt","","",74,null],[11,"ge","","",74,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"new","","Creates a new empty `String`.",74,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",74,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",74,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",74,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",74,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",74,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",74,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",74,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",74,null],[11,"as_str","","Extracts a string slice containing the entire string.",74,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",74,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",74,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",74,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",74,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",74,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",74,null],[11,"push","","Appends the given `char` to the end of this `String`.",74,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",74,null],[11,"truncate","","Shortens this `String` to the specified length.",74,null],[11,"pop","","Removes the last character from the string buffer and returns it.",74,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",74,null],[11,"insert","","Inserts a character into this `String` at a byte position.",74,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",74,null],[11,"len","","Returns the length of this `String`, in bytes.",74,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",74,null],[11,"clear","","Truncates this `String`, removing all contents.",74,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",74,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",74,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",8,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",8,null],[11,"fmt","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",74,null],[11,"clone_from","","",74,null],[11,"from_iter","","",74,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",74,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",74,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",74,null],[11,"extend","","",74,null],[11,"extend","","",74,null],[11,"extend","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","collections::borrow","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","collections::string","",74,null],[11,"ne","","",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",74,null],[11,"fmt","","",74,null],[11,"hash","","",74,null],[11,"add","","",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"index","","",74,null],[11,"index_mut","","",74,null],[11,"index_mut","","",74,null],[11,"index_mut","","",74,null],[11,"index_mut","","",74,null],[11,"index_mut","","",74,null],[11,"index_mut","","",74,null],[11,"deref","","",74,null],[11,"deref_mut","","",74,null],[11,"from_str","","",74,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"as_ref","","",74,null],[11,"as_ref","","",74,null],[11,"from","","",74,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",73,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",73,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",74,null],[11,"write_str","","",74,null],[11,"write_char","","",74,null],[11,"drop","","",309,null],[11,"next","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"new","core::ptr","Creates a new `Unique`.",310,null],[11,"get","","Dereferences the content.",310,null],[11,"get_mut","","Mutably dereferences the content.",310,null],[11,"deref","","",310,null],[11,"fmt","","",310,null],[11,"new","","Creates a new `Shared`.",311,null],[11,"clone","","",311,null],[11,"deref","","",311,null],[11,"fmt","","",311,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",52,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",52,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",52,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",52,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",52,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",52,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",52,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",52,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",52,null],[11,"as_slice","","Extracts a slice containing the entire vector.",52,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",52,null],[11,"set_len","","Sets the length of a vector.",52,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",52,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",52,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",52,null],[11,"retain","","Retains only the elements specified by the predicate.",52,null],[11,"push","","Appends an element to the back of a collection.",52,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",52,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",52,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",52,null],[11,"clear","","Clears the vector, removing all values.",52,null],[11,"len","","Returns the number of elements in the vector.",52,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",52,null],[11,"split_off","","Splits the collection into two at the given index.",52,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",52,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",52,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",52,null],[11,"clone","","",52,null],[11,"clone_from","","",52,null],[11,"hash","","",52,null],[11,"index","","",52,null],[11,"index_mut","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"from_iter","","",52,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",52,null],[11,"extend","","",52,null],[11,"extend","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","collections::borrow","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","collections::vec","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"partial_cmp","","",52,null],[11,"cmp","","",52,null],[11,"drop","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",52,null],[11,"as_ref","","",52,null],[11,"as_mut","","",52,null],[11,"as_ref","","",52,null],[11,"as_mut","","",52,null],[11,"from","","",52,null],[11,"from","","",52,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",73,null],[11,"from","","",73,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",312,null],[11,"size_hint","","",312,null],[11,"count","","",312,null],[11,"next_back","","",312,null],[11,"clone","","",312,null],[11,"drop","","",312,null],[11,"next","","",313,null],[11,"size_hint","","",313,null],[11,"next_back","","",313,null],[11,"drop","","",313,null],[11,"clone","core::raw","",314,null],[11,"hash","core::cmp","",315,null],[11,"fmt","","",315,null],[11,"eq","","",315,null],[11,"clone","","",315,null],[11,"reverse","","Reverse the `Ordering`.",315,null],[11,"cmp","","",315,null],[11,"partial_cmp","","",315,null],[11,"next","rustc_unicode::char","",316,null],[11,"next","","",317,null],[11,"clone","","",318,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"next","","",318,null],[11,"size_hint","","",318,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",11,null],[11,"fmt","","",11,null],[11,"clone","alloc::boxed","",319,null],[11,"pointer","","",320,null],[11,"make_place","","",320,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",320,null],[11,"finalize","","",2,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",319,null],[11,"drop","","",320,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",2,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"ge","","",2,null],[11,"gt","","",2,null],[11,"cmp","","",2,null],[11,"hash","","",2,null],[11,"from","","",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"call_once","","",2,null],[11,"call_once","","",2,null],[11,"clone","","",2,null],[11,"borrow","","",2,null],[11,"borrow_mut","","",2,null],[11,"as_ref","","",2,null],[11,"as_mut","","",2,null],[11,"drop","shared_library::dynamic_library","",321,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",321,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",321,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",321,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",321,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",321,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",321,null],[11,"clone","shared_library","",0,null],[11,"fmt","","",0,null],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[4,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"RangeFull"],[3,"RangeTo"],[3,"RangeToInclusive"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"TraitObject"],[4,"Ordering"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"DynamicLibrary"]]};
searchIndex["tempfile"] = {"doc":"Securely create and manage temporary files. Temporary files created by this create are\nautomatically deleted.","items":[[3,"NamedTempFile","tempfile","A named temporary file.",null,null],[3,"NamedTempFileOptions","","Create a new temporary file with custom parameters.",null,null],[3,"PersistError","","Error returned when persisting a temporary file fails",null,null],[12,"error","","The underlying IO error.",0,null],[12,"file","","The temporary file that couldn&#39;t be persisted.",0,null],[5,"tempfile","","Create an unnamed temporary file.",null,{"inputs":[],"output":{"name":"result"}}],[5,"tempfile_in","","Create an unnamed temporary file in the specified directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"fmt","","",1,null],[11,"open","std::fs","Attempts to open a file in read-only mode.",2,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",2,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",2,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",2,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",2,null],[11,"metadata","","Queries metadata about the underlying file.",2,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",2,null],[11,"from","alloc::boxed","",3,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",3,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",4,null],[11,"description","","",5,null],[11,"description","core::num","",6,null],[11,"description","","",7,null],[11,"description","core::num::dec2flt","",8,null],[11,"description","collections::string","",9,null],[11,"description","","",10,null],[11,"description","","",11,null],[11,"description","rustc_unicode::char","",12,null],[11,"description","alloc::boxed","",3,null],[11,"cause","","",3,null],[11,"description","core::fmt","",13,null],[11,"is","tempfile","Returns true if the boxed type is the same as `T`",14,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",14,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",14,null],[11,"is","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",14,null],[11,"is","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",14,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",14,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"clone","std::thread::local","",16,null],[11,"eq","","",16,null],[11,"with","","Acquires a reference to the value in this TLS key.",17,null],[11,"state","","Query the current state of this key.",17,null],[11,"new","std::thread::local::elf","",18,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",18,null],[11,"new","std::thread::local::os","",19,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",19,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",20,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",20,null],[11,"stack_size","","Sets the size of the stack for the new thread.",20,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",20,null],[11,"clone","","",21,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",21,null],[11,"name","","Gets the thread&#39;s name.",21,null],[11,"fmt","","",21,null],[11,"thread","","Extracts a handle to the underlying thread",22,null],[11,"join","","Waits for the associated thread to finish.",22,null],[11,"clone","std::collections::hash::map","",23,null],[11,"new","","Creates an empty HashMap.",23,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",23,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",23,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",23,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",23,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",23,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",23,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",23,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",23,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",23,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",23,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",23,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",23,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",23,null],[11,"len","","Returns the number of elements in the map.",23,null],[11,"is_empty","","Returns true if the map contains no elements.",23,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",23,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",23,null],[11,"get","","Returns a reference to the value corresponding to the key.",23,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",23,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",23,null],[11,"insert","","Inserts a key-value pair into the map.",23,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",23,null],[11,"eq","","",23,null],[11,"fmt","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"len","","",29,null],[11,"next","","",30,null],[11,"size_hint","","",30,null],[11,"len","","",30,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",31,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",31,null],[11,"key","","Returns a reference to this entry&#39;s key.",31,null],[11,"key","","Gets a reference to the key in the entry.",32,null],[11,"get","","Gets a reference to the value in the entry.",32,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",32,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",32,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",32,null],[11,"remove","","Takes the value out of the entry, and returns it",32,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",33,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",33,null],[11,"from_iter","","",23,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",23,null],[11,"extend","","",23,null],[11,"clone","","",34,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",34,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",35,null],[11,"new","","Creates an empty HashSet.",35,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",35,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",35,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",35,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",35,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",35,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",35,null],[11,"difference","","Visit the values representing the difference.",35,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",35,null],[11,"intersection","","Visit the values representing the intersection.",35,null],[11,"union","","Visit the values representing the union.",35,null],[11,"len","","Returns the number of elements in the set.",35,null],[11,"is_empty","","Returns true if the set contains no elements.",35,null],[11,"drain","","Clears the set, returning all elements in an iterator.",35,null],[11,"clear","","Clears the set, removing all values.",35,null],[11,"contains","","Returns `true` if the set contains a value.",35,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",35,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",35,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",35,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",35,null],[11,"insert","","Adds a value to the set.",35,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",35,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",35,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",35,null],[11,"eq","","",35,null],[11,"fmt","","",35,null],[11,"from_iter","","",35,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",35,null],[11,"extend","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",35,null],[11,"clone","","",36,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"len","","",37,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"len","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"clone","collections::linked_list","",43,null],[11,"clone","","",44,null],[11,"default","","",45,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",45,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",45,null],[11,"iter","","Provides a forward iterator.",45,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",45,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",45,null],[11,"len","","Returns the length of the `LinkedList`.",45,null],[11,"clear","","Removes all elements from the `LinkedList`.",45,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",45,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",45,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",45,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",45,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",45,null],[11,"push_front","","Adds an element first in the list.",45,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",45,null],[11,"push_back","","Appends an element to the back of a list",45,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",45,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",45,null],[11,"front_place","","Returns a place for insertion at the front of the list.",45,null],[11,"back_place","","Returns a place for insertion at the back of the list.",45,null],[11,"drop","","",45,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",46,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",46,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"from_iter","","",45,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",45,null],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"partial_cmp","","",45,null],[11,"cmp","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"hash","","",45,null],[11,"make_place","","",47,null],[11,"pointer","","",47,null],[11,"finalize","","",47,null],[11,"make_place","","",48,null],[11,"pointer","","",48,null],[11,"finalize","","",48,null],[11,"clone","collections::binary_heap","",49,null],[11,"clone_from","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",49,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",49,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",49,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",49,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",49,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",49,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",49,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",49,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",49,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",49,null],[11,"push","","Pushes an item onto the binary heap.",49,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",49,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",49,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",49,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",49,null],[11,"len","","Returns the length of the binary heap.",49,null],[11,"is_empty","","Checks if the binary heap is empty.",49,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",49,null],[11,"clear","","Drops all items from the binary heap.",49,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",49,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"from","","",49,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",53,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",49,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",49,null],[11,"extend","","",49,null],[11,"extend","","",49,null],[11,"clone","collections::vec_deque","",54,null],[11,"drop","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",54,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",54,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",54,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",54,null],[11,"swap","","Swaps elements at indices `i` and `j`.",54,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",54,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",54,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",54,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",54,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",54,null],[11,"iter","","Returns a front-to-back iterator.",54,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",54,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",54,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",54,null],[11,"len","","Returns the number of elements in the `VecDeque`.",54,null],[11,"is_empty","","Returns true if the buffer contains no elements",54,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",54,null],[11,"clear","","Clears the buffer, removing all values.",54,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",54,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",54,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",54,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",54,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",54,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",54,null],[11,"push_front","","Inserts an element first in the sequence.",54,null],[11,"push_back","","Appends an element to the back of a buffer",54,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",54,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",54,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",54,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",54,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",54,null],[11,"split_off","","Splits the collection into two at the given index.",54,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",54,null],[11,"retain","","Retains only the elements specified by the predicate.",54,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",54,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"drop","","",58,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"eq","","",54,null],[11,"partial_cmp","","",54,null],[11,"cmp","","",54,null],[11,"hash","","",54,null],[11,"index","","",54,null],[11,"index_mut","","",54,null],[11,"from_iter","","",54,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",54,null],[11,"extend","","",54,null],[11,"extend","","",54,null],[11,"fmt","","",54,null],[11,"from","","",54,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",59,null],[11,"size_hint","","",59,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"clone","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"fmt","","",61,null],[11,"fmt","","",61,null],[11,"description","","",61,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"fmt","","",63,null],[11,"fmt","","",63,null],[11,"description","","",63,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"len","","",64,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"len","","",65,null],[11,"clone","std::ffi::c_str","",66,null],[11,"hash","","",66,null],[11,"cmp","","",66,null],[11,"partial_cmp","","",66,null],[11,"lt","","",66,null],[11,"le","","",66,null],[11,"gt","","",66,null],[11,"ge","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"hash","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",66,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",66,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",66,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",66,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",66,null],[11,"into_bytes","","Returns the underlying byte buffer.",66,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",66,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",66,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",66,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",67,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",67,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",67,null],[11,"as_ptr","","Returns the inner pointer to this C string.",67,null],[11,"to_bytes","","Converts this C string to a byte slice.",67,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",67,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",67,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",67,null],[11,"deref","","",66,null],[11,"fmt","","",66,null],[11,"from","collections::vec","",53,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",67,null],[11,"default","","",66,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",66,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",68,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",68,null],[11,"description","","",68,null],[11,"fmt","","",68,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",70,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",70,null],[11,"description","","",70,null],[11,"cause","","",70,null],[11,"fmt","","",70,null],[11,"eq","","",67,null],[11,"partial_cmp","","",67,null],[11,"cmp","","",67,null],[11,"to_owned","","",67,null],[11,"from","","",66,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",66,null],[11,"as_ref","","",67,null],[11,"as_ref","","",66,null],[11,"clone","std::ffi::os_str","",72,null],[11,"new","","Constructs a new empty `OsString`.",72,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",72,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",72,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",72,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",72,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",72,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",72,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",72,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",72,null],[11,"from","","",72,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",72,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",72,null],[11,"new","","Coerces into an `OsStr` slice.",73,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",73,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",73,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",73,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",73,null],[11,"len","","Returns the length of this `OsStr`.",73,null],[11,"deref","","",72,null],[11,"default","","",72,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"lt","","",72,null],[11,"le","","",72,null],[11,"gt","","",72,null],[11,"ge","","",72,null],[11,"partial_cmp","","",72,null],[11,"cmp","","",72,null],[11,"hash","","",72,null],[11,"eq","","",73,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"partial_cmp","","",73,null],[11,"cmp","","",73,null],[11,"eq","","",72,null],[11,"eq","","",73,null],[11,"partial_cmp","","",72,null],[11,"partial_cmp","","",73,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"hash","","",73,null],[11,"fmt","","",73,null],[11,"borrow","","",72,null],[11,"to_owned","","",73,null],[11,"as_ref","","",73,null],[11,"as_ref","","",72,null],[11,"as_ref","collections::string","",75,null],[11,"clone","std::fs","",76,null],[11,"clone","","",77,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"hash","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",2,null],[11,"read","","",2,null],[11,"read_to_end","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,null],[11,"seek","","",2,null],[11,"new","","Creates a blank new set of options ready for configuration.",77,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",77,null],[11,"write","","Sets the option for write access.",77,null],[11,"append","","Sets the option for the append mode.",77,null],[11,"truncate","","Sets the option for truncating a previous file.",77,null],[11,"create","","Sets the option for creating a new file.",77,null],[11,"create_new","","Sets the option to always create a new file.",77,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",77,null],[11,"file_type","","Returns the file type for this metadata.",76,null],[11,"is_dir","","Returns whether this metadata is for a directory.",76,null],[11,"is_file","","Returns whether this metadata is for a regular file.",76,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",76,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",76,null],[11,"modified","","Returns the last modification time listed in this metadata.",76,null],[11,"accessed","","Returns the last access time of this metadata.",76,null],[11,"created","","Returns the creation time listed in the this metadata.",76,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",78,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",78,null],[11,"is_dir","","Test whether this file type represents a directory.",79,null],[11,"is_file","","Test whether this file type represents a regular file.",79,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",79,null],[11,"next","","",80,null],[11,"path","","Returns the full path to the file that this entry represents.",81,null],[11,"metadata","","Return the metadata for the file that this entry points at.",81,null],[11,"file_type","","Return the file type for the file that this entry points at.",81,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",81,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",82,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",82,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",82,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",83,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",83,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",83,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",83,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",83,null],[11,"read","","",83,null],[11,"fill_buf","","",83,null],[11,"consume","","",83,null],[11,"fmt","","",83,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",83,null],[11,"fmt","","",84,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",85,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",85,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",85,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",85,null],[11,"write","","",85,null],[11,"flush","","",85,null],[11,"fmt","","",85,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",85,null],[11,"drop","","",85,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",84,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",84,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",84,null],[11,"fmt","","",84,null],[11,"new","","Creates a new `LineWriter`.",86,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",86,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",86,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",86,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"fmt","","",86,null],[11,"fmt","std::io::cursor","",87,null],[11,"clone","","",87,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",87,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",87,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",87,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",87,null],[11,"position","","Returns the current position of this cursor.",87,null],[11,"set_position","","Sets the position of this cursor.",87,null],[11,"seek","","",87,null],[11,"read","","",87,null],[11,"fill_buf","","",87,null],[11,"consume","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"write","","",87,null],[11,"flush","","",87,null],[11,"fmt","std::io::error","",71,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"eq","","",88,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",71,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",71,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",71,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",71,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",71,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",71,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",71,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",71,null],[11,"fmt","","",71,null],[11,"description","","",71,null],[11,"cause","","",71,null],[11,"read","alloc::boxed","",3,null],[11,"read_to_end","","",3,null],[11,"read_to_string","","",3,null],[11,"read_exact","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,null],[11,"write_all","","",3,null],[11,"write_fmt","","",3,null],[11,"seek","","",3,null],[11,"fill_buf","","",3,null],[11,"consume","","",3,null],[11,"read_until","","",3,null],[11,"read_line","","",3,null],[11,"write","collections::vec","",53,null],[11,"write_all","","",53,null],[11,"flush","","",53,null],[11,"read","std::io::util","",89,null],[11,"fill_buf","","",89,null],[11,"consume","","",89,null],[11,"read","","",90,null],[11,"write","","",91,null],[11,"flush","","",91,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",92,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",92,null],[11,"read","","",92,null],[11,"read_to_end","","",92,null],[11,"read_to_string","","",92,null],[11,"read_exact","","",92,null],[11,"read","","",93,null],[11,"read_to_end","","",93,null],[11,"fill_buf","","",93,null],[11,"consume","","",93,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",94,null],[11,"write","","",94,null],[11,"flush","","",94,null],[11,"write_all","","",94,null],[11,"write_fmt","","",94,null],[11,"write","","",95,null],[11,"flush","","",95,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",96,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"write_all","","",96,null],[11,"write_fmt","","",96,null],[11,"write","","",97,null],[11,"flush","","",97,null],[11,"fmt","std::io","",98,null],[11,"clone","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"read","","",99,null],[11,"fill_buf","","",99,null],[11,"consume","","",99,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",100,null],[11,"read","","",100,null],[11,"fill_buf","","",100,null],[11,"consume","","",100,null],[11,"next","","",101,null],[11,"fmt","","",102,null],[11,"next","","",103,null],[11,"description","","",102,null],[11,"cause","","",102,null],[11,"fmt","","",102,null],[11,"next","","",104,null],[11,"next","","",105,null],[11,"cmp","std::net::ip","",106,null],[11,"partial_cmp","","",106,null],[11,"lt","","",106,null],[11,"le","","",106,null],[11,"gt","","",106,null],[11,"ge","","",106,null],[11,"hash","","",106,null],[11,"fmt","","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"hash","","",107,null],[11,"clone","","",107,null],[11,"eq","","",107,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",108,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",108,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",108,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",108,null],[11,"is_private","","Returns true if this is a private address.",108,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",108,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",108,null],[11,"is_multicast","","Returns true if this is a multicast address.",108,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",108,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",108,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",108,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",108,null],[11,"fmt","","",106,null],[11,"fmt","","",108,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"eq","","",108,null],[11,"hash","","",108,null],[11,"partial_cmp","","",108,null],[11,"cmp","","",108,null],[11,"from","","",108,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",108,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",109,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",109,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",109,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",109,null],[11,"is_global","","Returns true if the address appears to be globally routable.",109,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",109,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",109,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",109,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",109,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",109,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",109,null],[11,"is_multicast","","Returns true if this is a multicast address.",109,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",109,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",109,null],[11,"fmt","","",109,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"eq","","",109,null],[11,"hash","","",109,null],[11,"partial_cmp","","",109,null],[11,"cmp","","",109,null],[11,"from","","",109,null],[11,"fmt","std::net::addr","",110,null],[11,"hash","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",110,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",110,null],[11,"set_ip","","Change the IP address associated with this socket address.",110,null],[11,"port","","Returns the port number associated with this socket address.",110,null],[11,"set_port","","Change the port number associated with this socket address.",110,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",111,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,null],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,null],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",112,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",112,null],[11,"set_ip","","Change the IP address associated with this socket address.",112,null],[11,"port","","Returns the port number associated with this socket address.",112,null],[11,"set_port","","Change the port number associated with this socket address.",112,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",112,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",112,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",112,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",112,null],[11,"fmt","","",110,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"fmt","","",112,null],[11,"fmt","","",112,null],[11,"clone","","",111,null],[11,"clone","","",112,null],[11,"eq","","",111,null],[11,"eq","","",112,null],[11,"hash","","",111,null],[11,"hash","","",112,null],[11,"to_socket_addrs","","",110,null],[11,"to_socket_addrs","","",111,null],[11,"to_socket_addrs","","",112,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",113,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",113,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",113,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",113,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",113,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",113,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",113,null],[11,"read_timeout","","Returns the read timeout of this socket.",113,null],[11,"write_timeout","","Returns the write timeout of this socket.",113,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",113,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",113,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",113,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",113,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",113,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",113,null],[11,"read","","",113,null],[11,"read_to_end","","",113,null],[11,"write","","",113,null],[11,"flush","","",113,null],[11,"fmt","","",113,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",114,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",114,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",114,null],[11,"accept","","Accept a new incoming connection from this listener.",114,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",114,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",114,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",114,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",114,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",114,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",114,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",114,null],[11,"next","","",115,null],[11,"fmt","","",114,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",116,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",116,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",116,null],[11,"local_addr","","Returns the socket address that this socket was created from.",116,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",116,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",116,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",116,null],[11,"read_timeout","","Returns the read timeout of this socket.",116,null],[11,"write_timeout","","Returns the write timeout of this socket.",116,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",116,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",116,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",116,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",116,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",116,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",116,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",116,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",116,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",116,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",116,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",116,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",116,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",116,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",116,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",116,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",116,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",116,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",116,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",116,null],[11,"fmt","","",116,null],[11,"from_str","std::net::ip","",106,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",112,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"fmt","","",117,null],[11,"fmt","","",117,null],[11,"description","","",117,null],[11,"fmt","std::net","",118,null],[11,"eq","","",118,null],[11,"clone","","",118,null],[11,"next","","",119,null],[11,"clone","std::os::linux::raw::arch","",120,null],[11,"as_raw_stat","std::fs","",76,null],[11,"st_dev","","",76,null],[11,"st_ino","","",76,null],[11,"st_mode","","",76,null],[11,"st_nlink","","",76,null],[11,"st_uid","","",76,null],[11,"st_gid","","",76,null],[11,"st_rdev","","",76,null],[11,"st_size","","",76,null],[11,"st_atime","","",76,null],[11,"st_atime_nsec","","",76,null],[11,"st_mtime","","",76,null],[11,"st_mtime_nsec","","",76,null],[11,"st_ctime","","",76,null],[11,"st_ctime_nsec","","",76,null],[11,"st_blksize","","",76,null],[11,"st_blocks","","",76,null],[11,"as_raw_fd","","",2,null],[11,"from_raw_fd","","",2,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",2,null],[11,"as_raw_fd","std::net::tcp","",113,null],[11,"as_raw_fd","","",114,null],[11,"as_raw_fd","std::net::udp","",116,null],[11,"from_raw_fd","std::net::tcp","",113,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",114,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",116,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",113,null],[11,"into_raw_fd","","",114,null],[11,"into_raw_fd","std::net::udp","",116,null],[11,"from_vec","std::ffi::os_str","",72,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",72,null],[11,"from_bytes","","",73,null],[11,"as_bytes","","",73,null],[11,"mode","std::fs","",78,null],[11,"set_mode","","",78,null],[11,"from_mode","","",78,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",77,null],[11,"custom_flags","","",77,null],[11,"dev","","",76,null],[11,"ino","","",76,null],[11,"mode","","",76,null],[11,"nlink","","",76,null],[11,"uid","","",76,null],[11,"gid","","",76,null],[11,"rdev","","",76,null],[11,"size","","",76,null],[11,"atime","","",76,null],[11,"atime_nsec","","",76,null],[11,"mtime","","",76,null],[11,"mtime_nsec","","",76,null],[11,"ctime","","",76,null],[11,"ctime_nsec","","",76,null],[11,"blksize","","",76,null],[11,"blocks","","",76,null],[11,"is_block_device","","",79,null],[11,"is_char_device","","",79,null],[11,"is_fifo","","",79,null],[11,"is_socket","","",79,null],[11,"ino","","",81,null],[11,"mode","","",82,null],[11,"uid","std::process","",121,null],[11,"gid","","",121,null],[11,"before_exec","","",121,null],[11,"exec","","",121,null],[11,"from_raw","","",122,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",122,null],[11,"from_raw_fd","","",123,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",124,null],[11,"as_raw_fd","","",125,null],[11,"as_raw_fd","","",126,null],[11,"into_raw_fd","","",124,null],[11,"into_raw_fd","","",125,null],[11,"into_raw_fd","","",126,null],[11,"as_pthread_t","std::thread","",22,null],[11,"into_pthread_t","","",22,null],[11,"clone","std::sys::ext::net","",127,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",127,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",127,null],[11,"fmt","","",127,null],[11,"fmt","","",128,null],[11,"connect","","Connects to the socket named by `path`.",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",128,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",128,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",128,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",128,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",128,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",128,null],[11,"read_timeout","","Returns the read timeout of this socket.",128,null],[11,"write_timeout","","Returns the write timeout of this socket.",128,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",128,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",128,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",128,null],[11,"read","","",128,null],[11,"read_to_end","","",128,null],[11,"write","","",128,null],[11,"flush","","",128,null],[11,"as_raw_fd","","",128,null],[11,"from_raw_fd","","",128,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",128,null],[11,"fmt","","",129,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",129,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",129,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",129,null],[11,"local_addr","","Returns the local socket address of this listener.",129,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",129,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",129,null],[11,"incoming","","Returns an iterator over incoming connections.",129,null],[11,"as_raw_fd","","",129,null],[11,"from_raw_fd","","",129,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",129,null],[11,"fmt","","",130,null],[11,"next","","",130,null],[11,"size_hint","","",130,null],[11,"fmt","","",131,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",131,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",131,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",131,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",131,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",131,null],[11,"local_addr","","Returns the address of this socket.",131,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",131,null],[11,"recv_from","","Receives data from the socket.",131,null],[11,"recv","","Receives data from the socket.",131,null],[11,"send_to","","Sends data on the socket to the specified address.",131,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",131,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",131,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",131,null],[11,"read_timeout","","Returns the read timeout of this socket.",131,null],[11,"write_timeout","","Returns the write timeout of this socket.",131,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",131,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",131,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",131,null],[11,"as_raw_fd","","",131,null],[11,"from_raw_fd","","",131,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",131,null],[11,"deref","std::panic","",132,null],[11,"deref_mut","","",132,null],[11,"call_once","","",132,null],[11,"eq","std::path","",133,null],[11,"ne","","",133,null],[11,"cmp","","",133,null],[11,"partial_cmp","","",133,null],[11,"lt","","",133,null],[11,"le","","",133,null],[11,"gt","","",133,null],[11,"ge","","",133,null],[11,"hash","","",133,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",133,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"kind","","The parsed prefix data.",134,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",134,null],[11,"eq","","",134,null],[11,"partial_cmp","","",134,null],[11,"cmp","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",135,null],[11,"hash","","",135,null],[11,"cmp","","",135,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",135,null],[11,"as_ref","","",135,null],[11,"clone","","",136,null],[11,"clone","","",137,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",136,null],[11,"as_ref","","",136,null],[11,"as_ref","","",136,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",137,null],[11,"as_ref","","",137,null],[11,"as_ref","","",137,null],[11,"next","","",137,null],[11,"next_back","","",137,null],[11,"next","","",136,null],[11,"next_back","","",136,null],[11,"eq","","",136,null],[11,"partial_cmp","","",136,null],[11,"cmp","","",136,null],[11,"clone","","",138,null],[11,"new","","Allocates an empty `PathBuf`.",138,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",138,null],[11,"push","","Extends `self` with `path`.",138,null],[11,"pop","","Truncate `self` to `self.parent()`.",138,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",138,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",138,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",138,null],[11,"from","","",138,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",138,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",138,null],[11,"fmt","","",138,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",139,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",139,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",139,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",139,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",139,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",139,null],[11,"is_relative","","A path is *relative* if it is not absolute.",139,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",139,null],[11,"parent","","The path without its final component, if any.",139,null],[11,"file_name","","The final component of the path, if it is a normal file.",139,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",139,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",139,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",139,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",139,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",139,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",139,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",139,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",139,null],[11,"components","","Produce an iterator over the components of the path.",139,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",139,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",139,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",139,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",139,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",139,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",139,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",139,null],[11,"exists","","Returns whether the path points at an existing entity.",139,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",139,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",139,null],[11,"deref","","",138,null],[11,"borrow","","",138,null],[11,"from","collections::borrow","",74,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",139,null],[11,"eq","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"as_ref","","",138,null],[11,"into","","",138,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"fmt","","",140,null],[11,"as_ref","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"eq","","",139,null],[11,"hash","","",139,null],[11,"partial_cmp","","",139,null],[11,"cmp","","",139,null],[11,"as_ref","","",139,null],[11,"as_ref","std::ffi::os_str","",73,null],[11,"as_ref","collections::borrow","",74,null],[11,"as_ref","std::ffi::os_str","",72,null],[11,"as_ref","collections::string","",75,null],[11,"as_ref","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","","",139,null],[11,"partial_cmp","","",138,null],[11,"partial_cmp","","",139,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::path","",139,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","","",138,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"eq","std::path","",138,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","","",139,null],[11,"eq","","",139,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"eq","","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","collections::borrow","",74,null],[11,"eq","std::ffi::os_str","",73,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",73,null],[11,"eq","collections::borrow","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"eq","std::ffi::os_str","",72,null],[11,"partial_cmp","collections::borrow","",74,null],[11,"partial_cmp","std::ffi::os_str","",72,null],[11,"fmt","std::path","",140,null],[11,"description","","",140,null],[11,"write","std::process","",124,null],[11,"flush","","",124,null],[11,"read","","",125,null],[11,"read_to_end","","",125,null],[11,"read","","",126,null],[11,"read_to_end","","",126,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",121,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",121,null],[11,"args","","Add multiple arguments to pass to the program.",121,null],[11,"env","","Inserts or updates an environment variable mapping.",121,null],[11,"env_remove","","Removes an environment variable mapping.",121,null],[11,"env_clear","","Clears the entire environment map for the child process.",121,null],[11,"current_dir","","Sets the working directory for the child process.",121,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",121,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",121,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",121,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",121,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",121,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",121,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",121,null],[11,"clone","","",142,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"fmt","","",142,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",123,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",122,null],[11,"clone","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",122,null],[11,"code","","Returns the exit code of the process, if any.",122,null],[11,"fmt","","",122,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",143,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",143,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",143,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",143,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",144,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",144,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",144,null],[11,"id","","Retrieves the id of this handle.",145,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",145,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",145,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",145,null],[11,"drop","","",144,null],[11,"drop","","",145,null],[11,"fmt","","",144,null],[11,"fmt","","",145,null],[11,"clone","std::sync::mpsc","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"eq","","",148,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",150,null],[11,"clone","","",150,null],[11,"drop","","",150,null],[11,"fmt","","",150,null],[11,"send","","Sends a value on this synchronous channel.",151,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",151,null],[11,"clone","","",151,null],[11,"drop","","",151,null],[11,"fmt","","",151,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",152,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",152,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",152,null],[11,"next","","",153,null],[11,"next","","",154,null],[11,"into_iter","","",152,null],[11,"drop","","",152,null],[11,"fmt","","",152,null],[11,"fmt","","",146,null],[11,"fmt","","",146,null],[11,"description","","",146,null],[11,"cause","","",146,null],[11,"fmt","","",149,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"cause","","",147,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",155,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",155,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",156,null],[11,"clone","std::sync::condvar","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",157,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",158,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",158,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",158,null],[11,"new","","Creates a new condition variable",159,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",159,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",159,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",159,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",159,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",160,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",160,null],[11,"try_lock","","Attempts to acquire this lock.",160,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",160,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",160,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",160,null],[11,"drop","","",160,null],[11,"default","","",160,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",160,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",161,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",161,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",161,null],[11,"destroy","","Deallocates resources associated with this static mutex.",161,null],[11,"deref","","",162,null],[11,"deref_mut","","",162,null],[11,"drop","","",162,null],[11,"new","std::sync::once","Creates a new `Once` value.",163,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",163,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",163,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",164,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",165,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",165,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",165,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",165,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",165,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",165,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",165,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",165,null],[11,"drop","","",165,null],[11,"fmt","","",165,null],[11,"default","","",165,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",166,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",166,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",166,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",166,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",166,null],[11,"destroy","","Deallocates all resources associated with this static lock.",166,null],[11,"deref","","",167,null],[11,"deref","","",168,null],[11,"deref_mut","","",168,null],[11,"drop","","",167,null],[11,"drop","","",168,null],[11,"default","core::sync::atomic","",169,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",171,null],[11,"clone","","",171,null],[11,"new","","Creates a new `AtomicBool`.",169,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",169,null],[11,"store","","Stores a value into the bool.",169,null],[11,"swap","","Stores a value into the bool, returning the old value.",169,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",169,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",169,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",169,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",169,null],[11,"new","","Creates a new `AtomicPtr`.",170,null],[11,"load","","Loads a value from the pointer.",170,null],[11,"store","","Stores a value into the pointer.",170,null],[11,"swap","","Stores a value into the pointer, returning the old value.",170,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"default","","",172,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",172,null],[11,"new","","Creates a new atomic integer.",172,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",172,null],[11,"store","","Stores a value into the atomic integer.",172,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"fetch_add","","Add to the current value, returning the previous value.",172,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",172,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",172,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",172,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",172,null],[11,"default","","",173,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",173,null],[11,"new","","Creates a new atomic integer.",173,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",173,null],[11,"store","","Stores a value into the atomic integer.",173,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"fetch_add","","Add to the current value, returning the previous value.",173,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",173,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",173,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",173,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"fmt","","",169,null],[11,"fmt","","",170,null],[11,"hash","std::time::duration","",182,null],[11,"fmt","","",182,null],[11,"cmp","","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",182,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",182,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",182,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",182,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",182,null],[11,"add","","",182,null],[11,"add_assign","","",182,null],[11,"sub","","",182,null],[11,"sub_assign","","",182,null],[11,"mul","","",182,null],[11,"mul_assign","","",182,null],[11,"div","","",182,null],[11,"div_assign","","",182,null],[11,"cmp","std::time","",183,null],[11,"partial_cmp","","",183,null],[11,"lt","","",183,null],[11,"le","","",183,null],[11,"gt","","",183,null],[11,"ge","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"cmp","","",184,null],[11,"partial_cmp","","",184,null],[11,"lt","","",184,null],[11,"le","","",184,null],[11,"gt","","",184,null],[11,"ge","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"fmt","","",185,null],[11,"clone","","",185,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",183,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",183,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",183,null],[11,"add","","",183,null],[11,"add_assign","","",183,null],[11,"sub","","",183,null],[11,"sub_assign","","",183,null],[11,"sub","","",183,null],[11,"fmt","","",183,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",184,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",184,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",184,null],[11,"add","","",184,null],[11,"add_assign","","",184,null],[11,"sub","","",184,null],[11,"sub_assign","","",184,null],[11,"fmt","","",184,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",185,null],[11,"description","","",185,null],[11,"fmt","","",185,null],[11,"fmt","std::sys_common::poison","",186,null],[11,"fmt","","",186,null],[11,"description","","",186,null],[11,"new","","Creates a `PoisonError`.",186,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",186,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",186,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",186,null],[11,"from","","",187,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",187,null],[11,"fmt","","",187,null],[11,"description","","",187,null],[11,"cause","","",187,null],[11,"clone","libc::unix","",188,null],[11,"clone","","",189,null],[11,"clone","","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","","",200,null],[11,"clone","libc::unix::notbsd","",201,null],[11,"clone","","",202,null],[11,"clone","","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","","",215,null],[11,"clone","libc::unix::notbsd::linux","",216,null],[11,"clone","","",217,null],[11,"clone","","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","","",231,null],[11,"clone","libc::unix::notbsd::linux::other","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",243,null],[11,"clone","","",244,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",253,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",253,null],[11,"file","","Returns the name of the source file from which the panic originated.",254,null],[11,"line","","Returns the line number from which the panic originated.",254,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",255,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",255,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",255,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",255,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",255,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",255,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",255,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",255,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",255,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",255,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",255,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",255,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",255,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",255,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",255,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",255,null],[11,"hash","","",255,null],[11,"fmt","","",255,null],[11,"fmt","","",255,null],[11,"fmt","","",255,null],[11,"from","","",255,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",256,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",256,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",256,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",256,null],[11,"fmt","","",256,null],[11,"default","","",256,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",255,null],[11,"as_ref","","",255,null],[11,"borrow","collections::borrow","",74,null],[11,"clone","","",74,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",74,null],[11,"into_owned","","Extracts the owned data.",74,null],[11,"deref","","",74,null],[11,"cmp","","",74,null],[11,"eq","","",74,null],[11,"partial_cmp","","",74,null],[11,"fmt","","",74,null],[11,"fmt","","",74,null],[11,"hash","","",74,null],[11,"as_ref","","",74,null],[11,"hash","core::result","",257,null],[11,"fmt","","",257,null],[11,"cmp","","",257,null],[11,"partial_cmp","","",257,null],[11,"lt","","",257,null],[11,"le","","",257,null],[11,"gt","","",257,null],[11,"ge","","",257,null],[11,"eq","","",257,null],[11,"ne","","",257,null],[11,"clone","","",257,null],[11,"is_ok","","Returns true if the result is `Ok`",257,null],[11,"is_err","","Returns true if the result is `Err`",257,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",257,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",257,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",257,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",257,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",257,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",257,null],[11,"iter","","Returns an iterator over the possibly contained value.",257,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",257,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",257,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",257,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",257,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",257,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",257,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",257,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",257,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",257,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",257,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",257,null],[11,"fmt","","",258,null],[11,"next","","",258,null],[11,"size_hint","","",258,null],[11,"next_back","","",258,null],[11,"clone","","",258,null],[11,"fmt","","",259,null],[11,"next","","",259,null],[11,"size_hint","","",259,null],[11,"next_back","","",259,null],[11,"fmt","","",260,null],[11,"next","","",260,null],[11,"size_hint","","",260,null],[11,"next_back","","",260,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",257,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","tempfile","",261,null],[11,"fmt","","",261,null],[11,"is","","Returns true if the boxed type is the same as `T`",261,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",261,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",261,null],[11,"is","","Forwards to the method defined on the type `Any`.",261,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",261,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",261,null],[11,"hash","core::any","",262,null],[11,"fmt","","",262,null],[11,"eq","","",262,null],[11,"ne","","",262,null],[11,"clone","","",262,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",262,{"inputs":[],"output":{"name":"typeid"}}],[11,"fmt","core::iter::range","",263,null],[11,"clone","","",263,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",264,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",265,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",266,null],[11,"next","core::iter::range","",263,null],[11,"size_hint","","",263,null],[11,"next","","",263,null],[11,"size_hint","","",263,null],[11,"next","","",263,null],[11,"size_hint","","",263,null],[11,"next","core::ops","",265,null],[11,"size_hint","","",265,null],[11,"next_back","","",265,null],[11,"next","","",264,null],[11,"next","","",266,null],[11,"size_hint","","",266,null],[11,"next_back","","",266,null],[11,"fmt","core::iter::sources","",267,null],[11,"clone","","",267,null],[11,"next","","",267,null],[11,"size_hint","","",267,null],[11,"next_back","","",267,null],[11,"fmt","","",268,null],[11,"next","","",268,null],[11,"size_hint","","",268,null],[11,"next_back","","",268,null],[11,"len","","",268,null],[11,"clone","","",268,null],[11,"default","","",268,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",269,null],[11,"clone","","",269,null],[11,"next","","",269,null],[11,"size_hint","","",269,null],[11,"next_back","","",269,null],[11,"len","","",269,null],[11,"fmt","core::iter","",270,null],[11,"clone","","",270,null],[11,"next","","",270,null],[11,"size_hint","","",270,null],[11,"next_back","","",270,null],[11,"fmt","","",271,null],[11,"clone","","",271,null],[11,"next","","",271,null],[11,"size_hint","","",271,null],[11,"next_back","","",271,null],[11,"fmt","","",272,null],[11,"clone","","",272,null],[11,"next","","",272,null],[11,"size_hint","","",272,null],[11,"fmt","","",273,null],[11,"clone","","",273,null],[11,"next","","",273,null],[11,"count","","",273,null],[11,"nth","","",273,null],[11,"find","","",273,null],[11,"last","","",273,null],[11,"size_hint","","",273,null],[11,"next_back","","",273,null],[11,"fmt","","",274,null],[11,"clone","","",274,null],[11,"next","","",274,null],[11,"size_hint","","",274,null],[11,"next_back","","",274,null],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"next","","",275,null],[11,"size_hint","","",275,null],[11,"next_back","","",275,null],[11,"clone","","",276,null],[11,"fmt","","",276,null],[11,"next","","",276,null],[11,"size_hint","","",276,null],[11,"next_back","","",276,null],[11,"clone","","",277,null],[11,"fmt","","",277,null],[11,"next","","",277,null],[11,"size_hint","","",277,null],[11,"next_back","","",277,null],[11,"fmt","","",278,null],[11,"clone","","",278,null],[11,"next","","# Overflow Behavior",278,null],[11,"size_hint","","",278,null],[11,"nth","","",278,null],[11,"count","","",278,null],[11,"next_back","","",278,null],[11,"fmt","","",279,null],[11,"clone","","",279,null],[11,"next","","",279,null],[11,"count","","",279,null],[11,"nth","","",279,null],[11,"last","","",279,null],[11,"size_hint","","",279,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",279,null],[11,"is_empty","","Checks if the iterator has finished iterating.",279,null],[11,"clone","","",280,null],[11,"fmt","","",280,null],[11,"next","","",280,null],[11,"size_hint","","",280,null],[11,"clone","","",281,null],[11,"fmt","","",281,null],[11,"next","","",281,null],[11,"size_hint","","",281,null],[11,"fmt","","",282,null],[11,"clone","","",282,null],[11,"next","","",282,null],[11,"nth","","",282,null],[11,"count","","",282,null],[11,"last","","",282,null],[11,"size_hint","","",282,null],[11,"next_back","","",282,null],[11,"fmt","","",283,null],[11,"clone","","",283,null],[11,"next","","",283,null],[11,"nth","","",283,null],[11,"size_hint","","",283,null],[11,"clone","","",284,null],[11,"fmt","","",284,null],[11,"next","","",284,null],[11,"size_hint","","",284,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"next","","",285,null],[11,"size_hint","","",285,null],[11,"next_back","","",285,null],[11,"fmt","","",286,null],[11,"clone","","",286,null],[11,"next","","",286,null],[11,"nth","","",286,null],[11,"last","","",286,null],[11,"count","","",286,null],[11,"size_hint","","",286,null],[11,"next_back","","",286,null],[11,"clone","","",287,null],[11,"fmt","","",287,null],[11,"next","","",287,null],[11,"size_hint","","",287,null],[11,"next_back","","",287,null],[11,"borrow","collections::vec","",53,null],[11,"borrow_mut","","",53,null],[11,"fmt","core::hash::sip","",288,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",288,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",288,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",288,null],[11,"finish","","",288,null],[11,"clone","","",288,null],[11,"default","","",288,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",289,null],[11,"build_hasher","","",289,null],[11,"clone","","",289,null],[11,"default","","",289,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","collections::str","",290,null],[11,"next","","",290,null],[11,"size_hint","","",290,null],[11,"borrow","collections::string","",75,null],[11,"fmt","core::str::pattern","",291,null],[11,"eq","","",291,null],[11,"ne","","",291,null],[11,"clone","","",291,null],[11,"fmt","","",292,null],[11,"clone","","",292,null],[11,"haystack","","",292,null],[11,"next","","",292,null],[11,"next_match","","",292,null],[11,"next_reject","","",292,null],[11,"next_back","","",292,null],[11,"next_match_back","","",292,null],[11,"next_reject_back","","",292,null],[11,"fmt","","",293,null],[11,"clone","","",293,null],[11,"haystack","","",293,null],[11,"next","","",293,null],[11,"next_match","","",293,null],[11,"next_reject","","",293,null],[11,"next_back","","",293,null],[11,"next_match_back","","",293,null],[11,"next_reject_back","","",293,null],[11,"clone","","",294,null],[11,"fmt","","",294,null],[11,"haystack","","",294,null],[11,"next","","",294,null],[11,"next_match","","",294,null],[11,"next_reject","","",294,null],[11,"next_back","","",294,null],[11,"next_match_back","","",294,null],[11,"next_reject_back","","",294,null],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"haystack","","",295,null],[11,"next","","",295,null],[11,"next_match","","",295,null],[11,"next_back","","",295,null],[11,"next_match_back","","",295,null],[11,"hash","core::marker","",296,null],[11,"eq","","",296,null],[11,"partial_cmp","","",296,null],[11,"cmp","","",296,null],[11,"clone","","",296,null],[11,"default","","",296,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",297,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",297,null],[11,"set","","Sets the contained value.",297,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",297,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",297,null],[11,"clone","","",297,null],[11,"default","","",297,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",297,null],[11,"partial_cmp","","",297,null],[11,"lt","","",297,null],[11,"le","","",297,null],[11,"gt","","",297,null],[11,"ge","","",297,null],[11,"cmp","","",297,null],[11,"fmt","","",298,null],[11,"eq","","",298,null],[11,"clone","","",298,null],[11,"new","","Creates a new `RefCell` containing `value`.",299,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",299,null],[11,"borrow_state","","Query the current state of this `RefCell`",299,null],[11,"borrow","","Immutably borrows the wrapped value.",299,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",299,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",299,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",299,null],[11,"clone","","",299,null],[11,"default","","",299,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",299,null],[11,"partial_cmp","","",299,null],[11,"lt","","",299,null],[11,"le","","",299,null],[11,"gt","","",299,null],[11,"ge","","",299,null],[11,"cmp","","",299,null],[11,"deref","","",300,null],[11,"clone","","Copies a `Ref`.",300,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",300,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",301,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",301,null],[11,"deref_mut","","",301,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",302,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",302,null],[11,"get","","Gets a mutable pointer to the wrapped value.",302,null],[11,"default","","",302,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"eq","core::ops","",303,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"eq","","",265,null],[11,"ne","","",265,null],[11,"clone","","",265,null],[11,"fmt","","",265,null],[11,"contains","","# Examples",265,null],[11,"eq","","",264,null],[11,"ne","","",264,null],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"contains","","# Examples",264,null],[11,"eq","","",304,null],[11,"ne","","",304,null],[11,"clone","","",304,null],[11,"fmt","","",304,null],[11,"contains","","# Examples",304,null],[11,"eq","","",266,null],[11,"ne","","",266,null],[11,"clone","","",266,null],[11,"fmt","","",266,null],[11,"from","","",266,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",266,null],[11,"eq","","",305,null],[11,"ne","","",305,null],[11,"clone","","",305,null],[11,"fmt","","",305,null],[11,"contains","","# Examples",305,null],[11,"hash","core::option","",306,null],[11,"fmt","","",306,null],[11,"cmp","","",306,null],[11,"partial_cmp","","",306,null],[11,"lt","","",306,null],[11,"le","","",306,null],[11,"gt","","",306,null],[11,"ge","","",306,null],[11,"eq","","",306,null],[11,"ne","","",306,null],[11,"clone","","",306,null],[11,"is_some","","Returns `true` if the option is a `Some` value",306,null],[11,"is_none","","Returns `true` if the option is a `None` value",306,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",306,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",306,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",306,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",306,null],[11,"unwrap_or","","Returns the contained value or a default.",306,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",306,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",306,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",306,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",306,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",306,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",306,null],[11,"iter","","Returns an iterator over the possibly contained value.",306,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",306,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",306,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",306,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",306,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",306,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",306,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",306,null],[11,"unwrap_or_default","","Returns the contained value or a default",306,null],[11,"default","","",306,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",306,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"next_back","","",307,null],[11,"clone","","",307,null],[11,"fmt","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"fmt","","",309,null],[11,"clone","","",309,null],[11,"next","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",306,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",75,null],[11,"partial_cmp","","",75,null],[11,"lt","","",75,null],[11,"le","","",75,null],[11,"gt","","",75,null],[11,"ge","","",75,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"new","","Creates a new empty `String`.",75,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",75,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",75,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",75,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",75,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",75,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",75,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",75,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",75,null],[11,"as_str","","Extracts a string slice containing the entire string.",75,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",75,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",75,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",75,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",75,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",75,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",75,null],[11,"push","","Appends the given `char` to the end of this `String`.",75,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",75,null],[11,"truncate","","Shortens this `String` to the specified length.",75,null],[11,"pop","","Removes the last character from the string buffer and returns it.",75,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",75,null],[11,"insert","","Inserts a character into this `String` at a byte position.",75,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",75,null],[11,"len","","Returns the length of this `String`, in bytes.",75,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",75,null],[11,"clear","","Truncates this `String`, removing all contents.",75,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",75,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",75,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",9,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",9,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",75,null],[11,"clone_from","","",75,null],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",75,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"extend","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","collections::string","",75,null],[11,"ne","","",75,null],[11,"default","","",75,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",75,null],[11,"fmt","","",75,null],[11,"hash","","",75,null],[11,"add","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"index_mut","","",75,null],[11,"deref","","",75,null],[11,"deref_mut","","",75,null],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"as_ref","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",74,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",75,null],[11,"write_str","","",75,null],[11,"write_char","","",75,null],[11,"drop","","",310,null],[11,"next","","",310,null],[11,"size_hint","","",310,null],[11,"next_back","","",310,null],[11,"new","core::ptr","Creates a new `Unique`.",311,null],[11,"get","","Dereferences the content.",311,null],[11,"get_mut","","Mutably dereferences the content.",311,null],[11,"deref","","",311,null],[11,"fmt","","",311,null],[11,"new","","Creates a new `Shared`.",312,null],[11,"clone","","",312,null],[11,"deref","","",312,null],[11,"fmt","","",312,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",53,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",53,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",53,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",53,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",53,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",53,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",53,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",53,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",53,null],[11,"as_slice","","Extracts a slice containing the entire vector.",53,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",53,null],[11,"set_len","","Sets the length of a vector.",53,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",53,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",53,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",53,null],[11,"retain","","Retains only the elements specified by the predicate.",53,null],[11,"push","","Appends an element to the back of a collection.",53,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",53,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",53,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",53,null],[11,"clear","","Clears the vector, removing all values.",53,null],[11,"len","","Returns the number of elements in the vector.",53,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",53,null],[11,"split_off","","Splits the collection into two at the given index.",53,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",53,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",53,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",53,null],[11,"clone","","",53,null],[11,"clone_from","","",53,null],[11,"hash","","",53,null],[11,"index","","",53,null],[11,"index_mut","","",53,null],[11,"index","","",53,null],[11,"index","","",53,null],[11,"index","","",53,null],[11,"index","","",53,null],[11,"index","","",53,null],[11,"index","","",53,null],[11,"index_mut","","",53,null],[11,"index_mut","","",53,null],[11,"index_mut","","",53,null],[11,"index_mut","","",53,null],[11,"index_mut","","",53,null],[11,"index_mut","","",53,null],[11,"deref","","",53,null],[11,"deref_mut","","",53,null],[11,"from_iter","","",53,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",53,null],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","collections::vec","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"partial_cmp","","",53,null],[11,"cmp","","",53,null],[11,"drop","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",53,null],[11,"as_ref","","",53,null],[11,"as_mut","","",53,null],[11,"as_ref","","",53,null],[11,"as_mut","","",53,null],[11,"from","","",53,null],[11,"from","","",53,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",74,null],[11,"from","","",74,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",74,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",313,null],[11,"size_hint","","",313,null],[11,"count","","",313,null],[11,"next_back","","",313,null],[11,"clone","","",313,null],[11,"drop","","",313,null],[11,"next","","",314,null],[11,"size_hint","","",314,null],[11,"next_back","","",314,null],[11,"drop","","",314,null],[11,"clone","core::raw","",315,null],[11,"hash","core::cmp","",316,null],[11,"fmt","","",316,null],[11,"eq","","",316,null],[11,"clone","","",316,null],[11,"reverse","","Reverse the `Ordering`.",316,null],[11,"cmp","","",316,null],[11,"partial_cmp","","",316,null],[11,"next","rustc_unicode::char","",317,null],[11,"next","","",318,null],[11,"clone","","",319,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"next","","",319,null],[11,"size_hint","","",319,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",12,null],[11,"fmt","","",12,null],[11,"clone","alloc::boxed","",320,null],[11,"pointer","","",321,null],[11,"make_place","","",321,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",321,null],[11,"finalize","","",3,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",320,null],[11,"drop","","",321,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",3,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",3,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",3,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"ge","","",3,null],[11,"gt","","",3,null],[11,"cmp","","",3,null],[11,"hash","","",3,null],[11,"from","","",3,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",3,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"deref","","",3,null],[11,"deref_mut","","",3,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"call_once","","",3,null],[11,"call_once","","",3,null],[11,"clone","","",3,null],[11,"borrow","","",3,null],[11,"borrow_mut","","",3,null],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"deref","tempfile","",1,null],[11,"deref_mut","","",1,null],[11,"fmt","","",0,null],[11,"from","std::io::error","",71,{"inputs":[{"name":"persisterror"}],"output":{"name":"error"}}],[11,"from","tempfile","",1,{"inputs":[{"name":"persisterror"}],"output":{"name":"namedtempfile"}}],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"new","","Create a new temporary file.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Get the temporary file&#39;s path.",1,null],[11,"close","","Close and remove the temporary file.",1,null],[11,"persist","","Persist the temporary file at the target path.",1,null],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file exists there.",1,null],[11,"reopen","","Reopen the temporary file.",1,null],[11,"from","std::fs","",2,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"drop","tempfile","",1,null],[11,"read","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,null],[11,"seek","","",1,null],[11,"as_raw_fd","","",1,null],[11,"eq","","",322,null],[11,"ne","","",322,null],[11,"clone","","",322,null],[11,"fmt","","",322,null],[11,"new","","Create a new NamedTempFileOptions",322,{"inputs":[],"output":{"name":"self"}}],[11,"prefix","","Set a custom filename prefix.",322,null],[11,"suffix","","Set a custom filename suffix.",322,null],[11,"rand_bytes","","Set the number of random bytes.",322,null],[11,"create","","Create the named temporary file.",322,null],[11,"create_in","","Create the named temporary file in the specified directory.",322,null]],"paths":[[3,"PersistError"],[3,"NamedTempFile"],[3,"File"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[4,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"RangeFull"],[3,"RangeTo"],[3,"RangeToInclusive"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"TraitObject"],[4,"Ordering"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"NamedTempFileOptions"]]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory maps.","items":[[3,"MmapOptions","memmap","",null,null],[12,"stack","","Indicates that the memory map should be suitable for a stack.",0,null],[3,"Mmap","","A memory-mapped buffer.",null,null],[3,"MmapView","","A view of a memory map.",null,null],[3,"MmapViewSync","","A thread-safe view of a memory map.",null,null],[4,"Protection","","Memory map protection.",null,null],[13,"Read","","A read-only memory map. Writes to the memory map will result in a panic.",1,null],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be reflected in\nthe file after a call to `Mmap::flush` or after the `Mmap` is dropped.",1,null],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map will not be\ncarried through to the underlying file. It is unspecified whether\nchanges made to the file after the memory map is created will be\nvisible.",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"write","","Returns `true` if the `Protection` is writable.",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"mmapoptions"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"open","","Opens a file-backed memory map.",2,{"inputs":[{"name":"file"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_path","","Opens a file-backed memory map.",2,{"inputs":[{"name":"p"},{"name":"protection"}],"output":{"name":"result"}}],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset and length.",2,{"inputs":[{"name":"file"},{"name":"protection"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"anonymous","","Opens an anonymous memory map.",2,{"inputs":[{"name":"usize"},{"name":"protection"}],"output":{"name":"result"}}],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,{"inputs":[{"name":"usize"},{"name":"protection"},{"name":"mmapoptions"}],"output":{"name":"result"}}],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,null],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,null],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,null],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range\nto disk.",2,null],[11,"len","","Returns the length of the memory map.",2,null],[11,"ptr","","Returns a pointer to the mapped memory.",2,null],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,null],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,null],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,null],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,null],[11,"restrict","","Restricts the range of the view to the provided offset and length.",3,null],[11,"flush","","Flushes outstanding view modifications to disk.",3,null],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to\ndisk.",3,null],[11,"len","","Returns the length of the memory map view.",3,null],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,null],[11,"clone","","Clones the view of the memory map.",3,null],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,null],[11,"restrict","","Restricts the range of this view to the provided offset and length.",4,null],[11,"flush","","Flushes outstanding view modifications to disk.",4,null],[11,"flush_async","","Asynchronously flushes outstanding memory map view modifications to disk.",4,null],[11,"len","","Returns the length of the memory map view.",4,null],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,null],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,null],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,null],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,null],[11,"clone","","Clones the view of the memory map.",4,null]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex["dlib"] = {"doc":"","items":[[11,"new","libloading","Find and load a shared library (module).",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",0,null],[11,"new","libloading::os::unix","Find and load a shared library (module).",1,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",1,{"inputs":[],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",1,null],[11,"drop","","",1,null],[11,"fmt","","",1,null],[11,"deref","","",2,null],[11,"fmt","","",2,null],[11,"from","std::io::error","",3,{"inputs":[{"name":"nullerror"}],"output":{"name":"error"}}],[11,"fmt","libloading","",0,null],[11,"deref","","",4,null],[11,"fmt","","",4,null],[3,"Library","dlib","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",5,null],[13,"MissingSymbol","","",5,null],[14,"ffi_dispatch!","","",null,null],[14,"ffi_dispatch_static!","","",null,null],[14,"link_external_library!","","",null,null],[14,"dlopen_external_library!","","",null,null],[14,"external_library!","","",null,null]],"paths":[[3,"Library"],[3,"Library"],[3,"Symbol"],[3,"Error"],[3,"Symbol"],[4,"DlError"]]};
searchIndex["libloading"] = {"doc":"A memory-safer wrapper around system dynamic library primitives.","items":[[3,"Library","libloading","A dynamically loaded library.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[0,"os","","",null,null],[0,"unix","libloading::os","",null,null],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",null,null],[3,"Symbol","","Symbol from a library.",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",0,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,null],[11,"try_lock","","Attempts to acquire this lock.",0,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",0,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,null],[11,"from","alloc::boxed","",1,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",1,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",2,null],[11,"description","","",3,null],[11,"description","core::num","",4,null],[11,"description","","",5,null],[11,"description","core::num::dec2flt","",6,null],[11,"description","collections::string","",7,null],[11,"description","","",8,null],[11,"description","","",9,null],[11,"description","rustc_unicode::char","",10,null],[11,"description","alloc::boxed","",1,null],[11,"cause","","",1,null],[11,"description","core::fmt","",11,null],[11,"is","libloading::os","Returns true if the boxed type is the same as `T`",12,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",12,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",12,null],[11,"is","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",12,null],[11,"is","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",12,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",12,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"clone","std::thread::local","",14,null],[11,"eq","","",14,null],[11,"with","","Acquires a reference to the value in this TLS key.",15,null],[11,"state","","Query the current state of this key.",15,null],[11,"new","std::thread::local::elf","",16,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",16,null],[11,"new","std::thread::local::os","",17,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",17,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",18,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",18,null],[11,"stack_size","","Sets the size of the stack for the new thread.",18,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",18,null],[11,"clone","","",19,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",19,null],[11,"name","","Gets the thread&#39;s name.",19,null],[11,"fmt","","",19,null],[11,"thread","","Extracts a handle to the underlying thread",20,null],[11,"join","","Waits for the associated thread to finish.",20,null],[11,"clone","std::collections::hash::map","",21,null],[11,"new","","Creates an empty HashMap.",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",21,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",21,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",21,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",21,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",21,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",21,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",21,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",21,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",21,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",21,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",21,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",21,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",21,null],[11,"len","","Returns the number of elements in the map.",21,null],[11,"is_empty","","Returns true if the map contains no elements.",21,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",21,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",21,null],[11,"get","","Returns a reference to the value corresponding to the key.",21,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",21,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",21,null],[11,"insert","","Inserts a key-value pair into the map.",21,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",21,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"len","","",22,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"len","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",29,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",29,null],[11,"key","","Returns a reference to this entry&#39;s key.",29,null],[11,"key","","Gets a reference to the key in the entry.",30,null],[11,"get","","Gets a reference to the value in the entry.",30,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",30,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",30,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",30,null],[11,"remove","","Takes the value out of the entry, and returns it",30,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",31,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",31,null],[11,"from_iter","","",21,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",21,null],[11,"extend","","",21,null],[11,"clone","","",32,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",33,null],[11,"new","","Creates an empty HashSet.",33,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",33,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",33,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",33,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",33,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",33,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",33,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",33,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",33,null],[11,"difference","","Visit the values representing the difference.",33,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",33,null],[11,"intersection","","Visit the values representing the intersection.",33,null],[11,"union","","Visit the values representing the union.",33,null],[11,"len","","Returns the number of elements in the set.",33,null],[11,"is_empty","","Returns true if the set contains no elements.",33,null],[11,"drain","","Clears the set, returning all elements in an iterator.",33,null],[11,"clear","","Clears the set, removing all values.",33,null],[11,"contains","","Returns `true` if the set contains a value.",33,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",33,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",33,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",33,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",33,null],[11,"insert","","Adds a value to the set.",33,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",33,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",33,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",33,null],[11,"eq","","",33,null],[11,"fmt","","",33,null],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",33,null],[11,"extend","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",33,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"len","","",34,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"len","","",35,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","collections::linked_list","",41,null],[11,"clone","","",42,null],[11,"default","","",43,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",43,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",43,null],[11,"iter","","Provides a forward iterator.",43,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",43,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",43,null],[11,"len","","Returns the length of the `LinkedList`.",43,null],[11,"clear","","Removes all elements from the `LinkedList`.",43,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",43,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",43,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",43,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",43,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",43,null],[11,"push_front","","Adds an element first in the list.",43,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",43,null],[11,"push_back","","Appends an element to the back of a list",43,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",43,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",43,null],[11,"front_place","","Returns a place for insertion at the front of the list.",43,null],[11,"back_place","","Returns a place for insertion at the back of the list.",43,null],[11,"drop","","",43,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next_back","","",41,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",44,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",44,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",43,null],[11,"extend","","",43,null],[11,"extend","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"partial_cmp","","",43,null],[11,"cmp","","",43,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"hash","","",43,null],[11,"make_place","","",45,null],[11,"pointer","","",45,null],[11,"finalize","","",45,null],[11,"make_place","","",46,null],[11,"pointer","","",46,null],[11,"finalize","","",46,null],[11,"clone","collections::binary_heap","",47,null],[11,"clone_from","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",47,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",47,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",47,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",47,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",47,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",47,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",47,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",47,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",47,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",47,null],[11,"push","","Pushes an item onto the binary heap.",47,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",47,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",47,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",47,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",47,null],[11,"len","","Returns the length of the binary heap.",47,null],[11,"is_empty","","Checks if the binary heap is empty.",47,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",47,null],[11,"clear","","Drops all items from the binary heap.",47,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",47,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"from","","",47,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",51,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",47,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",47,null],[11,"extend","","",47,null],[11,"extend","","",47,null],[11,"clone","collections::vec_deque","",52,null],[11,"drop","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",52,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",52,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",52,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",52,null],[11,"swap","","Swaps elements at indices `i` and `j`.",52,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",52,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",52,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",52,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",52,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",52,null],[11,"iter","","Returns a front-to-back iterator.",52,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",52,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",52,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",52,null],[11,"len","","Returns the number of elements in the `VecDeque`.",52,null],[11,"is_empty","","Returns true if the buffer contains no elements",52,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",52,null],[11,"clear","","Clears the buffer, removing all values.",52,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",52,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",52,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",52,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",52,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",52,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",52,null],[11,"push_front","","Inserts an element first in the sequence.",52,null],[11,"push_back","","Appends an element to the back of a buffer",52,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",52,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",52,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",52,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",52,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",52,null],[11,"split_off","","Splits the collection into two at the given index.",52,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",52,null],[11,"retain","","Retains only the elements specified by the predicate.",52,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",52,null],[11,"clone","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"next_back","","",55,null],[11,"drop","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"eq","","",52,null],[11,"partial_cmp","","",52,null],[11,"cmp","","",52,null],[11,"hash","","",52,null],[11,"index","","",52,null],[11,"index_mut","","",52,null],[11,"from_iter","","",52,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",52,null],[11,"extend","","",52,null],[11,"extend","","",52,null],[11,"fmt","","",52,null],[11,"from","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",51,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",57,null],[11,"size_hint","","",57,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"description","","",59,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"fmt","","",61,null],[11,"fmt","","",61,null],[11,"description","","",61,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"len","","",62,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"len","","",63,null],[11,"clone","std::ffi::c_str","",64,null],[11,"hash","","",64,null],[11,"cmp","","",64,null],[11,"partial_cmp","","",64,null],[11,"lt","","",64,null],[11,"le","","",64,null],[11,"gt","","",64,null],[11,"ge","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"hash","","",65,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"clone","","",66,null],[11,"fmt","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",64,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",64,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",64,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",64,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",64,null],[11,"into_bytes","","Returns the underlying byte buffer.",64,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",64,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",64,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",64,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",65,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",65,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",65,null],[11,"as_ptr","","Returns the inner pointer to this C string.",65,null],[11,"to_bytes","","Converts this C string to a byte slice.",65,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",65,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",65,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",65,null],[11,"deref","","",64,null],[11,"fmt","","",64,null],[11,"from","collections::vec","",51,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",65,null],[11,"default","","",64,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",64,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",66,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",66,null],[11,"description","","",66,null],[11,"fmt","","",66,null],[11,"from","std::io::error","",69,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",68,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",68,null],[11,"description","","",68,null],[11,"cause","","",68,null],[11,"fmt","","",68,null],[11,"eq","","",65,null],[11,"partial_cmp","","",65,null],[11,"cmp","","",65,null],[11,"to_owned","","",65,null],[11,"from","","",64,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",64,null],[11,"as_ref","","",65,null],[11,"as_ref","","",64,null],[11,"clone","std::ffi::os_str","",70,null],[11,"new","","Constructs a new empty `OsString`.",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",70,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",70,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",70,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",70,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",70,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",70,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",70,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",70,null],[11,"from","","",70,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",70,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",70,null],[11,"new","","Coerces into an `OsStr` slice.",71,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",71,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",71,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",71,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",71,null],[11,"len","","Returns the length of this `OsStr`.",71,null],[11,"deref","","",70,null],[11,"default","","",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"eq","","",70,null],[11,"partial_cmp","","",70,null],[11,"lt","","",70,null],[11,"le","","",70,null],[11,"gt","","",70,null],[11,"ge","","",70,null],[11,"partial_cmp","","",70,null],[11,"cmp","","",70,null],[11,"hash","","",70,null],[11,"eq","","",71,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"partial_cmp","","",71,null],[11,"cmp","","",71,null],[11,"eq","","",70,null],[11,"eq","","",71,null],[11,"partial_cmp","","",70,null],[11,"partial_cmp","","",71,null],[11,"eq","","",70,null],[11,"partial_cmp","","",70,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"hash","","",71,null],[11,"fmt","","",71,null],[11,"borrow","","",70,null],[11,"to_owned","","",71,null],[11,"as_ref","","",71,null],[11,"as_ref","","",70,null],[11,"as_ref","collections::string","",73,null],[11,"clone","std::fs","",74,null],[11,"clone","","",75,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"hash","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"open","","Attempts to open a file in read-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",78,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",78,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",78,null],[11,"metadata","","Queries metadata about the underlying file.",78,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",78,null],[11,"fmt","","",78,null],[11,"read","","",78,null],[11,"read_to_end","","",78,null],[11,"write","","",78,null],[11,"flush","","",78,null],[11,"seek","","",78,null],[11,"new","","Creates a blank new set of options ready for configuration.",75,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",75,null],[11,"write","","Sets the option for write access.",75,null],[11,"append","","Sets the option for the append mode.",75,null],[11,"truncate","","Sets the option for truncating a previous file.",75,null],[11,"create","","Sets the option for creating a new file.",75,null],[11,"create_new","","Sets the option to always create a new file.",75,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",75,null],[11,"file_type","","Returns the file type for this metadata.",74,null],[11,"is_dir","","Returns whether this metadata is for a directory.",74,null],[11,"is_file","","Returns whether this metadata is for a regular file.",74,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",74,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",74,null],[11,"modified","","Returns the last modification time listed in this metadata.",74,null],[11,"accessed","","Returns the last access time of this metadata.",74,null],[11,"created","","Returns the creation time listed in the this metadata.",74,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",76,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",76,null],[11,"is_dir","","Test whether this file type represents a directory.",77,null],[11,"is_file","","Test whether this file type represents a regular file.",77,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",77,null],[11,"next","","",79,null],[11,"path","","Returns the full path to the file that this entry represents.",80,null],[11,"metadata","","Return the metadata for the file that this entry points at.",80,null],[11,"file_type","","Return the file type for the file that this entry points at.",80,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",80,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",81,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",81,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",81,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",82,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",82,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",82,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",82,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",82,null],[11,"read","","",82,null],[11,"fill_buf","","",82,null],[11,"consume","","",82,null],[11,"fmt","","",82,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",82,null],[11,"fmt","","",83,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",84,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",84,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",84,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",84,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",84,null],[11,"write","","",84,null],[11,"flush","","",84,null],[11,"fmt","","",84,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",84,null],[11,"drop","","",84,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",83,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",83,null],[11,"from","std::io::error","",69,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",83,null],[11,"fmt","","",83,null],[11,"new","","Creates a new `LineWriter`.",85,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",85,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",85,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",85,null],[11,"write","","",85,null],[11,"flush","","",85,null],[11,"fmt","","",85,null],[11,"fmt","std::io::cursor","",86,null],[11,"clone","","",86,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",86,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",86,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",86,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",86,null],[11,"position","","Returns the current position of this cursor.",86,null],[11,"set_position","","Sets the position of this cursor.",86,null],[11,"seek","","",86,null],[11,"read","","",86,null],[11,"fill_buf","","",86,null],[11,"consume","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"fmt","std::io::error","",69,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"eq","","",87,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",69,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",69,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",69,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",69,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",69,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",69,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",69,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",69,null],[11,"fmt","","",69,null],[11,"description","","",69,null],[11,"cause","","",69,null],[11,"read","alloc::boxed","",1,null],[11,"read_to_end","","",1,null],[11,"read_to_string","","",1,null],[11,"read_exact","","",1,null],[11,"write","","",1,null],[11,"flush","","",1,null],[11,"write_all","","",1,null],[11,"write_fmt","","",1,null],[11,"seek","","",1,null],[11,"fill_buf","","",1,null],[11,"consume","","",1,null],[11,"read_until","","",1,null],[11,"read_line","","",1,null],[11,"write","collections::vec","",51,null],[11,"write_all","","",51,null],[11,"flush","","",51,null],[11,"read","std::io::util","",88,null],[11,"fill_buf","","",88,null],[11,"consume","","",88,null],[11,"read","","",89,null],[11,"write","","",90,null],[11,"flush","","",90,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",91,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",91,null],[11,"read","","",91,null],[11,"read_to_end","","",91,null],[11,"read_to_string","","",91,null],[11,"read_exact","","",91,null],[11,"read","","",92,null],[11,"read_to_end","","",92,null],[11,"fill_buf","","",92,null],[11,"consume","","",92,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",93,null],[11,"write","","",93,null],[11,"flush","","",93,null],[11,"write_all","","",93,null],[11,"write_fmt","","",93,null],[11,"write","","",94,null],[11,"flush","","",94,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",95,null],[11,"write","","",95,null],[11,"flush","","",95,null],[11,"write_all","","",95,null],[11,"write_fmt","","",95,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"fmt","std::io","",97,null],[11,"clone","","",97,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"read","","",98,null],[11,"fill_buf","","",98,null],[11,"consume","","",98,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",99,null],[11,"read","","",99,null],[11,"fill_buf","","",99,null],[11,"consume","","",99,null],[11,"next","","",100,null],[11,"fmt","","",101,null],[11,"next","","",102,null],[11,"description","","",101,null],[11,"cause","","",101,null],[11,"fmt","","",101,null],[11,"next","","",103,null],[11,"next","","",104,null],[11,"cmp","std::net::ip","",105,null],[11,"partial_cmp","","",105,null],[11,"lt","","",105,null],[11,"le","","",105,null],[11,"gt","","",105,null],[11,"ge","","",105,null],[11,"hash","","",105,null],[11,"fmt","","",105,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"fmt","","",106,null],[11,"hash","","",106,null],[11,"clone","","",106,null],[11,"eq","","",106,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",107,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",107,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",107,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",107,null],[11,"is_private","","Returns true if this is a private address.",107,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",107,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",107,null],[11,"is_multicast","","Returns true if this is a multicast address.",107,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",107,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",107,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",107,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",107,null],[11,"fmt","","",105,null],[11,"fmt","","",107,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"eq","","",107,null],[11,"hash","","",107,null],[11,"partial_cmp","","",107,null],[11,"cmp","","",107,null],[11,"from","","",107,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",107,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",108,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",108,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",108,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",108,null],[11,"is_global","","Returns true if the address appears to be globally routable.",108,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",108,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",108,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",108,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",108,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",108,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",108,null],[11,"is_multicast","","Returns true if this is a multicast address.",108,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",108,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",108,null],[11,"fmt","","",108,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"eq","","",108,null],[11,"hash","","",108,null],[11,"partial_cmp","","",108,null],[11,"cmp","","",108,null],[11,"from","","",108,null],[11,"fmt","std::net::addr","",109,null],[11,"hash","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",109,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",109,null],[11,"set_ip","","Change the IP address associated with this socket address.",109,null],[11,"port","","Returns the port number associated with this socket address.",109,null],[11,"set_port","","Change the port number associated with this socket address.",109,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",110,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",110,null],[11,"set_ip","","Change the IP address associated with this socket address.",110,null],[11,"port","","Returns the port number associated with this socket address.",110,null],[11,"set_port","","Change the port number associated with this socket address.",110,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",111,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,null],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,null],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",111,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",111,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",111,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",111,null],[11,"fmt","","",109,null],[11,"fmt","","",110,null],[11,"fmt","","",110,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"clone","","",110,null],[11,"clone","","",111,null],[11,"eq","","",110,null],[11,"eq","","",111,null],[11,"hash","","",110,null],[11,"hash","","",111,null],[11,"to_socket_addrs","","",109,null],[11,"to_socket_addrs","","",110,null],[11,"to_socket_addrs","","",111,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",112,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",112,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",112,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",112,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",112,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",112,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",112,null],[11,"read_timeout","","Returns the read timeout of this socket.",112,null],[11,"write_timeout","","Returns the write timeout of this socket.",112,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",112,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",112,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",112,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",112,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",112,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",112,null],[11,"read","","",112,null],[11,"read_to_end","","",112,null],[11,"write","","",112,null],[11,"flush","","",112,null],[11,"fmt","","",112,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",113,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",113,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",113,null],[11,"accept","","Accept a new incoming connection from this listener.",113,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",113,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",113,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",113,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",113,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",113,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",113,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",113,null],[11,"next","","",114,null],[11,"fmt","","",113,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",115,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",115,null],[11,"local_addr","","Returns the socket address that this socket was created from.",115,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",115,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",115,null],[11,"read_timeout","","Returns the read timeout of this socket.",115,null],[11,"write_timeout","","Returns the write timeout of this socket.",115,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",115,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",115,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",115,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",115,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",115,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",115,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",115,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",115,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",115,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",115,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",115,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",115,null],[11,"fmt","","",115,null],[11,"from_str","std::net::ip","",105,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",107,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"description","","",116,null],[11,"fmt","std::net","",117,null],[11,"eq","","",117,null],[11,"clone","","",117,null],[11,"next","","",118,null],[11,"clone","std::os::linux::raw::arch","",119,null],[11,"as_raw_stat","std::fs","",74,null],[11,"st_dev","","",74,null],[11,"st_ino","","",74,null],[11,"st_mode","","",74,null],[11,"st_nlink","","",74,null],[11,"st_uid","","",74,null],[11,"st_gid","","",74,null],[11,"st_rdev","","",74,null],[11,"st_size","","",74,null],[11,"st_atime","","",74,null],[11,"st_atime_nsec","","",74,null],[11,"st_mtime","","",74,null],[11,"st_mtime_nsec","","",74,null],[11,"st_ctime","","",74,null],[11,"st_ctime_nsec","","",74,null],[11,"st_blksize","","",74,null],[11,"st_blocks","","",74,null],[11,"as_raw_fd","","",78,null],[11,"from_raw_fd","","",78,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",78,null],[11,"as_raw_fd","std::net::tcp","",112,null],[11,"as_raw_fd","","",113,null],[11,"as_raw_fd","std::net::udp","",115,null],[11,"from_raw_fd","std::net::tcp","",112,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",113,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",115,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",112,null],[11,"into_raw_fd","","",113,null],[11,"into_raw_fd","std::net::udp","",115,null],[11,"from_vec","std::ffi::os_str","",70,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",70,null],[11,"from_bytes","","",71,null],[11,"as_bytes","","",71,null],[11,"mode","std::fs","",76,null],[11,"set_mode","","",76,null],[11,"from_mode","","",76,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",75,null],[11,"custom_flags","","",75,null],[11,"dev","","",74,null],[11,"ino","","",74,null],[11,"mode","","",74,null],[11,"nlink","","",74,null],[11,"uid","","",74,null],[11,"gid","","",74,null],[11,"rdev","","",74,null],[11,"size","","",74,null],[11,"atime","","",74,null],[11,"atime_nsec","","",74,null],[11,"mtime","","",74,null],[11,"mtime_nsec","","",74,null],[11,"ctime","","",74,null],[11,"ctime_nsec","","",74,null],[11,"blksize","","",74,null],[11,"blocks","","",74,null],[11,"is_block_device","","",77,null],[11,"is_char_device","","",77,null],[11,"is_fifo","","",77,null],[11,"is_socket","","",77,null],[11,"ino","","",80,null],[11,"mode","","",81,null],[11,"uid","std::process","",120,null],[11,"gid","","",120,null],[11,"before_exec","","",120,null],[11,"exec","","",120,null],[11,"from_raw","","",121,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",121,null],[11,"from_raw_fd","","",122,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",123,null],[11,"as_raw_fd","","",124,null],[11,"as_raw_fd","","",125,null],[11,"into_raw_fd","","",123,null],[11,"into_raw_fd","","",124,null],[11,"into_raw_fd","","",125,null],[11,"as_pthread_t","std::thread","",20,null],[11,"into_pthread_t","","",20,null],[11,"clone","std::sys::ext::net","",126,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",126,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",126,null],[11,"fmt","","",126,null],[11,"fmt","","",127,null],[11,"connect","","Connects to the socket named by `path`.",127,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",127,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",127,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",127,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",127,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",127,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",127,null],[11,"read_timeout","","Returns the read timeout of this socket.",127,null],[11,"write_timeout","","Returns the write timeout of this socket.",127,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",127,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",127,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",127,null],[11,"read","","",127,null],[11,"read_to_end","","",127,null],[11,"write","","",127,null],[11,"flush","","",127,null],[11,"as_raw_fd","","",127,null],[11,"from_raw_fd","","",127,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",127,null],[11,"fmt","","",128,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",128,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",128,null],[11,"local_addr","","Returns the local socket address of this listener.",128,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",128,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",128,null],[11,"incoming","","Returns an iterator over incoming connections.",128,null],[11,"as_raw_fd","","",128,null],[11,"from_raw_fd","","",128,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",128,null],[11,"fmt","","",129,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"fmt","","",130,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",130,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",130,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",130,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,null],[11,"local_addr","","Returns the address of this socket.",130,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",130,null],[11,"recv_from","","Receives data from the socket.",130,null],[11,"recv","","Receives data from the socket.",130,null],[11,"send_to","","Sends data on the socket to the specified address.",130,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",130,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",130,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",130,null],[11,"read_timeout","","Returns the read timeout of this socket.",130,null],[11,"write_timeout","","Returns the write timeout of this socket.",130,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",130,null],[11,"as_raw_fd","","",130,null],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",130,null],[11,"deref","std::panic","",131,null],[11,"deref_mut","","",131,null],[11,"call_once","","",131,null],[11,"eq","std::path","",132,null],[11,"ne","","",132,null],[11,"cmp","","",132,null],[11,"partial_cmp","","",132,null],[11,"lt","","",132,null],[11,"le","","",132,null],[11,"gt","","",132,null],[11,"ge","","",132,null],[11,"hash","","",132,null],[11,"fmt","","",132,null],[11,"clone","","",132,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",132,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"kind","","The parsed prefix data.",133,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",133,null],[11,"eq","","",133,null],[11,"partial_cmp","","",133,null],[11,"cmp","","",133,null],[11,"hash","","",133,null],[11,"fmt","","",134,null],[11,"hash","","",134,null],[11,"cmp","","",134,null],[11,"partial_cmp","","",134,null],[11,"lt","","",134,null],[11,"le","","",134,null],[11,"gt","","",134,null],[11,"ge","","",134,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",134,null],[11,"as_ref","","",134,null],[11,"clone","","",135,null],[11,"clone","","",136,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",135,null],[11,"as_ref","","",135,null],[11,"as_ref","","",135,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",136,null],[11,"as_ref","","",136,null],[11,"as_ref","","",136,null],[11,"next","","",136,null],[11,"next_back","","",136,null],[11,"next","","",135,null],[11,"next_back","","",135,null],[11,"eq","","",135,null],[11,"partial_cmp","","",135,null],[11,"cmp","","",135,null],[11,"clone","","",137,null],[11,"new","","Allocates an empty `PathBuf`.",137,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",137,null],[11,"push","","Extends `self` with `path`.",137,null],[11,"pop","","Truncate `self` to `self.parent()`.",137,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",137,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",137,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",137,null],[11,"from","","",137,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",137,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",137,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",137,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",137,null],[11,"fmt","","",137,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",138,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",138,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",138,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",138,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",138,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",138,null],[11,"is_relative","","A path is *relative* if it is not absolute.",138,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",138,null],[11,"parent","","The path without its final component, if any.",138,null],[11,"file_name","","The final component of the path, if it is a normal file.",138,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",138,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",138,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",138,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",138,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",138,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",138,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",138,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",138,null],[11,"components","","Produce an iterator over the components of the path.",138,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",138,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",138,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",138,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",138,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",138,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",138,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",138,null],[11,"exists","","Returns whether the path points at an existing entity.",138,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",138,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",138,null],[11,"deref","","",137,null],[11,"borrow","","",137,null],[11,"from","collections::borrow","",72,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",138,null],[11,"eq","","",137,null],[11,"hash","","",137,null],[11,"partial_cmp","","",137,null],[11,"cmp","","",137,null],[11,"as_ref","","",137,null],[11,"into","","",137,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",139,null],[11,"as_ref","","",138,null],[11,"fmt","","",138,null],[11,"fmt","","",140,null],[11,"fmt","","",140,null],[11,"eq","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"as_ref","","",138,null],[11,"as_ref","std::ffi::os_str","",71,null],[11,"as_ref","collections::borrow","",72,null],[11,"as_ref","std::ffi::os_str","",70,null],[11,"as_ref","collections::string","",73,null],[11,"as_ref","std::path","",137,null],[11,"eq","","",137,null],[11,"eq","","",138,null],[11,"partial_cmp","","",137,null],[11,"partial_cmp","","",138,null],[11,"eq","","",137,null],[11,"partial_cmp","","",137,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::path","",137,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::path","",137,null],[11,"eq","","",137,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",137,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","std::path","",137,null],[11,"partial_cmp","","",137,null],[11,"eq","","",137,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","std::path","",137,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"eq","std::path","",137,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","std::path","",137,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"eq","std::path","",138,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","","",138,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"eq","std::path","",138,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","","",70,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"fmt","std::path","",139,null],[11,"description","","",139,null],[11,"write","std::process","",123,null],[11,"flush","","",123,null],[11,"read","","",124,null],[11,"read_to_end","","",124,null],[11,"read","","",125,null],[11,"read_to_end","","",125,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",120,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",120,null],[11,"args","","Add multiple arguments to pass to the program.",120,null],[11,"env","","Inserts or updates an environment variable mapping.",120,null],[11,"env_remove","","Removes an environment variable mapping.",120,null],[11,"env_clear","","Clears the entire environment map for the child process.",120,null],[11,"current_dir","","Sets the working directory for the child process.",120,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",120,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",120,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",120,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",120,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",120,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",120,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",120,null],[11,"clone","","",141,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"fmt","","",141,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",121,null],[11,"clone","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",121,null],[11,"code","","Returns the exit code of the process, if any.",121,null],[11,"fmt","","",121,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",142,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",142,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",142,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",142,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",143,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",143,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",143,null],[11,"id","","Retrieves the id of this handle.",144,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",144,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",144,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",144,null],[11,"drop","","",143,null],[11,"drop","","",144,null],[11,"fmt","","",143,null],[11,"fmt","","",144,null],[11,"clone","std::sync::mpsc","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"fmt","","",146,null],[11,"clone","","",146,null],[11,"eq","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[11,"clone","","",148,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",149,null],[11,"clone","","",149,null],[11,"drop","","",149,null],[11,"fmt","","",149,null],[11,"send","","Sends a value on this synchronous channel.",150,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",150,null],[11,"clone","","",150,null],[11,"drop","","",150,null],[11,"fmt","","",150,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",151,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",151,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",151,null],[11,"next","","",152,null],[11,"next","","",153,null],[11,"into_iter","","",151,null],[11,"drop","","",151,null],[11,"fmt","","",151,null],[11,"fmt","","",145,null],[11,"fmt","","",145,null],[11,"description","","",145,null],[11,"cause","","",145,null],[11,"fmt","","",148,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"fmt","","",146,null],[11,"description","","",146,null],[11,"cause","","",146,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"cause","","",147,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",154,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",154,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",155,null],[11,"clone","std::sync::condvar","",156,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"fmt","","",156,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",156,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",157,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",157,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",157,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",157,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",157,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",157,null],[11,"default","","",157,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",157,null],[11,"new","","Creates a new condition variable",158,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",158,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",158,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",158,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",158,null],[11,"drop","std::sync::mutex","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",0,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",159,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",159,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",159,null],[11,"destroy","","Deallocates resources associated with this static mutex.",159,null],[11,"deref","","",160,null],[11,"deref_mut","","",160,null],[11,"drop","","",160,null],[11,"new","std::sync::once","Creates a new `Once` value.",161,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",161,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",161,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",162,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",163,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",163,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",163,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",163,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",163,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",163,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",163,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",163,null],[11,"drop","","",163,null],[11,"fmt","","",163,null],[11,"default","","",163,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",164,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",164,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",164,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",164,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",164,null],[11,"destroy","","Deallocates all resources associated with this static lock.",164,null],[11,"deref","","",165,null],[11,"deref","","",166,null],[11,"deref_mut","","",166,null],[11,"drop","","",165,null],[11,"drop","","",166,null],[11,"default","core::sync::atomic","",167,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",169,null],[11,"clone","","",169,null],[11,"new","","Creates a new `AtomicBool`.",167,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",167,null],[11,"store","","Stores a value into the bool.",167,null],[11,"swap","","Stores a value into the bool, returning the old value.",167,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",167,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",167,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",167,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",167,null],[11,"new","","Creates a new `AtomicPtr`.",168,null],[11,"load","","Loads a value from the pointer.",168,null],[11,"store","","Stores a value into the pointer.",168,null],[11,"swap","","Stores a value into the pointer, returning the old value.",168,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",168,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",168,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",168,null],[11,"default","","",170,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",170,null],[11,"new","","Creates a new atomic integer.",170,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",170,null],[11,"store","","Stores a value into the atomic integer.",170,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",170,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",170,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",170,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",170,null],[11,"fetch_add","","Add to the current value, returning the previous value.",170,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",170,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",170,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",170,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",170,null],[11,"default","","",171,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",171,null],[11,"new","","Creates a new atomic integer.",171,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",171,null],[11,"store","","Stores a value into the atomic integer.",171,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",171,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",171,null],[11,"fetch_add","","Add to the current value, returning the previous value.",171,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",171,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",171,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",171,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",171,null],[11,"default","","",172,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",172,null],[11,"new","","Creates a new atomic integer.",172,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",172,null],[11,"store","","Stores a value into the atomic integer.",172,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"fetch_add","","Add to the current value, returning the previous value.",172,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",172,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",172,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",172,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",172,null],[11,"default","","",173,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",173,null],[11,"new","","Creates a new atomic integer.",173,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",173,null],[11,"store","","Stores a value into the atomic integer.",173,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"fetch_add","","Add to the current value, returning the previous value.",173,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",173,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",173,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",173,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"fmt","","",167,null],[11,"fmt","","",168,null],[11,"hash","std::time::duration","",180,null],[11,"fmt","","",180,null],[11,"cmp","","",180,null],[11,"partial_cmp","","",180,null],[11,"lt","","",180,null],[11,"le","","",180,null],[11,"gt","","",180,null],[11,"ge","","",180,null],[11,"eq","","",180,null],[11,"ne","","",180,null],[11,"clone","","",180,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",180,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",180,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",180,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",180,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",180,null],[11,"add","","",180,null],[11,"add_assign","","",180,null],[11,"sub","","",180,null],[11,"sub_assign","","",180,null],[11,"mul","","",180,null],[11,"mul_assign","","",180,null],[11,"div","","",180,null],[11,"div_assign","","",180,null],[11,"cmp","std::time","",181,null],[11,"partial_cmp","","",181,null],[11,"lt","","",181,null],[11,"le","","",181,null],[11,"gt","","",181,null],[11,"ge","","",181,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"clone","","",181,null],[11,"cmp","","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"fmt","","",183,null],[11,"clone","","",183,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",181,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",181,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",181,null],[11,"add","","",181,null],[11,"add_assign","","",181,null],[11,"sub","","",181,null],[11,"sub_assign","","",181,null],[11,"sub","","",181,null],[11,"fmt","","",181,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",182,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",182,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",182,null],[11,"add","","",182,null],[11,"add_assign","","",182,null],[11,"sub","","",182,null],[11,"sub_assign","","",182,null],[11,"fmt","","",182,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",183,null],[11,"description","","",183,null],[11,"fmt","","",183,null],[11,"fmt","std::sys_common::poison","",184,null],[11,"fmt","","",184,null],[11,"description","","",184,null],[11,"new","","Creates a `PoisonError`.",184,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",184,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",184,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",184,null],[11,"from","","",185,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",185,null],[11,"fmt","","",185,null],[11,"description","","",185,null],[11,"cause","","",185,null],[11,"clone","libc::unix","",186,null],[11,"clone","","",187,null],[11,"clone","","",188,null],[11,"clone","","",189,null],[11,"clone","","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","libc::unix::notbsd","",199,null],[11,"clone","","",200,null],[11,"clone","","",201,null],[11,"clone","","",202,null],[11,"clone","","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","libc::unix::notbsd::linux","",214,null],[11,"clone","","",215,null],[11,"clone","","",216,null],[11,"clone","","",217,null],[11,"clone","","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","libc::unix::notbsd::linux::other","",230,null],[11,"clone","","",231,null],[11,"clone","","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",241,null],[11,"clone","","",242,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",243,null],[11,"clone","","",244,null],[11,"clone","","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",251,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",251,null],[11,"file","","Returns the name of the source file from which the panic originated.",252,null],[11,"line","","Returns the line number from which the panic originated.",252,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",253,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",253,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",253,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",253,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",253,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",253,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",253,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",253,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",253,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",253,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",253,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",253,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",253,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",253,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",253,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",253,null],[11,"hash","","",253,null],[11,"fmt","","",253,null],[11,"fmt","","",253,null],[11,"fmt","","",253,null],[11,"from","","",253,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",254,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",254,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",254,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",254,null],[11,"fmt","","",254,null],[11,"default","","",254,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",253,null],[11,"as_ref","","",253,null],[11,"borrow","collections::borrow","",72,null],[11,"clone","","",72,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",72,null],[11,"into_owned","","Extracts the owned data.",72,null],[11,"deref","","",72,null],[11,"cmp","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"fmt","","",72,null],[11,"fmt","","",72,null],[11,"hash","","",72,null],[11,"as_ref","","",72,null],[11,"hash","core::result","",255,null],[11,"fmt","","",255,null],[11,"cmp","","",255,null],[11,"partial_cmp","","",255,null],[11,"lt","","",255,null],[11,"le","","",255,null],[11,"gt","","",255,null],[11,"ge","","",255,null],[11,"eq","","",255,null],[11,"ne","","",255,null],[11,"clone","","",255,null],[11,"is_ok","","Returns true if the result is `Ok`",255,null],[11,"is_err","","Returns true if the result is `Err`",255,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",255,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",255,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",255,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",255,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",255,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",255,null],[11,"iter","","Returns an iterator over the possibly contained value.",255,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",255,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",255,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",255,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",255,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",255,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",255,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",255,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",255,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",255,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",255,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",255,null],[11,"fmt","","",256,null],[11,"next","","",256,null],[11,"size_hint","","",256,null],[11,"next_back","","",256,null],[11,"clone","","",256,null],[11,"fmt","","",257,null],[11,"next","","",257,null],[11,"size_hint","","",257,null],[11,"next_back","","",257,null],[11,"fmt","","",258,null],[11,"next","","",258,null],[11,"size_hint","","",258,null],[11,"next_back","","",258,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",255,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","libloading::os","",259,null],[11,"fmt","","",259,null],[11,"is","","Returns true if the boxed type is the same as `T`",259,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",259,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",259,null],[11,"is","","Forwards to the method defined on the type `Any`.",259,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",259,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",259,null],[11,"hash","core::any","",260,null],[11,"fmt","","",260,null],[11,"eq","","",260,null],[11,"ne","","",260,null],[11,"clone","","",260,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",260,{"inputs":[],"output":{"name":"typeid"}}],[11,"fmt","core::iter::range","",261,null],[11,"clone","","",261,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",262,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",263,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",264,null],[11,"next","core::iter::range","",261,null],[11,"size_hint","","",261,null],[11,"next","","",261,null],[11,"size_hint","","",261,null],[11,"next","","",261,null],[11,"size_hint","","",261,null],[11,"next","core::ops","",263,null],[11,"size_hint","","",263,null],[11,"next_back","","",263,null],[11,"next","","",262,null],[11,"next","","",264,null],[11,"size_hint","","",264,null],[11,"next_back","","",264,null],[11,"fmt","core::iter::sources","",265,null],[11,"clone","","",265,null],[11,"next","","",265,null],[11,"size_hint","","",265,null],[11,"next_back","","",265,null],[11,"fmt","","",266,null],[11,"next","","",266,null],[11,"size_hint","","",266,null],[11,"next_back","","",266,null],[11,"len","","",266,null],[11,"clone","","",266,null],[11,"default","","",266,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",267,null],[11,"clone","","",267,null],[11,"next","","",267,null],[11,"size_hint","","",267,null],[11,"next_back","","",267,null],[11,"len","","",267,null],[11,"fmt","core::iter","",268,null],[11,"clone","","",268,null],[11,"next","","",268,null],[11,"size_hint","","",268,null],[11,"next_back","","",268,null],[11,"fmt","","",269,null],[11,"clone","","",269,null],[11,"next","","",269,null],[11,"size_hint","","",269,null],[11,"next_back","","",269,null],[11,"fmt","","",270,null],[11,"clone","","",270,null],[11,"next","","",270,null],[11,"size_hint","","",270,null],[11,"fmt","","",271,null],[11,"clone","","",271,null],[11,"next","","",271,null],[11,"count","","",271,null],[11,"nth","","",271,null],[11,"find","","",271,null],[11,"last","","",271,null],[11,"size_hint","","",271,null],[11,"next_back","","",271,null],[11,"fmt","","",272,null],[11,"clone","","",272,null],[11,"next","","",272,null],[11,"size_hint","","",272,null],[11,"next_back","","",272,null],[11,"clone","","",273,null],[11,"fmt","","",273,null],[11,"next","","",273,null],[11,"size_hint","","",273,null],[11,"next_back","","",273,null],[11,"clone","","",274,null],[11,"fmt","","",274,null],[11,"next","","",274,null],[11,"size_hint","","",274,null],[11,"next_back","","",274,null],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"next","","",275,null],[11,"size_hint","","",275,null],[11,"next_back","","",275,null],[11,"fmt","","",276,null],[11,"clone","","",276,null],[11,"next","","# Overflow Behavior",276,null],[11,"size_hint","","",276,null],[11,"nth","","",276,null],[11,"count","","",276,null],[11,"next_back","","",276,null],[11,"fmt","","",277,null],[11,"clone","","",277,null],[11,"next","","",277,null],[11,"count","","",277,null],[11,"nth","","",277,null],[11,"last","","",277,null],[11,"size_hint","","",277,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",277,null],[11,"is_empty","","Checks if the iterator has finished iterating.",277,null],[11,"clone","","",278,null],[11,"fmt","","",278,null],[11,"next","","",278,null],[11,"size_hint","","",278,null],[11,"clone","","",279,null],[11,"fmt","","",279,null],[11,"next","","",279,null],[11,"size_hint","","",279,null],[11,"fmt","","",280,null],[11,"clone","","",280,null],[11,"next","","",280,null],[11,"nth","","",280,null],[11,"count","","",280,null],[11,"last","","",280,null],[11,"size_hint","","",280,null],[11,"next_back","","",280,null],[11,"fmt","","",281,null],[11,"clone","","",281,null],[11,"next","","",281,null],[11,"nth","","",281,null],[11,"size_hint","","",281,null],[11,"clone","","",282,null],[11,"fmt","","",282,null],[11,"next","","",282,null],[11,"size_hint","","",282,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"next","","",283,null],[11,"size_hint","","",283,null],[11,"next_back","","",283,null],[11,"fmt","","",284,null],[11,"clone","","",284,null],[11,"next","","",284,null],[11,"nth","","",284,null],[11,"last","","",284,null],[11,"count","","",284,null],[11,"size_hint","","",284,null],[11,"next_back","","",284,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"next","","",285,null],[11,"size_hint","","",285,null],[11,"next_back","","",285,null],[11,"borrow","collections::vec","",51,null],[11,"borrow_mut","","",51,null],[11,"fmt","core::hash::sip","",286,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",286,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",286,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",286,null],[11,"finish","","",286,null],[11,"clone","","",286,null],[11,"default","","",286,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",287,null],[11,"build_hasher","","",287,null],[11,"clone","","",287,null],[11,"default","","",287,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","collections::str","",288,null],[11,"next","","",288,null],[11,"size_hint","","",288,null],[11,"borrow","collections::string","",73,null],[11,"fmt","core::str::pattern","",289,null],[11,"eq","","",289,null],[11,"ne","","",289,null],[11,"clone","","",289,null],[11,"fmt","","",290,null],[11,"clone","","",290,null],[11,"haystack","","",290,null],[11,"next","","",290,null],[11,"next_match","","",290,null],[11,"next_reject","","",290,null],[11,"next_back","","",290,null],[11,"next_match_back","","",290,null],[11,"next_reject_back","","",290,null],[11,"fmt","","",291,null],[11,"clone","","",291,null],[11,"haystack","","",291,null],[11,"next","","",291,null],[11,"next_match","","",291,null],[11,"next_reject","","",291,null],[11,"next_back","","",291,null],[11,"next_match_back","","",291,null],[11,"next_reject_back","","",291,null],[11,"clone","","",292,null],[11,"fmt","","",292,null],[11,"haystack","","",292,null],[11,"next","","",292,null],[11,"next_match","","",292,null],[11,"next_reject","","",292,null],[11,"next_back","","",292,null],[11,"next_match_back","","",292,null],[11,"next_reject_back","","",292,null],[11,"fmt","","",293,null],[11,"clone","","",293,null],[11,"haystack","","",293,null],[11,"next","","",293,null],[11,"next_match","","",293,null],[11,"next_back","","",293,null],[11,"next_match_back","","",293,null],[11,"hash","core::marker","",294,null],[11,"eq","","",294,null],[11,"partial_cmp","","",294,null],[11,"cmp","","",294,null],[11,"clone","","",294,null],[11,"default","","",294,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",295,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",295,null],[11,"set","","Sets the contained value.",295,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",295,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",295,null],[11,"clone","","",295,null],[11,"default","","",295,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",295,null],[11,"partial_cmp","","",295,null],[11,"lt","","",295,null],[11,"le","","",295,null],[11,"gt","","",295,null],[11,"ge","","",295,null],[11,"cmp","","",295,null],[11,"fmt","","",296,null],[11,"eq","","",296,null],[11,"clone","","",296,null],[11,"new","","Creates a new `RefCell` containing `value`.",297,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",297,null],[11,"borrow_state","","Query the current state of this `RefCell`",297,null],[11,"borrow","","Immutably borrows the wrapped value.",297,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",297,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",297,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",297,null],[11,"clone","","",297,null],[11,"default","","",297,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",297,null],[11,"partial_cmp","","",297,null],[11,"lt","","",297,null],[11,"le","","",297,null],[11,"gt","","",297,null],[11,"ge","","",297,null],[11,"cmp","","",297,null],[11,"deref","","",298,null],[11,"clone","","Copies a `Ref`.",298,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",298,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",299,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",299,null],[11,"deref_mut","","",299,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",300,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",300,null],[11,"get","","Gets a mutable pointer to the wrapped value.",300,null],[11,"default","","",300,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"eq","core::ops","",301,null],[11,"clone","","",301,null],[11,"fmt","","",301,null],[11,"eq","","",263,null],[11,"ne","","",263,null],[11,"clone","","",263,null],[11,"fmt","","",263,null],[11,"contains","","# Examples",263,null],[11,"eq","","",262,null],[11,"ne","","",262,null],[11,"clone","","",262,null],[11,"fmt","","",262,null],[11,"contains","","# Examples",262,null],[11,"eq","","",302,null],[11,"ne","","",302,null],[11,"clone","","",302,null],[11,"fmt","","",302,null],[11,"contains","","# Examples",302,null],[11,"eq","","",264,null],[11,"ne","","",264,null],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"from","","",264,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",264,null],[11,"eq","","",303,null],[11,"ne","","",303,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"contains","","# Examples",303,null],[11,"hash","core::option","",304,null],[11,"fmt","","",304,null],[11,"cmp","","",304,null],[11,"partial_cmp","","",304,null],[11,"lt","","",304,null],[11,"le","","",304,null],[11,"gt","","",304,null],[11,"ge","","",304,null],[11,"eq","","",304,null],[11,"ne","","",304,null],[11,"clone","","",304,null],[11,"is_some","","Returns `true` if the option is a `Some` value",304,null],[11,"is_none","","Returns `true` if the option is a `None` value",304,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",304,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",304,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",304,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",304,null],[11,"unwrap_or","","Returns the contained value or a default.",304,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",304,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",304,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",304,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",304,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",304,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",304,null],[11,"iter","","Returns an iterator over the possibly contained value.",304,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",304,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",304,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",304,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",304,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",304,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",304,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",304,null],[11,"unwrap_or_default","","Returns the contained value or a default",304,null],[11,"default","","",304,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",304,null],[11,"fmt","","",305,null],[11,"next","","",305,null],[11,"size_hint","","",305,null],[11,"next_back","","",305,null],[11,"clone","","",305,null],[11,"fmt","","",306,null],[11,"next","","",306,null],[11,"size_hint","","",306,null],[11,"next_back","","",306,null],[11,"fmt","","",307,null],[11,"clone","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"next_back","","",307,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",304,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"new","","Creates a new empty `String`.",73,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",73,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",73,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",73,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",73,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",73,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",73,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",73,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",73,null],[11,"as_str","","Extracts a string slice containing the entire string.",73,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",73,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",73,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",73,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",73,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",73,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",73,null],[11,"push","","Appends the given `char` to the end of this `String`.",73,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",73,null],[11,"truncate","","Shortens this `String` to the specified length.",73,null],[11,"pop","","Removes the last character from the string buffer and returns it.",73,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",73,null],[11,"insert","","Inserts a character into this `String` at a byte position.",73,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",73,null],[11,"len","","Returns the length of this `String`, in bytes.",73,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",73,null],[11,"clear","","Truncates this `String`, removing all contents.",73,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",73,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",73,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",7,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",7,null],[11,"fmt","","",7,null],[11,"fmt","","",8,null],[11,"clone","","",73,null],[11,"clone_from","","",73,null],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","collections::borrow","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","collections::string","",73,null],[11,"ne","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",73,null],[11,"fmt","","",73,null],[11,"hash","","",73,null],[11,"add","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"deref","","",73,null],[11,"deref_mut","","",73,null],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"as_ref","","",73,null],[11,"as_ref","","",73,null],[11,"from","","",73,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",72,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",73,null],[11,"write_str","","",73,null],[11,"write_char","","",73,null],[11,"drop","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"new","core::ptr","Creates a new `Unique`.",309,null],[11,"get","","Dereferences the content.",309,null],[11,"get_mut","","Mutably dereferences the content.",309,null],[11,"deref","","",309,null],[11,"fmt","","",309,null],[11,"new","","Creates a new `Shared`.",310,null],[11,"clone","","",310,null],[11,"deref","","",310,null],[11,"fmt","","",310,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",51,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",51,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",51,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",51,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",51,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",51,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",51,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",51,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",51,null],[11,"as_slice","","Extracts a slice containing the entire vector.",51,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",51,null],[11,"set_len","","Sets the length of a vector.",51,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",51,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",51,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",51,null],[11,"retain","","Retains only the elements specified by the predicate.",51,null],[11,"push","","Appends an element to the back of a collection.",51,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",51,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",51,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",51,null],[11,"clear","","Clears the vector, removing all values.",51,null],[11,"len","","Returns the number of elements in the vector.",51,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",51,null],[11,"split_off","","Splits the collection into two at the given index.",51,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",51,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",51,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",51,null],[11,"clone","","",51,null],[11,"clone_from","","",51,null],[11,"hash","","",51,null],[11,"index","","",51,null],[11,"index_mut","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"index_mut","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"from_iter","","",51,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",51,null],[11,"extend","","",51,null],[11,"extend","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","collections::borrow","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","collections::vec","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"partial_cmp","","",51,null],[11,"cmp","","",51,null],[11,"drop","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",51,null],[11,"as_ref","","",51,null],[11,"as_mut","","",51,null],[11,"as_ref","","",51,null],[11,"as_mut","","",51,null],[11,"from","","",51,null],[11,"from","","",51,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",72,null],[11,"from","","",72,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",72,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",311,null],[11,"size_hint","","",311,null],[11,"count","","",311,null],[11,"next_back","","",311,null],[11,"clone","","",311,null],[11,"drop","","",311,null],[11,"next","","",312,null],[11,"size_hint","","",312,null],[11,"next_back","","",312,null],[11,"drop","","",312,null],[11,"clone","core::raw","",313,null],[11,"hash","core::cmp","",314,null],[11,"fmt","","",314,null],[11,"eq","","",314,null],[11,"clone","","",314,null],[11,"reverse","","Reverse the `Ordering`.",314,null],[11,"cmp","","",314,null],[11,"partial_cmp","","",314,null],[11,"next","rustc_unicode::char","",315,null],[11,"next","","",316,null],[11,"clone","","",317,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"next","","",317,null],[11,"size_hint","","",317,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",10,null],[11,"fmt","","",10,null],[11,"clone","alloc::boxed","",318,null],[11,"pointer","","",319,null],[11,"make_place","","",319,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",319,null],[11,"finalize","","",1,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",318,null],[11,"drop","","",319,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",1,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",1,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",1,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"ge","","",1,null],[11,"gt","","",1,null],[11,"cmp","","",1,null],[11,"hash","","",1,null],[11,"from","","",1,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"deref","","",1,null],[11,"deref_mut","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"call_once","","",1,null],[11,"call_once","","",1,null],[11,"clone","","",1,null],[11,"borrow","","",1,null],[11,"borrow_mut","","",1,null],[11,"as_ref","","",1,null],[11,"as_mut","","",1,null],[11,"new","libloading::os::unix","Find and load a shared library (module).",320,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"this","","Load the dynamic libraries linked into main program.",320,{"inputs":[],"output":{"name":"library"}}],[11,"get","","Get a symbol by name.",320,null],[11,"drop","","",320,null],[11,"fmt","","",320,null],[11,"deref","","",321,null],[11,"fmt","","",321,null],[11,"from","std::io::error","",69,{"inputs":[{"name":"nullerror"}],"output":{"name":"error"}}],[6,"Result","libloading","",null,null],[11,"new","","Find and load a shared library (module).",322,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"get","","Get a symbol by name.",322,null],[11,"fmt","","",322,null],[11,"deref","","",323,null],[11,"fmt","","",323,null]],"paths":[[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[3,"Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[8,"Any"],[3,"TypeId"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[4,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"RangeFull"],[3,"RangeTo"],[3,"RangeToInclusive"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"TraitObject"],[4,"Ordering"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex["fs2"] = {"doc":"","items":[[5,"lock_contended_error","fs2","Returns the error that a call to a try lock method on a contended file will\nreturn.",null,{"inputs":[],"output":{"name":"error"}}],[5,"free_space","","Returns the number of free bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"available_space","","Returns the available space in bytes to non-priveleged users in the file\nsystem containing the provided path.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"total_space","","Returns the total space in bytes in the file system containing the provided\npath.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"allocation_granularity","","Returns the filesystem&#39;s disk space allocation granularity in bytes.\nThe provided path may be for any file in the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[8,"FileExt","","Extension trait for `File` providing duplication and locking methods.",null,null],[10,"duplicate","","Returns a duplicate instance of the file.",0,null],[10,"allocated_size","","Returns the amount of physical space allocated for a file.",0,null],[10,"allocate","","Ensures that at least `len` bytes of disk space are allocated for the\nfile, and the file size is at least `len` bytes. After a successful call\nto `allocate`, subsequent writes to the file within the specified length\nare guaranteed not to fail because of lack of disk space.",0,null],[10,"lock_shared","","Locks the file for shared usage, blocking if the file is currently\nlocked exclusively.",0,null],[10,"lock_exclusive","","Locks the file for exclusive usage, blocking if the file is currently\nlocked.",0,null],[10,"try_lock_shared","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,null],[10,"try_lock_exclusive","","Locks the file for shared usage, or returns a an error if the file is\ncurrently locked (see `lock_contended_error`).",0,null],[10,"unlock","","Unlocks the file.",0,null],[11,"duplicate","std::fs","",1,null],[11,"allocated_size","","",1,null],[11,"allocate","","",1,null],[11,"lock_shared","","",1,null],[11,"lock_exclusive","","",1,null],[11,"try_lock_shared","","",1,null],[11,"try_lock_exclusive","","",1,null],[11,"unlock","","",1,null]],"paths":[[8,"FileExt"],[3,"File"]]};
searchIndex["env_logger"] = {"doc":"A logger configured via an environment variable which writes to standard\nerror.","items":[[3,"LogBuilder","env_logger","LogBuilder acts as builder for initializing the Logger.\nIt can be used to customize the log format, change the enviromental variable used\nto provide the logging directives and also set the default log level filter.",null,null],[5,"init","","Initializes the global logger with an env logger.",null,{"inputs":[],"output":{"name":"result"}}],[11,"new","","Initializes the log builder with defaults",0,{"inputs":[],"output":{"name":"logbuilder"}}],[11,"filter","","Adds filters to the logger",0,null],[11,"format","","Sets the format function for formatting the log output.",0,null],[11,"parse","","Parses the directives string in the same form as the RUST_LOG\nenvironment variable.",0,null],[11,"init","","Initializes the global logger with an env logger.",0,null]],"paths":[[3,"LogBuilder"]]};
searchIndex["regex"] = {"doc":"This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst-case performance. The specific syntax supported is\ndocumented further down.","items":[[3,"RegexBuilder","regex","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"Captures","","Captures represents a group of captured strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group\nname and the value.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"NoExpand","","NoExpand indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"RegexSplits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[4,"Error","","An error that occurred during parsing or compiling a regular expression.",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.",1,null],[13,"InvalidSet","","**DEPRECATED:** Will be removed on next major version bump.",1,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"is_match","","Tests if the given regular expression matches somewhere in the text given.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions in a single scan.",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex set.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"FindMatches","","An iterator over all non-overlapping matches for a particular string.",null,null],[3,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.",null,null],[3,"Splits","","Yields all substrings delimited by a regular expression match.",null,null],[3,"SplitsN","","Yields at most `N` substrings delimited by a regular expression match.",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a single match.",null,null],[3,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression.",null,null],[3,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression.",null,null],[3,"SubCapturesNamed","","An Iterator over named capture groups as a tuple with the group name and\nthe value.",null,null],[3,"NoExpand","","NoExpand indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a byte\nstring.",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,null],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,null],[11,"fmt","regex","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","regex::bytes","Create a new regular expression builder with the given pattern.",4,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",4,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",4,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",4,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,null],[11,"new","regex","Create a new regular expression builder with the given pattern.",5,{"inputs":[{"name":"str"}],"output":{"name":"regexbuilder"}}],[11,"compile","","Consume the builder and compile the regular expression.",5,null],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,null],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,null],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).",5,null],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,null],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,null],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,null],[11,"size_limit","","Set the approximate size limit of the compiled regular expression.",5,null],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,null],[11,"no_expansion","regex::re_bytes","Return a fixed unchanging replacement byte string.",3,null],[11,"clone","regex::bytes","",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"fmt","","Shows the original regular expression.",6,null],[11,"from_str","","Attempts to parse a string into a regular expression",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",6,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",6,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",6,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",6,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",6,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",6,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",6,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",6,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced byte string.",6,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",6,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",6,null],[11,"shortest_match","","Returns the end location of a match in the text given.",6,null],[11,"as_str","","Returns the original string of this regex.",6,null],[11,"capture_names","","Returns an iterator over the capture names.",6,null],[11,"captures_len","","Returns the number of captures.",6,null],[11,"next","","",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"next","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original byte string matched.",12,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",12,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",12,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",12,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",12,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",12,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`, and writes them to the `dst` buffer given.",12,null],[11,"len","","Returns the number of captured groups.",12,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",12,null],[11,"fmt","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"next","","",13,null],[11,"next","","",14,null],[11,"next","","",15,null],[11,"replace_append","","",2,null],[11,"no_expansion","","",2,null],[11,"clone","regex","",16,null],[11,"new","","Create a new regex set with the given regular expressions.",16,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",16,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",16,null],[11,"len","","Returns the total number of regular expressions in this set.",16,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"matched_any","","Whether this set contains any matches.",17,null],[11,"matched","","Whether the regex at the given index matched.",17,null],[11,"len","","The total number of regexes in the set that created these matches.",17,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",17,null],[11,"into_iter","","",17,null],[11,"next","","",18,null],[11,"clone","","",19,null],[11,"next","","",19,null],[11,"fmt","","",16,null],[11,"clone","regex::bytes","",20,null],[11,"new","","Create a new regex set with the given regular expressions.",20,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if one of the regexes in this set matches\nthe text given.",20,null],[11,"matches","","Returns the set of regular expressions that match in the given text.",20,null],[11,"len","","Returns the total number of regular expressions in this set.",20,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"matched_any","","Whether this set contains any matches.",21,null],[11,"matched","","Whether the regex at the given index matched.",21,null],[11,"len","","The total number of regexes in the set that created these matches.",21,null],[11,"iter","","Returns an iterator over indexes in the regex that matched.",21,null],[11,"into_iter","","",21,null],[11,"next","","",22,null],[11,"clone","","",23,null],[11,"next","","",23,null],[11,"fmt","","",20,null],[11,"clone","regex","",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"fmt","","Shows the original regular expression.",24,null],[11,"eq","","",24,null],[11,"from_str","","Attempts to parse a string into a regular expression",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.",24,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_size_limit","","Compiles a regular expression with the given size limit.",24,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_match","","Returns true if and only if the regex matches the string given.",24,null],[11,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",24,null],[11,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",24,null],[11,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",24,null],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about submatches.",24,null],[11,"split","","Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn&#39;t* matched by the regular expression.",24,null],[11,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn&#39;t* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.",24,null],[11,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches&#39;\n`Captures` and returns the replaced string.",24,null],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.",24,null],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",24,null],[11,"shortest_match","","Returns the end location of a match in the text given.",24,null],[11,"as_str","","Returns the original string of this regex.",24,null],[11,"capture_names","","Returns an iterator over the capture names.",24,null],[11,"captures_len","","Returns the number of captures.",24,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"reg_replace","","",0,null],[11,"no_expand","","",0,null],[11,"next","","",26,null],[11,"next","","",27,null],[11,"pos","","Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.",28,null],[11,"at","","Returns the matched string for the capture group `i`.  If `i` isn&#39;t\na valid capture group or didn&#39;t match anything, then `None` is\nreturned.",28,null],[11,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn&#39;t a valid capture group or didn&#39;t match anything, then\n`None` is returned.",28,null],[11,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",28,null],[11,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",28,null],[11,"iter_named","","Creates an iterator of all named groups as an tuple with the group\nname and the value. The iterator returns these values in arbitrary\norder.",28,null],[11,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",28,null],[11,"len","","Returns the number of captured groups.",28,null],[11,"is_empty","","Returns true if and only if there are no captured groups.",28,null],[11,"fmt","","",28,null],[11,"index","","",28,null],[11,"index","","",28,null],[11,"next","","",29,null],[11,"next","","",30,null],[11,"next","","",31,null],[11,"next","","",32,null],[11,"next","","",33,null],[8,"Replacer","","Replacer describes types that can be used to replace matches in a string.",null,null],[10,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null],[11,"no_expand","","Returns a possibly owned string that never needs expansion.",34,null]],"paths":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"Regex"],[3,"FindMatches"],[3,"FindCaptures"],[3,"Splits"],[3,"SplitsN"],[3,"CaptureNames"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Regex"],[3,"CaptureNames"],[3,"RegexSplits"],[3,"RegexSplitsN"],[3,"Captures"],[3,"SubCaptures"],[3,"SubCapturesPos"],[3,"SubCapturesNamed"],[3,"FindCaptures"],[3,"FindMatches"],[8,"Replacer"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","items":[[3,"ThreadLocal","thread_local","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a single thread.",null,null],[6,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[6,"CachedIntoIter","","An iterator that moves out of a `CachedThreadLocal`.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"drop","","",0,null],[11,"new","","Creates a new empty `ThreadLocal`.",0,{"inputs":[],"output":{"name":"threadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",0,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",0,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",0,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",0,null],[11,"into_iter","","",0,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",0,null],[11,"fmt","","",0,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"default","","",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"new","","Creates a new empty `CachedThreadLocal`.",3,{"inputs":[],"output":{"name":"cachedthreadlocal"}}],[11,"get","","Returns the element for the current thread, if it exists.",3,null],[11,"get_or","","Returns the element for the current thread, or creates it if it doesn&#39;t\nexist.",3,null],[11,"iter_mut","","Returns a mutable iterator over the local values of all threads.",3,null],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.",3,null],[11,"into_iter","","",3,null],[11,"get_default","","Returns the element for the current thread, or creates a default one if\nit doesn&#39;t exist.",3,null],[11,"fmt","","",3,null]],"paths":[[3,"ThreadLocal"],[3,"IterMut"],[3,"IntoIter"],[3,"CachedThreadLocal"]]};
searchIndex["thread_id"] = {"doc":"Thread-ID: get a unique ID for the current thread.","items":[[5,"get","thread_id","Returns a number that is unique to the calling thread.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",4,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"clone","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["gfx_window_glfw"] = {"doc":"","items":[[5,"init","gfx_window_glfw","Initialize with a window.",null,null]],"paths":[]};
searchIndex["gfx_device_gl"] = {"doc":"OpenGL implementation of a device, striving to support OpenGL 2.0 with at\nleast VAOs, but using newer extensions when available.","items":[[3,"CommandBuffer","gfx_device_gl","",null,null],[12,"buf","","",0,null],[12,"data","","",0,null],[3,"Factory","","GL resource factory.",null,null],[3,"Info","","OpenGL implementation information",null,null],[12,"platform_name","","The platform identifier",1,null],[12,"version","","The OpenGL API vesion number",1,null],[12,"shading_language","","The GLSL vesion number",1,null],[12,"extensions","","The extensions supported by the implementation",1,null],[3,"PlatformName","","A unique platform identifier that does not change between releases",null,null],[12,"vendor","","The company responsible for the OpenGL implementation",2,null],[12,"renderer","","The name of the renderer",2,null],[3,"Version","","A version number for a specific component of an OpenGL implementation",null,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"revision","","",3,null],[12,"vendor_info","","",3,null],[3,"Fence","","",null,null],[3,"OutputMerger","","",null,null],[12,"draw_mask","","",4,null],[12,"stencil","","",4,null],[12,"depth","","",4,null],[12,"colors","","",4,null],[3,"PipelineState","","",null,null],[3,"ResourceView","","",null,null],[3,"FatSampler","","",null,null],[3,"Device","","An OpenGL device with GLSL shaders.",null,null],[4,"Resources","","",null,null],[4,"NewTexture","","",null,null],[13,"Surface","","",5,null],[13,"Texture","","",5,null],[4,"TargetView","","",null,null],[13,"Surface","","",6,null],[13,"Texture","","",6,null],[13,"TextureLayer","","",6,null],[4,"Error","","",null,null],[13,"NoError","","",7,null],[13,"InvalidEnum","","",7,null],[13,"InvalidValue","","",7,null],[13,"InvalidOperation","","",7,null],[13,"InvalidFramebufferOperation","","",7,null],[13,"OutOfMemory","","",7,null],[13,"UnknownError","","",7,null],[5,"create","","Create a new device with a factory.",null,null],[5,"create_main_targets_raw","","Create the proxy target views (RTV and DSV) for the attachments of the\nmain framebuffer. These have GL names equal to 0.\nNot supposed to be used by the users directly.",null,null],[11,"new","","",0,{"inputs":[{"name":"framebuffer"}],"output":{"name":"commandbuffer"}}],[11,"clone_empty","","",0,null],[11,"reset","","",0,null],[11,"bind_pipeline_state","","",0,null],[11,"bind_vertex_buffers","","",0,null],[11,"bind_constant_buffers","","",0,null],[11,"bind_global_constant","","",0,null],[11,"bind_resource_views","","",0,null],[11,"bind_unordered_views","","",0,null],[11,"bind_samplers","","",0,null],[11,"bind_pixel_targets","","",0,null],[11,"bind_index","","",0,null],[11,"set_scissor","","",0,null],[11,"set_ref_values","","",0,null],[11,"update_buffer","","",0,null],[11,"update_texture","","",0,null],[11,"generate_mipmap","","",0,null],[11,"clear_color","","",0,null],[11,"clear_depth_stencil","","",0,null],[11,"call_draw","","",0,null],[11,"call_draw_indexed","","",0,null],[11,"clone","","",8,null],[11,"new","","Create a new `Factory`.",8,{"inputs":[{"name":"rc"}],"output":{"name":"factory"}}],[11,"create_command_buffer","","",8,null],[11,"get_capabilities","","",8,null],[11,"create_buffer_raw","","",8,null],[11,"create_buffer_const_raw","","",8,null],[11,"create_shader","","",8,null],[11,"create_program","","",8,null],[11,"create_pipeline_state_raw","","",8,null],[11,"create_texture_raw","","",8,null],[11,"view_buffer_as_shader_resource_raw","","",8,null],[11,"view_buffer_as_unordered_access_raw","","",8,null],[11,"view_texture_as_shader_resource_raw","","",8,null],[11,"view_texture_as_unordered_access_raw","","",8,null],[11,"view_texture_as_render_target_raw","","",8,null],[11,"view_texture_as_depth_stencil_raw","","",8,null],[11,"create_sampler","","",8,null],[11,"map_buffer_raw","","",8,null],[11,"unmap_buffer_raw","","",8,null],[11,"map_buffer_readable","","",8,null],[11,"map_buffer_writable","","",8,null],[11,"map_buffer_rw","","",8,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"cmp","","",3,null],[11,"clone","","",3,null],[11,"new","","Create a new OpenGL version number",3,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is\nexpected to follow the following syntax:",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",1,null],[11,"is_version_supported","","",1,null],[11,"is_extension_supported","","Returns `true` if the implementation supports the extension",1,null],[11,"is_version_or_extension_supported","","",1,null],[6,"Buffer","","",null,null],[6,"ArrayBuffer","","",null,null],[6,"Shader","","",null,null],[6,"Program","","",null,null],[6,"FrameBuffer","","",null,null],[6,"Surface","","",null,null],[6,"Texture","","",null,null],[6,"Sampler","","",null,null],[11,"fmt","","",9,null],[11,"hash","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"eq","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",5,null],[11,"hash","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",12,null],[11,"hash","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"new_texture","","",12,{"inputs":[{"name":"texture"},{"name":"kind"}],"output":{"name":"resourceview"}}],[11,"new_buffer","","",12,{"inputs":[{"name":"texture"}],"output":{"name":"resourceview"}}],[11,"fmt","","",13,null],[11,"hash","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"from_error_code","","",7,{"inputs":[{"name":"glenum"}],"output":{"name":"error"}}],[11,"with_gl","","Access the OpenGL directly via a closure. OpenGL types and enumerations\ncan be found in the `gl` crate.",14,null],[11,"get_info","","Get the OpenGL-specific driver information",14,null],[11,"get_capabilities","","",14,null],[11,"pin_submitted_resources","","",14,null],[11,"submit","","",14,null],[11,"cleanup","","",14,null],[11,"fenced_submit","","",14,null],[11,"fence_wait","","",14,null]],"paths":[[3,"CommandBuffer"],[3,"Info"],[3,"PlatformName"],[3,"Version"],[3,"OutputMerger"],[4,"NewTexture"],[4,"TargetView"],[4,"Error"],[3,"Factory"],[3,"Fence"],[4,"Resources"],[3,"PipelineState"],[3,"ResourceView"],[3,"FatSampler"],[3,"Device"]]};
searchIndex["glfw"] = {"doc":"An ideomatic wrapper for the GLFW library.","items":[[3,"DebugAliases","glfw","Formats the type using aliases rather than the default variant names.",null,null],[12,"0","","",0,null],[3,"Callback","","",null,null],[12,"f","","",1,null],[12,"data","","",1,null],[3,"VidMode","","Describes a single video mode.",null,null],[12,"width","","",2,null],[12,"height","","",2,null],[12,"red_bits","","",2,null],[12,"green_bits","","",2,null],[12,"blue_bits","","",2,null],[12,"refresh_rate","","",2,null],[3,"GammaRamp","","Describes the gamma ramp of a monitor.",null,null],[12,"red","","",3,null],[12,"green","","",3,null],[12,"blue","","",3,null],[3,"Glfw","","A token from which to call various GLFW functions. It can be obtained by\ncalling the `init` function. This cannot be sent to other tasks, and should\nonly be initialized on the main platform thread. Whilst this might make\nperforming some operations harder, this is to ensure thread safety is enforced\nstatically. The context can be safely cloned or implicitly copied if need be\nfor convenience.",null,null],[3,"Monitor","","A struct that wraps a `*GLFWmonitor` handle.",null,null],[3,"Modifiers","","Key modifiers",null,null],[3,"FlushedMessages","","An iterator that yields until no more messages are contained in the\n`Receiver`&#39;s queue.",null,null],[3,"Window","","A struct that wraps a `*GLFWwindow` handle.",null,null],[12,"ptr","","",4,null],[12,"glfw","","",4,null],[12,"is_shared","","",4,null],[3,"RenderContext","","A rendering context that can be shared between tasks.",null,null],[3,"Joystick","","A joystick handle.",null,null],[12,"id","","",5,null],[12,"glfw","","",5,null],[4,"Action","","Input actions.",null,null],[13,"Release","","",6,null],[13,"Press","","",6,null],[13,"Repeat","","",6,null],[4,"Key","","Input keys.",null,null],[13,"Space","","",7,null],[13,"Apostrophe","","",7,null],[13,"Comma","","",7,null],[13,"Minus","","",7,null],[13,"Period","","",7,null],[13,"Slash","","",7,null],[13,"Num0","","",7,null],[13,"Num1","","",7,null],[13,"Num2","","",7,null],[13,"Num3","","",7,null],[13,"Num4","","",7,null],[13,"Num5","","",7,null],[13,"Num6","","",7,null],[13,"Num7","","",7,null],[13,"Num8","","",7,null],[13,"Num9","","",7,null],[13,"Semicolon","","",7,null],[13,"Equal","","",7,null],[13,"A","","",7,null],[13,"B","","",7,null],[13,"C","","",7,null],[13,"D","","",7,null],[13,"E","","",7,null],[13,"F","","",7,null],[13,"G","","",7,null],[13,"H","","",7,null],[13,"I","","",7,null],[13,"J","","",7,null],[13,"K","","",7,null],[13,"L","","",7,null],[13,"M","","",7,null],[13,"N","","",7,null],[13,"O","","",7,null],[13,"P","","",7,null],[13,"Q","","",7,null],[13,"R","","",7,null],[13,"S","","",7,null],[13,"T","","",7,null],[13,"U","","",7,null],[13,"V","","",7,null],[13,"W","","",7,null],[13,"X","","",7,null],[13,"Y","","",7,null],[13,"Z","","",7,null],[13,"LeftBracket","","",7,null],[13,"Backslash","","",7,null],[13,"RightBracket","","",7,null],[13,"GraveAccent","","",7,null],[13,"World1","","",7,null],[13,"World2","","",7,null],[13,"Escape","","",7,null],[13,"Enter","","",7,null],[13,"Tab","","",7,null],[13,"Backspace","","",7,null],[13,"Insert","","",7,null],[13,"Delete","","",7,null],[13,"Right","","",7,null],[13,"Left","","",7,null],[13,"Down","","",7,null],[13,"Up","","",7,null],[13,"PageUp","","",7,null],[13,"PageDown","","",7,null],[13,"Home","","",7,null],[13,"End","","",7,null],[13,"CapsLock","","",7,null],[13,"ScrollLock","","",7,null],[13,"NumLock","","",7,null],[13,"PrintScreen","","",7,null],[13,"Pause","","",7,null],[13,"F1","","",7,null],[13,"F2","","",7,null],[13,"F3","","",7,null],[13,"F4","","",7,null],[13,"F5","","",7,null],[13,"F6","","",7,null],[13,"F7","","",7,null],[13,"F8","","",7,null],[13,"F9","","",7,null],[13,"F10","","",7,null],[13,"F11","","",7,null],[13,"F12","","",7,null],[13,"F13","","",7,null],[13,"F14","","",7,null],[13,"F15","","",7,null],[13,"F16","","",7,null],[13,"F17","","",7,null],[13,"F18","","",7,null],[13,"F19","","",7,null],[13,"F20","","",7,null],[13,"F21","","",7,null],[13,"F22","","",7,null],[13,"F23","","",7,null],[13,"F24","","",7,null],[13,"F25","","",7,null],[13,"Kp0","","",7,null],[13,"Kp1","","",7,null],[13,"Kp2","","",7,null],[13,"Kp3","","",7,null],[13,"Kp4","","",7,null],[13,"Kp5","","",7,null],[13,"Kp6","","",7,null],[13,"Kp7","","",7,null],[13,"Kp8","","",7,null],[13,"Kp9","","",7,null],[13,"KpDecimal","","",7,null],[13,"KpDivide","","",7,null],[13,"KpMultiply","","",7,null],[13,"KpSubtract","","",7,null],[13,"KpAdd","","",7,null],[13,"KpEnter","","",7,null],[13,"KpEqual","","",7,null],[13,"LeftShift","","",7,null],[13,"LeftControl","","",7,null],[13,"LeftAlt","","",7,null],[13,"LeftSuper","","",7,null],[13,"RightShift","","",7,null],[13,"RightControl","","",7,null],[13,"RightAlt","","",7,null],[13,"RightSuper","","",7,null],[13,"Menu","","",7,null],[4,"MouseButton","","Mouse buttons. The `MouseButtonLeft`, `MouseButtonRight`, and\n`MouseButtonMiddle` aliases are supplied for convenience.",null,null],[13,"Button1","","The left mouse button. A `MouseButtonLeft` alias is provided to improve clarity.",8,null],[13,"Button2","","The right mouse button. A `MouseButtonRight` alias is provided to improve clarity.",8,null],[13,"Button3","","The middle mouse button. A `MouseButtonMiddle` alias is provided to improve clarity.",8,null],[13,"Button4","","",8,null],[13,"Button5","","",8,null],[13,"Button6","","",8,null],[13,"Button7","","",8,null],[13,"Button8","","",8,null],[4,"Error","","Tokens corresponding to various error types.",null,null],[13,"NotInitialized","","",9,null],[13,"NoCurrentContext","","",9,null],[13,"InvalidEnum","","",9,null],[13,"InvalidValue","","",9,null],[13,"OutOfMemory","","",9,null],[13,"ApiUnavailable","","",9,null],[13,"VersionUnavailable","","",9,null],[13,"PlatformError","","",9,null],[13,"FormatUnavailable","","",9,null],[4,"CursorMode","","Cursor modes.",null,null],[13,"Normal","","",10,null],[13,"Hidden","","",10,null],[13,"Disabled","","",10,null],[4,"InitError","","An error that might be returned when `glfw::init` is called.",null,null],[13,"AlreadyInitialized","","The library was already initialized.",11,null],[13,"Internal","","An internal error occured when trying to initialize the library.",11,null],[4,"MonitorEvent","","Monitor events.",null,null],[13,"Connected","","",12,null],[13,"Disconnected","","",12,null],[4,"WindowHint","","Window hints that can be set using the `window_hint` function.",null,null],[13,"RedBits","","Specifies the desired bit depth of the red component of the default framebuffer.",13,null],[13,"GreenBits","","Specifies the desired bit depth of the green component of the default framebuffer.",13,null],[13,"BlueBits","","Specifies the desired bit depth of the blue component of the default framebuffer.",13,null],[13,"AlphaBits","","Specifies the desired bit depth of the alpha component of the default framebuffer.",13,null],[13,"DepthBits","","Specifies the desired bit depth of the depth component of the default framebuffer.",13,null],[13,"StencilBits","","Specifies the desired bit depth of the stencil component of the default framebuffer.",13,null],[13,"AccumRedBits","","Specifies the desired bit depth of the red component of the accumulation framebuffer.",13,null],[13,"AccumGreenBits","","Specifies the desired bit depth of the green component of the accumulation framebuffer.",13,null],[13,"AccumBlueBits","","Specifies the desired bit depth of the blue component of the accumulation framebuffer.",13,null],[13,"AccumAlphaBits","","Specifies the desired bit depth of the alpha component of the accumulation framebuffer.",13,null],[13,"AuxBuffers","","Specifies the desired number of auxiliary buffers.",13,null],[13,"Stereo","","Specifies whether to use stereoscopic rendering.",13,null],[13,"Samples","","Specifies the desired number of samples to use for multisampling. Zero\ndisables multisampling.",13,null],[13,"SRgbCapable","","Specifies whether the framebuffer should be sRGB capable.",13,null],[13,"RefreshRate","","Specifies the desired refresh rate for full screen windows. If set to\nzero, the highest available refresh rate will be used.",13,null],[13,"ClientApi","","Specifies which `ClientApi` to create the context for.",13,null],[13,"ContextVersionMajor","","Specifies the major client API version that the created context must be\ncompatible with.",13,null],[13,"ContextVersionMinor","","Specifies the minor client API version that the created context must be\ncompatible with.",13,null],[13,"ContextVersion","","Specifies the client API version that the created context must be\ncompatible with. This is the same as successive calls to `window_hint`\nfunction with the `ContextVersionMajor` and `ContextVersionMinor` hints.",13,null],[13,"ContextRobustness","","Specifies the `ContextRobustness` strategy to be used.",13,null],[13,"OpenGlForwardCompat","","Specifies whether the OpenGL context should be forward-compatible, i.e.\none where all functionality deprecated in the requested version of\nOpenGL is removed. This may only be used if the requested OpenGL version\nis 3.0 or above.",13,null],[13,"OpenGlDebugContext","","Specifies whether to create a debug OpenGL context, which may have\nadditional error and performance issue reporting functionality.",13,null],[13,"OpenGlProfile","","Specifies which OpenGL profile to create the context for. If requesting\nan OpenGL version below 3.2, `OpenGlAnyProfile` must be used.",13,null],[13,"Resizable","","Specifies whether the window will be resizable by the user. Even if this\nis set to `false`, the window can still be resized using the\n`Window::set_size` function.",13,null],[13,"Visible","","Specifies whether the window will be visible on creation.",13,null],[13,"Decorated","","Specifies whether the window will have platform-specific decorations\nsuch as a border, a close widget, etc.",13,null],[13,"AutoIconify","","Specifies whether the (full screen) window will automatically iconify\nand restore the previous video mode on input focus loss.",13,null],[13,"Floating","","Specifies whether the window will be floating above other regular\nwindows, also called topmost or always-on-top.",13,null],[4,"ClientApiHint","","Client API tokens.",null,null],[13,"OpenGl","","",14,null],[13,"OpenGlEs","","",14,null],[4,"ContextRobustnessHint","","Context robustness tokens.",null,null],[13,"NoRobustness","","",15,null],[13,"NoResetNotification","","",15,null],[13,"LoseContextOnReset","","",15,null],[4,"OpenGlProfileHint","","OpenGL profile tokens.",null,null],[13,"Any","","",16,null],[13,"Core","","",16,null],[13,"Compat","","",16,null],[4,"WindowMode","","Describes the mode of a window",null,null],[13,"FullScreen","","Full screen mode. Contains the monitor on which the window is displayed.",17,null],[13,"Windowed","","Windowed mode.",17,null],[4,"WindowEvent","","Window event messages.",null,null],[13,"Pos","","",18,null],[13,"Size","","",18,null],[13,"Close","","",18,null],[13,"Refresh","","",18,null],[13,"Focus","","",18,null],[13,"Iconify","","",18,null],[13,"FramebufferSize","","",18,null],[13,"MouseButton","","",18,null],[13,"CursorPos","","",18,null],[13,"CursorEnter","","",18,null],[13,"Scroll","","",18,null],[13,"Key","","",18,null],[13,"Char","","",18,null],[4,"JoystickId","","Joystick identifier tokens.",null,null],[13,"Joystick1","","",19,null],[13,"Joystick2","","",19,null],[13,"Joystick3","","",19,null],[13,"Joystick4","","",19,null],[13,"Joystick5","","",19,null],[13,"Joystick6","","",19,null],[13,"Joystick7","","",19,null],[13,"Joystick8","","",19,null],[13,"Joystick9","","",19,null],[13,"Joystick10","","",19,null],[13,"Joystick11","","",19,null],[13,"Joystick12","","",19,null],[13,"Joystick13","","",19,null],[13,"Joystick14","","",19,null],[13,"Joystick15","","",19,null],[13,"Joystick16","","",19,null],[5,"fail_on_errors","","The function to be used with the `FAIL_ON_ERRORS` callback.",null,null],[5,"log_errors","","The function to be used with the `LOG_ERRORS` callback.",null,null],[5,"init","","Initializes the GLFW library. This must be called on the main platform\nthread.",null,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[5,"get_version","","Wrapper for `glfwGetVersion`.",null,{"inputs":[],"output":{"name":"version"}}],[5,"string_from_c_str","","Replacement for `String::from_raw_buf`",null,null],[5,"with_c_str","","Replacement for `ToCStr::with_c_str`",null,{"inputs":[{"name":"str"},{"name":"f"}],"output":{"name":"t"}}],[5,"get_version_string","","Wrapper for `glfwGetVersionString`.",null,{"inputs":[],"output":{"name":"string"}}],[5,"flush_messages","","Returns an iterator that yields until no more messages are contained in the\n`Receiver`&#39;s queue. This is useful for event handling where the blocking\nbehaviour of `Receiver::iter` is undesirable.",null,{"inputs":[{"name":"receiver"}],"output":{"name":"flushedmessages"}}],[5,"make_context_current","","Wrapper for `glfwMakeContextCurrent`.",null,{"inputs":[{"name":"option"}],"output":null}],[0,"ffi","","Low-level function bindings and constants pertaining to the underlying\nGLFW library.",null,null],[3,"GLFWgammaramp","glfw::ffi","",null,null],[12,"red","","",20,null],[12,"green","","",20,null],[12,"blue","","",20,null],[12,"size","","",20,null],[3,"GLFWvidmode","","",null,null],[12,"width","","",21,null],[12,"height","","",21,null],[12,"redBits","","",21,null],[12,"greenBits","","",21,null],[12,"blueBits","","",21,null],[12,"refreshRate","","",21,null],[3,"GLFWimage","","",null,null],[12,"width","","",22,null],[12,"height","","",22,null],[12,"pixels","","",22,null],[4,"GLFWmonitor","","",null,null],[4,"GLFWwindow","","",null,null],[4,"GLFWcursor","","",null,null],[5,"glfwInit","","",null,null],[5,"glfwTerminate","","",null,null],[5,"glfwGetVersion","","",null,null],[5,"glfwGetVersionString","","",null,null],[5,"glfwSetErrorCallback","","",null,null],[5,"glfwGetMonitors","","",null,null],[5,"glfwGetPrimaryMonitor","","",null,null],[5,"glfwGetMonitorPos","","",null,null],[5,"glfwGetMonitorPhysicalSize","","",null,null],[5,"glfwGetMonitorName","","",null,null],[5,"glfwSetMonitorCallback","","",null,null],[5,"glfwGetVideoModes","","",null,null],[5,"glfwGetVideoMode","","",null,null],[5,"glfwSetGamma","","",null,null],[5,"glfwGetGammaRamp","","",null,null],[5,"glfwSetGammaRamp","","",null,null],[5,"glfwDefaultWindowHints","","",null,null],[5,"glfwWindowHint","","",null,null],[5,"glfwCreateWindow","","",null,null],[5,"glfwDestroyWindow","","",null,null],[5,"glfwWindowShouldClose","","",null,null],[5,"glfwSetWindowShouldClose","","",null,null],[5,"glfwSetWindowTitle","","",null,null],[5,"glfwGetWindowPos","","",null,null],[5,"glfwSetWindowPos","","",null,null],[5,"glfwGetWindowSize","","",null,null],[5,"glfwSetWindowSize","","",null,null],[5,"glfwGetFramebufferSize","","",null,null],[5,"glfwIconifyWindow","","",null,null],[5,"glfwRestoreWindow","","",null,null],[5,"glfwShowWindow","","",null,null],[5,"glfwHideWindow","","",null,null],[5,"glfwGetWindowMonitor","","",null,null],[5,"glfwGetWindowAttrib","","",null,null],[5,"glfwSetWindowUserPointer","","",null,null],[5,"glfwGetWindowUserPointer","","",null,null],[5,"glfwSetWindowPosCallback","","",null,null],[5,"glfwSetWindowSizeCallback","","",null,null],[5,"glfwSetWindowCloseCallback","","",null,null],[5,"glfwSetWindowRefreshCallback","","",null,null],[5,"glfwSetWindowFocusCallback","","",null,null],[5,"glfwSetWindowIconifyCallback","","",null,null],[5,"glfwSetFramebufferSizeCallback","","",null,null],[5,"glfwPollEvents","","",null,null],[5,"glfwWaitEvents","","",null,null],[5,"glfwPostEmptyEvent","","",null,null],[5,"glfwGetInputMode","","",null,null],[5,"glfwSetInputMode","","",null,null],[5,"glfwGetKey","","",null,null],[5,"glfwGetMouseButton","","",null,null],[5,"glfwGetCursorPos","","",null,null],[5,"glfwSetCursorPos","","",null,null],[5,"glfwCreateCursor","","",null,null],[5,"glfwCreateStandardCursor","","",null,null],[5,"glfwDestroyCursor","","",null,null],[5,"glfwSetCursor","","",null,null],[5,"glfwSetKeyCallback","","",null,null],[5,"glfwSetCharCallback","","",null,null],[5,"glfwSetCharModsCallback","","",null,null],[5,"glfwSetMouseButtonCallback","","",null,null],[5,"glfwSetCursorPosCallback","","",null,null],[5,"glfwSetCursorEnterCallback","","",null,null],[5,"glfwSetScrollCallback","","",null,null],[5,"glfwSetDropCallback","","",null,null],[5,"glfwJoystickPresent","","",null,null],[5,"glfwGetJoystickAxes","","",null,null],[5,"glfwGetJoystickButtons","","",null,null],[5,"glfwGetJoystickName","","",null,null],[5,"glfwSetClipboardString","","",null,null],[5,"glfwGetClipboardString","","",null,null],[5,"glfwGetTime","","",null,null],[5,"glfwSetTime","","",null,null],[5,"glfwMakeContextCurrent","","",null,null],[5,"glfwGetCurrentContext","","",null,null],[5,"glfwSwapBuffers","","",null,null],[5,"glfwSwapInterval","","",null,null],[5,"glfwExtensionSupported","","",null,null],[5,"glfwGetProcAddress","","",null,null],[5,"glfwGetX11Window","","",null,null],[5,"glfwGetX11Display","","",null,null],[5,"glfwGetGLXContext","","",null,null],[6,"GLFWglproc","","",null,null],[6,"GLFWerrorfun","","",null,null],[6,"GLFWwindowposfun","","",null,null],[6,"GLFWwindowsizefun","","",null,null],[6,"GLFWwindowclosefun","","",null,null],[6,"GLFWwindowrefreshfun","","",null,null],[6,"GLFWwindowfocusfun","","",null,null],[6,"GLFWwindowiconifyfun","","",null,null],[6,"GLFWframebuffersizefun","","",null,null],[6,"GLFWmousebuttonfun","","",null,null],[6,"GLFWcursorposfun","","",null,null],[6,"GLFWcursorenterfun","","",null,null],[6,"GLFWscrollfun","","",null,null],[6,"GLFWkeyfun","","",null,null],[6,"GLFWcharfun","","",null,null],[6,"GLFWcharmodsfun","","",null,null],[6,"GLFWdropfun","","",null,null],[6,"GLFWmonitorfun","","",null,null],[17,"FALSE","","",null,null],[17,"TRUE","","",null,null],[17,"RELEASE","","",null,null],[17,"PRESS","","",null,null],[17,"REPEAT","","",null,null],[17,"KEY_SPACE","","",null,null],[17,"KEY_APOSTROPHE","","",null,null],[17,"KEY_COMMA","","",null,null],[17,"KEY_MINUS","","",null,null],[17,"KEY_PERIOD","","",null,null],[17,"KEY_SLASH","","",null,null],[17,"KEY_0","","",null,null],[17,"KEY_1","","",null,null],[17,"KEY_2","","",null,null],[17,"KEY_3","","",null,null],[17,"KEY_4","","",null,null],[17,"KEY_5","","",null,null],[17,"KEY_6","","",null,null],[17,"KEY_7","","",null,null],[17,"KEY_8","","",null,null],[17,"KEY_9","","",null,null],[17,"KEY_SEMICOLON","","",null,null],[17,"KEY_EQUAL","","",null,null],[17,"KEY_A","","",null,null],[17,"KEY_B","","",null,null],[17,"KEY_C","","",null,null],[17,"KEY_D","","",null,null],[17,"KEY_E","","",null,null],[17,"KEY_F","","",null,null],[17,"KEY_G","","",null,null],[17,"KEY_H","","",null,null],[17,"KEY_I","","",null,null],[17,"KEY_J","","",null,null],[17,"KEY_K","","",null,null],[17,"KEY_L","","",null,null],[17,"KEY_M","","",null,null],[17,"KEY_N","","",null,null],[17,"KEY_O","","",null,null],[17,"KEY_P","","",null,null],[17,"KEY_Q","","",null,null],[17,"KEY_R","","",null,null],[17,"KEY_S","","",null,null],[17,"KEY_T","","",null,null],[17,"KEY_U","","",null,null],[17,"KEY_V","","",null,null],[17,"KEY_W","","",null,null],[17,"KEY_X","","",null,null],[17,"KEY_Y","","",null,null],[17,"KEY_Z","","",null,null],[17,"KEY_LEFT_BRACKET","","",null,null],[17,"KEY_BACKSLASH","","",null,null],[17,"KEY_RIGHT_BRACKET","","",null,null],[17,"KEY_GRAVE_ACCENT","","",null,null],[17,"KEY_WORLD_1","","",null,null],[17,"KEY_WORLD_2","","",null,null],[17,"KEY_ESCAPE","","",null,null],[17,"KEY_ENTER","","",null,null],[17,"KEY_TAB","","",null,null],[17,"KEY_BACKSPACE","","",null,null],[17,"KEY_INSERT","","",null,null],[17,"KEY_DELETE","","",null,null],[17,"KEY_RIGHT","","",null,null],[17,"KEY_LEFT","","",null,null],[17,"KEY_DOWN","","",null,null],[17,"KEY_UP","","",null,null],[17,"KEY_PAGE_UP","","",null,null],[17,"KEY_PAGE_DOWN","","",null,null],[17,"KEY_HOME","","",null,null],[17,"KEY_END","","",null,null],[17,"KEY_CAPS_LOCK","","",null,null],[17,"KEY_SCROLL_LOCK","","",null,null],[17,"KEY_NUM_LOCK","","",null,null],[17,"KEY_PRINT_SCREEN","","",null,null],[17,"KEY_PAUSE","","",null,null],[17,"KEY_F1","","",null,null],[17,"KEY_F2","","",null,null],[17,"KEY_F3","","",null,null],[17,"KEY_F4","","",null,null],[17,"KEY_F5","","",null,null],[17,"KEY_F6","","",null,null],[17,"KEY_F7","","",null,null],[17,"KEY_F8","","",null,null],[17,"KEY_F9","","",null,null],[17,"KEY_F10","","",null,null],[17,"KEY_F11","","",null,null],[17,"KEY_F12","","",null,null],[17,"KEY_F13","","",null,null],[17,"KEY_F14","","",null,null],[17,"KEY_F15","","",null,null],[17,"KEY_F16","","",null,null],[17,"KEY_F17","","",null,null],[17,"KEY_F18","","",null,null],[17,"KEY_F19","","",null,null],[17,"KEY_F20","","",null,null],[17,"KEY_F21","","",null,null],[17,"KEY_F22","","",null,null],[17,"KEY_F23","","",null,null],[17,"KEY_F24","","",null,null],[17,"KEY_F25","","",null,null],[17,"KEY_KP_0","","",null,null],[17,"KEY_KP_1","","",null,null],[17,"KEY_KP_2","","",null,null],[17,"KEY_KP_3","","",null,null],[17,"KEY_KP_4","","",null,null],[17,"KEY_KP_5","","",null,null],[17,"KEY_KP_6","","",null,null],[17,"KEY_KP_7","","",null,null],[17,"KEY_KP_8","","",null,null],[17,"KEY_KP_9","","",null,null],[17,"KEY_KP_DECIMAL","","",null,null],[17,"KEY_KP_DIVIDE","","",null,null],[17,"KEY_KP_MULTIPLY","","",null,null],[17,"KEY_KP_SUBTRACT","","",null,null],[17,"KEY_KP_ADD","","",null,null],[17,"KEY_KP_ENTER","","",null,null],[17,"KEY_KP_EQUAL","","",null,null],[17,"KEY_LEFT_SHIFT","","",null,null],[17,"KEY_LEFT_CONTROL","","",null,null],[17,"KEY_LEFT_ALT","","",null,null],[17,"KEY_LEFT_SUPER","","",null,null],[17,"KEY_RIGHT_SHIFT","","",null,null],[17,"KEY_RIGHT_CONTROL","","",null,null],[17,"KEY_RIGHT_ALT","","",null,null],[17,"KEY_RIGHT_SUPER","","",null,null],[17,"KEY_MENU","","",null,null],[17,"KEY_LAST","","",null,null],[17,"MOD_SHIFT","","",null,null],[17,"MOD_CONTROL","","",null,null],[17,"MOD_ALT","","",null,null],[17,"MOD_SUPER","","",null,null],[17,"JOYSTICK_1","","",null,null],[17,"JOYSTICK_2","","",null,null],[17,"JOYSTICK_3","","",null,null],[17,"JOYSTICK_4","","",null,null],[17,"JOYSTICK_5","","",null,null],[17,"JOYSTICK_6","","",null,null],[17,"JOYSTICK_7","","",null,null],[17,"JOYSTICK_8","","",null,null],[17,"JOYSTICK_9","","",null,null],[17,"JOYSTICK_10","","",null,null],[17,"JOYSTICK_11","","",null,null],[17,"JOYSTICK_12","","",null,null],[17,"JOYSTICK_13","","",null,null],[17,"JOYSTICK_14","","",null,null],[17,"JOYSTICK_15","","",null,null],[17,"JOYSTICK_16","","",null,null],[17,"JOYSTICK_LAST","","",null,null],[17,"MOUSE_BUTTON_1","","",null,null],[17,"MOUSE_BUTTON_2","","",null,null],[17,"MOUSE_BUTTON_3","","",null,null],[17,"MOUSE_BUTTON_4","","",null,null],[17,"MOUSE_BUTTON_5","","",null,null],[17,"MOUSE_BUTTON_6","","",null,null],[17,"MOUSE_BUTTON_7","","",null,null],[17,"MOUSE_BUTTON_8","","",null,null],[17,"MOUSE_BUTTON_LEFT","","",null,null],[17,"MOUSE_BUTTON_RIGHT","","",null,null],[17,"MOUSE_BUTTON_MIDDLE","","",null,null],[17,"MOUSE_BUTTON_LAST","","",null,null],[17,"NOT_INITIALIZED","","",null,null],[17,"NO_CURRENT_CONTEXT","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"API_UNAVAILABLE","","",null,null],[17,"VERSION_UNAVAILABLE","","",null,null],[17,"PLATFORM_ERROR","","",null,null],[17,"FORMAT_UNAVAILABLE","","",null,null],[17,"FOCUSED","","",null,null],[17,"ICONIFIED","","",null,null],[17,"RESIZABLE","","",null,null],[17,"VISIBLE","","",null,null],[17,"DECORATED","","",null,null],[17,"AUTO_ICONIFY","","",null,null],[17,"FLOATING","","",null,null],[17,"RED_BITS","","",null,null],[17,"GREEN_BITS","","",null,null],[17,"BLUE_BITS","","",null,null],[17,"ALPHA_BITS","","",null,null],[17,"DEPTH_BITS","","",null,null],[17,"STENCIL_BITS","","",null,null],[17,"ACCUM_RED_BITS","","",null,null],[17,"ACCUM_GREEN_BITS","","",null,null],[17,"ACCUM_BLUE_BITS","","",null,null],[17,"ACCUM_ALPHA_BITS","","",null,null],[17,"AUX_BUFFERS","","",null,null],[17,"STEREO","","",null,null],[17,"SAMPLES","","",null,null],[17,"SRGB_CAPABLE","","",null,null],[17,"REFRESH_RATE","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"CLIENT_API","","",null,null],[17,"CONTEXT_VERSION_MAJOR","","",null,null],[17,"CONTEXT_VERSION_MINOR","","",null,null],[17,"CONTEXT_REVISION","","",null,null],[17,"CONTEXT_ROBUSTNESS","","",null,null],[17,"OPENGL_FORWARD_COMPAT","","",null,null],[17,"OPENGL_DEBUG_CONTEXT","","",null,null],[17,"OPENGL_PROFILE","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"OPENGL_API","","",null,null],[17,"OPENGL_ES_API","","",null,null],[17,"NO_ROBUSTNESS","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"OPENGL_ANY_PROFILE","","",null,null],[17,"OPENGL_CORE_PROFILE","","",null,null],[17,"OPENGL_COMPAT_PROFILE","","",null,null],[17,"CURSOR","","",null,null],[17,"STICKY_KEYS","","",null,null],[17,"STICKY_MOUSE_BUTTONS","","",null,null],[17,"CURSOR_NORMAL","","",null,null],[17,"CURSOR_HIDDEN","","",null,null],[17,"CURSOR_DISABLED","","",null,null],[17,"ANY_RELEASE_BEHAVIOR","","",null,null],[17,"RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"RELEASE_BEHAVIOR_NONE","","",null,null],[17,"ARROW_CURSOR","","",null,null],[17,"IBEAM_CURSOR","","",null,null],[17,"CROSSHAIR_CURSOR","","",null,null],[17,"HAND_CURSOR","","",null,null],[17,"HRESIZE_CURSOR","","",null,null],[17,"VRESIZE_CURSOR","","",null,null],[17,"CONNECTED","","",null,null],[17,"DISCONNECTED","","",null,null],[17,"DONT_CARE","","",null,null],[11,"clone","","",20,null],[6,"ErrorCallback","glfw","An error callback. This can be supplied with some user data to be passed to\nthe callback function when it is triggered.",null,null],[6,"GLProc","","An OpenGL process address.",null,null],[6,"MonitorCallback","","An monitor callback. This can be supplied with some user data to be passed\nto the callback function when it is triggered.",null,null],[6,"Scancode","","",null,null],[7,"FAIL_ON_ERRORS","","A callback that triggers a task failure when an error is encountered.",null,null],[7,"LOG_ERRORS","","A callback that logs each error as it is encountered without triggering a\ntask failure.",null,null],[17,"Shift","","",null,null],[17,"Control","","",null,null],[17,"Alt","","",null,null],[17,"Super","","",null,null],[8,"Context","","Methods common to renderable contexts",null,null],[10,"window_ptr","","Returns the pointer to the underlying `GLFWwindow`.",23,null],[11,"swap_buffers","","Swaps the front and back buffers of the window. If the swap interval is\ngreater than zero, the GPU driver waits the specified number of screen\nupdates before swapping the buffers.",23,null],[11,"is_current","","Returns `true` if the window is the current context.",23,null],[11,"make_current","","Wrapper for `glfwMakeContextCurrent`",23,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"partial_cmp","","",6,null],[11,"cmp","","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",7,null],[11,"hash","","",7,null],[11,"partial_cmp","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"from_i64","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",7,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",8,null],[11,"hash","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"eq","","",8,null],[11,"clone","","",8,null],[11,"from_i64","","",8,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",8,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"fmt","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",9,null],[11,"hash","","",9,null],[11,"partial_cmp","","",9,null],[11,"cmp","","",9,null],[11,"eq","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",10,null],[11,"hash","","",10,null],[11,"partial_cmp","","",10,null],[11,"cmp","","",10,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"clone","","",2,null],[11,"clone","","",24,null],[11,"fmt","","",11,null],[11,"hash","","",11,null],[11,"partial_cmp","","",11,null],[11,"cmp","","",11,null],[11,"eq","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"set_error_callback","","Sets the error callback, overwriting the previous one stored.",24,null],[11,"set_monitor_callback","","Sets the monitor callback, overwriting the previous one stored.",24,null],[11,"with_primary_monitor","","Supplies the primary monitor to the closure provided, if it exists.\nThis is usually the monitor where elements like the Windows task bar or\nthe OS X menu bar is located.",24,null],[11,"with_connected_monitors","","Supplies a vector of the currently connected monitors to the closure\nprovided.",24,null],[11,"window_hint","","This is used to set the window hints for the next call to\n`Glfw::create_window`. The hints can be reset to their default values\nusing calling the `Glfw::default_window_hints` function.",24,null],[11,"default_window_hints","","Resets the window hints previously set by the `window_hint` function to\ntheir default values.",24,null],[11,"create_window","","Creates a new window.",24,null],[11,"make_context_current","","Makes the context of the specified window current. If no window is given\nthen the current context is detached.",24,null],[11,"get_x11_display","","Wrapper for `glfwGetX11Display`",24,null],[11,"poll_events","","Immediately process the received events.",24,null],[11,"wait_events","","Sleep until at least one event has been recieved, and then perform the\nequivalent of `Glfw::poll_events`.",24,null],[11,"get_time","","Returns the current value of the GLFW timer. Unless the timer has been\nset using `glfw::set_time`, the timer measures time elapsed since GLFW\nwas initialized.",24,null],[11,"set_time","","Sets the value of the GLFW timer.",24,null],[11,"set_swap_interval","","Sets the number of screen updates to wait before swapping the buffers of\nthe current context and returning from `Window::swap_buffers`.",24,null],[11,"extension_supported","","Returns `true` if the specified OpenGL or context creation API extension\nis supported by the current context.",24,null],[11,"get_proc_address_raw","","Returns the address of the specified client API or extension function if\nit is supported by the current context, NULL otherwise.",24,null],[11,"get_joystick","","Constructs a `Joystick` handle corresponding to the supplied `JoystickId`.",24,null],[11,"fmt","","",25,null],[11,"get_pos","","Wrapper for `glfwGetMonitorPos`.",25,null],[11,"get_physical_size","","Wrapper for `glfwGetMonitorPhysicalSize`.",25,null],[11,"get_name","","Wrapper for `glfwGetMonitorName`.",25,null],[11,"get_video_modes","","Wrapper for `glfwGetVideoModes`.",25,null],[11,"get_video_mode","","Wrapper for `glfwGetVideoMode`.",25,null],[11,"set_gamma","","Wrapper for `glfwSetGamma`.",25,null],[11,"get_gamma_ramp","","Wrapper for `glfwGetGammaRamp`.",25,null],[11,"set_gamma_ramp","","Wrapper for `glfwSetGammaRamp`.",25,null],[11,"fmt","","",12,null],[11,"hash","","",12,null],[11,"partial_cmp","","",12,null],[11,"cmp","","",12,null],[11,"eq","","",12,null],[11,"clone","","",12,null],[11,"fmt","","Returns a string representation of the video mode.",2,null],[11,"fmt","","",13,null],[11,"hash","","",13,null],[11,"partial_cmp","","",13,null],[11,"lt","","",13,null],[11,"le","","",13,null],[11,"gt","","",13,null],[11,"ge","","",13,null],[11,"cmp","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",14,null],[11,"hash","","",14,null],[11,"partial_cmp","","",14,null],[11,"cmp","","",14,null],[11,"eq","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",15,null],[11,"hash","","",15,null],[11,"partial_cmp","","",15,null],[11,"cmp","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",16,null],[11,"hash","","",16,null],[11,"partial_cmp","","",16,null],[11,"cmp","","",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"hash","","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"modifiers"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"modifiers"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"c_int"}],"output":{"name":"modifiers"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"modifiers"}}],[11,"fmt","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"next","","",27,null],[11,"get_proc_address","","Returns the address of the specified client API or extension function if\nit is supported by the context associated with this Window. If this Window is not the\ncurrent context, it will make it the current context.",4,null],[11,"create_shared","","Wrapper for `glfwCreateWindow`.",4,null],[11,"close","","Calling this method forces the destructor to be called, closing the\nwindow.",4,null],[11,"render_context","","Returns a render context that can be shared between tasks, allowing\nfor concurrent rendering.",4,null],[11,"should_close","","Wrapper for `glfwWindowShouldClose`.",4,null],[11,"set_should_close","","Wrapper for `glfwSetWindowShouldClose`.",4,null],[11,"set_title","","Sets the title of the window.",4,null],[11,"get_pos","","Wrapper for `glfwGetWindowPos`.",4,null],[11,"set_pos","","Wrapper for `glfwSetWindowPos`.",4,null],[11,"get_size","","Wrapper for `glfwGetWindowSize`.",4,null],[11,"set_size","","Wrapper for `glfwSetWindowSize`.",4,null],[11,"get_framebuffer_size","","Wrapper for `glfwGetFramebufferSize`.",4,null],[11,"iconify","","Wrapper for `glfwIconifyWindow`.",4,null],[11,"restore","","Wrapper for `glfwRestoreWindow`.",4,null],[11,"show","","Wrapper for `glfwShowWindow`.",4,null],[11,"hide","","Wrapper for `glfwHideWindow`.",4,null],[11,"with_window_mode","","Returns whether the window is fullscreen or windowed.",4,null],[11,"is_focused","","Wrapper for `glfwGetWindowAttrib` called with `FOCUSED`.",4,null],[11,"is_iconified","","Wrapper for `glfwGetWindowAttrib` called with `ICONIFIED`.",4,null],[11,"get_client_api","","Wrapper for `glfwGetWindowAttrib` called with `CLIENT_API`.",4,null],[11,"get_context_version","","Wrapper for `glfwGetWindowAttrib` called with\n`CONTEXT_VERSION_MAJOR`, `CONTEXT_VERSION_MINOR` and `CONTEXT_REVISION`.",4,null],[11,"get_context_robustness","","Wrapper for `glfwGetWindowAttrib` called with `CONTEXT_ROBUSTNESS`.",4,null],[11,"is_opengl_forward_compat","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_FORWARD_COMPAT`.",4,null],[11,"is_opengl_debug_context","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_DEBUG_CONTEXT`.",4,null],[11,"get_opengl_profile","","Wrapper for `glfwGetWindowAttrib` called with `OPENGL_PROFILE`.",4,null],[11,"is_resizable","","Wrapper for `glfwGetWindowAttrib` called with `RESIZABLE`.",4,null],[11,"is_visible","","Wrapper for `glfwGetWindowAttrib` called with `VISIBLE`.",4,null],[11,"is_decorated","","Wrapper for `glfwGetWindowAttrib` called with `DECORATED`.",4,null],[11,"set_pos_polling","","Wrapper for `glfwSetWindowPosCallback`.",4,null],[11,"set_all_polling","","",4,null],[11,"set_size_polling","","Wrapper for `glfwSetWindowSizeCallback`.",4,null],[11,"set_close_polling","","Wrapper for `glfwSetWindowCloseCallback`.",4,null],[11,"set_refresh_polling","","Wrapper for `glfwSetWindowRefreshCallback`.",4,null],[11,"set_focus_polling","","Wrapper for `glfwSetWindowFocusCallback`.",4,null],[11,"set_iconify_polling","","Wrapper for `glfwSetWindowIconifyCallback`.",4,null],[11,"set_framebuffer_size_polling","","Wrapper for `glfwSetFramebufferSizeCallback`.",4,null],[11,"get_cursor_mode","","Wrapper for `glfwGetInputMode` called with `CURSOR`.",4,null],[11,"set_cursor_mode","","Wrapper for `glfwSetInputMode` called with `CURSOR`.",4,null],[11,"has_sticky_keys","","Wrapper for `glfwGetInputMode` called with `STICKY_KEYS`.",4,null],[11,"set_sticky_keys","","Wrapper for `glfwSetInputMode` called with `STICKY_KEYS`.",4,null],[11,"has_sticky_mouse_buttons","","Wrapper for `glfwGetInputMode` called with `STICKY_MOUSE_BUTTONS`.",4,null],[11,"set_sticky_mouse_buttons","","Wrapper for `glfwSetInputMode` called with `STICKY_MOUSE_BUTTONS`.",4,null],[11,"get_key","","Wrapper for `glfwGetKey`.",4,null],[11,"get_mouse_button","","Wrapper for `glfwGetMouseButton`.",4,null],[11,"get_cursor_pos","","Wrapper for `glfwGetCursorPos`.",4,null],[11,"set_cursor_pos","","Wrapper for `glfwSetCursorPos`.",4,null],[11,"set_key_polling","","Wrapper for `glfwSetKeyCallback`.",4,null],[11,"set_char_polling","","Wrapper for `glfwSetCharCallback`.",4,null],[11,"set_mouse_button_polling","","Wrapper for `glfwSetMouseButtonCallback`.",4,null],[11,"set_cursor_pos_polling","","Wrapper for `glfwSetCursorPosCallback`.",4,null],[11,"set_cursor_enter_polling","","Wrapper for `glfwSetCursorEnterCallback`.",4,null],[11,"set_scroll_polling","","Wrapper for `glfwSetScrollCallback`.",4,null],[11,"set_clipboard_string","","Wrapper for `glfwGetClipboardString`.",4,null],[11,"get_clipboard_string","","Wrapper for `glfwGetClipboardString`.",4,null],[11,"get_x11_window","","Wrapper for `glfwGetX11Window`",4,null],[11,"get_glx_context","","Wrapper for `glfwGetGLXContext`",4,null],[11,"drop","","Closes the window and performs the necessary cleanups. This will block\nuntil all associated `RenderContext`s were also dropped, and emit a\n`debug!` message to that effect.",4,null],[11,"window_ptr","","",4,null],[11,"window_ptr","","",28,null],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"partial_cmp","","",19,null],[11,"cmp","","",19,null],[11,"eq","","",19,null],[11,"clone","","",19,null],[11,"from_i64","","",19,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",19,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"clone","","",5,null],[11,"is_present","","Wrapper for `glfwJoystickPresent`.",5,null],[11,"get_axes","","Wrapper for `glfwGetJoystickAxes`.",5,null],[11,"get_buttons","","Wrapper for `glfwGetJoystickButtons`.",5,null],[11,"get_name","","Wrapper for `glfwGetJoystickName`.",5,null]],"paths":[[3,"DebugAliases"],[3,"Callback"],[3,"VidMode"],[3,"GammaRamp"],[3,"Window"],[3,"Joystick"],[4,"Action"],[4,"Key"],[4,"MouseButton"],[4,"Error"],[4,"CursorMode"],[4,"InitError"],[4,"MonitorEvent"],[4,"WindowHint"],[4,"ClientApiHint"],[4,"ContextRobustnessHint"],[4,"OpenGlProfileHint"],[4,"WindowMode"],[4,"WindowEvent"],[4,"JoystickId"],[3,"GLFWgammaramp"],[3,"GLFWvidmode"],[3,"GLFWimage"],[8,"Context"],[3,"Glfw"],[3,"Monitor"],[3,"Modifiers"],[3,"FlushedMessages"],[3,"RenderContext"]]};
searchIndex["enum_primitive"] = {"doc":"This crate exports a macro `enum_from_primitive!` that wraps an\n`enum` declaration and automatically adds an implementation of\n`num::FromPrimitive` (reexported here), to allow conversion from\nprimitive integers to the enum.  It therefore provides an\nalternative to the built-in `#[derive(FromPrimitive)]`, which\nrequires the unstable `std::num::FromPrimitive` and is disabled in\nRust 1.0.","items":[[11,"is_some","core::option","Returns `true` if the option is a `Some` value",0,null],[11,"is_none","","Returns `true` if the option is a `None` value",0,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",0,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",0,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",0,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",0,null],[11,"unwrap_or","","Returns the contained value or a default.",0,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",0,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",0,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",0,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",0,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",0,null],[11,"iter","","Returns an iterator over the possibly contained value.",0,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",0,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",0,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",0,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",0,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",0,null],[11,"unwrap_or_default","","Returns the contained value or a default",0,null],[11,"hash","core::num","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"eq","core::num::dec2flt","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","core::num","",3,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"hash","core::nonzero","",6,null],[11,"fmt","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",6,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",6,null],[11,"new","core::ptr","Creates a new `Unique`.",7,null],[11,"get","","Dereferences the content.",7,null],[11,"get_mut","","Mutably dereferences the content.",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"new","","Creates a new `Shared`.",8,null],[11,"clone","","",8,null],[11,"deref","","",8,null],[11,"fmt","","",8,null],[11,"hash","core::marker","",9,null],[11,"eq","","",9,null],[11,"partial_cmp","","",9,null],[11,"cmp","","",9,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"contains","","# Examples",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"from","","",14,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"contains","","# Examples",15,null],[11,"hash","core::cmp","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"reverse","","Reverse the `Ordering`.",16,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"is","","Returns true if the boxed type is the same as `T`",17,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",17,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",17,null],[11,"is","","Forwards to the method defined on the type `Any`.",17,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",17,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",17,null],[11,"hash","core::any","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",18,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",19,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"new","","Creates a new `AtomicBool`.",19,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",19,null],[11,"store","","Stores a value into the bool.",19,null],[11,"swap","","Stores a value into the bool, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",19,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",19,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",19,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",19,null],[11,"new","","Creates a new `AtomicPtr`.",20,null],[11,"load","","Loads a value from the pointer.",20,null],[11,"store","","Stores a value into the pointer.",20,null],[11,"swap","","Stores a value into the pointer, returning the old value.",20,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"fmt","","",19,null],[11,"fmt","","",20,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",32,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",32,null],[11,"set","","Sets the contained value.",32,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",32,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",32,null],[11,"clone","","",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",32,null],[11,"partial_cmp","","",32,null],[11,"lt","","",32,null],[11,"le","","",32,null],[11,"gt","","",32,null],[11,"ge","","",32,null],[11,"cmp","","",32,null],[11,"fmt","","",33,null],[11,"eq","","",33,null],[11,"clone","","",33,null],[11,"new","","Creates a new `RefCell` containing `value`.",34,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",34,null],[11,"borrow_state","","Query the current state of this `RefCell`",34,null],[11,"borrow","","Immutably borrows the wrapped value.",34,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",34,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",34,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",34,null],[11,"clone","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"cmp","","",34,null],[11,"deref","","",35,null],[11,"clone","","Copies a `Ref`.",35,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",35,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",36,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",37,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",37,null],[11,"get","","Gets a mutable pointer to the wrapped value.",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"count","","",39,null],[11,"nth","","",39,null],[11,"last","","",39,null],[11,"len","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","","",41,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"fmt","core::iter::range","",42,null],[11,"clone","","",42,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",12,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",14,null],[11,"next","core::iter::range","",42,null],[11,"size_hint","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next","core::ops","",11,null],[11,"size_hint","","",11,null],[11,"next_back","","",11,null],[11,"next","","",12,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"fmt","core::iter::sources","",43,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"fmt","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"clone","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"len","","",45,null],[11,"fmt","core::iter","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"count","","",49,null],[11,"nth","","",49,null],[11,"find","","",49,null],[11,"last","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","# Overflow Behavior",54,null],[11,"size_hint","","",54,null],[11,"nth","","",54,null],[11,"count","","",54,null],[11,"next_back","","",54,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"count","","",55,null],[11,"nth","","",55,null],[11,"last","","",55,null],[11,"size_hint","","",55,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",55,null],[11,"is_empty","","Checks if the iterator has finished iterating.",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"count","","",58,null],[11,"last","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"next","","",59,null],[11,"nth","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"next","","",62,null],[11,"nth","","",62,null],[11,"last","","",62,null],[11,"count","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"next_back","","",63,null],[11,"hash","core::option","",0,null],[11,"fmt","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",0,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"hash","core::result","",68,null],[11,"fmt","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"is_ok","","Returns true if the result is `Ok`",68,null],[11,"is_err","","Returns true if the result is `Err`",68,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",68,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",68,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",68,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",68,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",68,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",68,null],[11,"iter","","Returns an iterator over the possibly contained value.",68,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",68,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",68,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",68,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",68,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",68,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",68,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",72,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"count","","",72,null],[11,"nth","","",72,null],[11,"last","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"count","","",80,null],[11,"nth","","",80,null],[11,"last","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","core::str::pattern","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"haystack","","",84,null],[11,"next","","",84,null],[11,"next_match","","",84,null],[11,"next_reject","","",84,null],[11,"next_back","","",84,null],[11,"next_match_back","","",84,null],[11,"next_reject_back","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"eq","core::str","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"as_str","","View the underlying data as a subslice of the original data.",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"count","","",92,null],[11,"last","","",92,null],[11,"nth","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"next_back","","",93,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"next_back","","",95,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"next_back","","",99,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"next_back","","",101,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"fmt","core::hash::sip","",106,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",106,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",106,null],[11,"finish","","",106,null],[11,"clone","","",106,null],[11,"default","","",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",107,null],[11,"build_hasher","","",107,null],[11,"clone","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",108,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",109,null],[11,"finish","","Finishes output and returns any error encountered.",109,null],[11,"field","","Adds a new field to the generated tuple struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"entry","","Adds a new entry to the set output.",111,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the list output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the map output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"partial_cmp","core::fmt","",114,null],[11,"eq","","",114,null],[11,"cmp","","",114,null],[11,"hash","","",114,null],[11,"default","","",114,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"fmt","","",115,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",116,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",116,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",116,null],[11,"write_fmt","","Writes some formatted information into this instance",116,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",116,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",116,null],[11,"align","","Flag indicating what form of alignment was requested",116,null],[11,"width","","Optionally specified integer width that the output should be",116,null],[11,"precision","","Optionally specified precision for numeric types",116,null],[11,"sign_plus","","Determines if the `+` flag was specified.",116,null],[11,"sign_minus","","Determines if the `-` flag was specified.",116,null],[11,"alternate","","Determines if the `#` flag was specified.",116,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",116,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",116,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",116,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",116,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",116,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",116,null],[11,"write_str","","",116,null],[11,"write_char","","",116,null],[11,"write_fmt","","",116,null],[11,"fmt","","",114,null],[11,"fmt","core::marker","",9,null],[11,"fmt","core::cell","",32,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[4,"Option","enum_primitive","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",0,null],[13,"Some","","Some value `T`",0,null],[11,"fmt","num_traits","",117,null],[11,"fmt","","",118,null],[8,"FromPrimitive","enum_primitive","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",119,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[14,"enum_from_primitive_impl_ty!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive_impl!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive!","","Wrap this macro around an `enum` declaration to get an\nautomatically generated implementation of `num::FromPrimitive`.",null,null]],"paths":[[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"FromPrimitive"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[11,"new","num_bigint","Creates and initializes a BigInt.",0,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",0,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",0,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",0,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",0,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",0,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",0,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",0,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",0,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",0,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",0,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",0,null],[11,"checked_add","","",0,null],[11,"checked_sub","","",0,null],[11,"checked_mul","","",0,null],[11,"checked_div","","",0,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",1,null],[11,"bitand","","",1,null],[11,"bitor","","",1,null],[11,"bitor","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor","","",1,null],[11,"shl","","",1,null],[11,"shr","","",1,null],[11,"zero","","",1,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",1,null],[11,"one","","",1,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",1,null],[11,"add","","",1,null],[11,"sub","","",1,null],[11,"sub","","",1,null],[11,"mul","","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"div","","",1,null],[11,"rem","","",1,null],[11,"rem","","",1,null],[11,"neg","","",1,null],[11,"checked_add","","",1,null],[11,"checked_sub","","",1,null],[11,"checked_mul","","",1,null],[11,"checked_div","","",1,null],[11,"div_rem","","",1,null],[11,"div_floor","","",1,null],[11,"mod_floor","","",1,null],[11,"div_mod_floor","","",1,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",1,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",1,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,null],[11,"to_i64","","",1,null],[11,"to_u64","","",1,null],[11,"to_f32","","",1,null],[11,"to_f64","","",1,null],[11,"from_i64","","",1,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",1,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"biguint"}}],[11,"from","","",1,{"inputs":[{"name":"u8"}],"output":{"name":"biguint"}}],[11,"from","","",1,{"inputs":[{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"biguint"}}],[11,"from","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"biguint"}}],[11,"to_biguint","","",0,null],[11,"to_biguint","","",1,null],[11,"new","","Creates and initializes a `BigUint`.",1,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",1,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",1,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",1,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",1,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",1,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",1,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",1,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",1,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"eq","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",2,null],[11,"neg","","Negate Sign value.",2,null],[11,"mul","","",2,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",0,null],[11,"abs_sub","","",0,null],[11,"signum","","",0,null],[11,"is_positive","","",0,null],[11,"is_negative","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"rem","","",0,null],[11,"rem","","",0,null],[11,"neg","","",0,null],[11,"checked_add","","",0,null],[11,"checked_sub","","",0,null],[11,"checked_mul","","",0,null],[11,"checked_div","","",0,null],[11,"div_rem","","",0,null],[11,"div_floor","","",0,null],[11,"mod_floor","","",0,null],[11,"div_mod_floor","","",0,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",0,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",0,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",0,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",0,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",0,null],[11,"to_i64","","",0,null],[11,"to_u64","","",0,null],[11,"to_f32","","",0,null],[11,"to_f64","","",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",0,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"isize"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"u8"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"u16"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"bigint"}}],[11,"from","","",0,{"inputs":[{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"to_bigint","","",0,null],[11,"to_bigint","","",1,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"from","","",3,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[11,"fmt","num_rational","",4,null],[11,"hash","","",4,null],[11,"clone","","",4,null],[11,"decode","","",4,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",4,null],[11,"from_integer","","Creates a ratio representing the integer `t`.",4,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",4,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",4,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",4,null],[11,"numer","","Gets an immutable reference to the numerator.",4,null],[11,"denom","","Gets an immutable reference to the denominator.",4,null],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",4,null],[11,"reduced","","Returns a `reduce`d copy of self.",4,null],[11,"recip","","Returns the reciprocal.",4,null],[11,"floor","","Rounds towards minus infinity.",4,null],[11,"ceil","","Rounds towards plus infinity.",4,null],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",4,null],[11,"trunc","","Rounds towards zero.",4,null],[11,"fract","","Returns the fractional part of a number.",4,null],[11,"pow","","Raises the ratio to the power of an exponent",4,null],[11,"from_float","","Converts a float into a rational number.",4,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"eq","","",4,null],[11,"mul","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"div","","",4,null],[11,"add","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"sub","","",4,null],[11,"rem","","",4,null],[11,"rem","","",4,null],[11,"neg","","",4,null],[11,"zero","","",4,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",4,null],[11,"one","","",4,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",4,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",4,null],[11,"abs_sub","","",4,null],[11,"signum","","",4,null],[11,"is_positive","","",4,null],[11,"is_negative","","",4,null],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",4,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[6,"Rational","num","",null,null],[6,"BigRational","","",null,null],[11,"new","num_complex","Create a new Complex",6,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",6,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",6,null],[11,"scale","","Multiplies `self` by the scalar `t`.",6,null],[11,"unscale","","Divides `self` by the scalar `t`.",6,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",6,null],[11,"inv","","Returns `1/self`",6,null],[11,"norm","","Calculate |self|",6,null],[11,"arg","","Calculate the principal Arg of self.",6,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",6,null],[11,"from_polar","","Convert a polar representation into a complex number.",6,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",6,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",6,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",6,null],[11,"sin","","Computes the sine of `self`.",6,null],[11,"cos","","Computes the cosine of `self`.",6,null],[11,"tan","","Computes the tangent of `self`.",6,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",6,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",6,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",6,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",6,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",6,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",6,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",6,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",6,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",6,null],[11,"is_nan","","Checks if the given complex number is NaN",6,null],[11,"is_infinite","","Checks if the given complex number is infinite",6,null],[11,"is_finite","","Checks if the given complex number is finite",6,null],[11,"is_normal","","Checks if the given complex number is normal",6,null],[11,"fmt","","",6,null],[11,"hash","","",6,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"from","","",6,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",6,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"neg","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"mul","","",6,null],[11,"div","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"mul","","",6,null],[11,"div","","",6,null],[11,"zero","","",6,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",6,null],[11,"one","","",6,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",6,null],[3,"Complex","num","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",6,null],[12,"im","","Imaginary portion of the complex number",6,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",7,null],[10,"mod_floor","","Floored integer modulo, satisfying:",7,null],[10,"gcd","","Greatest Common Divisor (GCD).",7,null],[10,"lcm","","Lowest Common Multiple (LCM).",7,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",7,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",7,null],[10,"is_even","","Returns `true` if the number is even.",7,null],[10,"is_odd","","Returns `true` if the number is odd.",7,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",7,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",7,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"fmt","num_traits","",8,null],[11,"fmt","","",9,null],[8,"Num","num","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",10,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",10,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",11,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",12,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"signum","","Returns the sign of the number.",13,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",13,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",13,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",15,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",15,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",16,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",17,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",18,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",19,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",20,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",20,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",20,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",20,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",20,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",20,null],[10,"swap_bytes","","Reverses the byte order of the integer.",20,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",20,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",20,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",21,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",21,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",21,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",21,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",21,null],[10,"floor","","Returns the largest integer less than or equal to a number.",21,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",21,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",21,null],[10,"trunc","","Return the integer part of a number.",21,null],[10,"fract","","Returns the fractional part of a number.",21,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",21,null],[10,"signum","","Returns a number that represents the sign of `self`.",21,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",21,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",21,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",21,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",21,null],[10,"powi","","Raise a number to an integer power.",21,null],[10,"powf","","Raise a number to a floating point power.",21,null],[10,"sqrt","","Take the square root of a number.",21,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",21,null],[10,"exp2","","Returns `2^(self)`.",21,null],[10,"ln","","Returns the natural logarithm of the number.",21,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",21,null],[10,"log2","","Returns the base 2 logarithm of the number.",21,null],[10,"log10","","Returns the base 10 logarithm of the number.",21,null],[10,"max","","Returns the maximum of the two numbers.",21,null],[10,"min","","Returns the minimum of the two numbers.",21,null],[10,"abs_sub","","The positive difference of two numbers.",21,null],[10,"cbrt","","Take the cubic root of a number.",21,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",21,null],[10,"sin","","Computes the sine of a number (in radians).",21,null],[10,"cos","","Computes the cosine of a number (in radians).",21,null],[10,"tan","","Computes the tangent of a number (in radians).",21,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",21,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",21,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",21,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",21,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",21,null],[10,"sinh","","Hyperbolic sine function.",21,null],[10,"cosh","","Hyperbolic cosine function.",21,null],[10,"tanh","","Hyperbolic tangent function.",21,null],[10,"asinh","","Inverse hyperbolic sine function.",21,null],[10,"acosh","","Inverse hyperbolic cosine function.",21,null],[10,"atanh","","Inverse hyperbolic tangent function.",21,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",21,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",22,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",22,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",22,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",22,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",22,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",22,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",22,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",22,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",22,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",22,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",22,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",22,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",24,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",22,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",22,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",22,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",22,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",22,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",22,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",22,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",22,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",22,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",22,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",22,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",22,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",24,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[6,"BigDigit","num::bigint","",null,null],[6,"DoubleBigDigit","","",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[0,"big_digit","","",null,null],[17,"BITS","num::bigint::big_digit","",null,null],[17,"BASE","","",null,null],[5,"from_doublebigdigit","","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"u64"}}],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",25,null],[4,"Sign","","A Sign is a `BigInt`&#39;s composing element.",null,null],[13,"Minus","","",2,null],[13,"NoSign","","",2,null],[13,"Plus","","",2,null],[3,"BigInt","","A big signed integer type.",null,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",26,null],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",27,null],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",27,null],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",27,null],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",27,null],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",27,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",3,null],[13,"Other","","",3,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",6,null],[12,"im","","Imaginary portion of the complex number",6,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",7,null],[10,"mod_floor","","Floored integer modulo, satisfying:",7,null],[10,"gcd","","Greatest Common Divisor (GCD).",7,null],[10,"lcm","","Lowest Common Multiple (LCM).",7,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",7,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",7,null],[10,"is_even","","Returns `true` if the number is even.",7,null],[10,"is_odd","","Returns `true` if the number is odd.",7,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",7,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",7,null],[5,"div_rem","","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"clone","num_iter","",28,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"next_back","","",28,null],[11,"clone","","",29,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"next_back","","",29,null],[11,"clone","","",30,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"next","","",31,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",11,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"signum","","Returns the sign of the number.",13,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",13,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",13,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num::traits","",null,null],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",15,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",15,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",16,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",17,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",18,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",19,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[0,"float","num::traits","",null,null],[8,"Float","num::traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",21,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",21,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",21,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",21,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",21,null],[10,"floor","","Returns the largest integer less than or equal to a number.",21,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",21,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",21,null],[10,"trunc","","Return the integer part of a number.",21,null],[10,"fract","","Returns the fractional part of a number.",21,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",21,null],[10,"signum","","Returns a number that represents the sign of `self`.",21,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",21,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",21,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",21,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",21,null],[10,"powi","","Raise a number to an integer power.",21,null],[10,"powf","","Raise a number to a floating point power.",21,null],[10,"sqrt","","Take the square root of a number.",21,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",21,null],[10,"exp2","","Returns `2^(self)`.",21,null],[10,"ln","","Returns the natural logarithm of the number.",21,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",21,null],[10,"log2","","Returns the base 2 logarithm of the number.",21,null],[10,"log10","","Returns the base 10 logarithm of the number.",21,null],[10,"max","","Returns the maximum of the two numbers.",21,null],[10,"min","","Returns the minimum of the two numbers.",21,null],[10,"abs_sub","","The positive difference of two numbers.",21,null],[10,"cbrt","","Take the cubic root of a number.",21,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",21,null],[10,"sin","","Computes the sine of a number (in radians).",21,null],[10,"cos","","Computes the cosine of a number (in radians).",21,null],[10,"tan","","Computes the tangent of a number (in radians).",21,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",21,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",21,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",21,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",21,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",21,null],[10,"sinh","","Hyperbolic sine function.",21,null],[10,"cosh","","Hyperbolic cosine function.",21,null],[10,"tanh","","Hyperbolic tangent function.",21,null],[10,"asinh","","Inverse hyperbolic sine function.",21,null],[10,"acosh","","Inverse hyperbolic cosine function.",21,null],[10,"atanh","","Inverse hyperbolic tangent function.",21,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",21,null],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",22,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",22,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",22,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",22,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",22,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",22,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",22,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",22,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",22,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",22,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",22,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",22,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",24,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",20,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",20,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",20,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",20,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",20,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",20,null],[10,"swap_bytes","","Reverses the byte order of the integer.",20,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",20,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",20,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,null],[8,"Num","num::traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",10,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",10,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",8,null],[13,"Invalid","","",8,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",9,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",22,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",22,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",22,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",22,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",22,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",22,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",22,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",22,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",22,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",22,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",22,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",22,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"signum","","Returns the sign of the number.",13,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",13,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",13,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",20,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",20,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",20,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",20,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",20,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",20,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",20,null],[10,"swap_bytes","","Reverses the byte order of the integer.",20,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",20,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",20,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,null],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",11,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",17,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",12,{"inputs":[],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",15,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",15,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",19,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",16,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",18,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",14,{"inputs":[],"output":{"name":"self"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",23,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",21,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",21,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",21,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",21,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",21,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",21,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",21,null],[10,"floor","","Returns the largest integer less than or equal to a number.",21,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",21,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",21,null],[10,"trunc","","Return the integer part of a number.",21,null],[10,"fract","","Returns the fractional part of a number.",21,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",21,null],[10,"signum","","Returns a number that represents the sign of `self`.",21,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",21,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",21,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",21,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",21,null],[10,"powi","","Raise a number to an integer power.",21,null],[10,"powf","","Raise a number to a floating point power.",21,null],[10,"sqrt","","Take the square root of a number.",21,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",21,null],[10,"exp2","","Returns `2^(self)`.",21,null],[10,"ln","","Returns the natural logarithm of the number.",21,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",21,null],[10,"log2","","Returns the base 2 logarithm of the number.",21,null],[10,"log10","","Returns the base 10 logarithm of the number.",21,null],[10,"max","","Returns the maximum of the two numbers.",21,null],[10,"min","","Returns the minimum of the two numbers.",21,null],[10,"abs_sub","","The positive difference of two numbers.",21,null],[10,"cbrt","","Take the cubic root of a number.",21,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",21,null],[10,"sin","","Computes the sine of a number (in radians).",21,null],[10,"cos","","Computes the cosine of a number (in radians).",21,null],[10,"tan","","Computes the tangent of a number (in radians).",21,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",21,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",21,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",21,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",21,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",21,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",21,null],[10,"sinh","","Hyperbolic sine function.",21,null],[10,"cosh","","Hyperbolic cosine function.",21,null],[10,"tanh","","Hyperbolic tangent function.",21,null],[10,"asinh","","Inverse hyperbolic sine function.",21,null],[10,"acosh","","Inverse hyperbolic cosine function.",21,null],[10,"atanh","","Inverse hyperbolic tangent function.",21,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",21,null],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",24,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[6,"Rational","","",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","",null,null],[3,"ParseRatioError","","",null,null],[5,"zero","num","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}]],"paths":[[3,"BigInt"],[3,"BigUint"],[4,"Sign"],[4,"ParseBigIntError"],[3,"Ratio"],[3,"ParseRatioError"],[3,"Complex"],[8,"Integer"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from_integer","","Creates a ratio representing the integer `t`.",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",0,null],[11,"numer","","Gets an immutable reference to the numerator.",0,null],[11,"denom","","Gets an immutable reference to the denominator.",0,null],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,null],[11,"reduced","","Returns a `reduce`d copy of self.",0,null],[11,"recip","","Returns the reciprocal.",0,null],[11,"floor","","Rounds towards minus infinity.",0,null],[11,"ceil","","Rounds towards plus infinity.",0,null],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,null],[11,"trunc","","Rounds towards zero.",0,null],[11,"fract","","Returns the fractional part of a number.",0,null],[11,"pow","","Raises the ratio to the power of an exponent",0,null],[11,"from_float","","Converts a float into a rational number.",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"rem","","",0,null],[11,"rem","","",0,null],[11,"neg","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",0,null],[11,"abs_sub","","",0,null],[11,"signum","","",0,null],[11,"is_positive","","",0,null],[11,"is_negative","","",0,null],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`&#39;s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,null],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,null],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,null],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,null],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,null],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,null],[11,"eq","","",5,null],[11,"partial_cmp","","",5,null],[11,"cmp","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,null],[11,"bitand","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitxor","","",5,null],[11,"bitxor","","",5,null],[11,"shl","","",5,null],[11,"shr","","",5,null],[11,"zero","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",5,null],[11,"one","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"div","","",5,null],[11,"div","","",5,null],[11,"rem","","",5,null],[11,"rem","","",5,null],[11,"neg","","",5,null],[11,"checked_add","","",5,null],[11,"checked_sub","","",5,null],[11,"checked_mul","","",5,null],[11,"checked_div","","",5,null],[11,"div_rem","","",5,null],[11,"div_floor","","",5,null],[11,"mod_floor","","",5,null],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,null],[11,"to_i64","","",5,null],[11,"to_u64","","",5,null],[11,"to_f32","","",5,null],[11,"to_f64","","",5,null],[11,"from_i64","","",5,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",5,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",6,null],[11,"to_biguint","","",5,null],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",5,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"neg","","Negate Sign value.",0,null],[11,"mul","","",0,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"cmp","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,null],[11,"shr","","",6,null],[11,"zero","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",6,null],[11,"one","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",6,null],[11,"abs_sub","","",6,null],[11,"signum","","",6,null],[11,"is_positive","","",6,null],[11,"is_negative","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"rem","","",6,null],[11,"rem","","",6,null],[11,"neg","","",6,null],[11,"checked_add","","",6,null],[11,"checked_sub","","",6,null],[11,"checked_mul","","",6,null],[11,"checked_div","","",6,null],[11,"div_rem","","",6,null],[11,"div_floor","","",6,null],[11,"mod_floor","","",6,null],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,null],[11,"to_i64","","",6,null],[11,"to_u64","","",6,null],[11,"to_f32","","",6,null],[11,"to_f64","","",6,null],[11,"from_i64","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",6,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",6,null],[11,"to_bigint","","",5,null],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",6,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",6,null],[11,"checked_add","","",6,null],[11,"checked_sub","","",6,null],[11,"checked_mul","","",6,null],[11,"checked_div","","",6,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"from","","",1,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"]]};
searchIndex["x11_dl"] = {"doc":"","items":[[0,"error","x11_dl","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"detail","","",1,null],[11,"kind","","",1,null],[11,"new","","",1,{"inputs":[{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"eq","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"as_str","","",0,null],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[17,"XF86XK_ModeLock","","",null,null],[17,"XF86XK_MonBrightnessUp","","",null,null],[17,"XF86XK_MonBrightnessDown","","",null,null],[17,"XF86XK_KbdLightOnOff","","",null,null],[17,"XF86XK_KbdBrightnessUp","","",null,null],[17,"XF86XK_KbdBrightnessDown","","",null,null],[17,"XF86XK_Standby","","",null,null],[17,"XF86XK_AudioLowerVolume","","",null,null],[17,"XF86XK_AudioMute","","",null,null],[17,"XF86XK_AudioRaiseVolume","","",null,null],[17,"XF86XK_AudioPlay","","",null,null],[17,"XF86XK_AudioStop","","",null,null],[17,"XF86XK_AudioPrev","","",null,null],[17,"XF86XK_AudioNext","","",null,null],[17,"XF86XK_HomePage","","",null,null],[17,"XF86XK_Mail","","",null,null],[17,"XF86XK_Start","","",null,null],[17,"XF86XK_Search","","",null,null],[17,"XF86XK_AudioRecord","","",null,null],[17,"XF86XK_Calculator","","",null,null],[17,"XF86XK_Memo","","",null,null],[17,"XF86XK_ToDoList","","",null,null],[17,"XF86XK_Calendar","","",null,null],[17,"XF86XK_PowerDown","","",null,null],[17,"XF86XK_ContrastAdjust","","",null,null],[17,"XF86XK_RockerUp","","",null,null],[17,"XF86XK_RockerDown","","",null,null],[17,"XF86XK_RockerEnter","","",null,null],[17,"XF86XK_Back","","",null,null],[17,"XF86XK_Forward","","",null,null],[17,"XF86XK_Stop","","",null,null],[17,"XF86XK_Refresh","","",null,null],[17,"XF86XK_PowerOff","","",null,null],[17,"XF86XK_WakeUp","","",null,null],[17,"XF86XK_Eject","","",null,null],[17,"XF86XK_ScreenSaver","","",null,null],[17,"XF86XK_WWW","","",null,null],[17,"XF86XK_Sleep","","",null,null],[17,"XF86XK_Favorites","","",null,null],[17,"XF86XK_AudioPause","","",null,null],[17,"XF86XK_AudioMedia","","",null,null],[17,"XF86XK_MyComputer","","",null,null],[17,"XF86XK_VendorHome","","",null,null],[17,"XF86XK_LightBulb","","",null,null],[17,"XF86XK_Shop","","",null,null],[17,"XF86XK_History","","",null,null],[17,"XF86XK_OpenURL","","",null,null],[17,"XF86XK_AddFavorite","","",null,null],[17,"XF86XK_HotLinks","","",null,null],[17,"XF86XK_BrightnessAdjust","","",null,null],[17,"XF86XK_Finance","","",null,null],[17,"XF86XK_Community","","",null,null],[17,"XF86XK_AudioRewind","","",null,null],[17,"XF86XK_BackForward","","",null,null],[17,"XF86XK_Launch0","","",null,null],[17,"XF86XK_Launch1","","",null,null],[17,"XF86XK_Launch2","","",null,null],[17,"XF86XK_Launch3","","",null,null],[17,"XF86XK_Launch4","","",null,null],[17,"XF86XK_Launch5","","",null,null],[17,"XF86XK_Launch6","","",null,null],[17,"XF86XK_Launch7","","",null,null],[17,"XF86XK_Launch8","","",null,null],[17,"XF86XK_Launch9","","",null,null],[17,"XF86XK_LaunchA","","",null,null],[17,"XF86XK_LaunchB","","",null,null],[17,"XF86XK_LaunchC","","",null,null],[17,"XF86XK_LaunchD","","",null,null],[17,"XF86XK_LaunchE","","",null,null],[17,"XF86XK_LaunchF","","",null,null],[17,"XF86XK_ApplicationLeft","","",null,null],[17,"XF86XK_ApplicationRight","","",null,null],[17,"XF86XK_Book","","",null,null],[17,"XF86XK_CD","","",null,null],[17,"XF86XK_Calculater","","",null,null],[17,"XF86XK_Clear","","",null,null],[17,"XF86XK_Close","","",null,null],[17,"XF86XK_Copy","","",null,null],[17,"XF86XK_Cut","","",null,null],[17,"XF86XK_Display","","",null,null],[17,"XF86XK_DOS","","",null,null],[17,"XF86XK_Documents","","",null,null],[17,"XF86XK_Excel","","",null,null],[17,"XF86XK_Explorer","","",null,null],[17,"XF86XK_Game","","",null,null],[17,"XF86XK_Go","","",null,null],[17,"XF86XK_iTouch","","",null,null],[17,"XF86XK_LogOff","","",null,null],[17,"XF86XK_Market","","",null,null],[17,"XF86XK_Meeting","","",null,null],[17,"XF86XK_MenuKB","","",null,null],[17,"XF86XK_MenuPB","","",null,null],[17,"XF86XK_MySites","","",null,null],[17,"XF86XK_New","","",null,null],[17,"XF86XK_News","","",null,null],[17,"XF86XK_OfficeHome","","",null,null],[17,"XF86XK_Open","","",null,null],[17,"XF86XK_Option","","",null,null],[17,"XF86XK_Paste","","",null,null],[17,"XF86XK_Phone","","",null,null],[17,"XF86XK_Q","","",null,null],[17,"XF86XK_Reply","","",null,null],[17,"XF86XK_Reload","","",null,null],[17,"XF86XK_RotateWindows","","",null,null],[17,"XF86XK_RotationPB","","",null,null],[17,"XF86XK_RotationKB","","",null,null],[17,"XF86XK_Save","","",null,null],[17,"XF86XK_ScrollUp","","",null,null],[17,"XF86XK_ScrollDown","","",null,null],[17,"XF86XK_ScrollClick","","",null,null],[17,"XF86XK_Send","","",null,null],[17,"XF86XK_Spell","","",null,null],[17,"XF86XK_SplitScreen","","",null,null],[17,"XF86XK_Support","","",null,null],[17,"XF86XK_TaskPane","","",null,null],[17,"XF86XK_Terminal","","",null,null],[17,"XF86XK_Tools","","",null,null],[17,"XF86XK_Travel","","",null,null],[17,"XF86XK_UserPB","","",null,null],[17,"XF86XK_User1KB","","",null,null],[17,"XF86XK_User2KB","","",null,null],[17,"XF86XK_Video","","",null,null],[17,"XF86XK_WheelButton","","",null,null],[17,"XF86XK_Word","","",null,null],[17,"XF86XK_Xfer","","",null,null],[17,"XF86XK_ZoomIn","","",null,null],[17,"XF86XK_ZoomOut","","",null,null],[17,"XF86XK_Away","","",null,null],[17,"XF86XK_Messenger","","",null,null],[17,"XF86XK_WebCam","","",null,null],[17,"XF86XK_MailForward","","",null,null],[17,"XF86XK_Pictures","","",null,null],[17,"XF86XK_Music","","",null,null],[17,"XF86XK_Battery","","",null,null],[17,"XF86XK_Bluetooth","","",null,null],[17,"XF86XK_WLAN","","",null,null],[17,"XF86XK_UWB","","",null,null],[17,"XF86XK_AudioForward","","",null,null],[17,"XF86XK_AudioRepeat","","",null,null],[17,"XF86XK_AudioRandomPlay","","",null,null],[17,"XF86XK_Subtitle","","",null,null],[17,"XF86XK_AudioCycleTrack","","",null,null],[17,"XF86XK_CycleAngle","","",null,null],[17,"XF86XK_FrameBack","","",null,null],[17,"XF86XK_FrameForward","","",null,null],[17,"XF86XK_Time","","",null,null],[17,"XF86XK_Select","","",null,null],[17,"XF86XK_View","","",null,null],[17,"XF86XK_TopMenu","","",null,null],[17,"XF86XK_Red","","",null,null],[17,"XF86XK_Green","","",null,null],[17,"XF86XK_Yellow","","",null,null],[17,"XF86XK_Blue","","",null,null],[17,"XF86XK_Suspend","","",null,null],[17,"XF86XK_Hibernate","","",null,null],[17,"XF86XK_TouchpadToggle","","",null,null],[17,"XF86XK_TouchpadOn","","",null,null],[17,"XF86XK_TouchpadOff","","",null,null],[17,"XF86XK_AudioMicMute","","",null,null],[17,"XF86XK_Switch_VT_1","","",null,null],[17,"XF86XK_Switch_VT_2","","",null,null],[17,"XF86XK_Switch_VT_3","","",null,null],[17,"XF86XK_Switch_VT_4","","",null,null],[17,"XF86XK_Switch_VT_5","","",null,null],[17,"XF86XK_Switch_VT_6","","",null,null],[17,"XF86XK_Switch_VT_7","","",null,null],[17,"XF86XK_Switch_VT_8","","",null,null],[17,"XF86XK_Switch_VT_9","","",null,null],[17,"XF86XK_Switch_VT_10","","",null,null],[17,"XF86XK_Switch_VT_11","","",null,null],[17,"XF86XK_Switch_VT_12","","",null,null],[17,"XF86XK_Ungrab","","",null,null],[17,"XF86XK_ClearGrab","","",null,null],[17,"XF86XK_Next_VMode","","",null,null],[17,"XF86XK_Prev_VMode","","",null,null],[17,"XF86XK_LogWindowTree","","",null,null],[17,"XF86XK_LogGrabInfo","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"hskew","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xft","x11_dl","",null,null],[3,"Xft","x11_dl::xft","",null,null],[12,"XftCharExists","","",21,null],[12,"XftCharFontSpecRender","","",21,null],[12,"XftCharIndex","","",21,null],[12,"XftCharSpecRender","","",21,null],[12,"XftColorAllocName","","",21,null],[12,"XftColorAllocValue","","",21,null],[12,"XftColorFree","","",21,null],[12,"XftDefaultHasRender","","",21,null],[12,"XftDefaultSet","","",21,null],[12,"XftDefaultSubstitute","","",21,null],[12,"XftDrawChange","","",21,null],[12,"XftDrawCharFontSpec","","",21,null],[12,"XftDrawCharSpec","","",21,null],[12,"XftDrawColormap","","",21,null],[12,"XftDrawCreate","","",21,null],[12,"XftDrawCreateAlpha","","",21,null],[12,"XftDrawCreateBitmap","","",21,null],[12,"XftDrawDestroy","","",21,null],[12,"XftDrawDisplay","","",21,null],[12,"XftDrawDrawable","","",21,null],[12,"XftDrawGlyphFontSpec","","",21,null],[12,"XftDrawGlyphs","","",21,null],[12,"XftDrawGlyphSpec","","",21,null],[12,"XftDrawPicture","","",21,null],[12,"XftDrawRect","","",21,null],[12,"XftDrawSetClip","","",21,null],[12,"XftDrawSetClipRectangles","","",21,null],[12,"XftDrawSetSubwindowMode","","",21,null],[12,"XftDrawSrcPicture","","",21,null],[12,"XftDrawString16","","",21,null],[12,"XftDrawString32","","",21,null],[12,"XftDrawString8","","",21,null],[12,"XftDrawStringUtf16","","",21,null],[12,"XftDrawStringUtf8","","",21,null],[12,"XftDrawVisual","","",21,null],[12,"XftFontCheckGlyph","","",21,null],[12,"XftFontClose","","",21,null],[12,"XftFontCopy","","",21,null],[12,"XftFontInfoCreate","","",21,null],[12,"XftFontInfoDestroy","","",21,null],[12,"XftFontInfoEqual","","",21,null],[12,"XftFontInfoHash","","",21,null],[12,"XftFontLoadGlyphs","","",21,null],[12,"XftFontMatch","","",21,null],[12,"XftFontOpenInfo","","",21,null],[12,"XftFontOpenName","","",21,null],[12,"XftFontOpenPattern","","",21,null],[12,"XftFontOpenXlfd","","",21,null],[12,"XftFontUnloadGlyphs","","",21,null],[12,"XftGetVersion","","",21,null],[12,"XftGlyphExtents","","",21,null],[12,"XftGlyphFontSpecRender","","",21,null],[12,"XftGlyphRender","","",21,null],[12,"XftGlyphSpecRender","","",21,null],[12,"XftInit","","",21,null],[12,"XftInitFtLibrary","","",21,null],[12,"XftLockFace","","",21,null],[12,"XftNameParse","","",21,null],[12,"XftNameUnparse","","",21,null],[12,"XftTextExtents16","","",21,null],[12,"XftTextExtents32","","",21,null],[12,"XftTextExtents8","","",21,null],[12,"XftTextExtentsUtf16","","",21,null],[12,"XftTextExtentsUtf8","","",21,null],[12,"XftTextRender16","","",21,null],[12,"XftTextRender16BE","","",21,null],[12,"XftTextRender16LE","","",21,null],[12,"XftTextRender32","","",21,null],[12,"XftTextRender32BE","","",21,null],[12,"XftTextRender32LE","","",21,null],[12,"XftTextRender8","","",21,null],[12,"XftTextRenderUtf16","","",21,null],[12,"XftTextRenderUtf8","","",21,null],[12,"XftUnlockFace","","",21,null],[12,"XftXlfdParse","","",21,null],[12,"XftFontOpen","","",21,null],[12,"XftListFonts","","",21,null],[3,"XftFont","","",null,null],[12,"ascent","","",22,null],[12,"descent","","",22,null],[12,"height","","",22,null],[12,"max_advance_width","","",22,null],[12,"charset","","",22,null],[12,"pattern","","",22,null],[3,"XftColor","","",null,null],[12,"pixel","","",23,null],[12,"color","","",23,null],[3,"XftCharSpec","","",null,null],[12,"ucs4","","",24,null],[12,"x","","",24,null],[12,"y","","",24,null],[3,"XftCharFontSpec","","",null,null],[12,"font","","",25,null],[12,"ucs4","","",25,null],[12,"x","","",25,null],[12,"y","","",25,null],[3,"XftFontSet","","",null,null],[12,"nfont","","",26,null],[12,"sfont","","",26,null],[12,"fonts","","",26,null],[3,"XftGlyphSpec","","",null,null],[12,"glyph","","",27,null],[12,"x","","",27,null],[12,"y","","",27,null],[3,"XftGlyphFontSpec","","",null,null],[12,"font","","",28,null],[12,"glyph","","",28,null],[12,"x","","",28,null],[12,"y","","",28,null],[4,"FT_FaceRec","","",null,null],[4,"FcCharSet","","",null,null],[4,"FcPattern","","",null,null],[4,"FcEndian","","",null,null],[13,"Big","","",29,null],[13,"Little","","",29,null],[4,"FcResult","","",null,null],[13,"Match","","",30,null],[13,"NoMatch","","",30,null],[13,"TypeMismatch","","",30,null],[13,"NoId","","",30,null],[13,"OutOfMemory","","",30,null],[4,"XftFontInfo","","",null,null],[4,"XftDraw","","",null,null],[4,"XftPattern","","",null,null],[6,"FT_UInt","","",null,null],[6,"FcChar32","","",null,null],[17,"XFT_FAMILY","","",null,null],[17,"XFT_STYLE","","",null,null],[17,"XFT_SLANT","","",null,null],[17,"XFT_WEIGHT","","",null,null],[17,"XFT_SIZE","","",null,null],[17,"XFT_PIXEL_SIZE","","",null,null],[17,"XFT_SPACING","","",null,null],[17,"XFT_FOUNDRY","","",null,null],[17,"XFT_ANTIALIAS","","",null,null],[17,"XFT_SLANT_ROMAN","","",null,null],[17,"XFT_SLANT_ITALIC","","",null,null],[17,"XFT_SLANT_OBLIQUE","","",null,null],[17,"XftTypeVoid","","",null,null],[17,"XftTypeInteger","","",null,null],[17,"XftTypeDouble","","",null,null],[17,"XftTypeString","","",null,null],[17,"XftTypeBool","","",null,null],[17,"XftTypeMatrix","","",null,null],[11,"open","","",21,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"clone","","",24,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"clone","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"clone","","",28,null],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",31,null],[12,"XineramaQueryExtension","","",31,null],[12,"XineramaQueryScreens","","",31,null],[12,"XineramaQueryVersion","","",31,null],[12,"XPanoramiXAllocInfo","","",31,null],[12,"XPanoramiXGetScreenCount","","",31,null],[12,"XPanoramiXGetScreenSize","","",31,null],[12,"XPanoramiXGetState","","",31,null],[12,"XPanoramiXQueryExtension","","",31,null],[12,"XPanoramiXQueryVersion","","",31,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",32,null],[12,"x_org","","",32,null],[12,"y_org","","",32,null],[12,"width","","",32,null],[12,"height","","",32,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",33,null],[12,"screen","","",33,null],[12,"State","","",33,null],[12,"width","","",33,null],[12,"height","","",33,null],[12,"ScreenCount","","",33,null],[12,"eventMask","","",33,null],[11,"open","","",31,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",34,null],[12,"XChangeDeviceControl","","",34,null],[12,"XChangeDeviceDontPropagateList","","",34,null],[12,"XChangeDeviceKeyMapping","","",34,null],[12,"XChangeDeviceProperty","","",34,null],[12,"XChangeFeedbackControl","","",34,null],[12,"XChangeKeyboardDevice","","",34,null],[12,"XChangePointerDevice","","",34,null],[12,"XCloseDevice","","",34,null],[12,"XDeleteDeviceProperty","","",34,null],[12,"XDeviceBell","","",34,null],[12,"XFreeDeviceControl","","",34,null],[12,"XFreeDeviceList","","",34,null],[12,"XFreeDeviceMotionEvents","","",34,null],[12,"XFreeDeviceState","","",34,null],[12,"XFreeFeedbackList","","",34,null],[12,"XGetDeviceButtonMapping","","",34,null],[12,"XGetDeviceControl","","",34,null],[12,"XGetDeviceDontPropagateList","","",34,null],[12,"XGetDeviceFocus","","",34,null],[12,"XGetDeviceKeyMapping","","",34,null],[12,"XGetDeviceModifierMapping","","",34,null],[12,"XGetDeviceMotionEvents","","",34,null],[12,"XGetDeviceProperty","","",34,null],[12,"XGetExtensionVersion","","",34,null],[12,"XGetFeedbackControl","","",34,null],[12,"XGetSelectedExtensionEvents","","",34,null],[12,"XGrabDevice","","",34,null],[12,"XGrabDeviceButton","","",34,null],[12,"XGrabDeviceKey","","",34,null],[12,"XListDeviceProperties","","",34,null],[12,"XListInputDevices","","",34,null],[12,"XOpenDevice","","",34,null],[12,"XQueryDeviceState","","",34,null],[12,"XSelectExtensionEvent","","",34,null],[12,"XSendExtensionEvent","","",34,null],[12,"XSetDeviceButtonMapping","","",34,null],[12,"XSetDeviceFocus","","",34,null],[12,"XSetDeviceMode","","",34,null],[12,"XSetDeviceModifierMapping","","",34,null],[12,"XSetDeviceValuators","","",34,null],[12,"XUngrabDevice","","",34,null],[12,"XUngrabDeviceButton","","",34,null],[12,"XUngrabDeviceKey","","",34,null],[3,"XDevice","","",null,null],[12,"device_id","","",35,null],[12,"num_classes","","",35,null],[12,"classes","","",35,null],[3,"XDeviceControl","","",null,null],[12,"control","","",36,null],[12,"length","","",36,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",37,null],[12,"type_","","",37,null],[12,"name","","",37,null],[12,"num_classes","","",37,null],[12,"use_","","",37,null],[12,"inputclassinfo","","",37,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",38,null],[12,"num_classes","","",38,null],[12,"data","","",38,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",39,null],[12,"data","","",39,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",40,null],[12,"major_version","","",40,null],[12,"minor_version","","",40,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",41,null],[12,"length","","",41,null],[12,"id","","",41,null],[3,"XFeedbackState","","",null,null],[12,"class","","",42,null],[12,"length","","",42,null],[12,"id","","",42,null],[3,"XInputClass","","",null,null],[12,"class","","",43,null],[12,"length","","",43,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",44,null],[12,"event_type_base","","",44,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",34,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"clone","","",36,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"clone","","",38,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"clone","","",39,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"clone","","",44,null],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",45,null],[12,"XIAllowTouchEvents","","",45,null],[12,"XIBarrierReleasePointer","","",45,null],[12,"XIBarrierReleasePointers","","",45,null],[12,"XIChangeHierarchy","","",45,null],[12,"XIChangeProperty","","",45,null],[12,"XIDefineCursor","","",45,null],[12,"XIDeleteProperty","","",45,null],[12,"XIFreeDeviceInfo","","",45,null],[12,"XIGetClientPointer","","",45,null],[12,"XIGetFocus","","",45,null],[12,"XIGetProperty","","",45,null],[12,"XIGetSelectedEvents","","",45,null],[12,"XIGrabButton","","",45,null],[12,"XIGrabDevice","","",45,null],[12,"XIGrabEnter","","",45,null],[12,"XIGrabFocusIn","","",45,null],[12,"XIGrabKeycode","","",45,null],[12,"XIGrabTouchBegin","","",45,null],[12,"XIListProperties","","",45,null],[12,"XIQueryDevice","","",45,null],[12,"XIQueryPointer","","",45,null],[12,"XIQueryVersion","","",45,null],[12,"XISelectEvents","","",45,null],[12,"XISetClientPointer","","",45,null],[12,"XISetFocus","","",45,null],[12,"XIUndefineCursor","","",45,null],[12,"XIUngrabButton","","",45,null],[12,"XIUngrabDevice","","",45,null],[12,"XIUngrabEnter","","",45,null],[12,"XIUngrabFocusIn","","",45,null],[12,"XIUngrabKeycode","","",45,null],[12,"XIUngrabTouchBegin","","",45,null],[12,"XIWarpPointer","","",45,null],[3,"Struct_Unnamed1","","",null,null],[12,"_type","","",46,null],[12,"name","","",46,null],[12,"send_core","","",46,null],[12,"enable","","",46,null],[3,"Struct_Unnamed2","","",null,null],[12,"_type","","",47,null],[12,"deviceid","","",47,null],[12,"return_mode","","",47,null],[12,"return_pointer","","",47,null],[12,"return_keyboard","","",47,null],[3,"Struct_Unnamed3","","",null,null],[12,"_type","","",48,null],[12,"deviceid","","",48,null],[12,"new_master","","",48,null],[3,"Struct_Unnamed4","","",null,null],[12,"_type","","",49,null],[12,"deviceid","","",49,null],[3,"Union_Unnamed5","","",null,null],[12,"_bindgen_data_","","",50,null],[3,"Struct_Unnamed6","","",null,null],[12,"base","","",51,null],[12,"latched","","",51,null],[12,"locked","","",51,null],[12,"effective","","",51,null],[3,"Struct_Unnamed7","","",null,null],[12,"mask_len","","",52,null],[12,"mask","","",52,null],[3,"Struct_Unnamed8","","",null,null],[12,"mask_len","","",53,null],[12,"mask","","",53,null],[12,"values","","",53,null],[3,"Struct_Unnamed9","","",null,null],[12,"deviceid","","",54,null],[12,"mask_len","","",54,null],[12,"mask","","",54,null],[3,"Struct_Unnamed10","","",null,null],[12,"_type","","",55,null],[12,"sourceid","","",55,null],[3,"Struct_Unnamed11","","",null,null],[12,"_type","","",56,null],[12,"sourceid","","",56,null],[12,"num_buttons","","",56,null],[12,"labels","","",56,null],[12,"state","","",56,null],[3,"Struct_Unnamed12","","",null,null],[12,"_type","","",57,null],[12,"sourceid","","",57,null],[12,"num_keycodes","","",57,null],[12,"keycodes","","",57,null],[3,"Struct_Unnamed13","","",null,null],[12,"_type","","",58,null],[12,"sourceid","","",58,null],[12,"number","","",58,null],[12,"label","","",58,null],[12,"min","","",58,null],[12,"max","","",58,null],[12,"value","","",58,null],[12,"resolution","","",58,null],[12,"mode","","",58,null],[3,"Struct_Unnamed14","","",null,null],[12,"_type","","",59,null],[12,"sourceid","","",59,null],[12,"number","","",59,null],[12,"scroll_type","","",59,null],[12,"increment","","",59,null],[12,"flags","","",59,null],[3,"Struct_Unnamed15","","",null,null],[12,"_type","","",60,null],[12,"sourceid","","",60,null],[12,"mode","","",60,null],[12,"num_touches","","",60,null],[3,"Struct_Unnamed16","","",null,null],[12,"deviceid","","",61,null],[12,"name","","",61,null],[12,"_use","","",61,null],[12,"attachment","","",61,null],[12,"enabled","","",61,null],[12,"num_classes","","",61,null],[12,"classes","","",61,null],[3,"Struct_Unnamed17","","",null,null],[12,"modifiers","","",62,null],[12,"status","","",62,null],[3,"Struct_Unnamed18","","",null,null],[12,"deviceid","","",63,null],[12,"barrier","","",63,null],[12,"eventid","","",63,null],[3,"Struct_Unnamed19","","",null,null],[12,"_type","","",64,null],[12,"serial","","",64,null],[12,"send_event","","",64,null],[12,"display","","",64,null],[12,"extension","","",64,null],[12,"evtype","","",64,null],[12,"time","","",64,null],[3,"Struct_Unnamed20","","",null,null],[12,"deviceid","","",65,null],[12,"attachment","","",65,null],[12,"_use","","",65,null],[12,"enabled","","",65,null],[12,"flags","","",65,null],[3,"Struct_Unnamed21","","",null,null],[12,"_type","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"extension","","",66,null],[12,"evtype","","",66,null],[12,"time","","",66,null],[12,"flags","","",66,null],[12,"num_info","","",66,null],[12,"info","","",66,null],[3,"Struct_Unnamed22","","",null,null],[12,"_type","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"extension","","",67,null],[12,"evtype","","",67,null],[12,"time","","",67,null],[12,"deviceid","","",67,null],[12,"sourceid","","",67,null],[12,"reason","","",67,null],[12,"num_classes","","",67,null],[12,"classes","","",67,null],[3,"Struct_Unnamed23","","",null,null],[12,"_type","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"extension","","",68,null],[12,"evtype","","",68,null],[12,"time","","",68,null],[12,"deviceid","","",68,null],[12,"sourceid","","",68,null],[12,"detail","","",68,null],[12,"root","","",68,null],[12,"event","","",68,null],[12,"child","","",68,null],[12,"root_x","","",68,null],[12,"root_y","","",68,null],[12,"event_x","","",68,null],[12,"event_y","","",68,null],[12,"flags","","",68,null],[12,"buttons","","",68,null],[12,"valuators","","",68,null],[12,"mods","","",68,null],[12,"group","","",68,null],[3,"Struct_Unnamed24","","",null,null],[12,"_type","","",69,null],[12,"serial","","",69,null],[12,"send_event","","",69,null],[12,"display","","",69,null],[12,"extension","","",69,null],[12,"evtype","","",69,null],[12,"time","","",69,null],[12,"deviceid","","",69,null],[12,"sourceid","","",69,null],[12,"detail","","",69,null],[12,"flags","","",69,null],[12,"valuators","","",69,null],[12,"raw_values","","",69,null],[3,"Struct_Unnamed25","","",null,null],[12,"_type","","",70,null],[12,"serial","","",70,null],[12,"send_event","","",70,null],[12,"display","","",70,null],[12,"extension","","",70,null],[12,"evtype","","",70,null],[12,"time","","",70,null],[12,"deviceid","","",70,null],[12,"sourceid","","",70,null],[12,"detail","","",70,null],[12,"root","","",70,null],[12,"event","","",70,null],[12,"child","","",70,null],[12,"root_x","","",70,null],[12,"root_y","","",70,null],[12,"event_x","","",70,null],[12,"event_y","","",70,null],[12,"mode","","",70,null],[12,"focus","","",70,null],[12,"same_screen","","",70,null],[12,"buttons","","",70,null],[12,"mods","","",70,null],[12,"group","","",70,null],[3,"Struct_Unnamed26","","",null,null],[12,"_type","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"extension","","",71,null],[12,"evtype","","",71,null],[12,"time","","",71,null],[12,"deviceid","","",71,null],[12,"property","","",71,null],[12,"what","","",71,null],[3,"Struct_Unnamed27","","",null,null],[12,"_type","","",72,null],[12,"serial","","",72,null],[12,"send_event","","",72,null],[12,"display","","",72,null],[12,"extension","","",72,null],[12,"evtype","","",72,null],[12,"time","","",72,null],[12,"deviceid","","",72,null],[12,"sourceid","","",72,null],[12,"touchid","","",72,null],[12,"root","","",72,null],[12,"event","","",72,null],[12,"child","","",72,null],[12,"flags","","",72,null],[3,"Struct_Unnamed28","","",null,null],[12,"_type","","",73,null],[12,"serial","","",73,null],[12,"send_event","","",73,null],[12,"display","","",73,null],[12,"extension","","",73,null],[12,"evtype","","",73,null],[12,"time","","",73,null],[12,"deviceid","","",73,null],[12,"sourceid","","",73,null],[12,"event","","",73,null],[12,"root","","",73,null],[12,"root_x","","",73,null],[12,"root_y","","",73,null],[12,"dx","","",73,null],[12,"dy","","",73,null],[12,"dtime","","",73,null],[12,"flags","","",73,null],[12,"barrier","","",73,null],[12,"eventid","","",73,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIAddMasterInfo","","",null,null],[6,"XIRemoveMasterInfo","","",null,null],[6,"XIAttachSlaveInfo","","",null,null],[6,"XIDetachSlaveInfo","","",null,null],[6,"XIAnyHierarchyChangeInfo","","",null,null],[6,"XIModifierState","","",null,null],[6,"XIGroupState","","",null,null],[6,"XIButtonState","","",null,null],[6,"XIValuatorState","","",null,null],[6,"XIEventMask","","",null,null],[6,"XIAnyClassInfo","","",null,null],[6,"XIButtonClassInfo","","",null,null],[6,"XIKeyClassInfo","","",null,null],[6,"XIValuatorClassInfo","","",null,null],[6,"XIScrollClassInfo","","",null,null],[6,"XITouchClassInfo","","",null,null],[6,"XIDeviceInfo","","",null,null],[6,"XIGrabModifiers","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XIBarrierReleasePointerInfo","","",null,null],[6,"XIEvent","","",null,null],[6,"XIHierarchyInfo","","",null,null],[6,"XIHierarchyEvent","","",null,null],[6,"XIDeviceChangedEvent","","",null,null],[6,"XIDeviceEvent","","",null,null],[6,"XIRawEvent","","",null,null],[6,"XIEnterEvent","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[6,"XIPropertyEvent","","",null,null],[6,"XITouchOwnershipEvent","","",null,null],[6,"XIBarrierEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",45,{"inputs":[],"output":{"name":"result"}}],[11,"clone","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"_type","","",50,null],[11,"add","","",50,null],[11,"remove","","",50,null],[11,"attach","","",50,null],[11,"detach","","",50,null],[11,"clone","","",50,null],[11,"default","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",51,null],[11,"default","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",54,null],[11,"default","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",55,null],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",58,null],[11,"default","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",59,null],[11,"default","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",60,null],[11,"default","","",60,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",61,null],[11,"default","","",61,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",62,null],[11,"default","","",62,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",64,null],[11,"default","","",64,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",65,null],[11,"default","","",65,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",66,null],[11,"default","","",66,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",67,null],[11,"default","","",67,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",68,null],[11,"default","","",68,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",69,null],[11,"default","","",69,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",70,null],[11,"default","","",70,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",71,null],[11,"default","","",71,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",72,null],[11,"default","","",72,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"self"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",74,null],[12,"XAddConnectionWatch","","",74,null],[12,"XAddExtension","","",74,null],[12,"XAddHost","","",74,null],[12,"XAddHosts","","",74,null],[12,"XAddPixel","","",74,null],[12,"XAddToExtensionList","","",74,null],[12,"XAddToSaveSet","","",74,null],[12,"XAllocClassHint","","",74,null],[12,"XAllocColor","","",74,null],[12,"XAllocColorCells","","",74,null],[12,"XAllocColorPlanes","","",74,null],[12,"XAllocIconSize","","",74,null],[12,"XAllocNamedColor","","",74,null],[12,"XAllocSizeHints","","",74,null],[12,"XAllocStandardColormap","","",74,null],[12,"XAllocWMHints","","",74,null],[12,"XAllowEvents","","",74,null],[12,"XAllPlanes","","",74,null],[12,"XAutoRepeatOff","","",74,null],[12,"XAutoRepeatOn","","",74,null],[12,"XBaseFontNameListOfFontSet","","",74,null],[12,"XBell","","",74,null],[12,"XBitmapBitOrder","","",74,null],[12,"XBitmapPad","","",74,null],[12,"XBitmapUnit","","",74,null],[12,"XBlackPixel","","",74,null],[12,"XBlackPixelOfScreen","","",74,null],[12,"XCellsOfScreen","","",74,null],[12,"XChangeActivePointerGrab","","",74,null],[12,"XChangeGC","","",74,null],[12,"XChangeKeyboardControl","","",74,null],[12,"XChangeKeyboardMapping","","",74,null],[12,"XChangePointerControl","","",74,null],[12,"XChangeProperty","","",74,null],[12,"XChangeSaveSet","","",74,null],[12,"XChangeWindowAttributes","","",74,null],[12,"XCheckIfEvent","","",74,null],[12,"XCheckMaskEvent","","",74,null],[12,"XCheckTypedEvent","","",74,null],[12,"XCheckTypedWindowEvent","","",74,null],[12,"XCheckWindowEvent","","",74,null],[12,"XCirculateSubwindows","","",74,null],[12,"XCirculateSubwindowsDown","","",74,null],[12,"XCirculateSubwindowsUp","","",74,null],[12,"XClearArea","","",74,null],[12,"XClearWindow","","",74,null],[12,"XClipBox","","",74,null],[12,"XCloseDisplay","","",74,null],[12,"XCloseIM","","",74,null],[12,"XCloseOM","","",74,null],[12,"XcmsAddColorSpace","","",74,null],[12,"XcmsAddFunctionSet","","",74,null],[12,"XcmsAllocColor","","",74,null],[12,"XcmsAllocNamedColor","","",74,null],[12,"XcmsCCCOfColormap","","",74,null],[12,"XcmsCIELabClipab","","",74,null],[12,"XcmsCIELabClipL","","",74,null],[12,"XcmsCIELabClipLab","","",74,null],[12,"XcmsCIELabQueryMaxC","","",74,null],[12,"XcmsCIELabQueryMaxL","","",74,null],[12,"XcmsCIELabQueryMaxLC","","",74,null],[12,"XcmsCIELabQueryMinL","","",74,null],[12,"XcmsCIELabToCIEXYZ","","",74,null],[12,"XcmsCIELabWhiteShiftColors","","",74,null],[12,"XcmsCIELuvClipL","","",74,null],[12,"XcmsCIELuvClipLuv","","",74,null],[12,"XcmsCIELuvClipuv","","",74,null],[12,"XcmsCIELuvQueryMaxC","","",74,null],[12,"XcmsCIELuvQueryMaxL","","",74,null],[12,"XcmsCIELuvQueryMaxLC","","",74,null],[12,"XcmsCIELuvQueryMinL","","",74,null],[12,"XcmsCIELuvToCIEuvY","","",74,null],[12,"XcmsCIELuvWhiteShiftColors","","",74,null],[12,"XcmsCIEuvYToCIELuv","","",74,null],[12,"XcmsCIEuvYToCIEXYZ","","",74,null],[12,"XcmsCIEuvYToTekHVC","","",74,null],[12,"XcmsCIExyYToCIEXYZ","","",74,null],[12,"XcmsCIEXYZToCIELab","","",74,null],[12,"XcmsCIEXYZToCIEuvY","","",74,null],[12,"XcmsCIEXYZToCIExyY","","",74,null],[12,"XcmsCIEXYZToRGBi","","",74,null],[12,"XcmsClientWhitePointOfCCC","","",74,null],[12,"XcmsConvertColors","","",74,null],[12,"XcmsCreateCCC","","",74,null],[12,"XcmsDefaultCCC","","",74,null],[12,"XcmsDisplayOfCCC","","",74,null],[12,"XcmsFormatOfPrefix","","",74,null],[12,"XcmsFreeCCC","","",74,null],[12,"XcmsLookupColor","","",74,null],[12,"XcmsPrefixOfFormat","","",74,null],[12,"XcmsQueryBlack","","",74,null],[12,"XcmsQueryBlue","","",74,null],[12,"XcmsQueryColor","","",74,null],[12,"XcmsQueryColors","","",74,null],[12,"XcmsQueryGreen","","",74,null],[12,"XcmsQueryRed","","",74,null],[12,"XcmsQueryWhite","","",74,null],[12,"XcmsRGBiToCIEXYZ","","",74,null],[12,"XcmsRGBiToRGB","","",74,null],[12,"XcmsRGBToRGBi","","",74,null],[12,"XcmsScreenNumberOfCCC","","",74,null],[12,"XcmsScreenWhitePointOfCCC","","",74,null],[12,"XcmsSetCCCOfColormap","","",74,null],[12,"XcmsSetCompressionProc","","",74,null],[12,"XcmsSetWhiteAdjustProc","","",74,null],[12,"XcmsSetWhitePoint","","",74,null],[12,"XcmsStoreColor","","",74,null],[12,"XcmsStoreColors","","",74,null],[12,"XcmsTekHVCClipC","","",74,null],[12,"XcmsTekHVCClipV","","",74,null],[12,"XcmsTekHVCClipVC","","",74,null],[12,"XcmsTekHVCQueryMaxC","","",74,null],[12,"XcmsTekHVCQueryMaxV","","",74,null],[12,"XcmsTekHVCQueryMaxVC","","",74,null],[12,"XcmsTekHVCQueryMaxVSamples","","",74,null],[12,"XcmsTekHVCQueryMinV","","",74,null],[12,"XcmsTekHVCToCIEuvY","","",74,null],[12,"XcmsTekHVCWhiteShiftColors","","",74,null],[12,"XcmsVisualOfCCC","","",74,null],[12,"XConfigureWindow","","",74,null],[12,"XConnectionNumber","","",74,null],[12,"XContextDependentDrawing","","",74,null],[12,"XContextualDrawing","","",74,null],[12,"XConvertCase","","",74,null],[12,"XConvertSelection","","",74,null],[12,"XCopyArea","","",74,null],[12,"XCopyColormapAndFree","","",74,null],[12,"XCopyGC","","",74,null],[12,"XCopyPlane","","",74,null],[12,"XCreateBitmapFromData","","",74,null],[12,"XCreateColormap","","",74,null],[12,"XCreateFontCursor","","",74,null],[12,"XCreateFontSet","","",74,null],[12,"XCreateGC","","",74,null],[12,"XCreateGlyphCursor","","",74,null],[12,"XCreateImage","","",74,null],[12,"XCreatePixmap","","",74,null],[12,"XCreatePixmapCursor","","",74,null],[12,"XCreatePixmapFromBitmapData","","",74,null],[12,"XCreateRegion","","",74,null],[12,"XCreateSimpleWindow","","",74,null],[12,"XCreateWindow","","",74,null],[12,"XDefaultColormap","","",74,null],[12,"XDefaultColormapOfScreen","","",74,null],[12,"XDefaultDepth","","",74,null],[12,"XDefaultDepthOfScreen","","",74,null],[12,"XDefaultGC","","",74,null],[12,"XDefaultGCOfScreen","","",74,null],[12,"XDefaultRootWindow","","",74,null],[12,"XDefaultScreen","","",74,null],[12,"XDefaultScreenOfDisplay","","",74,null],[12,"XDefaultString","","",74,null],[12,"XDefaultVisual","","",74,null],[12,"XDefaultVisualOfScreen","","",74,null],[12,"XDefineCursor","","",74,null],[12,"XDeleteContext","","",74,null],[12,"XDeleteModifiermapEntry","","",74,null],[12,"XDeleteProperty","","",74,null],[12,"XDestroyIC","","",74,null],[12,"XDestroyImage","","",74,null],[12,"XDestroyOC","","",74,null],[12,"XDestroyRegion","","",74,null],[12,"XDestroySubwindows","","",74,null],[12,"XDestroyWindow","","",74,null],[12,"XDirectionalDependentDrawing","","",74,null],[12,"XDisableAccessControl","","",74,null],[12,"XDisplayCells","","",74,null],[12,"XDisplayHeight","","",74,null],[12,"XDisplayHeightMM","","",74,null],[12,"XDisplayKeycodes","","",74,null],[12,"XDisplayMotionBufferSize","","",74,null],[12,"XDisplayName","","",74,null],[12,"XDisplayOfIM","","",74,null],[12,"XDisplayOfOM","","",74,null],[12,"XDisplayOfScreen","","",74,null],[12,"XDisplayPlanes","","",74,null],[12,"XDisplayString","","",74,null],[12,"XDisplayWidth","","",74,null],[12,"XDisplayWidthMM","","",74,null],[12,"XDoesBackingStore","","",74,null],[12,"XDoesSaveUnders","","",74,null],[12,"XDrawArc","","",74,null],[12,"XDrawArcs","","",74,null],[12,"XDrawImageString","","",74,null],[12,"XDrawImageString16","","",74,null],[12,"XDrawLine","","",74,null],[12,"XDrawLines","","",74,null],[12,"XDrawPoint","","",74,null],[12,"XDrawPoints","","",74,null],[12,"XDrawRectangle","","",74,null],[12,"XDrawRectangles","","",74,null],[12,"XDrawSegments","","",74,null],[12,"XDrawString","","",74,null],[12,"XDrawString16","","",74,null],[12,"XDrawText","","",74,null],[12,"XDrawText16","","",74,null],[12,"XEHeadOfExtensionList","","",74,null],[12,"XEmptyRegion","","",74,null],[12,"XEnableAccessControl","","",74,null],[12,"XEqualRegion","","",74,null],[12,"XESetBeforeFlush","","",74,null],[12,"XESetCloseDisplay","","",74,null],[12,"XESetCopyEventCookie","","",74,null],[12,"XESetCopyGC","","",74,null],[12,"XESetCreateFont","","",74,null],[12,"XESetCreateGC","","",74,null],[12,"XESetError","","",74,null],[12,"XESetErrorString","","",74,null],[12,"XESetEventToWire","","",74,null],[12,"XESetFlushGC","","",74,null],[12,"XESetFreeFont","","",74,null],[12,"XESetFreeGC","","",74,null],[12,"XESetPrintErrorValues","","",74,null],[12,"XESetWireToError","","",74,null],[12,"XESetWireToEvent","","",74,null],[12,"XESetWireToEventCookie","","",74,null],[12,"XEventMaskOfScreen","","",74,null],[12,"XEventsQueued","","",74,null],[12,"XExtendedMaxRequestSize","","",74,null],[12,"XExtentsOfFontSet","","",74,null],[12,"XFetchBuffer","","",74,null],[12,"XFetchBytes","","",74,null],[12,"XFetchName","","",74,null],[12,"XFillArc","","",74,null],[12,"XFillArcs","","",74,null],[12,"XFillPolygon","","",74,null],[12,"XFillRectangle","","",74,null],[12,"XFillRectangles","","",74,null],[12,"XFilterEvent","","",74,null],[12,"XFindContext","","",74,null],[12,"XFindOnExtensionList","","",74,null],[12,"XFlush","","",74,null],[12,"XFlushGC","","",74,null],[12,"XFontsOfFontSet","","",74,null],[12,"XForceScreenSaver","","",74,null],[12,"XFree","","",74,null],[12,"XFreeColormap","","",74,null],[12,"XFreeColors","","",74,null],[12,"XFreeCursor","","",74,null],[12,"XFreeEventData","","",74,null],[12,"XFreeExtensionList","","",74,null],[12,"XFreeFont","","",74,null],[12,"XFreeFontInfo","","",74,null],[12,"XFreeFontNames","","",74,null],[12,"XFreeFontPath","","",74,null],[12,"XFreeFontSet","","",74,null],[12,"XFreeGC","","",74,null],[12,"XFreeModifiermap","","",74,null],[12,"XFreePixmap","","",74,null],[12,"XFreeStringList","","",74,null],[12,"XGContextFromGC","","",74,null],[12,"XGeometry","","",74,null],[12,"XGetAtomName","","",74,null],[12,"XGetAtomNames","","",74,null],[12,"XGetClassHint","","",74,null],[12,"XGetCommand","","",74,null],[12,"XGetDefault","","",74,null],[12,"XGetErrorDatabaseText","","",74,null],[12,"XGetErrorText","","",74,null],[12,"XGetEventData","","",74,null],[12,"XGetFontPath","","",74,null],[12,"XGetFontProperty","","",74,null],[12,"XGetGCValues","","",74,null],[12,"XGetGeometry","","",74,null],[12,"XGetIconName","","",74,null],[12,"XGetIconSizes","","",74,null],[12,"XGetImage","","",74,null],[12,"XGetInputFocus","","",74,null],[12,"XGetKeyboardControl","","",74,null],[12,"XGetKeyboardMapping","","",74,null],[12,"XGetModifierMapping","","",74,null],[12,"XGetMotionEvents","","",74,null],[12,"XGetNormalHints","","",74,null],[12,"XGetPixel","","",74,null],[12,"XGetPointerControl","","",74,null],[12,"XGetPointerMapping","","",74,null],[12,"XGetRGBColormaps","","",74,null],[12,"XGetScreenSaver","","",74,null],[12,"XGetSelectionOwner","","",74,null],[12,"XGetSizeHints","","",74,null],[12,"XGetStandardColormap","","",74,null],[12,"XGetSubImage","","",74,null],[12,"XGetTextProperty","","",74,null],[12,"XGetTransientForHint","","",74,null],[12,"XGetVisualInfo","","",74,null],[12,"XGetWindowAttributes","","",74,null],[12,"XGetWindowProperty","","",74,null],[12,"XGetWMClientMachine","","",74,null],[12,"XGetWMColormapWindows","","",74,null],[12,"XGetWMHints","","",74,null],[12,"XGetWMIconName","","",74,null],[12,"XGetWMName","","",74,null],[12,"XGetWMNormalHints","","",74,null],[12,"XGetWMProtocols","","",74,null],[12,"XGetWMSizeHints","","",74,null],[12,"XGetZoomHints","","",74,null],[12,"XGrabButton","","",74,null],[12,"XGrabKey","","",74,null],[12,"XGrabKeyboard","","",74,null],[12,"XGrabPointer","","",74,null],[12,"XGrabServer","","",74,null],[12,"XHeightMMOfScreen","","",74,null],[12,"XHeightOfScreen","","",74,null],[12,"XIconifyWindow","","",74,null],[12,"XIfEvent","","",74,null],[12,"XImageByteOrder","","",74,null],[12,"XIMOfIC","","",74,null],[12,"XInitExtension","","",74,null],[12,"XInitImage","","",74,null],[12,"XInitThreads","","",74,null],[12,"XInsertModifiermapEntry","","",74,null],[12,"XInstallColormap","","",74,null],[12,"XInternalConnectionNumbers","","",74,null],[12,"XInternAtom","","",74,null],[12,"XInternAtoms","","",74,null],[12,"XIntersectRegion","","",74,null],[12,"XkbAddDeviceLedInfo","","",74,null],[12,"XkbAddGeomColor","","",74,null],[12,"XkbAddGeomDoodad","","",74,null],[12,"XkbAddGeomKey","","",74,null],[12,"XkbAddGeomKeyAlias","","",74,null],[12,"XkbAddGeomOutline","","",74,null],[12,"XkbAddGeomOverlay","","",74,null],[12,"XkbAddGeomOverlayKey","","",74,null],[12,"XkbAddGeomOverlayRow","","",74,null],[12,"XkbAddGeomProperty","","",74,null],[12,"XkbAddGeomRow","","",74,null],[12,"XkbAddGeomSection","","",74,null],[12,"XkbAddGeomShape","","",74,null],[12,"XkbAddKeyType","","",74,null],[12,"XkbAllocClientMap","","",74,null],[12,"XkbAllocCompatMap","","",74,null],[12,"XkbAllocControls","","",74,null],[12,"XkbAllocDeviceInfo","","",74,null],[12,"XkbAllocGeomColors","","",74,null],[12,"XkbAllocGeomDoodads","","",74,null],[12,"XkbAllocGeometry","","",74,null],[12,"XkbAllocGeomKeyAliases","","",74,null],[12,"XkbAllocGeomKeys","","",74,null],[12,"XkbAllocGeomOutlines","","",74,null],[12,"XkbAllocGeomOverlayKeys","","",74,null],[12,"XkbAllocGeomOverlayRows","","",74,null],[12,"XkbAllocGeomOverlays","","",74,null],[12,"XkbAllocGeomPoints","","",74,null],[12,"XkbAllocGeomProps","","",74,null],[12,"XkbAllocGeomRows","","",74,null],[12,"XkbAllocGeomSectionDoodads","","",74,null],[12,"XkbAllocGeomSections","","",74,null],[12,"XkbAllocGeomShapes","","",74,null],[12,"XkbAllocIndicatorMaps","","",74,null],[12,"XkbAllocKeyboard","","",74,null],[12,"XkbAllocNames","","",74,null],[12,"XkbAllocServerMap","","",74,null],[12,"XkbApplyCompatMapToKey","","",74,null],[12,"XkbApplyVirtualModChanges","","",74,null],[12,"XkbBell","","",74,null],[12,"XkbBellEvent","","",74,null],[12,"XkbChangeDeviceInfo","","",74,null],[12,"XkbChangeEnabledControls","","",74,null],[12,"XkbChangeKeycodeRange","","",74,null],[12,"XkbChangeMap","","",74,null],[12,"XkbChangeNames","","",74,null],[12,"XkbChangeTypesOfKey","","",74,null],[12,"XkbComputeEffectiveMap","","",74,null],[12,"XkbComputeRowBounds","","",74,null],[12,"XkbComputeSectionBounds","","",74,null],[12,"XkbComputeShapeBounds","","",74,null],[12,"XkbComputeShapeTop","","",74,null],[12,"XkbCopyKeyType","","",74,null],[12,"XkbCopyKeyTypes","","",74,null],[12,"XkbDeviceBell","","",74,null],[12,"XkbDeviceBellEvent","","",74,null],[12,"XkbFindOverlayForKey","","",74,null],[12,"XkbForceBell","","",74,null],[12,"XkbForceDeviceBell","","",74,null],[12,"XkbFreeClientMap","","",74,null],[12,"XkbFreeCompatMap","","",74,null],[12,"XkbFreeComponentList","","",74,null],[12,"XkbFreeControls","","",74,null],[12,"XkbFreeDeviceInfo","","",74,null],[12,"XkbFreeGeomColors","","",74,null],[12,"XkbFreeGeomDoodads","","",74,null],[12,"XkbFreeGeometry","","",74,null],[12,"XkbFreeGeomKeyAliases","","",74,null],[12,"XkbFreeGeomKeys","","",74,null],[12,"XkbFreeGeomOutlines","","",74,null],[12,"XkbFreeGeomOverlayKeys","","",74,null],[12,"XkbFreeGeomOverlayRows","","",74,null],[12,"XkbFreeGeomOverlays","","",74,null],[12,"XkbFreeGeomPoints","","",74,null],[12,"XkbFreeGeomProperties","","",74,null],[12,"XkbFreeGeomRows","","",74,null],[12,"XkbFreeGeomSections","","",74,null],[12,"XkbFreeGeomShapes","","",74,null],[12,"XkbFreeIndicatorMaps","","",74,null],[12,"XkbFreeKeyboard","","",74,null],[12,"XkbFreeNames","","",74,null],[12,"XkbFreeServerMap","","",74,null],[12,"XkbGetAutoRepeatRate","","",74,null],[12,"XkbGetAutoResetControls","","",74,null],[12,"XkbGetCompatMap","","",74,null],[12,"XkbGetControls","","",74,null],[12,"XkbGetDetectableAutoRepeat","","",74,null],[12,"XkbGetDeviceButtonActions","","",74,null],[12,"XkbGetDeviceInfo","","",74,null],[12,"XkbGetDeviceInfoChanges","","",74,null],[12,"XkbGetDeviceLedInfo","","",74,null],[12,"XkbGetGeometry","","",74,null],[12,"XkbGetIndicatorMap","","",74,null],[12,"XkbGetIndicatorState","","",74,null],[12,"XkbGetKeyActions","","",74,null],[12,"XkbGetKeyBehaviors","","",74,null],[12,"XkbGetKeyboard","","",74,null],[12,"XkbGetKeyboardByName","","",74,null],[12,"XkbGetKeyExplicitComponents","","",74,null],[12,"XkbGetKeyModifierMap","","",74,null],[12,"XkbGetKeySyms","","",74,null],[12,"XkbGetKeyTypes","","",74,null],[12,"XkbGetKeyVirtualModMap","","",74,null],[12,"XkbGetMap","","",74,null],[12,"XkbGetMapChanges","","",74,null],[12,"XkbGetNamedDeviceIndicator","","",74,null],[12,"XkbGetNamedGeometry","","",74,null],[12,"XkbGetNamedIndicator","","",74,null],[12,"XkbGetNames","","",74,null],[12,"XkbGetPerClientControls","","",74,null],[12,"XkbGetState","","",74,null],[12,"XkbGetUpdatedMap","","",74,null],[12,"XkbGetVirtualMods","","",74,null],[12,"XkbGetXlibControls","","",74,null],[12,"XkbIgnoreExtension","","",74,null],[12,"XkbInitCanonicalKeyTypes","","",74,null],[12,"XkbKeycodeToKeysym","","",74,null],[12,"XkbKeysymToModifiers","","",74,null],[12,"XkbKeyTypesForCoreSymbols","","",74,null],[12,"XkbLatchGroup","","",74,null],[12,"XkbLatchModifiers","","",74,null],[12,"XkbLibraryVersion","","",74,null],[12,"XkbListComponents","","",74,null],[12,"XkbLockGroup","","",74,null],[12,"XkbLockModifiers","","",74,null],[12,"XkbLookupKeyBinding","","",74,null],[12,"XkbLookupKeySym","","",74,null],[12,"XkbNoteControlsChanges","","",74,null],[12,"XkbNoteDeviceChanges","","",74,null],[12,"XkbNoteMapChanges","","",74,null],[12,"XkbNoteNameChanges","","",74,null],[12,"XkbOpenDisplay","","",74,null],[12,"XkbQueryExtension","","",74,null],[12,"XkbRefreshKeyboardMapping","","",74,null],[12,"XkbResizeDeviceButtonActions","","",74,null],[12,"XkbResizeKeyActions","","",74,null],[12,"XkbResizeKeySyms","","",74,null],[12,"XkbResizeKeyType","","",74,null],[12,"XkbSelectEventDetails","","",74,null],[12,"XkbSelectEvents","","",74,null],[12,"XkbSetAtomFuncs","","",74,null],[12,"XkbSetAutoRepeatRate","","",74,null],[12,"XkbSetAutoResetControls","","",74,null],[12,"XkbSetCompatMap","","",74,null],[12,"XkbSetControls","","",74,null],[12,"XkbSetDebuggingFlags","","",74,null],[12,"XkbSetDetectableAutoRepeat","","",74,null],[12,"XkbSetDeviceButtonActions","","",74,null],[12,"XkbSetDeviceInfo","","",74,null],[12,"XkbSetDeviceLedInfo","","",74,null],[12,"XkbSetGeometry","","",74,null],[12,"XkbSetIgnoreLockMods","","",74,null],[12,"XkbSetIndicatorMap","","",74,null],[12,"XkbSetMap","","",74,null],[12,"XkbSetNamedDeviceIndicator","","",74,null],[12,"XkbSetNamedIndicator","","",74,null],[12,"XkbSetNames","","",74,null],[12,"XkbSetPerClientControls","","",74,null],[12,"XkbSetServerInternalMods","","",74,null],[12,"XkbSetXlibControls","","",74,null],[12,"XkbToControl","","",74,null],[12,"XkbTranslateKeyCode","","",74,null],[12,"XkbTranslateKeySym","","",74,null],[12,"XkbUpdateActionVirtualMods","","",74,null],[12,"XkbUpdateKeyTypeVirtualMods","","",74,null],[12,"XkbUpdateMapFromCore","","",74,null],[12,"XkbUseExtension","","",74,null],[12,"XkbVirtualModsToReal","","",74,null],[12,"XkbXlibControlsImplemented","","",74,null],[12,"XKeycodeToKeysym","","",74,null],[12,"XKeysymToKeycode","","",74,null],[12,"XKeysymToString","","",74,null],[12,"XKillClient","","",74,null],[12,"XLastKnownRequestProcessed","","",74,null],[12,"XListDepths","","",74,null],[12,"XListExtensions","","",74,null],[12,"XListFonts","","",74,null],[12,"XListFontsWithInfo","","",74,null],[12,"XListHosts","","",74,null],[12,"XListInstalledColormaps","","",74,null],[12,"XListPixmapFormats","","",74,null],[12,"XListProperties","","",74,null],[12,"XLoadFont","","",74,null],[12,"XLoadQueryFont","","",74,null],[12,"XLocaleOfFontSet","","",74,null],[12,"XLocaleOfIM","","",74,null],[12,"XLocaleOfOM","","",74,null],[12,"XLockDisplay","","",74,null],[12,"XLookupColor","","",74,null],[12,"XLookupKeysym","","",74,null],[12,"XLookupString","","",74,null],[12,"XLowerWindow","","",74,null],[12,"XMapRaised","","",74,null],[12,"XMapSubwindows","","",74,null],[12,"XMapWindow","","",74,null],[12,"XMaskEvent","","",74,null],[12,"XMatchVisualInfo","","",74,null],[12,"XMaxCmapsOfScreen","","",74,null],[12,"XMaxRequestSize","","",74,null],[12,"XmbDrawImageString","","",74,null],[12,"XmbDrawString","","",74,null],[12,"XmbDrawText","","",74,null],[12,"XmbLookupString","","",74,null],[12,"XmbResetIC","","",74,null],[12,"XmbSetWMProperties","","",74,null],[12,"XmbTextEscapement","","",74,null],[12,"XmbTextExtents","","",74,null],[12,"XmbTextListToTextProperty","","",74,null],[12,"XmbTextPerCharExtents","","",74,null],[12,"XmbTextPropertyToTextList","","",74,null],[12,"XMinCmapsOfScreen","","",74,null],[12,"XMoveResizeWindow","","",74,null],[12,"XMoveWindow","","",74,null],[12,"XNewModifiermap","","",74,null],[12,"XNextEvent","","",74,null],[12,"XNextRequest","","",74,null],[12,"XNoOp","","",74,null],[12,"XOffsetRegion","","",74,null],[12,"XOMOfOC","","",74,null],[12,"XOpenDisplay","","",74,null],[12,"XOpenIM","","",74,null],[12,"XOpenOM","","",74,null],[12,"XParseColor","","",74,null],[12,"XParseGeometry","","",74,null],[12,"XPeekEvent","","",74,null],[12,"XPeekIfEvent","","",74,null],[12,"XPending","","",74,null],[12,"Xpermalloc","","",74,null],[12,"XPlanesOfScreen","","",74,null],[12,"XPointInRegion","","",74,null],[12,"XPolygonRegion","","",74,null],[12,"XProcessInternalConnection","","",74,null],[12,"XProtocolRevision","","",74,null],[12,"XProtocolVersion","","",74,null],[12,"XPutBackEvent","","",74,null],[12,"XPutImage","","",74,null],[12,"XPutPixel","","",74,null],[12,"XQLength","","",74,null],[12,"XQueryBestCursor","","",74,null],[12,"XQueryBestSize","","",74,null],[12,"XQueryBestStipple","","",74,null],[12,"XQueryBestTile","","",74,null],[12,"XQueryColor","","",74,null],[12,"XQueryColors","","",74,null],[12,"XQueryExtension","","",74,null],[12,"XQueryFont","","",74,null],[12,"XQueryKeymap","","",74,null],[12,"XQueryPointer","","",74,null],[12,"XQueryTextExtents","","",74,null],[12,"XQueryTextExtents16","","",74,null],[12,"XQueryTree","","",74,null],[12,"XRaiseWindow","","",74,null],[12,"XReadBitmapFile","","",74,null],[12,"XReadBitmapFileData","","",74,null],[12,"XRebindKeysym","","",74,null],[12,"XRecolorCursor","","",74,null],[12,"XReconfigureWMWindow","","",74,null],[12,"XRectInRegion","","",74,null],[12,"XRefreshKeyboardMapping","","",74,null],[12,"XRegisterIMInstantiateCallback","","",74,null],[12,"XRemoveConnectionWatch","","",74,null],[12,"XRemoveFromSaveSet","","",74,null],[12,"XRemoveHost","","",74,null],[12,"XRemoveHosts","","",74,null],[12,"XReparentWindow","","",74,null],[12,"XResetScreenSaver","","",74,null],[12,"XResizeWindow","","",74,null],[12,"XResourceManagerString","","",74,null],[12,"XRestackWindows","","",74,null],[12,"XrmCombineDatabase","","",74,null],[12,"XrmCombineFileDatabase","","",74,null],[12,"XrmDestroyDatabase","","",74,null],[12,"XrmEnumerateDatabase","","",74,null],[12,"XrmGetDatabase","","",74,null],[12,"XrmGetFileDatabase","","",74,null],[12,"XrmGetResource","","",74,null],[12,"XrmGetStringDatabase","","",74,null],[12,"XrmInitialize","","",74,null],[12,"XrmLocaleOfDatabase","","",74,null],[12,"XrmMergeDatabases","","",74,null],[12,"XrmParseCommand","","",74,null],[12,"XrmPermStringToQuark","","",74,null],[12,"XrmPutFileDatabase","","",74,null],[12,"XrmPutLineResource","","",74,null],[12,"XrmPutResource","","",74,null],[12,"XrmPutStringResource","","",74,null],[12,"XrmQGetResource","","",74,null],[12,"XrmQGetSearchList","","",74,null],[12,"XrmQGetSearchResource","","",74,null],[12,"XrmQPutResource","","",74,null],[12,"XrmQPutStringResource","","",74,null],[12,"XrmQuarkToString","","",74,null],[12,"XrmSetDatabase","","",74,null],[12,"XrmStringToBindingQuarkList","","",74,null],[12,"XrmStringToQuark","","",74,null],[12,"XrmStringToQuarkList","","",74,null],[12,"XrmUniqueQuark","","",74,null],[12,"XRootWindow","","",74,null],[12,"XRootWindowOfScreen","","",74,null],[12,"XRotateBuffers","","",74,null],[12,"XRotateWindowProperties","","",74,null],[12,"XSaveContext","","",74,null],[12,"XScreenCount","","",74,null],[12,"XScreenNumberOfScreen","","",74,null],[12,"XScreenOfDisplay","","",74,null],[12,"XScreenResourceString","","",74,null],[12,"XSelectInput","","",74,null],[12,"XSendEvent","","",74,null],[12,"XServerVendor","","",74,null],[12,"XSetAccessControl","","",74,null],[12,"XSetAfterFunction","","",74,null],[12,"XSetArcMode","","",74,null],[12,"XSetAuthorization","","",74,null],[12,"XSetBackground","","",74,null],[12,"XSetClassHint","","",74,null],[12,"XSetClipMask","","",74,null],[12,"XSetClipOrigin","","",74,null],[12,"XSetClipRectangles","","",74,null],[12,"XSetCloseDownMode","","",74,null],[12,"XSetCommand","","",74,null],[12,"XSetDashes","","",74,null],[12,"XSetErrorHandler","","",74,null],[12,"XSetFillRule","","",74,null],[12,"XSetFillStyle","","",74,null],[12,"XSetFont","","",74,null],[12,"XSetFontPath","","",74,null],[12,"XSetForeground","","",74,null],[12,"XSetFunction","","",74,null],[12,"XSetGraphicsExposures","","",74,null],[12,"XSetICFocus","","",74,null],[12,"XSetIconName","","",74,null],[12,"XSetIconSizes","","",74,null],[12,"XSetInputFocus","","",74,null],[12,"XSetIOErrorHandler","","",74,null],[12,"XSetLineAttributes","","",74,null],[12,"XSetLocaleModifiers","","",74,null],[12,"XSetModifierMapping","","",74,null],[12,"XSetNormalHints","","",74,null],[12,"XSetPlaneMask","","",74,null],[12,"XSetPointerMapping","","",74,null],[12,"XSetRegion","","",74,null],[12,"XSetRGBColormaps","","",74,null],[12,"XSetScreenSaver","","",74,null],[12,"XSetSelectionOwner","","",74,null],[12,"XSetSizeHints","","",74,null],[12,"XSetStandardColormap","","",74,null],[12,"XSetStandardProperties","","",74,null],[12,"XSetState","","",74,null],[12,"XSetStipple","","",74,null],[12,"XSetSubwindowMode","","",74,null],[12,"XSetTextProperty","","",74,null],[12,"XSetTile","","",74,null],[12,"XSetTransientForHint","","",74,null],[12,"XSetTSOrigin","","",74,null],[12,"XSetWindowBackground","","",74,null],[12,"XSetWindowBackgroundPixmap","","",74,null],[12,"XSetWindowBorder","","",74,null],[12,"XSetWindowBorderPixmap","","",74,null],[12,"XSetWindowBorderWidth","","",74,null],[12,"XSetWindowColormap","","",74,null],[12,"XSetWMClientMachine","","",74,null],[12,"XSetWMColormapWindows","","",74,null],[12,"XSetWMHints","","",74,null],[12,"XSetWMIconName","","",74,null],[12,"XSetWMName","","",74,null],[12,"XSetWMNormalHints","","",74,null],[12,"XSetWMProperties","","",74,null],[12,"XSetWMProtocols","","",74,null],[12,"XSetWMSizeHints","","",74,null],[12,"XSetZoomHints","","",74,null],[12,"XShrinkRegion","","",74,null],[12,"XStoreBuffer","","",74,null],[12,"XStoreBytes","","",74,null],[12,"XStoreColor","","",74,null],[12,"XStoreColors","","",74,null],[12,"XStoreName","","",74,null],[12,"XStoreNamedColor","","",74,null],[12,"XStringListToTextProperty","","",74,null],[12,"XStringToKeysym","","",74,null],[12,"XSubImage","","",74,null],[12,"XSubtractRegion","","",74,null],[12,"XSupportsLocale","","",74,null],[12,"XSync","","",74,null],[12,"XSynchronize","","",74,null],[12,"XTextExtents","","",74,null],[12,"XTextExtents16","","",74,null],[12,"XTextPropertyToStringList","","",74,null],[12,"XTextWidth","","",74,null],[12,"XTextWidth16","","",74,null],[12,"XTranslateCoordinates","","",74,null],[12,"XUndefineCursor","","",74,null],[12,"XUngrabButton","","",74,null],[12,"XUngrabKey","","",74,null],[12,"XUngrabKeyboard","","",74,null],[12,"XUngrabPointer","","",74,null],[12,"XUngrabServer","","",74,null],[12,"XUninstallColormap","","",74,null],[12,"XUnionRectWithRegion","","",74,null],[12,"XUnionRegion","","",74,null],[12,"XUnloadFont","","",74,null],[12,"XUnlockDisplay","","",74,null],[12,"XUnmapSubwindows","","",74,null],[12,"XUnmapWindow","","",74,null],[12,"XUnregisterIMInstantiateCallback","","",74,null],[12,"XUnsetICFocus","","",74,null],[12,"Xutf8DrawImageString","","",74,null],[12,"Xutf8DrawString","","",74,null],[12,"Xutf8DrawText","","",74,null],[12,"Xutf8LookupString","","",74,null],[12,"Xutf8ResetIC","","",74,null],[12,"Xutf8SetWMProperties","","",74,null],[12,"Xutf8TextEscapement","","",74,null],[12,"Xutf8TextExtents","","",74,null],[12,"Xutf8TextListToTextProperty","","",74,null],[12,"Xutf8TextPerCharExtents","","",74,null],[12,"Xutf8TextPropertyToTextList","","",74,null],[12,"XVendorRelease","","",74,null],[12,"XVisualIDFromVisual","","",74,null],[12,"XWarpPointer","","",74,null],[12,"XwcDrawImageString","","",74,null],[12,"XwcDrawString","","",74,null],[12,"XwcDrawText","","",74,null],[12,"XwcFreeStringList","","",74,null],[12,"XwcLookupString","","",74,null],[12,"XwcResetIC","","",74,null],[12,"XwcTextEscapement","","",74,null],[12,"XwcTextExtents","","",74,null],[12,"XwcTextListToTextProperty","","",74,null],[12,"XwcTextPerCharExtents","","",74,null],[12,"XwcTextPropertyToTextList","","",74,null],[12,"XWhitePixel","","",74,null],[12,"XWhitePixelOfScreen","","",74,null],[12,"XWidthMMOfScreen","","",74,null],[12,"XWidthOfScreen","","",74,null],[12,"XWindowEvent","","",74,null],[12,"XWithdrawWindow","","",74,null],[12,"XWMGeometry","","",74,null],[12,"XWriteBitmapFile","","",74,null],[12,"XXorRegion","","",74,null],[12,"XCreateIC","","",74,null],[12,"XCreateOC","","",74,null],[12,"XGetICValues","","",74,null],[12,"XGetIMValues","","",74,null],[12,"XGetOCValues","","",74,null],[12,"XGetOMValues","","",74,null],[12,"XSetICValues","","",74,null],[12,"XSetIMValues","","",74,null],[12,"XSetOCValues","","",74,null],[12,"XSetOMValues","","",74,null],[12,"XVaCreateNestedList","","",74,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",75,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"window","","",76,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",77,null],[12,"serial","","",77,null],[12,"send_event","","",77,null],[12,"display","","",77,null],[12,"window","","",77,null],[12,"root","","",77,null],[12,"subwindow","","",77,null],[12,"time","","",77,null],[12,"x","","",77,null],[12,"y","","",77,null],[12,"x_root","","",77,null],[12,"y_root","","",77,null],[12,"state","","",77,null],[12,"button","","",77,null],[12,"same_screen","","",77,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",78,null],[12,"serial","","",78,null],[12,"send_event","","",78,null],[12,"display","","",78,null],[12,"event","","",78,null],[12,"window","","",78,null],[12,"place","","",78,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"parent","","",79,null],[12,"window","","",79,null],[12,"place","","",79,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"window","","",80,null],[12,"message_type","","",80,null],[12,"format","","",80,null],[12,"data","","",80,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",81,null],[12,"serial","","",81,null],[12,"send_event","","",81,null],[12,"display","","",81,null],[12,"window","","",81,null],[12,"colormap","","",81,null],[12,"new","","",81,null],[12,"state","","",81,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",82,null],[12,"serial","","",82,null],[12,"send_event","","",82,null],[12,"display","","",82,null],[12,"event","","",82,null],[12,"window","","",82,null],[12,"x","","",82,null],[12,"y","","",82,null],[12,"width","","",82,null],[12,"height","","",82,null],[12,"border_width","","",82,null],[12,"above","","",82,null],[12,"override_redirect","","",82,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",83,null],[12,"serial","","",83,null],[12,"send_event","","",83,null],[12,"display","","",83,null],[12,"parent","","",83,null],[12,"window","","",83,null],[12,"x","","",83,null],[12,"y","","",83,null],[12,"width","","",83,null],[12,"height","","",83,null],[12,"border_width","","",83,null],[12,"above","","",83,null],[12,"detail","","",83,null],[12,"value_mask","","",83,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"parent","","",84,null],[12,"window","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[12,"width","","",84,null],[12,"height","","",84,null],[12,"border_width","","",84,null],[12,"override_redirect","","",84,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",85,null],[12,"serial","","",85,null],[12,"send_event","","",85,null],[12,"display","","",85,null],[12,"window","","",85,null],[12,"root","","",85,null],[12,"subwindow","","",85,null],[12,"time","","",85,null],[12,"x","","",85,null],[12,"y","","",85,null],[12,"x_root","","",85,null],[12,"y_root","","",85,null],[12,"mode","","",85,null],[12,"detail","","",85,null],[12,"same_screen","","",85,null],[12,"focus","","",85,null],[12,"state","","",85,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",86,null],[12,"serial","","",86,null],[12,"send_event","","",86,null],[12,"display","","",86,null],[12,"event","","",86,null],[12,"window","","",86,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",87,null],[12,"display","","",87,null],[12,"resourceid","","",87,null],[12,"serial","","",87,null],[12,"error_code","","",87,null],[12,"request_code","","",87,null],[12,"minor_code","","",87,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",88,null],[12,"serial","","",88,null],[12,"send_event","","",88,null],[12,"display","","",88,null],[12,"window","","",88,null],[12,"x","","",88,null],[12,"y","","",88,null],[12,"width","","",88,null],[12,"height","","",88,null],[12,"count","","",88,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",89,null],[12,"serial","","",89,null],[12,"send_event","","",89,null],[12,"display","","",89,null],[12,"window","","",89,null],[12,"mode","","",89,null],[12,"detail","","",89,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"drawable","","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[12,"width","","",90,null],[12,"height","","",90,null],[12,"count","","",90,null],[12,"major_code","","",90,null],[12,"minor_code","","",90,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"event","","",91,null],[12,"window","","",91,null],[12,"x","","",91,null],[12,"y","","",91,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",92,null],[12,"serial","","",92,null],[12,"send_event","","",92,null],[12,"display","","",92,null],[12,"window","","",92,null],[12,"root","","",92,null],[12,"subwindow","","",92,null],[12,"time","","",92,null],[12,"x","","",92,null],[12,"y","","",92,null],[12,"x_root","","",92,null],[12,"y_root","","",92,null],[12,"state","","",92,null],[12,"keycode","","",92,null],[12,"same_screen","","",92,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",93,null],[12,"serial","","",93,null],[12,"send_event","","",93,null],[12,"display","","",93,null],[12,"window","","",93,null],[12,"key_vector","","",93,null],[3,"XMapEvent","","",null,null],[12,"type_","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"event","","",94,null],[12,"window","","",94,null],[12,"override_redirect","","",94,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",95,null],[12,"serial","","",95,null],[12,"send_event","","",95,null],[12,"display","","",95,null],[12,"event","","",95,null],[12,"request","","",95,null],[12,"first_keycode","","",95,null],[12,"count","","",95,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"parent","","",96,null],[12,"window","","",96,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",97,null],[12,"serial","","",97,null],[12,"send_event","","",97,null],[12,"display","","",97,null],[12,"window","","",97,null],[12,"root","","",97,null],[12,"subwindow","","",97,null],[12,"time","","",97,null],[12,"x","","",97,null],[12,"y","","",97,null],[12,"x_root","","",97,null],[12,"y_root","","",97,null],[12,"state","","",97,null],[12,"is_hint","","",97,null],[12,"same_screen","","",97,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",98,null],[12,"serial","","",98,null],[12,"send_event","","",98,null],[12,"display","","",98,null],[12,"drawable","","",98,null],[12,"major_code","","",98,null],[12,"minor_code","","",98,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",99,null],[12,"serial","","",99,null],[12,"send_event","","",99,null],[12,"display","","",99,null],[12,"window","","",99,null],[12,"atom","","",99,null],[12,"time","","",99,null],[12,"state","","",99,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",100,null],[12,"serial","","",100,null],[12,"send_event","","",100,null],[12,"display","","",100,null],[12,"event","","",100,null],[12,"window","","",100,null],[12,"parent","","",100,null],[12,"x","","",100,null],[12,"y","","",100,null],[12,"override_redirect","","",100,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",101,null],[12,"serial","","",101,null],[12,"send_event","","",101,null],[12,"display","","",101,null],[12,"window","","",101,null],[12,"width","","",101,null],[12,"height","","",101,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",102,null],[12,"serial","","",102,null],[12,"send_event","","",102,null],[12,"display","","",102,null],[12,"window","","",102,null],[12,"selection","","",102,null],[12,"time","","",102,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",103,null],[12,"serial","","",103,null],[12,"send_event","","",103,null],[12,"display","","",103,null],[12,"requestor","","",103,null],[12,"selection","","",103,null],[12,"target","","",103,null],[12,"property","","",103,null],[12,"time","","",103,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",104,null],[12,"serial","","",104,null],[12,"send_event","","",104,null],[12,"display","","",104,null],[12,"owner","","",104,null],[12,"requestor","","",104,null],[12,"selection","","",104,null],[12,"target","","",104,null],[12,"property","","",104,null],[12,"time","","",104,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",105,null],[12,"serial","","",105,null],[12,"send_event","","",105,null],[12,"display","","",105,null],[12,"event","","",105,null],[12,"window","","",105,null],[12,"from_configure","","",105,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",106,null],[12,"serial","","",106,null],[12,"send_event","","",106,null],[12,"display","","",106,null],[12,"window","","",106,null],[12,"state","","",106,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",107,null],[12,"groups","","",107,null],[12,"num_si","","",107,null],[12,"size_si","","",107,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",108,null],[12,"flags","","",108,null],[12,"device_spec","","",108,null],[12,"min_key_code","","",108,null],[12,"max_key_code","","",108,null],[12,"ctrls","","",108,null],[12,"server","","",108,null],[12,"map","","",108,null],[12,"indicators","","",108,null],[12,"names","","",108,null],[12,"compat","","",108,null],[12,"geom","","",108,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",109,null],[12,"maps","","",109,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",110,null],[12,"alias","","",110,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",111,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",112,null],[12,"geometry","","",112,null],[12,"symbols","","",112,null],[12,"types","","",112,null],[12,"compat","","",112,null],[12,"vmods","","",112,null],[12,"indicators","","",112,null],[12,"groups","","",112,null],[12,"keys","","",112,null],[12,"key_aliases","","",112,null],[12,"radio_groups","","",112,null],[12,"phys_symbols","","",112,null],[12,"num_keys","","",112,null],[12,"num_key_aliases","","",112,null],[12,"num_rg","","",112,null],[3,"Depth","","",null,null],[12,"depth","","",113,null],[12,"nvisuals","","",113,null],[12,"visuals","","",113,null],[3,"Screen","","",null,null],[12,"ext_data","","",114,null],[12,"display","","",114,null],[12,"root","","",114,null],[12,"width","","",114,null],[12,"height","","",114,null],[12,"mwidth","","",114,null],[12,"mheight","","",114,null],[12,"ndepths","","",114,null],[12,"depths","","",114,null],[12,"root_depth","","",114,null],[12,"root_visual","","",114,null],[12,"default_gc","","",114,null],[12,"cmap","","",114,null],[12,"white_pixel","","",114,null],[12,"black_pixel","","",114,null],[12,"max_maps","","",114,null],[12,"min_maps","","",114,null],[12,"backing_store","","",114,null],[12,"save_unders","","",114,null],[12,"root_input_mask","","",114,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",115,null],[12,"depth","","",115,null],[12,"bits_per_pixel","","",115,null],[12,"scanline_pad","","",115,null],[3,"Visual","","",null,null],[12,"ext_data","","",116,null],[12,"visualid","","",116,null],[12,"class","","",116,null],[12,"red_mask","","",116,null],[12,"green_mask","","",116,null],[12,"blue_mask","","",116,null],[12,"bits_per_rgb","","",116,null],[12,"map_entries","","",116,null],[3,"XArc","","",null,null],[12,"x","","",117,null],[12,"y","","",117,null],[12,"width","","",117,null],[12,"height","","",117,null],[12,"angle1","","",117,null],[12,"angle2","","",117,null],[3,"XChar2b","","",null,null],[12,"byte1","","",118,null],[12,"byte2","","",118,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",119,null],[12,"rbearing","","",119,null],[12,"width","","",119,null],[12,"ascent","","",119,null],[12,"descent","","",119,null],[12,"attributes","","",119,null],[3,"XClassHint","","",null,null],[12,"res_name","","",120,null],[12,"res_class","","",120,null],[3,"XColor","","",null,null],[12,"pixel","","",121,null],[12,"red","","",121,null],[12,"green","","",121,null],[12,"blue","","",121,null],[12,"flags","","",121,null],[12,"pad","","",121,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",122,null],[12,"chars_matched","","",122,null],[3,"XExtCodes","","",null,null],[12,"extension","","",123,null],[12,"major_opcode","","",123,null],[12,"first_event","","",123,null],[12,"first_error","","",123,null],[3,"XExtData","","",null,null],[12,"number","","",124,null],[12,"next","","",124,null],[12,"free_private","","",124,null],[12,"private_data","","",124,null],[3,"XFontProp","","",null,null],[12,"name","","",125,null],[12,"card32","","",125,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",126,null],[12,"max_logical_extent","","",126,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",127,null],[12,"fid","","",127,null],[12,"direction","","",127,null],[12,"min_char_or_byte2","","",127,null],[12,"max_char_or_byte2","","",127,null],[12,"min_byte1","","",127,null],[12,"max_byte1","","",127,null],[12,"all_chars_exist","","",127,null],[12,"default_char","","",127,null],[12,"n_properties","","",127,null],[12,"properties","","",127,null],[12,"min_bounds","","",127,null],[12,"max_bounds","","",127,null],[12,"per_char","","",127,null],[12,"ascent","","",127,null],[12,"descent","","",127,null],[3,"XGCValues","","",null,null],[12,"function","","",128,null],[12,"plane_mask","","",128,null],[12,"foreground","","",128,null],[12,"background","","",128,null],[12,"line_width","","",128,null],[12,"line_style","","",128,null],[12,"cap_style","","",128,null],[12,"join_style","","",128,null],[12,"fill_style","","",128,null],[12,"fill_rule","","",128,null],[12,"arc_mode","","",128,null],[12,"tile","","",128,null],[12,"stipple","","",128,null],[12,"ts_x_origin","","",128,null],[12,"ts_y_origin","","",128,null],[12,"font","","",128,null],[12,"subwindow_mode","","",128,null],[12,"graphics_exposures","","",128,null],[12,"clip_x_origin","","",128,null],[12,"clip_y_origin","","",128,null],[12,"clip_mask","","",128,null],[12,"dash_offset","","",128,null],[12,"dashes","","",128,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",129,null],[12,"serial","","",129,null],[12,"send_event","","",129,null],[12,"display","","",129,null],[12,"extension","","",129,null],[12,"evtype","","",129,null],[12,"cookie","","",129,null],[12,"data","","",129,null],[3,"XHostAddress","","",null,null],[12,"family","","",130,null],[12,"length","","",130,null],[12,"address","","",130,null],[3,"XIconSize","","",null,null],[12,"min_width","","",131,null],[12,"min_height","","",131,null],[12,"max_width","","",131,null],[12,"max_height","","",131,null],[12,"width_inc","","",131,null],[12,"height_inc","","",131,null],[3,"XImage","","",null,null],[12,"width","","",132,null],[12,"height","","",132,null],[12,"xoffset","","",132,null],[12,"format","","",132,null],[12,"data","","",132,null],[12,"byte_order","","",132,null],[12,"bitmap_unit","","",132,null],[12,"bitmap_bit_order","","",132,null],[12,"bitmap_pad","","",132,null],[12,"depth","","",132,null],[12,"bytes_per_line","","",132,null],[12,"bits_per_pixel","","",132,null],[12,"red_mask","","",132,null],[12,"green_mask","","",132,null],[12,"blue_mask","","",132,null],[12,"obdata","","",132,null],[12,"funcs","","",132,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",133,null],[12,"bell_percent","","",133,null],[12,"bell_pitch","","",133,null],[12,"bell_duration","","",133,null],[12,"led","","",133,null],[12,"led_mode","","",133,null],[12,"key","","",133,null],[12,"auto_repeat_mode","","",133,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",134,null],[12,"bell_percent","","",134,null],[12,"bell_pitch","","",134,null],[12,"bell_duration","","",134,null],[12,"led_mask","","",134,null],[12,"global_auto_repeat","","",134,null],[12,"auto_repeats","","",134,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",135,null],[12,"nchars","","",135,null],[12,"delta","","",135,null],[12,"font_set","","",135,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",136,null],[12,"modifiermap","","",136,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",137,null],[12,"charset_list","","",137,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",138,null],[12,"bits_per_pixel","","",138,null],[12,"scanline_pad","","",138,null],[3,"XPoint","","",null,null],[12,"x","","",139,null],[12,"y","","",139,null],[3,"XRectangle","","",null,null],[12,"x","","",140,null],[12,"y","","",140,null],[12,"width","","",140,null],[12,"height","","",140,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",141,null],[12,"specifier","","",141,null],[12,"argKind","","",141,null],[12,"value","","",141,null],[3,"XrmValue","","",null,null],[12,"size","","",142,null],[12,"addr","","",142,null],[3,"XSegment","","",null,null],[12,"x1","","",143,null],[12,"y1","","",143,null],[12,"x2","","",143,null],[12,"y2","","",143,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",144,null],[12,"background_pixel","","",144,null],[12,"border_pixmap","","",144,null],[12,"border_pixel","","",144,null],[12,"bit_gravity","","",144,null],[12,"win_gravity","","",144,null],[12,"backing_store","","",144,null],[12,"backing_planes","","",144,null],[12,"backing_pixel","","",144,null],[12,"save_under","","",144,null],[12,"event_mask","","",144,null],[12,"do_not_propagate_mask","","",144,null],[12,"override_redirect","","",144,null],[12,"colormap","","",144,null],[12,"cursor","","",144,null],[3,"XSizeHints","","",null,null],[12,"flags","","",145,null],[12,"x","","",145,null],[12,"y","","",145,null],[12,"width","","",145,null],[12,"height","","",145,null],[12,"min_width","","",145,null],[12,"min_height","","",145,null],[12,"max_width","","",145,null],[12,"max_height","","",145,null],[12,"width_inc","","",145,null],[12,"height_inc","","",145,null],[12,"min_aspect","","",145,null],[12,"max_aspect","","",145,null],[12,"base_width","","",145,null],[12,"base_height","","",145,null],[12,"win_gravity","","",145,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",146,null],[12,"red_max","","",146,null],[12,"red_mult","","",146,null],[12,"green_max","","",146,null],[12,"green_mult","","",146,null],[12,"blue_max","","",146,null],[12,"blue_mult","","",146,null],[12,"base_pixel","","",146,null],[12,"visualid","","",146,null],[12,"killid","","",146,null],[3,"XTextItem","","",null,null],[12,"chars","","",147,null],[12,"nchars","","",147,null],[12,"delta","","",147,null],[12,"font","","",147,null],[3,"XTextItem16","","",null,null],[12,"chars","","",148,null],[12,"nchars","","",148,null],[12,"delta","","",148,null],[12,"font","","",148,null],[3,"XTextProperty","","",null,null],[12,"value","","",149,null],[12,"encoding","","",149,null],[12,"format","","",149,null],[12,"nitems","","",149,null],[3,"XTimeCoord","","",null,null],[12,"time","","",150,null],[12,"x","","",150,null],[12,"y","","",150,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",151,null],[12,"visualid","","",151,null],[12,"screen","","",151,null],[12,"depth","","",151,null],[12,"class","","",151,null],[12,"red_mask","","",151,null],[12,"green_mask","","",151,null],[12,"blue_mask","","",151,null],[12,"colormap_size","","",151,null],[12,"bits_per_rgb","","",151,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",152,null],[12,"nchars","","",152,null],[12,"delta","","",152,null],[12,"font_set","","",152,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",153,null],[12,"y","","",153,null],[12,"width","","",153,null],[12,"height","","",153,null],[12,"border_width","","",153,null],[12,"depth","","",153,null],[12,"visual","","",153,null],[12,"root","","",153,null],[12,"class","","",153,null],[12,"bit_gravity","","",153,null],[12,"win_gravity","","",153,null],[12,"backing_store","","",153,null],[12,"backing_planes","","",153,null],[12,"backing_pixel","","",153,null],[12,"save_under","","",153,null],[12,"colormap","","",153,null],[12,"map_installed","","",153,null],[12,"map_state","","",153,null],[12,"all_event_masks","","",153,null],[12,"your_event_mask","","",153,null],[12,"do_not_propagate_mask","","",153,null],[12,"override_redirect","","",153,null],[12,"screen","","",153,null],[3,"XWindowChanges","","",null,null],[12,"x","","",154,null],[12,"y","","",154,null],[12,"width","","",154,null],[12,"height","","",154,null],[12,"border_width","","",154,null],[12,"sibling","","",154,null],[12,"stack_mode","","",154,null],[3,"XWMHints","","",null,null],[12,"flags","","",155,null],[12,"input","","",155,null],[12,"initial_state","","",155,null],[12,"icon_pixmap","","",155,null],[12,"icon_window","","",155,null],[12,"icon_x","","",155,null],[12,"icon_y","","",155,null],[12,"icon_mask","","",155,null],[12,"window_group","","",155,null],[3,"AspectRatio","","",null,null],[12,"x","","",156,null],[12,"y","","",156,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",157,null],[12,"destroy_image","","",157,null],[12,"get_pixel","","",157,null],[12,"put_pixel","","",157,null],[12,"sub_image","","",157,null],[12,"add_pixel","","",157,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[11,"open","","",74,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"clone","","",75,null],[11,"get_type","","",75,null],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",76,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",76,{"inputs":[{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",77,{"inputs":[{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",78,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",78,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",79,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",79,{"inputs":[{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",80,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",80,{"inputs":[{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",81,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",81,{"inputs":[{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",82,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",82,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",83,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",83,{"inputs":[{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",84,{"inputs":[{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",85,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",85,{"inputs":[{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",86,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",86,{"inputs":[{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",87,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",87,{"inputs":[{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",88,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",88,{"inputs":[{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",89,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",89,{"inputs":[{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xevent"}}],[11,"from","","",129,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",129,{"inputs":[{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",90,{"inputs":[{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",91,{"inputs":[{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",92,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",92,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",93,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",93,{"inputs":[{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",94,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",94,{"inputs":[{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",95,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",95,{"inputs":[{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",96,{"inputs":[{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",97,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",97,{"inputs":[{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",98,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",98,{"inputs":[{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",99,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",99,{"inputs":[{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",100,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",100,{"inputs":[{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",101,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",101,{"inputs":[{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",102,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",102,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",103,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",103,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",104,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",104,{"inputs":[{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",105,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",105,{"inputs":[{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"as_mut","","",75,null],[11,"as_ref","","",75,null],[11,"from","","",75,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",75,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"from","","",106,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",106,{"inputs":[{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"clone","","",84,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"clone","","",85,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"clone","","",87,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"clone","","",89,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"clone","","",90,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"clone","","",92,null],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"clone","","",94,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"clone","","",95,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"clone","","",96,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"clone","","",97,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"clone","","",99,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"clone","","",101,null],[11,"eq","","",102,null],[11,"ne","","",102,null],[11,"clone","","",102,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"clone","","",103,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"clone","","",104,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"eq","","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"eq","","",113,null],[11,"ne","","",113,null],[11,"clone","","",113,null],[11,"eq","","",114,null],[11,"ne","","",114,null],[11,"clone","","",114,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"clone","","",115,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"eq","","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"clone","","",121,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"eq","","",126,null],[11,"ne","","",126,null],[11,"clone","","",126,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"clone","","",127,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"clone","","",128,null],[11,"eq","","",129,null],[11,"ne","","",129,null],[11,"clone","","",129,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"clone","","",131,null],[11,"eq","","",132,null],[11,"ne","","",132,null],[11,"clone","","",132,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"clone","","",133,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"eq","","",138,null],[11,"ne","","",138,null],[11,"clone","","",138,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"clone","","",141,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"clone","","",142,null],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"clone","","",143,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"clone","","",144,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"clone","","",146,null],[11,"eq","","",147,null],[11,"ne","","",147,null],[11,"clone","","",147,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"clone","","",148,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"clone","","",149,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"clone","","",150,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"clone","","",151,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"clone","","",152,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"clone","","",153,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"clone","","",154,null],[11,"eq","","",155,null],[11,"ne","","",155,null],[11,"clone","","",155,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"clone","","",156,null],[11,"eq","","",158,null],[11,"ne","","",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"clone","","",158,null],[11,"as_bytes","","",158,null],[11,"as_bytes_mut","","",158,null],[11,"as_longs","","",158,null],[11,"as_longs_mut","","",158,null],[11,"as_shorts","","",158,null],[11,"as_shorts_mut","","",158,null],[11,"get_byte","","",158,null],[11,"get_long","","",158,null],[11,"get_short","","",158,null],[11,"new","","",158,{"inputs":[],"output":{"name":"clientmessagedata"}}],[11,"set_byte","","",158,null],[11,"set_long","","",158,null],[11,"set_short","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"as_mut","","",158,null],[11,"as_ref","","",158,null],[11,"from","","",158,null],[11,"clone","","",157,null],[11,"eq","","",157,null],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",159,null],[12,"XmuAddInitializer","","",159,null],[12,"XmuAllStandardColormaps","","",159,null],[12,"XmuAppendSegment","","",159,null],[12,"XmuAreaAnd","","",159,null],[12,"XmuAreaCopy","","",159,null],[12,"XmuAreaDup","","",159,null],[12,"XmuAreaNot","","",159,null],[12,"XmuAreaOrXor","","",159,null],[12,"XmuCallInitializers","","",159,null],[12,"XmuClientWindow","","",159,null],[12,"XmuCompareISOLatin1","","",159,null],[12,"XmuConvertStandardSelection","","",159,null],[12,"XmuCopyISOLatin1Lowered","","",159,null],[12,"XmuCopyISOLatin1Uppered","","",159,null],[12,"XmuCreateColormap","","",159,null],[12,"XmuCreatePixmapFromBitmap","","",159,null],[12,"XmuCreateStippledPixmap","","",159,null],[12,"XmuCursorNameToIndex","","",159,null],[12,"XmuCvtBackingStoreToString","","",159,null],[12,"XmuCvtFunctionToCallback","","",159,null],[12,"XmuCvtGravityToString","","",159,null],[12,"XmuCvtJustifyToString","","",159,null],[12,"XmuCvtLongToString","","",159,null],[12,"XmuCvtOrientationToString","","",159,null],[12,"XmuCvtShapeStyleToString","","",159,null],[12,"XmuCvtStringToBackingStore","","",159,null],[12,"XmuCvtStringToBitmap","","",159,null],[12,"XmuCvtStringToColorCursor","","",159,null],[12,"XmuCvtStringToCursor","","",159,null],[12,"XmuCvtStringToGravity","","",159,null],[12,"XmuCvtStringToJustify","","",159,null],[12,"XmuCvtStringToLong","","",159,null],[12,"XmuCvtStringToOrientation","","",159,null],[12,"XmuCvtStringToShapeStyle","","",159,null],[12,"XmuCvtStringToWidget","","",159,null],[12,"XmuCvtWidgetToString","","",159,null],[12,"XmuDeleteStandardColormap","","",159,null],[12,"XmuDestroyScanlineList","","",159,null],[12,"XmuDestroySegmentList","","",159,null],[12,"XmuDistinguishableColors","","",159,null],[12,"XmuDistinguishablePixels","","",159,null],[12,"XmuDQAddDisplay","","",159,null],[12,"XmuDQCreate","","",159,null],[12,"XmuDQDestroy","","",159,null],[12,"XmuDQLookupDisplay","","",159,null],[12,"XmuDQRemoveDisplay","","",159,null],[12,"XmuDrawLogo","","",159,null],[12,"XmuDrawRoundedRectangle","","",159,null],[12,"XmuFillRoundedRectangle","","",159,null],[12,"XmuGetAtomName","","",159,null],[12,"XmuGetColormapAllocation","","",159,null],[12,"XmuGetHostname","","",159,null],[12,"XmuInternAtom","","",159,null],[12,"XmuInternStrings","","",159,null],[12,"XmuLocateBitmapFile","","",159,null],[12,"XmuLocatePixmapFile","","",159,null],[12,"XmuLookupAPL","","",159,null],[12,"XmuLookupArabic","","",159,null],[12,"XmuLookupCloseDisplayHook","","",159,null],[12,"XmuLookupCyrillic","","",159,null],[12,"XmuLookupGreek","","",159,null],[12,"XmuLookupHebrew","","",159,null],[12,"XmuLookupJISX0201","","",159,null],[12,"XmuLookupKana","","",159,null],[12,"XmuLookupLatin1","","",159,null],[12,"XmuLookupLatin2","","",159,null],[12,"XmuLookupLatin3","","",159,null],[12,"XmuLookupLatin4","","",159,null],[12,"XmuLookupStandardColormap","","",159,null],[12,"XmuLookupString","","",159,null],[12,"XmuMakeAtom","","",159,null],[12,"XmuNameOfAtom","","",159,null],[12,"XmuNCopyISOLatin1Lowered","","",159,null],[12,"XmuNCopyISOLatin1Uppered","","",159,null],[12,"XmuNewArea","","",159,null],[12,"XmuNewCvtStringToWidget","","",159,null],[12,"XmuNewScanline","","",159,null],[12,"XmuNewSegment","","",159,null],[12,"XmuOptimizeArea","","",159,null],[12,"XmuOptimizeScanline","","",159,null],[12,"XmuPrintDefaultErrorMessage","","",159,null],[12,"XmuReadBitmapData","","",159,null],[12,"XmuReadBitmapDataFromFile","","",159,null],[12,"XmuRegisterExternalAgent","","",159,null],[12,"XmuReleaseStippledPixmap","","",159,null],[12,"XmuRemoveCloseDisplayHook","","",159,null],[12,"XmuReshapeWidget","","",159,null],[12,"XmuScanlineAnd","","",159,null],[12,"XmuScanlineAndSegment","","",159,null],[12,"XmuScanlineCopy","","",159,null],[12,"XmuScanlineEqu","","",159,null],[12,"XmuScanlineNot","","",159,null],[12,"XmuScanlineOr","","",159,null],[12,"XmuScanlineOrSegment","","",159,null],[12,"XmuScanlineXor","","",159,null],[12,"XmuScanlineXorSegment","","",159,null],[12,"XmuScreenOfWindow","","",159,null],[12,"XmuSimpleErrorHandler","","",159,null],[12,"XmuStandardColormap","","",159,null],[12,"XmuUpdateMapHints","","",159,null],[12,"XmuValidArea","","",159,null],[12,"XmuValidScanline","","",159,null],[12,"XmuVisualStandardColormaps","","",159,null],[12,"XmuWnCountOwnedResources","","",159,null],[12,"XmuWnFetchResources","","",159,null],[12,"XmuWnInitializeNodes","","",159,null],[12,"XmuWnNameToNode","","",159,null],[12,"XmuSnprintf","","",159,null],[12,"_XA_ATOM_PAIR","","",159,null],[12,"_XA_CHARACTER_POSITION","","",159,null],[12,"_XA_CLASS","","",159,null],[12,"_XA_CLIENT_WINDOW","","",159,null],[12,"_XA_CLIPBOARD","","",159,null],[12,"_XA_COMPOUND_TEXT","","",159,null],[12,"_XA_DECNET_ADDRESS","","",159,null],[12,"_XA_DELETE","","",159,null],[12,"_XA_FILENAME","","",159,null],[12,"_XA_HOSTNAME","","",159,null],[12,"_XA_IP_ADDRESS","","",159,null],[12,"_XA_LENGTH","","",159,null],[12,"_XA_LIST_LENGTH","","",159,null],[12,"_XA_NAME","","",159,null],[12,"_XA_NET_ADDRESS","","",159,null],[12,"_XA_NULL","","",159,null],[12,"_XA_OWNER_OS","","",159,null],[12,"_XA_SPAN","","",159,null],[12,"_XA_TARGETS","","",159,null],[12,"_XA_TEXT","","",159,null],[12,"_XA_TIMESTAMP","","",159,null],[12,"_XA_USER","","",159,null],[12,"_XA_UTF8_STRING","","",159,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",159,{"inputs":[],"output":{"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",160,null],[12,"XRecordCreateContext","","",160,null],[12,"XRecordDisableContext","","",160,null],[12,"XRecordEnableContext","","",160,null],[12,"XRecordEnableContextAsync","","",160,null],[12,"XRecordFreeContext","","",160,null],[12,"XRecordFreeData","","",160,null],[12,"XRecordFreeState","","",160,null],[12,"XRecordGetContext","","",160,null],[12,"XRecordIdBaseMask","","",160,null],[12,"XRecordProcessReplies","","",160,null],[12,"XRecordQueryVersion","","",160,null],[12,"XRecordRegisterClients","","",160,null],[12,"XRecordUnregisterClients","","",160,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",161,null],[12,"nranges","","",161,null],[12,"ranges","","",161,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",162,null],[12,"ext_minor","","",162,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",163,null],[12,"server_time","","",163,null],[12,"client_seq","","",163,null],[12,"category","","",163,null],[12,"client_swapped","","",163,null],[12,"data","","",163,null],[12,"data_len","","",163,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",164,null],[12,"core_replies","","",164,null],[12,"ext_requests","","",164,null],[12,"ext_replies","","",164,null],[12,"delivered_events","","",164,null],[12,"device_events","","",164,null],[12,"errors","","",164,null],[12,"client_started","","",164,null],[12,"client_died","","",164,null],[3,"XRecordRange8","","",null,null],[12,"first","","",165,null],[12,"last","","",165,null],[3,"XRecordRange16","","",null,null],[12,"first","","",166,null],[12,"last","","",166,null],[3,"XRecordState","","",null,null],[12,"enabled","","",167,null],[12,"datum_flags","","",167,null],[12,"nclients","","",167,null],[12,"client_info","","",167,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[17,"XRecordFromServerTime","","",null,null],[17,"XRecordFromClientTime","","",null,null],[17,"XRecordFromClientSequence","","",null,null],[17,"XRecordCurrentClients","","",null,null],[17,"XRecordFutureClients","","",null,null],[17,"XRecordAllClients","","",null,null],[17,"XRecordFromServer","","",null,null],[17,"XRecordFromClient","","",null,null],[17,"XRecordClientStarted","","",null,null],[17,"XRecordClientDied","","",null,null],[17,"XRecordStartOfData","","",null,null],[17,"XRecordEndOfData","","",null,null],[11,"open","","",160,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",161,null],[11,"ne","","",161,null],[11,"clone","","",161,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"clone","","",162,null],[11,"eq","","",163,null],[11,"ne","","",163,null],[11,"clone","","",163,null],[11,"eq","","",164,null],[11,"ne","","",164,null],[11,"clone","","",164,null],[11,"eq","","",165,null],[11,"ne","","",165,null],[11,"clone","","",165,null],[11,"eq","","",166,null],[11,"ne","","",166,null],[11,"clone","","",166,null],[11,"eq","","",167,null],[11,"ne","","",167,null],[11,"clone","","",167,null],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",168,null],[12,"XRenderAddTraps","","",168,null],[12,"XRenderChangePicture","","",168,null],[12,"XRenderComposite","","",168,null],[12,"XRenderCompositeDoublePoly","","",168,null],[12,"XRenderCompositeString16","","",168,null],[12,"XRenderCompositeString32","","",168,null],[12,"XRenderCompositeString8","","",168,null],[12,"XRenderCompositeText16","","",168,null],[12,"XRenderCompositeText32","","",168,null],[12,"XRenderCompositeText8","","",168,null],[12,"XRenderCompositeTrapezoids","","",168,null],[12,"XRenderCompositeTriangles","","",168,null],[12,"XRenderCompositeTriFan","","",168,null],[12,"XRenderCompositeTriStrip","","",168,null],[12,"XRenderCreateAnimCursor","","",168,null],[12,"XRenderCreateConicalGradient","","",168,null],[12,"XRenderCreateCursor","","",168,null],[12,"XRenderCreateGlyphSet","","",168,null],[12,"XRenderCreateLinearGradient","","",168,null],[12,"XRenderCreatePicture","","",168,null],[12,"XRenderCreateRadialGradient","","",168,null],[12,"XRenderCreateSolidFill","","",168,null],[12,"XRenderFillRectangle","","",168,null],[12,"XRenderFillRectangles","","",168,null],[12,"XRenderFindFormat","","",168,null],[12,"XRenderFindStandardFormat","","",168,null],[12,"XRenderFindVisualFormat","","",168,null],[12,"XRenderFreeGlyphs","","",168,null],[12,"XRenderFreeGlyphSet","","",168,null],[12,"XRenderFreePicture","","",168,null],[12,"XRenderParseColor","","",168,null],[12,"XRenderQueryExtension","","",168,null],[12,"XRenderQueryFilters","","",168,null],[12,"XRenderQueryFormats","","",168,null],[12,"XRenderQueryPictIndexValues","","",168,null],[12,"XRenderQuerySubpixelOrder","","",168,null],[12,"XRenderQueryVersion","","",168,null],[12,"XRenderReferenceGlyphSet","","",168,null],[12,"XRenderSetPictureClipRectangles","","",168,null],[12,"XRenderSetPictureClipRegion","","",168,null],[12,"XRenderSetPictureFilter","","",168,null],[12,"XRenderSetPictureTransform","","",168,null],[12,"XRenderSetSubpixelOrder","","",168,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",169,null],[12,"delay","","",169,null],[3,"_XCircle","","",null,null],[12,"x","","",170,null],[12,"y","","",170,null],[12,"radius","","",170,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",171,null],[12,"angle","","",171,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",172,null],[12,"filter","","",172,null],[12,"nalias","","",172,null],[12,"alias","","",172,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",173,null],[12,"chars","","",173,null],[12,"nchars","","",173,null],[12,"xOff","","",173,null],[12,"yOff","","",173,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",174,null],[12,"chars","","",174,null],[12,"nchars","","",174,null],[12,"xOff","","",174,null],[12,"yOff","","",174,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",175,null],[12,"chars","","",175,null],[12,"nchars","","",175,null],[12,"xOff","","",175,null],[12,"yOff","","",175,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",176,null],[12,"height","","",176,null],[12,"x","","",176,null],[12,"y","","",176,null],[12,"xOff","","",176,null],[12,"yOff","","",176,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",177,null],[12,"red","","",177,null],[12,"green","","",177,null],[12,"blue","","",177,null],[12,"alpha","","",177,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",178,null],[12,"p2","","",178,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",179,null],[12,"p2","","",179,null],[3,"_XPointDouble","","",null,null],[12,"x","","",180,null],[12,"y","","",180,null],[3,"_XPointFixed","","",null,null],[12,"x","","",181,null],[12,"y","","",181,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",182,null],[12,"outer","","",182,null],[3,"XRenderColor","","",null,null],[12,"red","","",183,null],[12,"green","","",183,null],[12,"blue","","",183,null],[12,"alpha","","",183,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",184,null],[12,"redMask","","",184,null],[12,"green","","",184,null],[12,"greenMask","","",184,null],[12,"blue","","",184,null],[12,"blueMask","","",184,null],[12,"alpha","","",184,null],[12,"alphaMask","","",184,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",185,null],[12,"type_","","",185,null],[12,"depth","","",185,null],[12,"direct","","",185,null],[12,"colormap","","",185,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",186,null],[12,"alpha_map","","",186,null],[12,"alpha_x_origin","","",186,null],[12,"alpha_y_origin","","",186,null],[12,"clip_x_origin","","",186,null],[12,"clip_y_origin","","",186,null],[12,"clip_mask","","",186,null],[12,"graphics_exposures","","",186,null],[12,"subwindow_mode","","",186,null],[12,"poly_edge","","",186,null],[12,"poly_mode","","",186,null],[12,"dither","","",186,null],[12,"component_alpha","","",186,null],[3,"_XSpanFix","","",null,null],[12,"left","","",187,null],[12,"right","","",187,null],[12,"y","","",187,null],[3,"_XTrap","","",null,null],[12,"top","","",188,null],[12,"bottom","","",188,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",189,null],[12,"bottom","","",189,null],[12,"left","","",189,null],[12,"right","","",189,null],[3,"_XTriangle","","",null,null],[12,"p1","","",190,null],[12,"p2","","",190,null],[12,"p3","","",190,null],[3,"_XTransform","","",null,null],[12,"matrix","","",191,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[17,"PictFormatID","","",null,null],[17,"PictFormatType","","",null,null],[17,"PictFormatDepth","","",null,null],[17,"PictFormatRed","","",null,null],[17,"PictFormatRedMask","","",null,null],[17,"PictFormatGreen","","",null,null],[17,"PictFormatGreenMask","","",null,null],[17,"PictFormatBlue","","",null,null],[17,"PictFormatBlueMask","","",null,null],[17,"PictFormatAlpha","","",null,null],[17,"PictFormatAlphaMask","","",null,null],[17,"PictFormatColormap","","",null,null],[17,"BadPictFormat","","",null,null],[17,"BadPicture","","",null,null],[17,"BadPictOp","","",null,null],[17,"BadGlyphSet","","",null,null],[17,"BadGlyph","","",null,null],[17,"RenderNumberErrors","","",null,null],[17,"PictTypeIndexed","","",null,null],[17,"PictTypeDirect","","",null,null],[17,"PictOpMinimum","","",null,null],[17,"PictOpClear","","",null,null],[17,"PictOpSrc","","",null,null],[17,"PictOpDst","","",null,null],[17,"PictOpOver","","",null,null],[17,"PictOpOverReverse","","",null,null],[17,"PictOpIn","","",null,null],[17,"PictOpInReverse","","",null,null],[17,"PictOpOut","","",null,null],[17,"PictOpOutReverse","","",null,null],[17,"PictOpAtop","","",null,null],[17,"PictOpAtopReverse","","",null,null],[17,"PictOpXor","","",null,null],[17,"PictOpAdd","","",null,null],[17,"PictOpSaturate","","",null,null],[17,"PictOpMaximum","","",null,null],[17,"PictOpDisjointMinimum","","",null,null],[17,"PictOpDisjointClear","","",null,null],[17,"PictOpDisjointSrc","","",null,null],[17,"PictOpDisjointDst","","",null,null],[17,"PictOpDisjointOver","","",null,null],[17,"PictOpDisjointOverReverse","","",null,null],[17,"PictOpDisjointIn","","",null,null],[17,"PictOpDisjointInReverse","","",null,null],[17,"PictOpDisjointOut","","",null,null],[17,"PictOpDisjointOutReverse","","",null,null],[17,"PictOpDisjointAtop","","",null,null],[17,"PictOpDisjointAtopReverse","","",null,null],[17,"PictOpDisjointXor","","",null,null],[17,"PictOpDisjointMaximum","","",null,null],[17,"PictOpConjointMinimum","","",null,null],[17,"PictOpConjointClear","","",null,null],[17,"PictOpConjointSrc","","",null,null],[17,"PictOpConjointDst","","",null,null],[17,"PictOpConjointOver","","",null,null],[17,"PictOpConjointOverReverse","","",null,null],[17,"PictOpConjointIn","","",null,null],[17,"PictOpConjointInReverse","","",null,null],[17,"PictOpConjointOut","","",null,null],[17,"PictOpConjointOutReverse","","",null,null],[17,"PictOpConjointAtop","","",null,null],[17,"PictOpConjointAtopReverse","","",null,null],[17,"PictOpConjointXor","","",null,null],[17,"PictOpConjointMaximum","","",null,null],[17,"PictOpBlendMinimum","","",null,null],[17,"PictOpMultiply","","",null,null],[17,"PictOpScreen","","",null,null],[17,"PictOpOverlay","","",null,null],[17,"PictOpDarken","","",null,null],[17,"PictOpLighten","","",null,null],[17,"PictOpColorDodge","","",null,null],[17,"PictOpColorBurn","","",null,null],[17,"PictOpHardLight","","",null,null],[17,"PictOpSoftLight","","",null,null],[17,"PictOpDifference","","",null,null],[17,"PictOpExclusion","","",null,null],[17,"PictOpHSLHue","","",null,null],[17,"PictOpHSLSaturation","","",null,null],[17,"PictOpHSLColor","","",null,null],[17,"PictOpHSLLuminosity","","",null,null],[17,"PictOpBlendMaximum","","",null,null],[17,"PolyEdgeSharp","","",null,null],[17,"PolyEdgeSmooth","","",null,null],[17,"PolyModePrecise","","",null,null],[17,"PolyModeImprecise","","",null,null],[17,"CPRepeat","","",null,null],[17,"CPAlphaMap","","",null,null],[17,"CPAlphaXOrigin","","",null,null],[17,"CPAlphaYOrigin","","",null,null],[17,"CPClipXOrigin","","",null,null],[17,"CPClipYOrigin","","",null,null],[17,"CPClipMask","","",null,null],[17,"CPGraphicsExposure","","",null,null],[17,"CPSubwindowMode","","",null,null],[17,"CPPolyEdge","","",null,null],[17,"CPPolyMode","","",null,null],[17,"CPDither","","",null,null],[17,"CPComponentAlpha","","",null,null],[17,"CPLastBit","","",null,null],[17,"FilterNearest","","",null,null],[17,"FilterBilinear","","",null,null],[17,"FilterConvolution","","",null,null],[17,"FilterFast","","",null,null],[17,"FilterGood","","",null,null],[17,"FilterBest","","",null,null],[17,"SubPixelUnknown","","",null,null],[17,"SubPixelHorizontalRGB","","",null,null],[17,"SubPixelHorizontalBGR","","",null,null],[17,"SubPixelVerticalRGB","","",null,null],[17,"SubPixelVerticalBGR","","",null,null],[17,"SubPixelNone","","",null,null],[17,"RepeatNone","","",null,null],[17,"RepeatNormal","","",null,null],[17,"RepeatPad","","",null,null],[17,"RepeatReflect","","",null,null],[11,"open","","",168,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"clone","","",169,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"clone","","",170,null],[11,"eq","","",171,null],[11,"ne","","",171,null],[11,"clone","","",171,null],[11,"eq","","",172,null],[11,"ne","","",172,null],[11,"clone","","",172,null],[11,"eq","","",173,null],[11,"ne","","",173,null],[11,"clone","","",173,null],[11,"eq","","",174,null],[11,"ne","","",174,null],[11,"clone","","",174,null],[11,"eq","","",175,null],[11,"ne","","",175,null],[11,"clone","","",175,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"clone","","",176,null],[11,"eq","","",177,null],[11,"ne","","",177,null],[11,"clone","","",177,null],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"clone","","",178,null],[11,"eq","","",179,null],[11,"ne","","",179,null],[11,"clone","","",179,null],[11,"eq","","",180,null],[11,"ne","","",180,null],[11,"clone","","",180,null],[11,"eq","","",181,null],[11,"ne","","",181,null],[11,"clone","","",181,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"eq","","",186,null],[11,"ne","","",186,null],[11,"clone","","",186,null],[11,"eq","","",187,null],[11,"ne","","",187,null],[11,"clone","","",187,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"clone","","",188,null],[11,"eq","","",189,null],[11,"ne","","",189,null],[11,"clone","","",189,null],[11,"eq","","",190,null],[11,"ne","","",190,null],[11,"clone","","",190,null],[11,"eq","","",191,null],[11,"ne","","",191,null],[11,"clone","","",191,null],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",192,null],[12,"XtAddCallback","","",192,null],[12,"XtAddCallbacks","","",192,null],[12,"XtAddConverter","","",192,null],[12,"XtAddEventHandler","","",192,null],[12,"XtAddExposureToRegion","","",192,null],[12,"XtAddGrab","","",192,null],[12,"XtAddInput","","",192,null],[12,"XtAddRawEventHandler","","",192,null],[12,"XtAddSignal","","",192,null],[12,"XtAddTimeOut","","",192,null],[12,"XtAddWorkProc","","",192,null],[12,"XtAllocateGC","","",192,null],[12,"XtAppAddActionHook","","",192,null],[12,"XtAppAddActions","","",192,null],[12,"XtAppAddBlockHook","","",192,null],[12,"XtAppAddConverter","","",192,null],[12,"XtAppAddInput","","",192,null],[12,"XtAppAddSignal","","",192,null],[12,"XtAppAddTimeOut","","",192,null],[12,"XtAppAddWorkProc","","",192,null],[12,"XtAppCreateShell","","",192,null],[12,"XtAppError","","",192,null],[12,"XtAppErrorMsg","","",192,null],[12,"XtAppGetErrorDatabase","","",192,null],[12,"XtAppGetErrorDatabaseText","","",192,null],[12,"XtAppGetExitFlag","","",192,null],[12,"XtAppGetSelectionTimeout","","",192,null],[12,"XtAppInitialize","","",192,null],[12,"XtAppLock","","",192,null],[12,"XtAppMainLoop","","",192,null],[12,"XtAppNextEvent","","",192,null],[12,"XtAppPeekEvent","","",192,null],[12,"XtAppPending","","",192,null],[12,"XtAppProcessEvent","","",192,null],[12,"XtAppReleaseCacheRefs","","",192,null],[12,"XtAppSetErrorHandler","","",192,null],[12,"XtAppSetErrorMsgHandler","","",192,null],[12,"XtAppSetExitFlag","","",192,null],[12,"XtAppSetFallbackResources","","",192,null],[12,"XtAppSetSelectionTimeout","","",192,null],[12,"XtAppSetTypeConverter","","",192,null],[12,"XtAppSetWarningHandler","","",192,null],[12,"XtAppSetWarningMsgHandler","","",192,null],[12,"XtAppUnlock","","",192,null],[12,"XtAppWarning","","",192,null],[12,"XtAppWarningMsg","","",192,null],[12,"XtAugmentTranslations","","",192,null],[12,"XtBuildEventMask","","",192,null],[12,"XtCallAcceptFocus","","",192,null],[12,"XtCallActionProc","","",192,null],[12,"XtCallbackExclusive","","",192,null],[12,"XtCallbackNone","","",192,null],[12,"XtCallbackNonexclusive","","",192,null],[12,"XtCallbackPopdown","","",192,null],[12,"XtCallbackReleaseCacheRef","","",192,null],[12,"XtCallbackReleaseCacheRefList","","",192,null],[12,"XtCallCallbackList","","",192,null],[12,"XtCallCallbacks","","",192,null],[12,"XtCallConverter","","",192,null],[12,"XtCalloc","","",192,null],[12,"XtCancelSelectionRequest","","",192,null],[12,"XtChangeManagedSet","","",192,null],[12,"XtClass","","",192,null],[12,"XtCloseDisplay","","",192,null],[12,"XtConfigureWidget","","",192,null],[12,"XtConvert","","",192,null],[12,"XtConvertAndStore","","",192,null],[12,"XtConvertCase","","",192,null],[12,"XtCreateApplicationContext","","",192,null],[12,"XtCreateApplicationShell","","",192,null],[12,"XtCreateManagedWidget","","",192,null],[12,"XtCreatePopupShell","","",192,null],[12,"XtCreateSelectionRequest","","",192,null],[12,"XtCreateWidget","","",192,null],[12,"XtCreateWindow","","",192,null],[12,"XtCvtColorToPixel","","",192,null],[12,"XtCvtIntToBool","","",192,null],[12,"XtCvtIntToBoolean","","",192,null],[12,"XtCvtIntToColor","","",192,null],[12,"XtCvtIntToFloat","","",192,null],[12,"XtCvtIntToFont","","",192,null],[12,"XtCvtIntToPixel","","",192,null],[12,"XtCvtIntToPixmap","","",192,null],[12,"XtCvtIntToShort","","",192,null],[12,"XtCvtIntToUnsignedChar","","",192,null],[12,"XtCvtStringToAcceleratorTable","","",192,null],[12,"XtCvtStringToAtom","","",192,null],[12,"XtCvtStringToBool","","",192,null],[12,"XtCvtStringToBoolean","","",192,null],[12,"XtCvtStringToCommandArgArray","","",192,null],[12,"XtCvtStringToCursor","","",192,null],[12,"XtCvtStringToDimension","","",192,null],[12,"XtCvtStringToDirectoryString","","",192,null],[12,"XtCvtStringToDisplay","","",192,null],[12,"XtCvtStringToFile","","",192,null],[12,"XtCvtStringToFloat","","",192,null],[12,"XtCvtStringToFont","","",192,null],[12,"XtCvtStringToFontSet","","",192,null],[12,"XtCvtStringToFontStruct","","",192,null],[12,"XtCvtStringToGravity","","",192,null],[12,"XtCvtStringToInitialState","","",192,null],[12,"XtCvtStringToInt","","",192,null],[12,"XtCvtStringToPixel","","",192,null],[12,"XtCvtStringToRestartStyle","","",192,null],[12,"XtCvtStringToShort","","",192,null],[12,"XtCvtStringToTranslationTable","","",192,null],[12,"XtCvtStringToUnsignedChar","","",192,null],[12,"XtCvtStringToVisual","","",192,null],[12,"XtDatabase","","",192,null],[12,"XtDestroyApplicationContext","","",192,null],[12,"XtDestroyGC","","",192,null],[12,"XtDestroyWidget","","",192,null],[12,"XtDirectConvert","","",192,null],[12,"XtDisownSelection","","",192,null],[12,"XtDispatchEvent","","",192,null],[12,"XtDispatchEventToWidget","","",192,null],[12,"XtDisplay","","",192,null],[12,"XtDisplayInitialize","","",192,null],[12,"XtDisplayOfObject","","",192,null],[12,"XtDisplayStringConversionWarning","","",192,null],[12,"XtDisplayToApplicationContext","","",192,null],[12,"XtError","","",192,null],[12,"XtErrorMsg","","",192,null],[12,"XtFindFile","","",192,null],[12,"XtFree","","",192,null],[12,"XtGetActionKeysym","","",192,null],[12,"XtGetActionList","","",192,null],[12,"XtGetApplicationNameAndClass","","",192,null],[12,"XtGetApplicationResources","","",192,null],[12,"XtGetClassExtension","","",192,null],[12,"XtGetConstraintResourceList","","",192,null],[12,"XtGetDisplays","","",192,null],[12,"XtGetErrorDatabase","","",192,null],[12,"XtGetErrorDatabaseText","","",192,null],[12,"XtGetGC","","",192,null],[12,"XtGetKeyboardFocusWidget","","",192,null],[12,"XtGetKeysymTable","","",192,null],[12,"XtGetMultiClickTime","","",192,null],[12,"XtGetResourceList","","",192,null],[12,"XtGetSelectionParameters","","",192,null],[12,"XtGetSelectionRequest","","",192,null],[12,"XtGetSelectionTimeout","","",192,null],[12,"XtGetSelectionValue","","",192,null],[12,"XtGetSelectionValueIncremental","","",192,null],[12,"XtGetSelectionValues","","",192,null],[12,"XtGetSelectionValuesIncremental","","",192,null],[12,"XtGetSubresources","","",192,null],[12,"XtGetSubvalues","","",192,null],[12,"XtGetValues","","",192,null],[12,"XtGrabButton","","",192,null],[12,"XtGrabKey","","",192,null],[12,"XtGrabKeyboard","","",192,null],[12,"XtGrabPointer","","",192,null],[12,"XtHasCallbacks","","",192,null],[12,"XtHooksOfDisplay","","",192,null],[12,"XtInitialize","","",192,null],[12,"XtInitializeWidgetClass","","",192,null],[12,"XtInsertEventHandler","","",192,null],[12,"XtInsertEventTypeHandler","","",192,null],[12,"XtInsertRawEventHandler","","",192,null],[12,"XtInstallAccelerators","","",192,null],[12,"XtInstallAllAccelerators","","",192,null],[12,"XtIsApplicationShell","","",192,null],[12,"XtIsComposite","","",192,null],[12,"XtIsConstraint","","",192,null],[12,"XtIsManaged","","",192,null],[12,"XtIsObject","","",192,null],[12,"XtIsOverrideShell","","",192,null],[12,"XtIsRealized","","",192,null],[12,"XtIsRectObj","","",192,null],[12,"XtIsSensitive","","",192,null],[12,"XtIsSessionShell","","",192,null],[12,"XtIsShell","","",192,null],[12,"XtIsSubclass","","",192,null],[12,"XtIsTopLevelShell","","",192,null],[12,"XtIsTransientShell","","",192,null],[12,"XtIsVendorShell","","",192,null],[12,"XtIsWidget","","",192,null],[12,"XtIsWMShell","","",192,null],[12,"XtKeysymToKeycodeList","","",192,null],[12,"XtLastEventProcessed","","",192,null],[12,"XtLastTimestampProcessed","","",192,null],[12,"XtMainLoop","","",192,null],[12,"XtMakeGeometryRequest","","",192,null],[12,"XtMakeResizeRequest","","",192,null],[12,"XtMalloc","","",192,null],[12,"XtManageChild","","",192,null],[12,"XtManageChildren","","",192,null],[12,"XtMapWidget","","",192,null],[12,"XtMenuPopupAction","","",192,null],[12,"XtMergeArgLists","","",192,null],[12,"XtMoveWidget","","",192,null],[12,"XtName","","",192,null],[12,"XtNameToWidget","","",192,null],[12,"XtNewString","","",192,null],[12,"XtNextEvent","","",192,null],[12,"XtNoticeSignal","","",192,null],[12,"XtOpenApplication","","",192,null],[12,"XtOpenDisplay","","",192,null],[12,"XtOverrideTranslations","","",192,null],[12,"XtOwnSelection","","",192,null],[12,"XtOwnSelectionIncremental","","",192,null],[12,"XtParent","","",192,null],[12,"XtParseAcceleratorTable","","",192,null],[12,"XtParseTranslationTable","","",192,null],[12,"XtPeekEvent","","",192,null],[12,"XtPending","","",192,null],[12,"XtPopdown","","",192,null],[12,"XtPopup","","",192,null],[12,"XtPopupSpringLoaded","","",192,null],[12,"XtProcessEvent","","",192,null],[12,"XtProcessLock","","",192,null],[12,"XtProcessUnlock","","",192,null],[12,"XtQueryGeometry","","",192,null],[12,"XtRealizeWidget","","",192,null],[12,"XtRealloc","","",192,null],[12,"XtRegisterCaseConverter","","",192,null],[12,"XtRegisterDrawable","","",192,null],[12,"XtRegisterExtensionSelector","","",192,null],[12,"XtRegisterGrabAction","","",192,null],[12,"XtReleaseGC","","",192,null],[12,"XtReleasePropertyAtom","","",192,null],[12,"XtRemoveActionHook","","",192,null],[12,"XtRemoveAllCallbacks","","",192,null],[12,"XtRemoveBlockHook","","",192,null],[12,"XtRemoveCallback","","",192,null],[12,"XtRemoveCallbacks","","",192,null],[12,"XtRemoveEventHandler","","",192,null],[12,"XtRemoveEventTypeHandler","","",192,null],[12,"XtRemoveGrab","","",192,null],[12,"XtRemoveInput","","",192,null],[12,"XtRemoveRawEventHandler","","",192,null],[12,"XtRemoveSignal","","",192,null],[12,"XtRemoveTimeOut","","",192,null],[12,"XtRemoveWorkProc","","",192,null],[12,"XtReservePropertyAtom","","",192,null],[12,"XtResizeWidget","","",192,null],[12,"XtResizeWindow","","",192,null],[12,"XtResolvePathname","","",192,null],[12,"XtScreen","","",192,null],[12,"XtScreenDatabase","","",192,null],[12,"XtScreenOfObject","","",192,null],[12,"XtSendSelectionRequest","","",192,null],[12,"XtSessionGetToken","","",192,null],[12,"XtSessionReturnToken","","",192,null],[12,"XtSetErrorHandler","","",192,null],[12,"XtSetErrorMsgHandler","","",192,null],[12,"XtSetEventDispatcher","","",192,null],[12,"XtSetKeyboardFocus","","",192,null],[12,"XtSetKeyTranslator","","",192,null],[12,"XtSetLanguageProc","","",192,null],[12,"XtSetMappedWhenManaged","","",192,null],[12,"XtSetMultiClickTime","","",192,null],[12,"XtSetSelectionParameters","","",192,null],[12,"XtSetSelectionTimeout","","",192,null],[12,"XtSetSensitive","","",192,null],[12,"XtSetSubvalues","","",192,null],[12,"XtSetTypeConverter","","",192,null],[12,"XtSetValues","","",192,null],[12,"XtSetWarningHandler","","",192,null],[12,"XtSetWarningMsgHandler","","",192,null],[12,"XtSetWMColormapWindows","","",192,null],[12,"XtStringConversionWarning","","",192,null],[12,"XtSuperclass","","",192,null],[12,"XtToolkitInitialize","","",192,null],[12,"XtToolkitThreadInitialize","","",192,null],[12,"XtTranslateCoords","","",192,null],[12,"XtTranslateKey","","",192,null],[12,"XtTranslateKeycode","","",192,null],[12,"XtUngrabButton","","",192,null],[12,"XtUngrabKey","","",192,null],[12,"XtUngrabKeyboard","","",192,null],[12,"XtUngrabPointer","","",192,null],[12,"XtUninstallTranslations","","",192,null],[12,"XtUnmanageChild","","",192,null],[12,"XtUnmanageChildren","","",192,null],[12,"XtUnmapWidget","","",192,null],[12,"XtUnrealizeWidget","","",192,null],[12,"XtUnregisterDrawable","","",192,null],[12,"XtWarning","","",192,null],[12,"XtWarningMsg","","",192,null],[12,"XtWidgetToApplicationContext","","",192,null],[12,"XtWindow","","",192,null],[12,"XtWindowOfObject","","",192,null],[12,"XtWindowToWidget","","",192,null],[12,"XtAsprintf","","",192,null],[12,"XtVaAppCreateShell","","",192,null],[12,"XtVaAppInitialize","","",192,null],[12,"XtVaCreateArgsList","","",192,null],[12,"XtVaCreateManagedWidget","","",192,null],[12,"XtVaCreatePopupShell","","",192,null],[12,"XtVaCreateWidget","","",192,null],[12,"XtVaGetApplicationResources","","",192,null],[12,"XtVaGetSubresources","","",192,null],[12,"XtVaGetSubvalues","","",192,null],[12,"XtVaGetValues","","",192,null],[12,"XtVaOpenApplication","","",192,null],[12,"XtVaSetSubvalues","","",192,null],[12,"XtVaSetValues","","",192,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",192,{"inputs":[],"output":{"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",193,null],[12,"XTestCompareCursorWithWindow","","",193,null],[12,"XTestDiscard","","",193,null],[12,"XTestFakeButtonEvent","","",193,null],[12,"XTestFakeDeviceButtonEvent","","",193,null],[12,"XTestFakeDeviceKeyEvent","","",193,null],[12,"XTestFakeDeviceMotionEvent","","",193,null],[12,"XTestFakeKeyEvent","","",193,null],[12,"XTestFakeMotionEvent","","",193,null],[12,"XTestFakeProximityEvent","","",193,null],[12,"XTestFakeRelativeMotionEvent","","",193,null],[12,"XTestGrabControl","","",193,null],[12,"XTestQueryExtension","","",193,null],[12,"XTestSetGContextOfGC","","",193,null],[12,"XTestSetVisualIDOfVisual","","",193,null],[11,"open","","",193,{"inputs":[],"output":{"name":"result"}}],[0,"xrandr","x11_dl","",null,null],[3,"Xrandr","x11_dl::xrandr","",null,null],[12,"XRRAddOutputMode","","",194,null],[12,"XRRAllocGamma","","",194,null],[12,"XRRAllocModeInfo","","",194,null],[12,"XRRAllocateMonitor","","",194,null],[12,"XRRChangeOutputProperty","","",194,null],[12,"XRRChangeProviderProperty","","",194,null],[12,"XRRConfigCurrentConfiguration","","",194,null],[12,"XRRConfigCurrentRate","","",194,null],[12,"XRRConfigRates","","",194,null],[12,"XRRConfigRotations","","",194,null],[12,"XRRConfigSizes","","",194,null],[12,"XRRConfigTimes","","",194,null],[12,"XRRConfigureOutputProperty","","",194,null],[12,"XRRConfigureProviderProperty","","",194,null],[12,"XRRCreateMode","","",194,null],[12,"XRRDeleteMonitor","","",194,null],[12,"XRRDeleteOutputMode","","",194,null],[12,"XRRDeleteOutputProperty","","",194,null],[12,"XRRDeleteProviderProperty","","",194,null],[12,"XRRDestroyMode","","",194,null],[12,"XRRFreeCrtcInfo","","",194,null],[12,"XRRFreeGamma","","",194,null],[12,"XRRFreeModeInfo","","",194,null],[12,"XRRFreeMonitors","","",194,null],[12,"XRRFreeOutputInfo","","",194,null],[12,"XRRFreePanning","","",194,null],[12,"XRRFreeProviderInfo","","",194,null],[12,"XRRFreeProviderResources","","",194,null],[12,"XRRFreeScreenConfigInfo","","",194,null],[12,"XRRFreeScreenResources","","",194,null],[12,"XRRGetCrtcGamma","","",194,null],[12,"XRRGetCrtcGammaSize","","",194,null],[12,"XRRGetCrtcInfo","","",194,null],[12,"XRRGetCrtcTransform","","",194,null],[12,"XRRGetMonitors","","",194,null],[12,"XRRGetOutputInfo","","",194,null],[12,"XRRGetOutputPrimary","","",194,null],[12,"XRRGetOutputProperty","","",194,null],[12,"XRRGetPanning","","",194,null],[12,"XRRGetProviderInfo","","",194,null],[12,"XRRGetProviderProperty","","",194,null],[12,"XRRGetProviderResources","","",194,null],[12,"XRRGetScreenInfo","","",194,null],[12,"XRRGetScreenResources","","",194,null],[12,"XRRGetScreenResourcesCurrent","","",194,null],[12,"XRRGetScreenSizeRange","","",194,null],[12,"XRRListOutputProperties","","",194,null],[12,"XRRListProviderProperties","","",194,null],[12,"XRRQueryExtension","","",194,null],[12,"XRRQueryOutputProperty","","",194,null],[12,"XRRQueryProviderProperty","","",194,null],[12,"XRRQueryVersion","","",194,null],[12,"XRRRates","","",194,null],[12,"XRRRootToScreen","","",194,null],[12,"XRRRotations","","",194,null],[12,"XRRSelectInput","","",194,null],[12,"XRRSetCrtcConfig","","",194,null],[12,"XRRSetCrtcGamma","","",194,null],[12,"XRRSetCrtcTransform","","",194,null],[12,"XRRSetMonitor","","",194,null],[12,"XRRSetOutputPrimary","","",194,null],[12,"XRRSetPanning","","",194,null],[12,"XRRSetProviderOffloadSink","","",194,null],[12,"XRRSetProviderOutputSource","","",194,null],[12,"XRRSetScreenConfig","","",194,null],[12,"XRRSetScreenConfigAndRate","","",194,null],[12,"XRRSetScreenSize","","",194,null],[12,"XRRSizes","","",194,null],[12,"XRRTimes","","",194,null],[12,"XRRUpdateConfiguration","","",194,null],[3,"XRRScreenSize","","",null,null],[12,"width","","",195,null],[12,"height","","",195,null],[12,"mwidth","","",195,null],[12,"mheight","","",195,null],[3,"XRRScreenChangeNotifyEvent","","",null,null],[12,"type_","","",196,null],[12,"serial","","",196,null],[12,"send_event","","",196,null],[12,"display","","",196,null],[12,"window","","",196,null],[12,"root","","",196,null],[12,"timestamp","","",196,null],[12,"config_timestamp","","",196,null],[12,"size_index","","",196,null],[12,"subpixel_order","","",196,null],[12,"rotation","","",196,null],[12,"width","","",196,null],[12,"height","","",196,null],[12,"mwidth","","",196,null],[12,"mheight","","",196,null],[3,"XRRNotifyEvent","","",null,null],[12,"type_","","",197,null],[12,"serial","","",197,null],[12,"send_event","","",197,null],[12,"display","","",197,null],[12,"window","","",197,null],[12,"subtype","","",197,null],[3,"XRROutputChangeNotifyEvent","","",null,null],[12,"type_","","",198,null],[12,"serial","","",198,null],[12,"send_event","","",198,null],[12,"display","","",198,null],[12,"window","","",198,null],[12,"subtype","","",198,null],[12,"output","","",198,null],[12,"crtc","","",198,null],[12,"mode","","",198,null],[12,"rotation","","",198,null],[12,"connection","","",198,null],[12,"subpixel_order","","",198,null],[3,"XRRCrtcChangeNotifyEvent","","",null,null],[12,"type_","","",199,null],[12,"serial","","",199,null],[12,"send_event","","",199,null],[12,"display","","",199,null],[12,"window","","",199,null],[12,"subtype","","",199,null],[12,"crtc","","",199,null],[12,"mode","","",199,null],[12,"rotation","","",199,null],[12,"x","","",199,null],[12,"y","","",199,null],[12,"width","","",199,null],[12,"height","","",199,null],[3,"XRROutputPropertyNotifyEvent","","",null,null],[12,"type_","","",200,null],[12,"serial","","",200,null],[12,"send_event","","",200,null],[12,"display","","",200,null],[12,"window","","",200,null],[12,"subtype","","",200,null],[12,"output","","",200,null],[12,"property","","",200,null],[12,"timestamp","","",200,null],[12,"state","","",200,null],[3,"XRRProviderChangeNotifyEvent","","",null,null],[12,"type_","","",201,null],[12,"serial","","",201,null],[12,"send_event","","",201,null],[12,"display","","",201,null],[12,"window","","",201,null],[12,"subtype","","",201,null],[12,"provider","","",201,null],[12,"timestamp","","",201,null],[12,"current_role","","",201,null],[3,"XRRProviderPropertyNotifyEvent","","",null,null],[12,"type_","","",202,null],[12,"serial","","",202,null],[12,"send_event","","",202,null],[12,"display","","",202,null],[12,"window","","",202,null],[12,"subtype","","",202,null],[12,"provider","","",202,null],[12,"property","","",202,null],[12,"timestamp","","",202,null],[12,"state","","",202,null],[3,"XRRResourceChangeNotifyEvent","","",null,null],[12,"type_","","",203,null],[12,"serial","","",203,null],[12,"send_event","","",203,null],[12,"display","","",203,null],[12,"window","","",203,null],[12,"subtype","","",203,null],[12,"timestamp","","",203,null],[3,"XRRScreenConfiguration","","",null,null],[3,"XRRModeInfo","","",null,null],[12,"id","","",204,null],[12,"width","","",204,null],[12,"height","","",204,null],[12,"dotClock","","",204,null],[12,"hSyncStart","","",204,null],[12,"hSyncEnd","","",204,null],[12,"hTotal","","",204,null],[12,"hSkew","","",204,null],[12,"vSyncStart","","",204,null],[12,"vSyncEnd","","",204,null],[12,"vTotal","","",204,null],[12,"name","","",204,null],[12,"nameLength","","",204,null],[12,"modeFlags","","",204,null],[3,"XRRScreenResources","","",null,null],[12,"timestamp","","",205,null],[12,"configTimestamp","","",205,null],[12,"ncrtc","","",205,null],[12,"crtcs","","",205,null],[12,"noutput","","",205,null],[12,"outputs","","",205,null],[12,"nmode","","",205,null],[12,"modes","","",205,null],[3,"XRROutputInfo","","",null,null],[12,"timestamp","","",206,null],[12,"crtc","","",206,null],[12,"name","","",206,null],[12,"nameLen","","",206,null],[12,"mm_width","","",206,null],[12,"mm_height","","",206,null],[12,"connection","","",206,null],[12,"subpixel_order","","",206,null],[12,"ncrtc","","",206,null],[12,"crtcs","","",206,null],[12,"nclone","","",206,null],[12,"clones","","",206,null],[12,"nmode","","",206,null],[12,"npreferred","","",206,null],[12,"modes","","",206,null],[3,"XRRPropertyInfo","","",null,null],[12,"pending","","",207,null],[12,"range","","",207,null],[12,"immutable","","",207,null],[12,"num_values","","",207,null],[12,"values","","",207,null],[3,"XRRCrtcInfo","","",null,null],[12,"timestamp","","",208,null],[12,"x","","",208,null],[12,"y","","",208,null],[12,"width","","",208,null],[12,"height","","",208,null],[12,"mode","","",208,null],[12,"rotation","","",208,null],[12,"noutput","","",208,null],[12,"outputs","","",208,null],[12,"rotations","","",208,null],[12,"npossible","","",208,null],[12,"possible","","",208,null],[3,"XRRCrtcGamma","","",null,null],[12,"size","","",209,null],[12,"red","","",209,null],[12,"green","","",209,null],[12,"blue","","",209,null],[3,"XRRCrtcTransformAttributes","","",null,null],[12,"pendingTransform","","",210,null],[12,"pendingFilter","","",210,null],[12,"pendingNparams","","",210,null],[12,"pendingParams","","",210,null],[12,"currentTransform","","",210,null],[12,"currentFilter","","",210,null],[12,"currentNparams","","",210,null],[12,"currentParams","","",210,null],[3,"XRRPanning","","",null,null],[12,"timestamp","","",211,null],[12,"left","","",211,null],[12,"top","","",211,null],[12,"width","","",211,null],[12,"height","","",211,null],[12,"track_left","","",211,null],[12,"track_top","","",211,null],[12,"track_width","","",211,null],[12,"track_height","","",211,null],[12,"border_left","","",211,null],[12,"border_top","","",211,null],[12,"border_right","","",211,null],[12,"border_bottom","","",211,null],[3,"XRRProviderResources","","",null,null],[12,"timestamp","","",212,null],[12,"nproviders","","",212,null],[12,"providers","","",212,null],[3,"XRRProviderInfo","","",null,null],[12,"capabilities","","",213,null],[12,"ncrtcs","","",213,null],[12,"crtcs","","",213,null],[12,"noutputs","","",213,null],[12,"outputs","","",213,null],[12,"name","","",213,null],[12,"nassociatedproviders","","",213,null],[12,"associated_providers","","",213,null],[12,"associated_capability","","",213,null],[12,"nameLen","","",213,null],[3,"XRRMonitorInfo","","",null,null],[12,"name","","",214,null],[12,"primary","","",214,null],[12,"automatic","","",214,null],[12,"noutput","","",214,null],[12,"x","","",214,null],[12,"y","","",214,null],[12,"width","","",214,null],[12,"height","","",214,null],[12,"mwidth","","",214,null],[12,"mheight","","",214,null],[12,"outputs","","",214,null],[3,"Xrandr_2_2_0","","",null,null],[12,"XRRAddOutputMode","","",215,null],[12,"XRRAllocGamma","","",215,null],[12,"XRRAllocModeInfo","","",215,null],[12,"XRRChangeOutputProperty","","",215,null],[12,"XRRChangeProviderProperty","","",215,null],[12,"XRRConfigCurrentConfiguration","","",215,null],[12,"XRRConfigCurrentRate","","",215,null],[12,"XRRConfigRates","","",215,null],[12,"XRRConfigRotations","","",215,null],[12,"XRRConfigSizes","","",215,null],[12,"XRRConfigTimes","","",215,null],[12,"XRRConfigureOutputProperty","","",215,null],[12,"XRRConfigureProviderProperty","","",215,null],[12,"XRRCreateMode","","",215,null],[12,"XRRDeleteOutputMode","","",215,null],[12,"XRRDeleteOutputProperty","","",215,null],[12,"XRRDeleteProviderProperty","","",215,null],[12,"XRRDestroyMode","","",215,null],[12,"XRRFreeCrtcInfo","","",215,null],[12,"XRRFreeGamma","","",215,null],[12,"XRRFreeModeInfo","","",215,null],[12,"XRRFreeOutputInfo","","",215,null],[12,"XRRFreePanning","","",215,null],[12,"XRRFreeProviderInfo","","",215,null],[12,"XRRFreeProviderResources","","",215,null],[12,"XRRFreeScreenConfigInfo","","",215,null],[12,"XRRFreeScreenResources","","",215,null],[12,"XRRGetCrtcGamma","","",215,null],[12,"XRRGetCrtcGammaSize","","",215,null],[12,"XRRGetCrtcInfo","","",215,null],[12,"XRRGetCrtcTransform","","",215,null],[12,"XRRGetOutputInfo","","",215,null],[12,"XRRGetOutputPrimary","","",215,null],[12,"XRRGetOutputProperty","","",215,null],[12,"XRRGetPanning","","",215,null],[12,"XRRGetProviderInfo","","",215,null],[12,"XRRGetProviderProperty","","",215,null],[12,"XRRGetProviderResources","","",215,null],[12,"XRRGetScreenInfo","","",215,null],[12,"XRRGetScreenResources","","",215,null],[12,"XRRGetScreenResourcesCurrent","","",215,null],[12,"XRRGetScreenSizeRange","","",215,null],[12,"XRRListOutputProperties","","",215,null],[12,"XRRListProviderProperties","","",215,null],[12,"XRRQueryExtension","","",215,null],[12,"XRRQueryOutputProperty","","",215,null],[12,"XRRQueryProviderProperty","","",215,null],[12,"XRRQueryVersion","","",215,null],[12,"XRRRates","","",215,null],[12,"XRRRootToScreen","","",215,null],[12,"XRRRotations","","",215,null],[12,"XRRSelectInput","","",215,null],[12,"XRRSetCrtcConfig","","",215,null],[12,"XRRSetCrtcGamma","","",215,null],[12,"XRRSetCrtcTransform","","",215,null],[12,"XRRSetOutputPrimary","","",215,null],[12,"XRRSetPanning","","",215,null],[12,"XRRSetProviderOffloadSink","","",215,null],[12,"XRRSetProviderOutputSource","","",215,null],[12,"XRRSetScreenConfig","","",215,null],[12,"XRRSetScreenConfigAndRate","","",215,null],[12,"XRRSetScreenSize","","",215,null],[12,"XRRSizes","","",215,null],[12,"XRRTimes","","",215,null],[12,"XRRUpdateConfiguration","","",215,null],[6,"Connection","","",null,null],[6,"Rotation","","",null,null],[6,"SizeID","","",null,null],[6,"SubpixelOrder","","",null,null],[6,"RROutput","","",null,null],[6,"RRCrtc","","",null,null],[6,"RRMode","","",null,null],[6,"RRProvider","","",null,null],[6,"XRRModeFlags","","",null,null],[11,"open","","",194,{"inputs":[],"output":{"name":"result"}}],[11,"eq","","",195,null],[11,"ne","","",195,null],[11,"clone","","",195,null],[11,"eq","","",196,null],[11,"ne","","",196,null],[11,"clone","","",196,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"clone","","",197,null],[11,"eq","","",198,null],[11,"ne","","",198,null],[11,"clone","","",198,null],[11,"eq","","",199,null],[11,"ne","","",199,null],[11,"clone","","",199,null],[11,"eq","","",200,null],[11,"ne","","",200,null],[11,"clone","","",200,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"clone","","",201,null],[11,"eq","","",202,null],[11,"ne","","",202,null],[11,"clone","","",202,null],[11,"eq","","",203,null],[11,"ne","","",203,null],[11,"clone","","",203,null],[11,"eq","","",204,null],[11,"ne","","",204,null],[11,"clone","","",204,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"clone","","",205,null],[11,"eq","","",206,null],[11,"ne","","",206,null],[11,"clone","","",206,null],[11,"eq","","",207,null],[11,"ne","","",207,null],[11,"clone","","",207,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"clone","","",208,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"clone","","",209,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"clone","","",210,null],[11,"eq","","",211,null],[11,"ne","","",211,null],[11,"clone","","",211,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"clone","","",212,null],[11,"eq","","",213,null],[11,"ne","","",213,null],[11,"clone","","",213,null],[11,"eq","","",214,null],[11,"ne","","",214,null],[11,"clone","","",214,null],[11,"open","","",215,{"inputs":[],"output":{"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xft"],[3,"XftFont"],[3,"XftColor"],[3,"XftCharSpec"],[3,"XftCharFontSpec"],[3,"XftFontSet"],[3,"XftGlyphSpec"],[3,"XftGlyphFontSpec"],[4,"FcEndian"],[4,"FcResult"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"Xrandr_2_2_0"]]};
searchIndex["sdl2_sys"] = {"doc":"","items":[[0,"scancode","sdl2_sys","",null,null],[6,"SDL_Scancode","sdl2_sys::scancode","",null,null],[17,"SDL_SCANCODE_UNKNOWN","","",null,null],[17,"SDL_SCANCODE_A","","",null,null],[17,"SDL_SCANCODE_B","","",null,null],[17,"SDL_SCANCODE_C","","",null,null],[17,"SDL_SCANCODE_D","","",null,null],[17,"SDL_SCANCODE_E","","",null,null],[17,"SDL_SCANCODE_F","","",null,null],[17,"SDL_SCANCODE_G","","",null,null],[17,"SDL_SCANCODE_H","","",null,null],[17,"SDL_SCANCODE_I","","",null,null],[17,"SDL_SCANCODE_J","","",null,null],[17,"SDL_SCANCODE_K","","",null,null],[17,"SDL_SCANCODE_L","","",null,null],[17,"SDL_SCANCODE_M","","",null,null],[17,"SDL_SCANCODE_N","","",null,null],[17,"SDL_SCANCODE_O","","",null,null],[17,"SDL_SCANCODE_P","","",null,null],[17,"SDL_SCANCODE_Q","","",null,null],[17,"SDL_SCANCODE_R","","",null,null],[17,"SDL_SCANCODE_S","","",null,null],[17,"SDL_SCANCODE_T","","",null,null],[17,"SDL_SCANCODE_U","","",null,null],[17,"SDL_SCANCODE_V","","",null,null],[17,"SDL_SCANCODE_W","","",null,null],[17,"SDL_SCANCODE_X","","",null,null],[17,"SDL_SCANCODE_Y","","",null,null],[17,"SDL_SCANCODE_Z","","",null,null],[17,"SDL_SCANCODE_1","","",null,null],[17,"SDL_SCANCODE_2","","",null,null],[17,"SDL_SCANCODE_3","","",null,null],[17,"SDL_SCANCODE_4","","",null,null],[17,"SDL_SCANCODE_5","","",null,null],[17,"SDL_SCANCODE_6","","",null,null],[17,"SDL_SCANCODE_7","","",null,null],[17,"SDL_SCANCODE_8","","",null,null],[17,"SDL_SCANCODE_9","","",null,null],[17,"SDL_SCANCODE_0","","",null,null],[17,"SDL_SCANCODE_RETURN","","",null,null],[17,"SDL_SCANCODE_ESCAPE","","",null,null],[17,"SDL_SCANCODE_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_TAB","","",null,null],[17,"SDL_SCANCODE_SPACE","","",null,null],[17,"SDL_SCANCODE_MINUS","","",null,null],[17,"SDL_SCANCODE_EQUALS","","",null,null],[17,"SDL_SCANCODE_LEFTBRACKET","","",null,null],[17,"SDL_SCANCODE_RIGHTBRACKET","","",null,null],[17,"SDL_SCANCODE_BACKSLASH","","",null,null],[17,"SDL_SCANCODE_NONUSHASH","","",null,null],[17,"SDL_SCANCODE_SEMICOLON","","",null,null],[17,"SDL_SCANCODE_APOSTROPHE","","",null,null],[17,"SDL_SCANCODE_GRAVE","","",null,null],[17,"SDL_SCANCODE_COMMA","","",null,null],[17,"SDL_SCANCODE_PERIOD","","",null,null],[17,"SDL_SCANCODE_SLASH","","",null,null],[17,"SDL_SCANCODE_CAPSLOCK","","",null,null],[17,"SDL_SCANCODE_F1","","",null,null],[17,"SDL_SCANCODE_F2","","",null,null],[17,"SDL_SCANCODE_F3","","",null,null],[17,"SDL_SCANCODE_F4","","",null,null],[17,"SDL_SCANCODE_F5","","",null,null],[17,"SDL_SCANCODE_F6","","",null,null],[17,"SDL_SCANCODE_F7","","",null,null],[17,"SDL_SCANCODE_F8","","",null,null],[17,"SDL_SCANCODE_F9","","",null,null],[17,"SDL_SCANCODE_F10","","",null,null],[17,"SDL_SCANCODE_F11","","",null,null],[17,"SDL_SCANCODE_F12","","",null,null],[17,"SDL_SCANCODE_PRINTSCREEN","","",null,null],[17,"SDL_SCANCODE_SCROLLLOCK","","",null,null],[17,"SDL_SCANCODE_PAUSE","","",null,null],[17,"SDL_SCANCODE_INSERT","","",null,null],[17,"SDL_SCANCODE_HOME","","",null,null],[17,"SDL_SCANCODE_PAGEUP","","",null,null],[17,"SDL_SCANCODE_DELETE","","",null,null],[17,"SDL_SCANCODE_END","","",null,null],[17,"SDL_SCANCODE_PAGEDOWN","","",null,null],[17,"SDL_SCANCODE_RIGHT","","",null,null],[17,"SDL_SCANCODE_LEFT","","",null,null],[17,"SDL_SCANCODE_DOWN","","",null,null],[17,"SDL_SCANCODE_UP","","",null,null],[17,"SDL_SCANCODE_NUMLOCKCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_DIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_MULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MINUS","","",null,null],[17,"SDL_SCANCODE_KP_PLUS","","",null,null],[17,"SDL_SCANCODE_KP_ENTER","","",null,null],[17,"SDL_SCANCODE_KP_1","","",null,null],[17,"SDL_SCANCODE_KP_2","","",null,null],[17,"SDL_SCANCODE_KP_3","","",null,null],[17,"SDL_SCANCODE_KP_4","","",null,null],[17,"SDL_SCANCODE_KP_5","","",null,null],[17,"SDL_SCANCODE_KP_6","","",null,null],[17,"SDL_SCANCODE_KP_7","","",null,null],[17,"SDL_SCANCODE_KP_8","","",null,null],[17,"SDL_SCANCODE_KP_9","","",null,null],[17,"SDL_SCANCODE_KP_0","","",null,null],[17,"SDL_SCANCODE_KP_PERIOD","","",null,null],[17,"SDL_SCANCODE_NONUSBACKSLASH","","",null,null],[17,"SDL_SCANCODE_APPLICATION","","",null,null],[17,"SDL_SCANCODE_POWER","","",null,null],[17,"SDL_SCANCODE_KP_EQUALS","","",null,null],[17,"SDL_SCANCODE_F13","","",null,null],[17,"SDL_SCANCODE_F14","","",null,null],[17,"SDL_SCANCODE_F15","","",null,null],[17,"SDL_SCANCODE_F16","","",null,null],[17,"SDL_SCANCODE_F17","","",null,null],[17,"SDL_SCANCODE_F18","","",null,null],[17,"SDL_SCANCODE_F19","","",null,null],[17,"SDL_SCANCODE_F20","","",null,null],[17,"SDL_SCANCODE_F21","","",null,null],[17,"SDL_SCANCODE_F22","","",null,null],[17,"SDL_SCANCODE_F23","","",null,null],[17,"SDL_SCANCODE_F24","","",null,null],[17,"SDL_SCANCODE_EXECUTE","","",null,null],[17,"SDL_SCANCODE_HELP","","",null,null],[17,"SDL_SCANCODE_MENU","","",null,null],[17,"SDL_SCANCODE_SELECT","","",null,null],[17,"SDL_SCANCODE_STOP","","",null,null],[17,"SDL_SCANCODE_AGAIN","","",null,null],[17,"SDL_SCANCODE_UNDO","","",null,null],[17,"SDL_SCANCODE_CUT","","",null,null],[17,"SDL_SCANCODE_COPY","","",null,null],[17,"SDL_SCANCODE_PASTE","","",null,null],[17,"SDL_SCANCODE_FIND","","",null,null],[17,"SDL_SCANCODE_MUTE","","",null,null],[17,"SDL_SCANCODE_VOLUMEUP","","",null,null],[17,"SDL_SCANCODE_VOLUMEDOWN","","",null,null],[17,"SDL_SCANCODE_KP_COMMA","","",null,null],[17,"SDL_SCANCODE_KP_EQUALSAS400","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL1","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL2","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL3","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL4","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL5","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL6","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL7","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL8","","",null,null],[17,"SDL_SCANCODE_INTERNATIONAL9","","",null,null],[17,"SDL_SCANCODE_LANG1","","",null,null],[17,"SDL_SCANCODE_LANG2","","",null,null],[17,"SDL_SCANCODE_LANG3","","",null,null],[17,"SDL_SCANCODE_LANG4","","",null,null],[17,"SDL_SCANCODE_LANG5","","",null,null],[17,"SDL_SCANCODE_LANG6","","",null,null],[17,"SDL_SCANCODE_LANG7","","",null,null],[17,"SDL_SCANCODE_LANG8","","",null,null],[17,"SDL_SCANCODE_LANG9","","",null,null],[17,"SDL_SCANCODE_ALTERASE","","",null,null],[17,"SDL_SCANCODE_SYSREQ","","",null,null],[17,"SDL_SCANCODE_CANCEL","","",null,null],[17,"SDL_SCANCODE_CLEAR","","",null,null],[17,"SDL_SCANCODE_PRIOR","","",null,null],[17,"SDL_SCANCODE_RETURN2","","",null,null],[17,"SDL_SCANCODE_SEPARATOR","","",null,null],[17,"SDL_SCANCODE_OUT","","",null,null],[17,"SDL_SCANCODE_OPER","","",null,null],[17,"SDL_SCANCODE_CLEARAGAIN","","",null,null],[17,"SDL_SCANCODE_CRSEL","","",null,null],[17,"SDL_SCANCODE_EXSEL","","",null,null],[17,"SDL_SCANCODE_KP_00","","",null,null],[17,"SDL_SCANCODE_KP_000","","",null,null],[17,"SDL_SCANCODE_THOUSANDSSEPARATOR","","",null,null],[17,"SDL_SCANCODE_DECIMALSEPARATOR","","",null,null],[17,"SDL_SCANCODE_CURRENCYUNIT","","",null,null],[17,"SDL_SCANCODE_CURRENCYSUBUNIT","","",null,null],[17,"SDL_SCANCODE_KP_LEFTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTPAREN","","",null,null],[17,"SDL_SCANCODE_KP_LEFTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_RIGHTBRACE","","",null,null],[17,"SDL_SCANCODE_KP_TAB","","",null,null],[17,"SDL_SCANCODE_KP_BACKSPACE","","",null,null],[17,"SDL_SCANCODE_KP_A","","",null,null],[17,"SDL_SCANCODE_KP_B","","",null,null],[17,"SDL_SCANCODE_KP_C","","",null,null],[17,"SDL_SCANCODE_KP_D","","",null,null],[17,"SDL_SCANCODE_KP_E","","",null,null],[17,"SDL_SCANCODE_KP_F","","",null,null],[17,"SDL_SCANCODE_KP_XOR","","",null,null],[17,"SDL_SCANCODE_KP_POWER","","",null,null],[17,"SDL_SCANCODE_KP_PERCENT","","",null,null],[17,"SDL_SCANCODE_KP_LESS","","",null,null],[17,"SDL_SCANCODE_KP_GREATER","","",null,null],[17,"SDL_SCANCODE_KP_AMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_DBLAMPERSAND","","",null,null],[17,"SDL_SCANCODE_KP_VERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_DBLVERTICALBAR","","",null,null],[17,"SDL_SCANCODE_KP_COLON","","",null,null],[17,"SDL_SCANCODE_KP_HASH","","",null,null],[17,"SDL_SCANCODE_KP_SPACE","","",null,null],[17,"SDL_SCANCODE_KP_AT","","",null,null],[17,"SDL_SCANCODE_KP_EXCLAM","","",null,null],[17,"SDL_SCANCODE_KP_MEMSTORE","","",null,null],[17,"SDL_SCANCODE_KP_MEMRECALL","","",null,null],[17,"SDL_SCANCODE_KP_MEMCLEAR","","",null,null],[17,"SDL_SCANCODE_KP_MEMADD","","",null,null],[17,"SDL_SCANCODE_KP_MEMSUBTRACT","","",null,null],[17,"SDL_SCANCODE_KP_MEMMULTIPLY","","",null,null],[17,"SDL_SCANCODE_KP_MEMDIVIDE","","",null,null],[17,"SDL_SCANCODE_KP_PLUSMINUS","","",null,null],[17,"SDL_SCANCODE_KP_CLEAR","","",null,null],[17,"SDL_SCANCODE_KP_CLEARENTRY","","",null,null],[17,"SDL_SCANCODE_KP_BINARY","","",null,null],[17,"SDL_SCANCODE_KP_OCTAL","","",null,null],[17,"SDL_SCANCODE_KP_DECIMAL","","",null,null],[17,"SDL_SCANCODE_KP_HEXADECIMAL","","",null,null],[17,"SDL_SCANCODE_LCTRL","","",null,null],[17,"SDL_SCANCODE_LSHIFT","","",null,null],[17,"SDL_SCANCODE_LALT","","",null,null],[17,"SDL_SCANCODE_LGUI","","",null,null],[17,"SDL_SCANCODE_RCTRL","","",null,null],[17,"SDL_SCANCODE_RSHIFT","","",null,null],[17,"SDL_SCANCODE_RALT","","",null,null],[17,"SDL_SCANCODE_RGUI","","",null,null],[17,"SDL_SCANCODE_MODE","","",null,null],[17,"SDL_SCANCODE_AUDIONEXT","","",null,null],[17,"SDL_SCANCODE_AUDIOPREV","","",null,null],[17,"SDL_SCANCODE_AUDIOSTOP","","",null,null],[17,"SDL_SCANCODE_AUDIOPLAY","","",null,null],[17,"SDL_SCANCODE_AUDIOMUTE","","",null,null],[17,"SDL_SCANCODE_MEDIASELECT","","",null,null],[17,"SDL_SCANCODE_WWW","","",null,null],[17,"SDL_SCANCODE_MAIL","","",null,null],[17,"SDL_SCANCODE_CALCULATOR","","",null,null],[17,"SDL_SCANCODE_COMPUTER","","",null,null],[17,"SDL_SCANCODE_AC_SEARCH","","",null,null],[17,"SDL_SCANCODE_AC_HOME","","",null,null],[17,"SDL_SCANCODE_AC_BACK","","",null,null],[17,"SDL_SCANCODE_AC_FORWARD","","",null,null],[17,"SDL_SCANCODE_AC_STOP","","",null,null],[17,"SDL_SCANCODE_AC_REFRESH","","",null,null],[17,"SDL_SCANCODE_AC_BOOKMARKS","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSDOWN","","",null,null],[17,"SDL_SCANCODE_BRIGHTNESSUP","","",null,null],[17,"SDL_SCANCODE_DISPLAYSWITCH","","",null,null],[17,"SDL_SCANCODE_KBDILLUMTOGGLE","","",null,null],[17,"SDL_SCANCODE_KBDILLUMDOWN","","",null,null],[17,"SDL_SCANCODE_KBDILLUMUP","","",null,null],[17,"SDL_SCANCODE_EJECT","","",null,null],[17,"SDL_SCANCODE_SLEEP","","",null,null],[17,"SDL_SCANCODE_APP1","","",null,null],[17,"SDL_SCANCODE_APP2","","",null,null],[17,"SDL_NUM_SCANCODES","","",null,null],[0,"keycode","sdl2_sys","",null,null],[6,"SDL_Keycode","sdl2_sys::keycode","",null,null],[6,"SDL_Keymod","","",null,null],[17,"SDLK_UNKNOWN","","",null,null],[17,"SDLK_BACKSPACE","","",null,null],[17,"SDLK_TAB","","",null,null],[17,"SDLK_RETURN","","",null,null],[17,"SDLK_ESCAPE","","",null,null],[17,"SDLK_SPACE","","",null,null],[17,"SDLK_EXCLAIM","","",null,null],[17,"SDLK_QUOTEDBL","","",null,null],[17,"SDLK_HASH","","",null,null],[17,"SDLK_DOLLAR","","",null,null],[17,"SDLK_PERCENT","","",null,null],[17,"SDLK_AMPERSAND","","",null,null],[17,"SDLK_QUOTE","","",null,null],[17,"SDLK_LEFTPAREN","","",null,null],[17,"SDLK_RIGHTPAREN","","",null,null],[17,"SDLK_ASTERISK","","",null,null],[17,"SDLK_PLUS","","",null,null],[17,"SDLK_COMMA","","",null,null],[17,"SDLK_MINUS","","",null,null],[17,"SDLK_PERIOD","","",null,null],[17,"SDLK_SLASH","","",null,null],[17,"SDLK_0","","",null,null],[17,"SDLK_1","","",null,null],[17,"SDLK_2","","",null,null],[17,"SDLK_3","","",null,null],[17,"SDLK_4","","",null,null],[17,"SDLK_5","","",null,null],[17,"SDLK_6","","",null,null],[17,"SDLK_7","","",null,null],[17,"SDLK_8","","",null,null],[17,"SDLK_9","","",null,null],[17,"SDLK_COLON","","",null,null],[17,"SDLK_SEMICOLON","","",null,null],[17,"SDLK_LESS","","",null,null],[17,"SDLK_EQUALS","","",null,null],[17,"SDLK_GREATER","","",null,null],[17,"SDLK_QUESTION","","",null,null],[17,"SDLK_AT","","",null,null],[17,"SDLK_LEFTBRACKET","","",null,null],[17,"SDLK_BACKSLASH","","",null,null],[17,"SDLK_RIGHTBRACKET","","",null,null],[17,"SDLK_CARET","","",null,null],[17,"SDLK_UNDERSCORE","","",null,null],[17,"SDLK_BACKQUOTE","","",null,null],[17,"SDLK_a","","",null,null],[17,"SDLK_b","","",null,null],[17,"SDLK_c","","",null,null],[17,"SDLK_d","","",null,null],[17,"SDLK_e","","",null,null],[17,"SDLK_f","","",null,null],[17,"SDLK_g","","",null,null],[17,"SDLK_h","","",null,null],[17,"SDLK_i","","",null,null],[17,"SDLK_j","","",null,null],[17,"SDLK_k","","",null,null],[17,"SDLK_l","","",null,null],[17,"SDLK_m","","",null,null],[17,"SDLK_n","","",null,null],[17,"SDLK_o","","",null,null],[17,"SDLK_p","","",null,null],[17,"SDLK_q","","",null,null],[17,"SDLK_r","","",null,null],[17,"SDLK_s","","",null,null],[17,"SDLK_t","","",null,null],[17,"SDLK_u","","",null,null],[17,"SDLK_v","","",null,null],[17,"SDLK_w","","",null,null],[17,"SDLK_x","","",null,null],[17,"SDLK_y","","",null,null],[17,"SDLK_z","","",null,null],[17,"SDLK_DELETE","","",null,null],[17,"SDLK_CAPSLOCK","","",null,null],[17,"SDLK_F1","","",null,null],[17,"SDLK_F2","","",null,null],[17,"SDLK_F3","","",null,null],[17,"SDLK_F4","","",null,null],[17,"SDLK_F5","","",null,null],[17,"SDLK_F6","","",null,null],[17,"SDLK_F7","","",null,null],[17,"SDLK_F8","","",null,null],[17,"SDLK_F9","","",null,null],[17,"SDLK_F10","","",null,null],[17,"SDLK_F11","","",null,null],[17,"SDLK_F12","","",null,null],[17,"SDLK_PRINTSCREEN","","",null,null],[17,"SDLK_SCROLLLOCK","","",null,null],[17,"SDLK_PAUSE","","",null,null],[17,"SDLK_INSERT","","",null,null],[17,"SDLK_HOME","","",null,null],[17,"SDLK_PAGEUP","","",null,null],[17,"SDLK_END","","",null,null],[17,"SDLK_PAGEDOWN","","",null,null],[17,"SDLK_RIGHT","","",null,null],[17,"SDLK_LEFT","","",null,null],[17,"SDLK_DOWN","","",null,null],[17,"SDLK_UP","","",null,null],[17,"SDLK_NUMLOCKCLEAR","","",null,null],[17,"SDLK_KPDIVIDE","","",null,null],[17,"SDLK_KPMULTIPLY","","",null,null],[17,"SDLK_KPMINUS","","",null,null],[17,"SDLK_KPPLUS","","",null,null],[17,"SDLK_KPENTER","","",null,null],[17,"SDLK_KP1","","",null,null],[17,"SDLK_KP2","","",null,null],[17,"SDLK_KP3","","",null,null],[17,"SDLK_KP4","","",null,null],[17,"SDLK_KP5","","",null,null],[17,"SDLK_KP6","","",null,null],[17,"SDLK_KP7","","",null,null],[17,"SDLK_KP8","","",null,null],[17,"SDLK_KP9","","",null,null],[17,"SDLK_KP0","","",null,null],[17,"SDLK_KPPERIOD","","",null,null],[17,"SDLK_APPLICATION","","",null,null],[17,"SDLK_POWER","","",null,null],[17,"SDLK_KPEQUALS","","",null,null],[17,"SDLK_F13","","",null,null],[17,"SDLK_F14","","",null,null],[17,"SDLK_F15","","",null,null],[17,"SDLK_F16","","",null,null],[17,"SDLK_F17","","",null,null],[17,"SDLK_F18","","",null,null],[17,"SDLK_F19","","",null,null],[17,"SDLK_F20","","",null,null],[17,"SDLK_F21","","",null,null],[17,"SDLK_F22","","",null,null],[17,"SDLK_F23","","",null,null],[17,"SDLK_F24","","",null,null],[17,"SDLK_EXECUTE","","",null,null],[17,"SDLK_HELP","","",null,null],[17,"SDLK_MENU","","",null,null],[17,"SDLK_SELECT","","",null,null],[17,"SDLK_STOP","","",null,null],[17,"SDLK_AGAIN","","",null,null],[17,"SDLK_UNDO","","",null,null],[17,"SDLK_CUT","","",null,null],[17,"SDLK_COPY","","",null,null],[17,"SDLK_PASTE","","",null,null],[17,"SDLK_FIND","","",null,null],[17,"SDLK_MUTE","","",null,null],[17,"SDLK_VOLUMEUP","","",null,null],[17,"SDLK_VOLUMEDOWN","","",null,null],[17,"SDLK_KPCOMMA","","",null,null],[17,"SDLK_KPEQUALSAS400","","",null,null],[17,"SDLK_ALTERASE","","",null,null],[17,"SDLK_SYSREQ","","",null,null],[17,"SDLK_CANCEL","","",null,null],[17,"SDLK_CLEAR","","",null,null],[17,"SDLK_PRIOR","","",null,null],[17,"SDLK_RETURN2","","",null,null],[17,"SDLK_SEPARATOR","","",null,null],[17,"SDLK_OUT","","",null,null],[17,"SDLK_OPER","","",null,null],[17,"SDLK_CLEARAGAIN","","",null,null],[17,"SDLK_CRSEL","","",null,null],[17,"SDLK_EXSEL","","",null,null],[17,"SDLK_KP00","","",null,null],[17,"SDLK_KP000","","",null,null],[17,"SDLK_THOUSANDSSEPARATOR","","",null,null],[17,"SDLK_DECIMALSEPARATOR","","",null,null],[17,"SDLK_CURRENCYUNIT","","",null,null],[17,"SDLK_CURRENCYSUBUNIT","","",null,null],[17,"SDLK_KPLEFTPAREN","","",null,null],[17,"SDLK_KPRIGHTPAREN","","",null,null],[17,"SDLK_KPLEFTBRACE","","",null,null],[17,"SDLK_KPRIGHTBRACE","","",null,null],[17,"SDLK_KPTAB","","",null,null],[17,"SDLK_KPBACKSPACE","","",null,null],[17,"SDLK_KPA","","",null,null],[17,"SDLK_KPB","","",null,null],[17,"SDLK_KPC","","",null,null],[17,"SDLK_KPD","","",null,null],[17,"SDLK_KPE","","",null,null],[17,"SDLK_KPF","","",null,null],[17,"SDLK_KPXOR","","",null,null],[17,"SDLK_KPPOWER","","",null,null],[17,"SDLK_KPPERCENT","","",null,null],[17,"SDLK_KPLESS","","",null,null],[17,"SDLK_KPGREATER","","",null,null],[17,"SDLK_KPAMPERSAND","","",null,null],[17,"SDLK_KPDBLAMPERSAND","","",null,null],[17,"SDLK_KPVERTICALBAR","","",null,null],[17,"SDLK_KPDBLVERTICALBAR","","",null,null],[17,"SDLK_KPCOLON","","",null,null],[17,"SDLK_KPHASH","","",null,null],[17,"SDLK_KPSPACE","","",null,null],[17,"SDLK_KPAT","","",null,null],[17,"SDLK_KPEXCLAM","","",null,null],[17,"SDLK_KPMEMSTORE","","",null,null],[17,"SDLK_KPMEMRECALL","","",null,null],[17,"SDLK_KPMEMCLEAR","","",null,null],[17,"SDLK_KPMEMADD","","",null,null],[17,"SDLK_KPMEMSUBTRACT","","",null,null],[17,"SDLK_KPMEMMULTIPLY","","",null,null],[17,"SDLK_KPMEMDIVIDE","","",null,null],[17,"SDLK_KPPLUSMINUS","","",null,null],[17,"SDLK_KPCEAR","","",null,null],[17,"SDLK_KPCLEARENTRY","","",null,null],[17,"SDLK_KPBINARY","","",null,null],[17,"SDLK_KPOCTAL","","",null,null],[17,"SDLK_KPDECIMAL","","",null,null],[17,"SDLK_KPHEXADECIMAL","","",null,null],[17,"SDLK_LCTRL","","",null,null],[17,"SDLK_LSHIFT","","",null,null],[17,"SDLK_LALT","","",null,null],[17,"SDLK_LGUI","","",null,null],[17,"SDLK_RCTRL","","",null,null],[17,"SDLK_RSHIFT","","",null,null],[17,"SDLK_RALT","","",null,null],[17,"SDLK_RGUI","","",null,null],[17,"SDLK_MODE","","",null,null],[17,"SDLK_AUDIONEXT","","",null,null],[17,"SDLK_AUDIOPREV","","",null,null],[17,"SDLK_AUDIOSTOP","","",null,null],[17,"SDLK_AUDIOPLAY","","",null,null],[17,"SDLK_AUDIOMUTE","","",null,null],[17,"SDLK_MEDIASELECT","","",null,null],[17,"SDLK_WWW","","",null,null],[17,"SDLK_MAIL","","",null,null],[17,"SDLK_CALCULATOR","","",null,null],[17,"SDLK_COMPUTER","","",null,null],[17,"SDLK_ACSEARCH","","",null,null],[17,"SDLK_ACHOME","","",null,null],[17,"SDLK_ACBACK","","",null,null],[17,"SDLK_ACFORWARD","","",null,null],[17,"SDLK_ACSTOP","","",null,null],[17,"SDLK_ACREFRESH","","",null,null],[17,"SDLK_ACBOOKMARKS","","",null,null],[17,"SDLK_BRIGHTNESSDOWN","","",null,null],[17,"SDLK_BRIGHTNESSUP","","",null,null],[17,"SDLK_DISPLAYSWITCH","","",null,null],[17,"SDLK_KBDILLUMTOGGLE","","",null,null],[17,"SDLK_KBDILLUMDOWN","","",null,null],[17,"SDLK_KBDILLUMUP","","",null,null],[17,"SDLK_EJECT","","",null,null],[17,"SDLK_SLEEP","","",null,null],[17,"KMOD_NONE","","",null,null],[17,"KMOD_LSHIFT","","",null,null],[17,"KMOD_RSHIFT","","",null,null],[17,"KMOD_LCTRL","","",null,null],[17,"KMOD_RCTRL","","",null,null],[17,"KMOD_LALT","","",null,null],[17,"KMOD_RALT","","",null,null],[17,"KMOD_LGUI","","",null,null],[17,"KMOD_RGUI","","",null,null],[17,"KMOD_NUM","","",null,null],[17,"KMOD_CAPS","","",null,null],[17,"KMOD_MODE","","",null,null],[17,"KMOD_RESERVED","","",null,null],[0,"audio","sdl2_sys","",null,null],[3,"SDL_AudioSpec","sdl2_sys::audio","",null,null],[12,"freq","","",0,null],[12,"format","","",0,null],[12,"channels","","",0,null],[12,"silence","","",0,null],[12,"samples","","",0,null],[12,"padding","","",0,null],[12,"size","","",0,null],[12,"callback","","",0,null],[12,"userdata","","",0,null],[3,"SDL_AudioCVT","","",null,null],[12,"needed","","",1,null],[12,"src_format","","",1,null],[12,"dst_format","","",1,null],[12,"rate_incr","","",1,null],[12,"buf","","",1,null],[12,"len","","",1,null],[12,"len_cvt","","",1,null],[12,"len_mult","","",1,null],[12,"len_ratio","","",1,null],[5,"SDL_GetNumAudioDrivers","","",null,null],[5,"SDL_GetAudioDriver","","",null,null],[5,"SDL_AudioInit","","",null,null],[5,"SDL_AudioQuit","","",null,null],[5,"SDL_GetCurrentAudioDriver","","",null,null],[5,"SDL_OpenAudio","","",null,null],[5,"SDL_GetNumAudioDevices","","",null,null],[5,"SDL_GetAudioDeviceName","","",null,null],[5,"SDL_OpenAudioDevice","","",null,null],[5,"SDL_GetAudioStatus","","",null,null],[5,"SDL_GetAudioDeviceStatus","","",null,null],[5,"SDL_PauseAudio","","",null,null],[5,"SDL_PauseAudioDevice","","",null,null],[5,"SDL_LoadWAV_RW","","",null,null],[5,"SDL_FreeWAV","","",null,null],[5,"SDL_BuildAudioCVT","","",null,null],[5,"SDL_ConvertAudio","","",null,null],[5,"SDL_MixAudio","","",null,null],[5,"SDL_MixAudioFormat","","",null,null],[5,"SDL_LockAudio","","",null,null],[5,"SDL_LockAudioDevice","","",null,null],[5,"SDL_UnlockAudio","","",null,null],[5,"SDL_UnlockAudioDevice","","",null,null],[5,"SDL_CloseAudio","","",null,null],[5,"SDL_CloseAudioDevice","","",null,null],[6,"SDL_AudioFormat","","",null,null],[6,"SDL_AudioCallback","","",null,null],[6,"SDL_AudioFilter","","",null,null],[6,"SDL_AudioDeviceID","","",null,null],[6,"SDL_AudioStatus","","",null,null],[17,"AUDIO_U8","","",null,null],[17,"AUDIO_S8","","",null,null],[17,"AUDIO_U16LSB","","",null,null],[17,"AUDIO_S16LSB","","",null,null],[17,"AUDIO_U16MSB","","",null,null],[17,"AUDIO_S16MSB","","",null,null],[17,"AUDIO_U16","","",null,null],[17,"AUDIO_S16","","",null,null],[17,"AUDIO_S32LSB","","",null,null],[17,"AUDIO_S32MSB","","",null,null],[17,"AUDIO_S32","","",null,null],[17,"AUDIO_F32LSB","","",null,null],[17,"AUDIO_F32MSB","","",null,null],[17,"AUDIO_F32","","",null,null],[17,"AUDIO_U16SYS","","",null,null],[17,"AUDIO_S16SYS","","",null,null],[17,"AUDIO_S32SYS","","",null,null],[17,"AUDIO_F32SYS","","",null,null],[17,"SDL_AUDIO_STOPPED","","",null,null],[17,"SDL_AUDIO_PLAYING","","",null,null],[17,"SDL_AUDIO_PAUSED","","",null,null],[11,"clone","","",1,null],[0,"clipboard","sdl2_sys","",null,null],[5,"SDL_SetClipboardText","sdl2_sys::clipboard","",null,null],[5,"SDL_GetClipboardText","","",null,null],[5,"SDL_HasClipboardText","","",null,null],[6,"SDL_bool","","",null,null],[0,"controller","sdl2_sys","",null,null],[3,"SDL_GameControllerButtonBind","sdl2_sys::controller","",null,null],[3,"SDL_GameControllerButtonBindData","","",null,null],[3,"SDL_GameControllerButtonBindDataHat","","",null,null],[5,"SDL_GameControllerAddMapping","","",null,null],[5,"SDL_GameControllerMappingForGUID","","",null,null],[5,"SDL_GameControllerMapping","","",null,null],[5,"SDL_IsGameController","","",null,null],[5,"SDL_GameControllerNameForIndex","","",null,null],[5,"SDL_GameControllerOpen","","",null,null],[5,"SDL_GameControllerName","","",null,null],[5,"SDL_GameControllerGetAttached","","",null,null],[5,"SDL_GameControllerGetJoystick","","",null,null],[5,"SDL_GameControllerEventState","","",null,null],[5,"SDL_GameControllerUpdate","","",null,null],[5,"SDL_GameControllerGetAxisFromString","","",null,null],[5,"SDL_GameControllerGetStringForAxis","","",null,null],[5,"SDL_GameControllerGetBindForAxis","","",null,null],[5,"SDL_GameControllerGetAxis","","",null,null],[5,"SDL_GameControllerGetButtonFromString","","",null,null],[5,"SDL_GameControllerGetStringForButton","","",null,null],[5,"SDL_GameControllerGetBindForButton","","",null,null],[5,"SDL_GameControllerGetButton","","",null,null],[5,"SDL_GameControllerClose","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_GameController","","",null,null],[6,"SDL_GameControllerBindType","","",null,null],[6,"SDL_GameControllerAxis","","",null,null],[6,"SDL_GameControllerButton","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_NONE","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_BUTTON","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_AXIS","","",null,null],[17,"SDL_CONTROLLER_BINDTYPE_HAT","","",null,null],[17,"SDL_CONTROLLER_AXIS_INVALID","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_LEFTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTX","","",null,null],[17,"SDL_CONTROLLER_AXIS_RIGHTY","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","","",null,null],[17,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","","",null,null],[17,"SDL_CONTROLLER_AXIS_MAX","","",null,null],[17,"SDL_CONTROLLER_BUTTON_INVALID","","",null,null],[17,"SDL_CONTROLLER_BUTTON_A","","",null,null],[17,"SDL_CONTROLLER_BUTTON_B","","",null,null],[17,"SDL_CONTROLLER_BUTTON_X","","",null,null],[17,"SDL_CONTROLLER_BUTTON_Y","","",null,null],[17,"SDL_CONTROLLER_BUTTON_BACK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_GUIDE","","",null,null],[17,"SDL_CONTROLLER_BUTTON_START","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","","",null,null],[17,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_UP","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","","",null,null],[17,"SDL_CONTROLLER_BUTTON_MAX","","",null,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"button","","",3,null],[11,"axis","","",3,null],[11,"hat","","",3,null],[0,"cpuinfo","sdl2_sys","",null,null],[5,"SDL_GetCPUCount","sdl2_sys::cpuinfo","",null,null],[5,"SDL_GetCPUCacheLineSize","","",null,null],[5,"SDL_HasRDTSC","","",null,null],[5,"SDL_HasAltiVec","","",null,null],[5,"SDL_HasMMX","","",null,null],[5,"SDL_Has3DNow","","",null,null],[5,"SDL_HasSSE","","",null,null],[5,"SDL_HasSSE2","","",null,null],[5,"SDL_HasSSE3","","",null,null],[5,"SDL_HasSSE41","","",null,null],[5,"SDL_HasSSE42","","",null,null],[5,"SDL_HasAVX","","",null,null],[5,"SDL_GetSystemRAM","","",null,null],[6,"SDL_bool","","",null,null],[0,"filesystem","sdl2_sys","",null,null],[5,"SDL_GetBasePath","sdl2_sys::filesystem","",null,null],[5,"SDL_GetPrefPath","","",null,null],[0,"haptic","sdl2_sys","",null,null],[3,"SDL_HapticDirection","sdl2_sys::haptic","",null,null],[12,"type_","","",5,null],[12,"dir","","",5,null],[3,"SDL_HapticConstant","","",null,null],[12,"type_","","",6,null],[12,"direction","","",6,null],[12,"length","","",6,null],[12,"delay","","",6,null],[12,"button","","",6,null],[12,"interval","","",6,null],[12,"level","","",6,null],[12,"attack_length","","",6,null],[12,"attack_level","","",6,null],[12,"fade_length","","",6,null],[12,"fade_level","","",6,null],[3,"SDL_HapticPeriodic","","",null,null],[12,"type_","","",7,null],[12,"direction","","",7,null],[12,"length","","",7,null],[12,"delay","","",7,null],[12,"button","","",7,null],[12,"interval","","",7,null],[12,"period","","",7,null],[12,"magnitude","","",7,null],[12,"offset","","",7,null],[12,"phase","","",7,null],[12,"attack_length","","",7,null],[12,"attack_level","","",7,null],[12,"fade_length","","",7,null],[12,"fade_level","","",7,null],[3,"SDL_HapticCondition","","",null,null],[12,"type_","","",8,null],[12,"direction","","",8,null],[12,"length","","",8,null],[12,"delay","","",8,null],[12,"button","","",8,null],[12,"interval","","",8,null],[12,"right_sat","","",8,null],[12,"left_sat","","",8,null],[12,"right_coeff","","",8,null],[12,"left_coeff","","",8,null],[12,"deadband","","",8,null],[12,"center","","",8,null],[3,"SDL_HapticRamp","","",null,null],[12,"type_","","",9,null],[12,"length","","",9,null],[12,"delay","","",9,null],[12,"button","","",9,null],[12,"interval","","",9,null],[12,"start","","",9,null],[12,"end","","",9,null],[12,"attack_length","","",9,null],[12,"attack_level","","",9,null],[12,"fade_length","","",9,null],[12,"fade_level","","",9,null],[3,"SDL_HapticLeftRight","","",null,null],[12,"type_","","",10,null],[12,"length","","",10,null],[12,"large_magnitude","","",10,null],[12,"small_magnitude","","",10,null],[3,"SDL_HapticCustom","","",null,null],[12,"type_","","",11,null],[12,"direction","","",11,null],[12,"length","","",11,null],[12,"delay","","",11,null],[12,"button","","",11,null],[12,"interval","","",11,null],[12,"channels","","",11,null],[12,"period","","",11,null],[12,"samples","","",11,null],[12,"data","","",11,null],[12,"attack_length","","",11,null],[12,"attack_level","","",11,null],[12,"fade_length","","",11,null],[12,"fade_level","","",11,null],[3,"SDL_HapticEffect","","",null,null],[12,"data","","",12,null],[5,"SDL_NumHaptics","","",null,null],[5,"SDL_HapticName","","",null,null],[5,"SDL_HapticOpen","","",null,null],[5,"SDL_HapticOpened","","",null,null],[5,"SDL_HapticIndex","","",null,null],[5,"SDL_MouseIsHaptic","","",null,null],[5,"SDL_HapticOpenFromMouse","","",null,null],[5,"SDL_JoystickIsHaptic","","",null,null],[5,"SDL_HapticOpenFromJoystick","","",null,null],[5,"SDL_HapticClose","","",null,null],[5,"SDL_HapticNumEffects","","",null,null],[5,"SDL_HapticNumEffectsPlaying","","",null,null],[5,"SDL_HapticQuery","","",null,null],[5,"SDL_HapticNumAxes","","",null,null],[5,"SDL_HapticEffectSupported","","",null,null],[5,"SDL_HapticNewEffect","","",null,null],[5,"SDL_HapticUpdateEffect","","",null,null],[5,"SDL_HapticRunEffect","","",null,null],[5,"SDL_HapticStopEffect","","",null,null],[5,"SDL_HapticDestroyEffect","","",null,null],[5,"SDL_HapticGetEffectStatus","","",null,null],[5,"SDL_HapticSetGain","","",null,null],[5,"SDL_HapticSetAutocenter","","",null,null],[5,"SDL_HapticPause","","",null,null],[5,"SDL_HapticUnpause","","",null,null],[5,"SDL_HapticStopAll","","",null,null],[5,"SDL_HapticRumbleSupported","","",null,null],[5,"SDL_HapticRumbleInit","","",null,null],[5,"SDL_HapticRumblePlay","","",null,null],[5,"SDL_HapticRumbleStop","","",null,null],[6,"SDL_Haptic","","",null,null],[17,"SDL_HAPTIC_CONSTANT","","",null,null],[17,"SDL_HAPTIC_SINE","","",null,null],[17,"SDL_HAPTIC_LEFTRIGHT","","",null,null],[17,"SDL_HAPTIC_TRIANGLE","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHUP","","",null,null],[17,"SDL_HAPTIC_SAWTOOTHDOWN","","",null,null],[17,"SDL_HAPTIC_RAMP","","",null,null],[17,"SDL_HAPTIC_SPRING","","",null,null],[17,"SDL_HAPTIC_DAMPER","","",null,null],[17,"SDL_HAPTIC_INERTIA","","",null,null],[17,"SDL_HAPTIC_FRICTION","","",null,null],[17,"SDL_HAPTIC_CUSTOM","","",null,null],[17,"SDL_HAPTIC_GAIN","","",null,null],[17,"SDL_HAPTIC_AUTOCENTER","","",null,null],[17,"SDL_HAPTIC_STATUS","","",null,null],[17,"SDL_HAPTIC_PAUSE","","",null,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"type_","","",12,null],[11,"constant","","",12,null],[11,"periodic","","",12,null],[11,"condition","","",12,null],[11,"ramp","","",12,null],[11,"left_right","","",12,null],[11,"custom","","",12,null],[0,"gesture","sdl2_sys","",null,null],[5,"SDL_RecordGesture","sdl2_sys::gesture","",null,null],[5,"SDL_SaveAllDollarTemplates","","",null,null],[5,"SDL_SaveDollarTemplate","","",null,null],[5,"SDL_LoadDollarTemplates","","",null,null],[6,"SDL_GestureID","","",null,null],[0,"joystick","sdl2_sys","",null,null],[3,"SDL_JoystickGUID","sdl2_sys::joystick","",null,null],[12,"data","","",13,null],[5,"SDL_NumJoysticks","","",null,null],[5,"SDL_JoystickNameForIndex","","",null,null],[5,"SDL_JoystickOpen","","",null,null],[5,"SDL_JoystickName","","",null,null],[5,"SDL_JoystickGetDeviceGUID","","",null,null],[5,"SDL_JoystickGetGUID","","",null,null],[5,"SDL_JoystickGetGUIDString","","",null,null],[5,"SDL_JoystickGetGUIDFromString","","",null,null],[5,"SDL_JoystickGetAttached","","",null,null],[5,"SDL_JoystickInstanceID","","",null,null],[5,"SDL_JoystickNumAxes","","",null,null],[5,"SDL_JoystickNumBalls","","",null,null],[5,"SDL_JoystickNumHats","","",null,null],[5,"SDL_JoystickNumButtons","","",null,null],[5,"SDL_JoystickUpdate","","",null,null],[5,"SDL_JoystickEventState","","",null,null],[5,"SDL_JoystickGetAxis","","",null,null],[5,"SDL_JoystickGetHat","","",null,null],[5,"SDL_JoystickGetBall","","",null,null],[5,"SDL_JoystickGetButton","","",null,null],[5,"SDL_JoystickClose","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_Joystick","","",null,null],[11,"hash","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[0,"keyboard","sdl2_sys","",null,null],[3,"SDL_Keysym","sdl2_sys::keyboard","",null,null],[12,"scancode","","",14,null],[12,"sym","","",14,null],[12,"_mod","","",14,null],[12,"unused","","",14,null],[5,"SDL_GetKeyboardFocus","","",null,null],[5,"SDL_GetKeyboardState","","",null,null],[5,"SDL_GetModState","","",null,null],[5,"SDL_SetModState","","",null,null],[5,"SDL_GetKeyFromScancode","","",null,null],[5,"SDL_GetScancodeFromKey","","",null,null],[5,"SDL_GetScancodeName","","",null,null],[5,"SDL_GetScancodeFromName","","",null,null],[5,"SDL_GetKeyName","","",null,null],[5,"SDL_GetKeyFromName","","",null,null],[5,"SDL_StartTextInput","","",null,null],[5,"SDL_IsTextInputActive","","",null,null],[5,"SDL_StopTextInput","","",null,null],[5,"SDL_SetTextInputRect","","",null,null],[5,"SDL_HasScreenKeyboardSupport","","",null,null],[5,"SDL_IsScreenKeyboardShown","","",null,null],[6,"SDL_bool","","",null,null],[11,"clone","","",14,null],[0,"messagebox","sdl2_sys","",null,null],[5,"SDL_ShowSimpleMessageBox","sdl2_sys::messagebox","",null,null],[6,"SDL_MessageBoxFlags","","",null,null],[17,"SDL_MESSAGEBOX_ERROR","","",null,null],[17,"SDL_MESSAGEBOX_WARNING","","",null,null],[17,"SDL_MESSAGEBOX_INFORMATION","","",null,null],[0,"rect","sdl2_sys","",null,null],[3,"SDL_Point","sdl2_sys::rect","A structure that defines a two dimensional point.",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"SDL_Rect","","A structure that defines a rectangle, with the origin at the upper left.",null,null],[12,"x","","",16,null],[12,"y","","",16,null],[12,"w","","",16,null],[12,"h","","",16,null],[5,"SDL_HasIntersection","","",null,null],[5,"SDL_IntersectRect","","",null,null],[5,"SDL_UnionRect","","",null,null],[5,"SDL_EnclosePoints","","",null,null],[5,"SDL_IntersectRectAndLine","","",null,null],[6,"SDL_bool","","",null,null],[11,"hash","","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"hash","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[0,"pixels","sdl2_sys","",null,null],[3,"SDL_Color","sdl2_sys::pixels","",null,null],[12,"r","","",17,null],[12,"g","","",17,null],[12,"b","","",17,null],[12,"a","","",17,null],[3,"SDL_Palette","","",null,null],[12,"ncolors","","",18,null],[12,"colors","","",18,null],[12,"version","","",18,null],[12,"refcount","","",18,null],[3,"SDL_PixelFormat","","",null,null],[12,"format","","",19,null],[12,"palette","","",19,null],[12,"BitsPerPixel","","",19,null],[12,"BytesPerPixel","","",19,null],[12,"padding","","",19,null],[12,"Rmask","","",19,null],[12,"Gmask","","",19,null],[12,"Bmask","","",19,null],[12,"Amask","","",19,null],[12,"Rloss","","",19,null],[12,"Gloss","","",19,null],[12,"Bloss","","",19,null],[12,"Aloss","","",19,null],[12,"Rshift","","",19,null],[12,"Gshift","","",19,null],[12,"Bshift","","",19,null],[12,"Ashift","","",19,null],[12,"refcount","","",19,null],[12,"next","","",19,null],[5,"SDL_GetRGB","","",null,null],[5,"SDL_GetRGBA","","",null,null],[5,"SDL_MapRGB","","",null,null],[5,"SDL_MapRGBA","","",null,null],[5,"SDL_PixelFormatEnumToMasks","","",null,null],[5,"SDL_MasksToPixelFormatEnum","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_PixelFormatEnum","","",null,null],[17,"SDL_PIXELFORMAT_UNKNOWN","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX1MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4LSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX4MSB","","",null,null],[17,"SDL_PIXELFORMAT_INDEX8","","",null,null],[17,"SDL_PIXELFORMAT_RGB332","","",null,null],[17,"SDL_PIXELFORMAT_RGB444","","",null,null],[17,"SDL_PIXELFORMAT_RGB555","","",null,null],[17,"SDL_PIXELFORMAT_BGR555","","",null,null],[17,"SDL_PIXELFORMAT_ARGB4444","","",null,null],[17,"SDL_PIXELFORMAT_RGBA4444","","",null,null],[17,"SDL_PIXELFORMAT_ABGR4444","","",null,null],[17,"SDL_PIXELFORMAT_BGRA4444","","",null,null],[17,"SDL_PIXELFORMAT_ARGB1555","","",null,null],[17,"SDL_PIXELFORMAT_RGBA5551","","",null,null],[17,"SDL_PIXELFORMAT_ABGR1555","","",null,null],[17,"SDL_PIXELFORMAT_BGRA5551","","",null,null],[17,"SDL_PIXELFORMAT_RGB565","","",null,null],[17,"SDL_PIXELFORMAT_BGR565","","",null,null],[17,"SDL_PIXELFORMAT_RGB24","","",null,null],[17,"SDL_PIXELFORMAT_BGR24","","",null,null],[17,"SDL_PIXELFORMAT_RGB888","","",null,null],[17,"SDL_PIXELFORMAT_RGBX8888","","",null,null],[17,"SDL_PIXELFORMAT_BGR888","","",null,null],[17,"SDL_PIXELFORMAT_BGRX8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB8888","","",null,null],[17,"SDL_PIXELFORMAT_RGBA8888","","",null,null],[17,"SDL_PIXELFORMAT_ABGR8888","","",null,null],[17,"SDL_PIXELFORMAT_BGRA8888","","",null,null],[17,"SDL_PIXELFORMAT_ARGB2101010","","",null,null],[17,"SDL_PIXELFORMAT_YV12","","",null,null],[17,"SDL_PIXELFORMAT_IYUV","","",null,null],[17,"SDL_PIXELFORMAT_YUY2","","",null,null],[17,"SDL_PIXELFORMAT_UYVY","","",null,null],[17,"SDL_PIXELFORMAT_YVYU","","",null,null],[11,"clone","","",17,null],[0,"render","sdl2_sys","",null,null],[3,"SDL_RendererInfo","sdl2_sys::render","",null,null],[12,"name","","",20,null],[12,"flags","","",20,null],[12,"num_texture_formats","","",20,null],[12,"texture_formats","","",20,null],[12,"max_texture_width","","",20,null],[12,"max_texture_height","","",20,null],[3,"SDL_Renderer","","",null,null],[3,"SDL_Texture","","",null,null],[5,"SDL_GetNumRenderDrivers","","",null,null],[5,"SDL_GetRenderDriverInfo","","",null,null],[5,"SDL_CreateWindowAndRenderer","","",null,null],[5,"SDL_CreateRenderer","","",null,null],[5,"SDL_CreateSoftwareRenderer","","",null,null],[5,"SDL_GetRenderer","","",null,null],[5,"SDL_GetRendererInfo","","",null,null],[5,"SDL_GetRendererOutputSize","","",null,null],[5,"SDL_CreateTexture","","",null,null],[5,"SDL_CreateTextureFromSurface","","",null,null],[5,"SDL_QueryTexture","","",null,null],[5,"SDL_SetTextureColorMod","","",null,null],[5,"SDL_GetTextureColorMod","","",null,null],[5,"SDL_SetTextureAlphaMod","","",null,null],[5,"SDL_GetTextureAlphaMod","","",null,null],[5,"SDL_SetTextureBlendMode","","",null,null],[5,"SDL_GetTextureBlendMode","","",null,null],[5,"SDL_UpdateTexture","","",null,null],[5,"SDL_UpdateYUVTexture","","",null,null],[5,"SDL_LockTexture","","",null,null],[5,"SDL_UnlockTexture","","",null,null],[5,"SDL_RenderTargetSupported","","",null,null],[5,"SDL_SetRenderTarget","","",null,null],[5,"SDL_GetRenderTarget","","",null,null],[5,"SDL_RenderSetLogicalSize","","",null,null],[5,"SDL_RenderGetLogicalSize","","",null,null],[5,"SDL_RenderSetViewport","","",null,null],[5,"SDL_RenderGetViewport","","",null,null],[5,"SDL_RenderSetClipRect","","",null,null],[5,"SDL_RenderGetClipRect","","",null,null],[5,"SDL_RenderSetScale","","",null,null],[5,"SDL_RenderGetScale","","",null,null],[5,"SDL_SetRenderDrawColor","","",null,null],[5,"SDL_GetRenderDrawColor","","",null,null],[5,"SDL_SetRenderDrawBlendMode","","",null,null],[5,"SDL_GetRenderDrawBlendMode","","",null,null],[5,"SDL_RenderClear","","",null,null],[5,"SDL_RenderDrawPoint","","",null,null],[5,"SDL_RenderDrawPoints","","",null,null],[5,"SDL_RenderDrawLine","","",null,null],[5,"SDL_RenderDrawLines","","",null,null],[5,"SDL_RenderDrawRect","","",null,null],[5,"SDL_RenderDrawRects","","",null,null],[5,"SDL_RenderFillRect","","",null,null],[5,"SDL_RenderFillRects","","",null,null],[5,"SDL_RenderCopy","","",null,null],[5,"SDL_RenderCopyEx","","",null,null],[5,"SDL_RenderReadPixels","","",null,null],[5,"SDL_RenderPresent","","",null,null],[5,"SDL_DestroyTexture","","",null,null],[5,"SDL_DestroyRenderer","","",null,null],[5,"SDL_GL_BindTexture","","",null,null],[5,"SDL_GL_UnbindTexture","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_RendererFlags","","",null,null],[6,"SDL_TextureAccess","","",null,null],[6,"SDL_TextureModulate","","",null,null],[6,"SDL_RendererFlip","","",null,null],[6,"SDL_BlendMode","","",null,null],[17,"SDL_RENDERER_SOFTWARE","","",null,null],[17,"SDL_RENDERER_ACCELERATED","","",null,null],[17,"SDL_RENDERER_PRESENTVSYNC","","",null,null],[17,"SDL_RENDERER_TARGETTEXTURE","","",null,null],[17,"SDL_TEXTUREACCESS_STATIC","","",null,null],[17,"SDL_TEXTUREACCESS_STREAMING","","",null,null],[17,"SDL_TEXTUREACCESS_TARGET","","",null,null],[17,"SDL_TEXTUREMODULATE_NONE","","",null,null],[17,"SDL_TEXTUREMODULATE_COLOR","","",null,null],[17,"SDL_TEXTUREMODULATE_ALPHA","","",null,null],[17,"SDL_FLIP_NONE","","",null,null],[17,"SDL_FLIP_HORIZONTAL","","",null,null],[17,"SDL_FLIP_VERTICAL","","",null,null],[17,"SDL_BLENDMODE_NONE","","",null,null],[17,"SDL_BLENDMODE_BLEND","","",null,null],[17,"SDL_BLENDMODE_ADD","","",null,null],[17,"SDL_BLENDMODE_MOD","","",null,null],[0,"rwops","sdl2_sys","",null,null],[3,"SDL_RWops","sdl2_sys::rwops","",null,null],[12,"size","","",21,null],[12,"seek","","",21,null],[12,"read","","",21,null],[12,"write","","",21,null],[12,"close","","",21,null],[12,"type_","","",21,null],[5,"SDL_RWFromFile","","",null,null],[5,"SDL_RWFromFP","","",null,null],[5,"SDL_RWFromMem","","",null,null],[5,"SDL_RWFromConstMem","","",null,null],[5,"SDL_AllocRW","","",null,null],[5,"SDL_FreeRW","","",null,null],[6,"SDL_bool","","",null,null],[7,"RW_SEEK_SET","","",null,null],[7,"RW_SEEK_CUR","","",null,null],[7,"RW_SEEK_END","","",null,null],[0,"surface","sdl2_sys","",null,null],[3,"SDL_BlitMap","sdl2_sys::surface","",null,null],[3,"SDL_Surface","","",null,null],[12,"flags","","",22,null],[12,"format","","",22,null],[12,"w","","",22,null],[12,"h","","",22,null],[12,"pitch","","",22,null],[12,"pixels","","",22,null],[12,"userdata","","",22,null],[12,"locked","","",22,null],[12,"lock_data","","",22,null],[12,"clip_rect","","",22,null],[12,"map","","",22,null],[12,"refcount","","",22,null],[5,"SDL_CreateRGBSurface","","",null,null],[5,"SDL_CreateRGBSurfaceFrom","","",null,null],[5,"SDL_FreeSurface","","",null,null],[5,"SDL_SetSurfacePalette","","",null,null],[5,"SDL_LockSurface","","",null,null],[5,"SDL_UnlockSurface","","",null,null],[5,"SDL_LoadBMP_RW","","",null,null],[5,"SDL_SaveBMP_RW","","",null,null],[5,"SDL_SetSurfaceRLE","","",null,null],[5,"SDL_SetColorKey","","",null,null],[5,"SDL_GetColorKey","","",null,null],[5,"SDL_SetSurfaceColorMod","","",null,null],[5,"SDL_GetSurfaceColorMod","","",null,null],[5,"SDL_SetSurfaceAlphaMod","","",null,null],[5,"SDL_GetSurfaceAlphaMod","","",null,null],[5,"SDL_SetSurfaceBlendMode","","",null,null],[5,"SDL_GetSurfaceBlendMode","","",null,null],[5,"SDL_SetClipRect","","",null,null],[5,"SDL_GetClipRect","","",null,null],[5,"SDL_ConvertSurface","","",null,null],[5,"SDL_ConvertSurfaceFormat","","",null,null],[5,"SDL_ConvertPixels","","",null,null],[5,"SDL_FillRect","","",null,null],[5,"SDL_FillRects","","",null,null],[5,"SDL_UpperBlit","","",null,null],[5,"SDL_LowerBlit","","",null,null],[5,"SDL_SoftStretch","","",null,null],[5,"SDL_UpperBlitScaled","","",null,null],[5,"SDL_LowerBlitScaled","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_SurfaceFlag","","",null,null],[17,"SDL_SWSURFACE","","",null,null],[17,"SDL_PREALLOC","","",null,null],[17,"SDL_RLEACCEL","","",null,null],[17,"SDL_DONTFREE","","",null,null],[0,"touch","sdl2_sys","",null,null],[3,"Finger","sdl2_sys::touch","",null,null],[5,"SDL_GetNumTouchDevices","","",null,null],[5,"SDL_GetTouchDevice","","",null,null],[5,"SDL_GetNumTouchFingers","","",null,null],[5,"SDL_GetTouchFinger","","",null,null],[6,"SDL_TouchID","","",null,null],[6,"SDL_FingerID","","",null,null],[6,"SDL_Finger","","",null,null],[6,"TouchDevice","","",null,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[0,"video","sdl2_sys","",null,null],[3,"SDL_Window","sdl2_sys::video","",null,null],[3,"SDL_DisplayMode","","",null,null],[12,"format","","",24,null],[12,"w","","",24,null],[12,"h","","",24,null],[12,"refresh_rate","","",24,null],[12,"driverdata","","",24,null],[4,"SDL_WindowFlags","","",null,null],[13,"SDL_WINDOW_FULLSCREEN","","",25,null],[13,"SDL_WINDOW_OPENGL","","",25,null],[13,"SDL_WINDOW_SHOWN","","",25,null],[13,"SDL_WINDOW_HIDDEN","","",25,null],[13,"SDL_WINDOW_BORDERLESS","","",25,null],[13,"SDL_WINDOW_RESIZABLE","","",25,null],[13,"SDL_WINDOW_MINIMIZED","","",25,null],[13,"SDL_WINDOW_MAXIMIZED","","",25,null],[13,"SDL_WINDOW_INPUT_GRABBED","","",25,null],[13,"SDL_WINDOW_INPUT_FOCUS","","",25,null],[13,"SDL_WINDOW_MOUSE_FOCUS","","",25,null],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",25,null],[13,"SDL_WINDOW_FOREIGN","","",25,null],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",25,null],[4,"SDL_WindowEventID","","",null,null],[13,"SDL_WINDOWEVENT_NONE","","",26,null],[13,"SDL_WINDOWEVENT_SHOWN","","",26,null],[13,"SDL_WINDOWEVENT_HIDDEN","","",26,null],[13,"SDL_WINDOWEVENT_EXPOSED","","",26,null],[13,"SDL_WINDOWEVENT_MOVED","","",26,null],[13,"SDL_WINDOWEVENT_RESIZED","","",26,null],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",26,null],[13,"SDL_WINDOWEVENT_MINIMIZED","","",26,null],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",26,null],[13,"SDL_WINDOWEVENT_RESTORED","","",26,null],[13,"SDL_WINDOWEVENT_ENTER","","",26,null],[13,"SDL_WINDOWEVENT_LEAVE","","",26,null],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",26,null],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",26,null],[13,"SDL_WINDOWEVENT_CLOSE","","",26,null],[4,"SDL_GLattr","","",null,null],[13,"SDL_GL_RED_SIZE","","",27,null],[13,"SDL_GL_GREEN_SIZE","","",27,null],[13,"SDL_GL_BLUE_SIZE","","",27,null],[13,"SDL_GL_ALPHA_SIZE","","",27,null],[13,"SDL_GL_BUFFER_SIZE","","",27,null],[13,"SDL_GL_DOUBLEBUFFER","","",27,null],[13,"SDL_GL_DEPTH_SIZE","","",27,null],[13,"SDL_GL_STENCIL_SIZE","","",27,null],[13,"SDL_GL_ACCUM_RED_SIZE","","",27,null],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",27,null],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",27,null],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",27,null],[13,"SDL_GL_STEREO","","",27,null],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",27,null],[13,"SDL_GL_MULTISAMPLESAMPLES","","",27,null],[13,"SDL_GL_ACCELERATED_VISUAL","","",27,null],[13,"SDL_GL_RETAINED_BACKING","","",27,null],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",27,null],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",27,null],[13,"SDL_GL_CONTEXT_EGL","","",27,null],[13,"SDL_GL_CONTEXT_FLAGS","","",27,null],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",27,null],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",27,null],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",27,null],[4,"SDL_GLprofile","","",null,null],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",28,null],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",28,null],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",28,null],[5,"SDL_GetNumVideoDrivers","","",null,null],[5,"SDL_GetVideoDriver","","",null,null],[5,"SDL_VideoInit","","",null,null],[5,"SDL_VideoQuit","","",null,null],[5,"SDL_GetCurrentVideoDriver","","",null,null],[5,"SDL_GetNumVideoDisplays","","",null,null],[5,"SDL_GetDisplayName","","",null,null],[5,"SDL_GetDisplayBounds","","",null,null],[5,"SDL_GetNumDisplayModes","","",null,null],[5,"SDL_GetDisplayMode","","",null,null],[5,"SDL_GetDesktopDisplayMode","","",null,null],[5,"SDL_GetCurrentDisplayMode","","",null,null],[5,"SDL_GetClosestDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayIndex","","",null,null],[5,"SDL_SetWindowDisplayMode","","",null,null],[5,"SDL_GetWindowDisplayMode","","",null,null],[5,"SDL_GetWindowPixelFormat","","",null,null],[5,"SDL_CreateWindow","","",null,null],[5,"SDL_CreateWindowFrom","","",null,null],[5,"SDL_GetWindowID","","",null,null],[5,"SDL_GetWindowFromID","","",null,null],[5,"SDL_GetWindowFlags","","",null,null],[5,"SDL_SetWindowTitle","","",null,null],[5,"SDL_GetWindowTitle","","",null,null],[5,"SDL_SetWindowIcon","","",null,null],[5,"SDL_SetWindowData","","",null,null],[5,"SDL_GetWindowData","","",null,null],[5,"SDL_SetWindowPosition","","",null,null],[5,"SDL_GetWindowPosition","","",null,null],[5,"SDL_SetWindowSize","","",null,null],[5,"SDL_GetWindowSize","","",null,null],[5,"SDL_SetWindowMinimumSize","","",null,null],[5,"SDL_GetWindowMinimumSize","","",null,null],[5,"SDL_SetWindowMaximumSize","","",null,null],[5,"SDL_GetWindowMaximumSize","","",null,null],[5,"SDL_SetWindowBordered","","",null,null],[5,"SDL_ShowWindow","","",null,null],[5,"SDL_HideWindow","","",null,null],[5,"SDL_RaiseWindow","","",null,null],[5,"SDL_MaximizeWindow","","",null,null],[5,"SDL_MinimizeWindow","","",null,null],[5,"SDL_RestoreWindow","","",null,null],[5,"SDL_SetWindowFullscreen","","",null,null],[5,"SDL_GetWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurface","","",null,null],[5,"SDL_UpdateWindowSurfaceRects","","",null,null],[5,"SDL_SetWindowGrab","","",null,null],[5,"SDL_GetWindowGrab","","",null,null],[5,"SDL_SetWindowBrightness","","",null,null],[5,"SDL_GetWindowBrightness","","",null,null],[5,"SDL_SetWindowGammaRamp","","",null,null],[5,"SDL_GetWindowGammaRamp","","",null,null],[5,"SDL_DestroyWindow","","",null,null],[5,"SDL_IsScreenSaverEnabled","","",null,null],[5,"SDL_EnableScreenSaver","","",null,null],[5,"SDL_DisableScreenSaver","","",null,null],[5,"SDL_GL_GetDrawableSize","","",null,null],[5,"SDL_GL_LoadLibrary","","",null,null],[5,"SDL_GL_GetProcAddress","","",null,null],[5,"SDL_GL_UnloadLibrary","","",null,null],[5,"SDL_GL_ExtensionSupported","","",null,null],[5,"SDL_GL_SetAttribute","","",null,null],[5,"SDL_GL_GetAttribute","","",null,null],[5,"SDL_GL_CreateContext","","",null,null],[5,"SDL_GL_MakeCurrent","","",null,null],[5,"SDL_GL_GetCurrentWindow","","",null,null],[5,"SDL_GL_GetCurrentContext","","",null,null],[5,"SDL_GL_SetSwapInterval","","",null,null],[5,"SDL_GL_GetSwapInterval","","",null,null],[5,"SDL_GL_SwapWindow","","",null,null],[5,"SDL_GL_DeleteContext","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_WindowPos","","",null,null],[6,"SDL_GLContext","","",null,null],[17,"SDL_WINDOWPOS_CENTERED","","",null,null],[17,"SDL_WINDOWPOS_UNDEFINED","","",null,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[0,"mouse","sdl2_sys","",null,null],[5,"SDL_GetMouseFocus","sdl2_sys::mouse","",null,null],[5,"SDL_GetMouseState","","",null,null],[5,"SDL_GetRelativeMouseState","","",null,null],[5,"SDL_WarpMouseInWindow","","",null,null],[5,"SDL_SetRelativeMouseMode","","",null,null],[5,"SDL_GetRelativeMouseMode","","",null,null],[5,"SDL_CreateCursor","","",null,null],[5,"SDL_CreateColorCursor","","",null,null],[5,"SDL_CreateSystemCursor","","",null,null],[5,"SDL_SetCursor","","",null,null],[5,"SDL_GetCursor","","",null,null],[5,"SDL_GetDefaultCursor","","",null,null],[5,"SDL_FreeCursor","","",null,null],[5,"SDL_ShowCursor","","",null,null],[6,"SDL_bool","","",null,null],[6,"SDL_Cursor","","",null,null],[6,"SDL_SystemCursor","","",null,null],[6,"SDL_MouseState","","",null,null],[17,"SDL_SYSTEM_CURSOR_ARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_IBEAM","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAIT","","",null,null],[17,"SDL_SYSTEM_CURSOR_CROSSHAIR","","",null,null],[17,"SDL_SYSTEM_CURSOR_WAITARROW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENWSE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENESW","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEWE","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZENS","","",null,null],[17,"SDL_SYSTEM_CURSOR_SIZEALL","","",null,null],[17,"SDL_SYSTEM_CURSOR_NO","","",null,null],[17,"SDL_SYSTEM_CURSOR_HAND","","",null,null],[17,"SDL_NUM_SYSTEM_CURSORS","","",null,null],[17,"SDL_DISABLE","","",null,null],[17,"SDL_ENABLE","","",null,null],[17,"SDL_QUERY","","",null,null],[17,"SDL_BUTTON_LEFT","","",null,null],[17,"SDL_BUTTON_MIDDLE","","",null,null],[17,"SDL_BUTTON_RIGHT","","",null,null],[17,"SDL_BUTTON_X1","","",null,null],[17,"SDL_BUTTON_X2","","",null,null],[17,"SDL_BUTTON_LMASK","","",null,null],[17,"SDL_BUTTON_MMASK","","",null,null],[17,"SDL_BUTTON_RMASK","","",null,null],[17,"SDL_BUTTON_X1MASK","","",null,null],[17,"SDL_BUTTON_X2MASK","","",null,null],[0,"sdl","sdl2_sys","",null,null],[5,"SDL_ClearError","sdl2_sys::sdl","",null,null],[5,"SDL_Error","","",null,null],[5,"SDL_SetError","","",null,null],[5,"SDL_GetError","","",null,null],[5,"SDL_Init","","",null,null],[5,"SDL_InitSubSystem","","",null,null],[5,"SDL_QuitSubSystem","","",null,null],[5,"SDL_WasInit","","",null,null],[5,"SDL_Quit","","",null,null],[5,"SDL_GetTicks","","",null,null],[6,"SDL_errorcode","","",null,null],[6,"SDL_InitFlag","","",null,null],[17,"SDL_ENOMEM","","",null,null],[17,"SDL_EFREAD","","",null,null],[17,"SDL_EFWRITE","","",null,null],[17,"SDL_EFSEEK","","",null,null],[17,"SDL_UNSUPPORTED","","",null,null],[17,"SDL_LASTERROR","","",null,null],[17,"SDL_INIT_TIMER","","",null,null],[17,"SDL_INIT_AUDIO","","",null,null],[17,"SDL_INIT_VIDEO","","",null,null],[17,"SDL_INIT_JOYSTICK","","",null,null],[17,"SDL_INIT_HAPTIC","","",null,null],[17,"SDL_INIT_GAMECONTROLLER","","",null,null],[17,"SDL_INIT_EVENTS","","",null,null],[17,"SDL_INIT_NOPARACHUTE","","",null,null],[17,"SDL_INIT_EVERYTHING","","",null,null],[0,"timer","sdl2_sys","",null,null],[5,"SDL_GetTicks","sdl2_sys::timer","",null,null],[5,"SDL_GetPerformanceCounter","","",null,null],[5,"SDL_GetPerformanceFrequency","","",null,null],[5,"SDL_Delay","","",null,null],[5,"SDL_AddTimer","","",null,null],[5,"SDL_RemoveTimer","","",null,null],[6,"SDL_TimerCallback","","",null,null],[6,"SDL_TimerID","","",null,null],[0,"hint","sdl2_sys","",null,null],[4,"SDL_HintPriority","sdl2_sys::hint","",null,null],[13,"SDL_HINT_DEFAULT","","",29,null],[13,"SDL_HINT_NORMAL","","",29,null],[13,"SDL_HINT_OVERRIDE","","",29,null],[5,"SDL_SetHint","","",null,null],[5,"SDL_GetHint","","",null,null],[5,"SDL_SetHintWithPriority","","",null,null],[6,"SDL_bool","","",null,null],[11,"clone","","",29,null]],"paths":[[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBindData"],[3,"SDL_GameControllerButtonBindDataHat"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_HapticEffect"],[3,"SDL_JoystickGUID"],[3,"SDL_Keysym"],[3,"SDL_Point"],[3,"SDL_Rect"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_RendererInfo"],[3,"SDL_RWops"],[3,"SDL_Surface"],[3,"Finger"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_HintPriority"]]};
searchIndex["aho_corasick"] = {"doc":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","items":[[3,"Match","aho_corasick","Records a match in the search text.",null,null],[12,"pati","","The pattern index.",0,null],[12,"start","","The starting byte offset of the match in the search text.",0,null],[12,"end","","The ending byte offset of the match in the search text.",0,null],[3,"Matches","","An iterator of non-overlapping matches for in-memory text.",null,null],[3,"MatchesOverlapping","","An iterator of overlapping matches for in-memory text.",null,null],[3,"StreamMatches","","An iterator of non-overlapping matches for streaming text.",null,null],[3,"StreamMatchesOverlapping","","An iterator of overlapping matches for streaming text.",null,null],[3,"FullAcAutomaton","","A complete Aho-Corasick automaton.",null,null],[3,"AcAutomaton","","An Aho-Corasick finite automaton.",null,null],[3,"Dense","","State transitions that can be stored either sparsely or densely.",null,null],[3,"Sparse","","State transitions that are always sparse.",null,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"next","","",1,null],[11,"fmt","","",2,null],[11,"next","","",2,null],[11,"fmt","","",3,null],[11,"next","","",3,null],[11,"fmt","","",4,null],[11,"next","","",4,null],[11,"clone","","",5,null],[11,"new","","Build a new expanded Aho-Corasick automaton from an existing\nAho-Corasick automaton.",5,{"inputs":[{"name":"acautomaton"}],"output":{"name":"fullacautomaton"}}],[11,"next_state","","",5,null],[11,"get_match","","",5,null],[11,"has_match","","",5,null],[11,"start_bytes","","",5,null],[11,"patterns","","",5,null],[11,"pattern","","",5,null],[11,"fmt","","",5,null],[6,"StateIdx","","The integer type used for the state index.",null,null],[8,"Automaton","","An abstraction over automatons and their corresponding iterators.\nThe type parameter `P` is the type of the pattern that was used to\nconstruct this Automaton.",null,null],[10,"next_state","","Return the next state given the current state and next character.",6,null],[10,"has_match","","Return true if and only if the given state and current pattern index\nindicate a match.",6,null],[10,"get_match","","Build a match given the current state, pattern index and input index.",6,null],[10,"start_bytes","","Return the set of bytes that have transitions in the root state.",6,null],[10,"patterns","","Returns all of the patterns matched by this automaton.",6,null],[10,"pattern","","Returns the pattern indexed at `i`.",6,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null],[8,"Transitions","","An abstraction over state transition strategies.",null,null],[10,"new","","Return a new state at the given depth.",7,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"goto","","Return the next state index given the next character.",7,null],[10,"set_goto","","Set the next state index for the character given.",7,null],[10,"heap_bytes","","The memory use in bytes (on the heap) of this set of transitions.",7,null],[11,"clone","","",8,null],[11,"new","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"with_transitions","","Create a new automaton from an iterator of patterns.",8,{"inputs":[{"name":"i"}],"output":{"name":"acautomaton"}}],[11,"into_full","","Build out the entire automaton into a single matrix.",8,null],[11,"next_state","","",8,null],[11,"get_match","","",8,null],[11,"has_match","","",8,null],[11,"start_bytes","","",8,null],[11,"patterns","","",8,null],[11,"pattern","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"dense"}}],[11,"goto","","",9,null],[11,"set_goto","","",9,null],[11,"heap_bytes","","",9,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[{"name":"u32"}],"output":{"name":"sparse"}}],[11,"goto","","",10,null],[11,"set_goto","","",10,null],[11,"heap_bytes","","",10,null],[11,"from_iter","","Create an automaton from an iterator of strings.",8,{"inputs":[{"name":"t"}],"output":{"name":"acautomaton"}}],[11,"fmt","","",8,null],[11,"len","","Return the number of patterns in the automaton.",6,null],[11,"is_empty","","Returns true if the automaton has no patterns.",6,null],[11,"find","","Returns an iterator of non-overlapping matches in `s`.",6,null],[11,"find_overlapping","","Returns an iterator of overlapping matches in `s`.",6,null],[11,"stream_find","","Returns an iterator of non-overlapping matches in the given reader.",6,null],[11,"stream_find_overlapping","","Returns an iterator of overlapping matches in the given reader.",6,null]],"paths":[[3,"Match"],[3,"Matches"],[3,"StreamMatches"],[3,"MatchesOverlapping"],[3,"StreamMatchesOverlapping"],[3,"FullAcAutomaton"],[8,"Automaton"],[8,"Transitions"],[3,"AcAutomaton"],[3,"Dense"],[3,"Sparse"]]};
searchIndex["memchr"] = {"doc":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe interface\nto the corresponding functions in `libc`.","items":[[5,"memchr","memchr","A safe interface to `memchr`.",null,null],[5,"memrchr","","A safe interface to `memrchr`.",null,null],[5,"memchr2","","Like `memchr`, but searches for two bytes instead of one.",null,null],[5,"memchr3","","Like `memchr`, but searches for three bytes instead of one.",null,null]],"paths":[]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,null],[11,"next_u64","","",26,null],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,null],[11,"next_u64","","Return the next random u64.",28,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,null],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,null],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,null],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,null],[11,"next_u64","","",30,null],[11,"next_f32","","",30,null],[11,"next_f64","","",30,null],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,null],[11,"next","","",32,null],[11,"clone","","",33,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",34,null],[11,"next_u64","","",34,null],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,null],[11,"next_u32","","",35,null],[11,"next_u64","","",35,null],[11,"fill_bytes","","",35,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a regular expression parser and an abstract syntax for\nregular expressions. The abstract syntax is defined by the `Expr` type. The\nconcrete syntax is enumerated in the\n[`regex`](../regex/index.html#syntax)\ncrate documentation.","items":[[3,"Literals","regex_syntax","A set of literal byte strings extracted from a regular expression.",null,null],[3,"Lit","","A single member of a set of literals extracted from a regular expression.",null,null],[3,"CharClass","","A character class.",null,null],[3,"ClassRange","","A single inclusive range in a character class.",null,null],[12,"start","","The start character of the range.",0,null],[12,"end","","The end character of the range.",0,null],[3,"ByteClass","","A byte class for byte ranges only.",null,null],[3,"ByteRange","","A single inclusive range in a byte class.",null,null],[12,"start","","The start byte of the range.",1,null],[12,"end","","The end byte of the range.",1,null],[3,"ExprBuilder","","A builder for configuring regular expression parsing.",null,null],[3,"Error","","A parse error.",null,null],[4,"Expr","","A regular expression abstract syntax tree.",null,null],[13,"Empty","","An empty regex (which never matches any text).",2,null],[13,"Literal","","A sequence of one or more literal characters to be matched.",2,null],[12,"chars","regex_syntax::Expr","The characters.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"LiteralBytes","regex_syntax","A sequence of one or more literal bytes to be matched.",2,null],[12,"bytes","regex_syntax::Expr","The bytes.",2,null],[12,"casei","","Whether to match case insensitively.",2,null],[13,"AnyChar","regex_syntax","Match any character.",2,null],[13,"AnyCharNoNL","","Match any character, excluding new line (`0xA`).",2,null],[13,"AnyByte","","Match any byte.",2,null],[13,"AnyByteNoNL","","Match any byte, excluding new line (`0xA`).",2,null],[13,"Class","","A character class.",2,null],[13,"ClassBytes","","A character class with byte ranges only.",2,null],[13,"StartLine","","Match the start of a line or beginning of input.",2,null],[13,"EndLine","","Match the end of a line or end of input.",2,null],[13,"StartText","","Match the beginning of input.",2,null],[13,"EndText","","Match the end of input.",2,null],[13,"WordBoundary","","Match a word boundary (word character on one side and a non-word\ncharacter on the other).",2,null],[13,"NotWordBoundary","","Match a position that is not a word boundary (word or non-word\ncharacters on both sides).",2,null],[13,"WordBoundaryAscii","","Match an ASCII word boundary.",2,null],[13,"NotWordBoundaryAscii","","Match a position that is not an ASCII word boundary.",2,null],[13,"Group","","A group, possibly non-capturing.",2,null],[12,"e","regex_syntax::Expr","The expression inside the group.",2,null],[12,"i","","The capture index (starting at `1`) only for capturing groups.",2,null],[12,"name","","The capture name, only for capturing named groups.",2,null],[13,"Repeat","regex_syntax","A repeat operator (`?`, `*`, `+` or `{m,n}`).",2,null],[12,"e","regex_syntax::Expr","The expression to be repeated. Limited to literals, `.`, classes\nor grouped expressions.",2,null],[12,"r","","The type of repeat operator used.",2,null],[12,"greedy","","Whether the repeat is greedy (match the most) or not (match the\nleast).",2,null],[13,"Concat","regex_syntax","A concatenation of expressions. Must be matched one after the other.",2,null],[13,"Alternate","","An alternation of expressions. Only one must match.",2,null],[4,"Repeater","","The type of a repeat operator expression.",null,null],[13,"ZeroOrOne","","Match zero or one (`?`).",3,null],[13,"ZeroOrMore","","Match zero or more (`*`).",3,null],[13,"OneOrMore","","Match one or more (`+`).",3,null],[13,"Range","","Match for at least `min` and at most `max` (`{m,n}`).",3,null],[12,"min","regex_syntax::Repeater","Lower bound on the number of matches.",3,null],[12,"max","","Optional upper bound on the number of matches.",3,null],[4,"ErrorKind","regex_syntax","The specific type of parse error that can occur.",null,null],[13,"DoubleFlagNegation","","A negation symbol is used twice in flag settings.\ne.g., `(?-i-s)`.",4,null],[13,"DuplicateCaptureName","","The same capture name was used more than once.\ne.g., `(?P&lt;a&gt;.)(?P&lt;a&gt;.)`.",4,null],[13,"EmptyAlternate","","An alternate is empty. e.g., `(|a)`.",4,null],[13,"EmptyCaptureName","","A capture group name is empty. e.g., `(?P&lt;&gt;a)`.",4,null],[13,"EmptyFlagNegation","","A negation symbol was not proceded by any flags. e.g., `(?i-)`.",4,null],[13,"EmptyGroup","","A group is empty. e.g., `()`.",4,null],[13,"InvalidBase10","","An invalid number was used in a counted repetition. e.g., `a{b}`.",4,null],[13,"InvalidBase16","","An invalid hexadecimal number was used in an escape sequence.\ne.g., `\\xAG`.",4,null],[13,"InvalidCaptureName","","An invalid capture name was used. e.g., `(?P&lt;0a&gt;b)`.",4,null],[13,"InvalidClassRange","","An invalid class range was givien. Specifically, when the start of the\nrange is greater than the end. e.g., `[z-a]`.",4,null],[12,"start","regex_syntax::ErrorKind","The first character specified in the range.",4,null],[12,"end","","The second character specified in the range.",4,null],[13,"InvalidClassEscape","regex_syntax","An escape sequence was used in a character class where it is not\nallowed. e.g., `[a-\\pN]` or `[\\A]`.",4,null],[13,"InvalidRepeatRange","","An invalid counted repetition min/max was given. e.g., `a{2,1}`.",4,null],[12,"min","regex_syntax::ErrorKind","The first number specified in the repetition.",4,null],[12,"max","","The second number specified in the repetition.",4,null],[13,"InvalidScalarValue","regex_syntax","An invalid Unicode scalar value was used in a long hexadecimal\nsequence. e.g., `\\x{D800}`.",4,null],[13,"MissingBase10","","An empty counted repetition operator. e.g., `a{}`.",4,null],[13,"RepeaterExpectsExpr","","A repetition operator was not applied to an expression. e.g., `*`.",4,null],[13,"RepeaterUnexpectedExpr","","A repetition operator was applied to an expression that cannot be\nrepeated. e.g., `a+*` or `a|*`.",4,null],[13,"UnclosedCaptureName","","A capture group name that is never closed. e.g., `(?P&lt;a`.",4,null],[13,"UnclosedHex","","An unclosed hexadecimal literal. e.g., `\\x{a`.",4,null],[13,"UnclosedParen","","An unclosed parenthesis. e.g., `(a`.",4,null],[13,"UnclosedRepeat","","An unclosed counted repetition operator. e.g., `a{2`.",4,null],[13,"UnclosedUnicodeName","","An unclosed named Unicode class. e.g., `\\p{Yi`.",4,null],[13,"UnexpectedClassEof","","Saw end of regex before class was closed. e.g., `[a`.",4,null],[13,"UnexpectedEscapeEof","","Saw end of regex before escape sequence was closed. e.g., `\\`.",4,null],[13,"UnexpectedFlagEof","","Saw end of regex before flags were closed. e.g., `(?i`.",4,null],[13,"UnexpectedTwoDigitHexEof","","Saw end of regex before two hexadecimal digits were seen. e.g., `\\xA`.",4,null],[13,"UnopenedParen","","Unopened parenthesis. e.g., `)`.",4,null],[13,"UnrecognizedEscape","","Unrecognized escape sequence. e.g., `\\q`.",4,null],[13,"UnrecognizedFlag","","Unrecognized flag. e.g., `(?a)`.",4,null],[13,"UnrecognizedUnicodeClass","","Unrecognized named Unicode class. e.g., `\\p{Foo}`.",4,null],[13,"StackExhausted","","Indicates that the regex uses too much nesting.",4,null],[13,"FlagNotAllowed","","A disallowed flag was found (e.g., `u`).",4,null],[13,"UnicodeNotAllowed","","A Unicode class was used when the Unicode (`u`) flag was disabled.",4,null],[13,"InvalidUtf8","","InvalidUtf8 indicates that the expression may match non-UTF-8 bytes.\nThis never returned if the parser is permitted to allow expressions\nthat match arbitrary bytes.",4,null],[5,"quote","","Escapes all regular expression meta characters in `text`.",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"cmp","","",6,null],[11,"clone","","",6,null],[11,"empty","","Returns a new empty set of literals using default limits.",5,{"inputs":[],"output":{"name":"literals"}}],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",5,null],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",5,null],[11,"limit_class","","Get the character class size limit for this set.",5,null],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",5,null],[11,"literals","","Returns the set of literals as a slice. Its order is unspecified.",5,null],[11,"all_complete","","Returns true if all members in this set are complete.",5,null],[11,"any_complete","","Returns true if any member in this set is complete.",5,null],[11,"contains_empty","","Returns true if this set contains an empty literal.",5,null],[11,"is_empty","","Returns true if this set is empty or if all of its members is empty.",5,null],[11,"to_empty","","Returns a new empty set of literals using this set&#39;s limits.",5,null],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this set.",5,null],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this set.",5,null],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that are\nguaranteed to be unambiguous.",5,null],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",5,null],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",5,null],[11,"union","","Unions this set with another set.",5,null],[11,"cross_product","","Extends this set with another set.",5,null],[11,"cross_add","","Extends each literal in this set with the bytes given.",5,null],[11,"add","","Adds the given literal to this set.",5,null],[11,"add_char_class","","Extends each literal in this set with the character class given.",5,null],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",5,null],[11,"cut","","Cuts every member of this set. When a member is cut, it can never\nbe extended.",5,null],[11,"reverse","","Reverses all members in place.",5,null],[11,"clear","","Clears this set of all members.",5,null],[11,"fmt","","",5,null],[11,"new","","Returns a new complete literal with the bytes given.",6,{"inputs":[{"name":"vec"}],"output":{"name":"lit"}}],[11,"empty","","Returns a new complete empty literal.",6,{"inputs":[],"output":{"name":"lit"}}],[11,"is_cut","","Returns true if this literal was &quot;cut.&quot;",6,null],[11,"cut","","Cuts this literal.",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"fmt","","",6,null],[11,"as_ref","","",6,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",7,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",7,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",7,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",7,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",7,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",7,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",7,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",7,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",7,null],[11,"as_slice","","Extracts a slice containing the entire vector.",7,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",7,null],[11,"set_len","","Sets the length of a vector.",7,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",7,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",7,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",7,null],[11,"retain","","Retains only the elements specified by the predicate.",7,null],[11,"push","","Appends an element to the back of a collection.",7,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",7,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",7,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",7,null],[11,"clear","","Clears the vector, removing all values.",7,null],[11,"len","","Returns the number of elements in the vector.",7,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",7,null],[11,"split_off","","Splits the collection into two at the given index.",7,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",7,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",7,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",7,null],[11,"clone","collections::binary_heap","",8,null],[11,"clone_from","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",8,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",8,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",8,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",8,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",8,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",8,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",8,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",8,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",8,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",8,null],[11,"push","","Pushes an item onto the binary heap.",8,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",8,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",8,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",8,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",8,null],[11,"len","","Returns the length of the binary heap.",8,null],[11,"is_empty","","Checks if the binary heap is empty.",8,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",8,null],[11,"clear","","Drops all items from the binary heap.",8,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",8,null],[11,"clone","","",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"clone","","",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"next_back","","",11,null],[11,"from","","",8,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",7,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",8,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",8,null],[11,"extend","","",8,null],[11,"extend","","",8,null],[11,"drop","collections::btree::map","",12,null],[11,"clone","","",12,null],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",12,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",12,null],[11,"get","","Returns a reference to the value corresponding to the key.",12,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",12,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",12,null],[11,"insert","","Inserts a key-value pair into the map.",12,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",12,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",12,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",12,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",12,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",12,null],[11,"split_off","","Splits the collection into two at the given key. Returns everything after the given key,\nincluding the key.",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"len","","",13,null],[11,"clone","","",13,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"len","","",14,null],[11,"into_iter","","",12,null],[11,"drop","","",15,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"next_back","","",15,null],[11,"len","","",15,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"next_back","","",16,null],[11,"len","","",16,null],[11,"clone","","",16,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"next_back","","",17,null],[11,"len","","",17,null],[11,"clone","","",17,null],[11,"next","","",18,null],[11,"next","","",19,null],[11,"size_hint","","",19,null],[11,"next_back","","",19,null],[11,"len","","",19,null],[11,"next_back","","",18,null],[11,"clone","","",18,null],[11,"next","","",20,null],[11,"next_back","","",20,null],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",12,null],[11,"extend","","",12,null],[11,"hash","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",12,null],[11,"partial_cmp","","",12,null],[11,"cmp","","",12,null],[11,"fmt","","",12,null],[11,"index","","",12,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",12,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",12,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",12,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",12,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",12,null],[11,"len","","Returns the number of elements in the map.",12,null],[11,"is_empty","","Returns true if the map contains no elements.",12,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",21,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",21,null],[11,"key","","Returns a reference to this entry&#39;s key.",21,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",22,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",22,null],[11,"key","","Gets a reference to the key in the entry.",23,null],[11,"get","","Gets a reference to the value in the entry.",23,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",23,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",23,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",23,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",23,null],[11,"partial_cmp","collections::btree::set","",24,null],[11,"lt","","",24,null],[11,"le","","",24,null],[11,"gt","","",24,null],[11,"ge","","",24,null],[11,"cmp","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"hash","","",24,null],[11,"clone","","",24,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",24,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",24,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",24,null],[11,"difference","","Visits the values representing the difference, in ascending order.",24,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",24,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",24,null],[11,"union","","Visits the values representing the union, in ascending order.",24,null],[11,"len","","Returns the number of elements in the set.",24,null],[11,"is_empty","","Returns true if the set contains no elements.",24,null],[11,"clear","","Clears the set, removing all values.",24,null],[11,"contains","","Returns `true` if the set contains a value.",24,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",24,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",24,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",24,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",24,null],[11,"insert","","Adds a value to the set.",24,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",24,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",24,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",24,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",24,null],[11,"split_off","","Splits the collection into two at the given key. Returns everything after the given key,\nincluding the key.",24,null],[11,"from_iter","","",24,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",24,null],[11,"extend","","",24,null],[11,"extend","","",24,null],[11,"default","","",24,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"next_back","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"next_back","","",26,null],[11,"len","","",26,null],[11,"clone","","",27,null],[11,"next","","",27,null],[11,"next_back","","",27,null],[11,"clone","","",28,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"clone","","",29,null],[11,"next","","",29,null],[11,"size_hint","","",29,null],[11,"clone","","",30,null],[11,"next","","",30,null],[11,"size_hint","","",30,null],[11,"clone","","",31,null],[11,"next","","",31,null],[11,"size_hint","","",31,null],[11,"borrow","collections::borrow","",32,null],[11,"clone","","",32,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",32,null],[11,"into_owned","","Extracts the owned data.",32,null],[11,"deref","","",32,null],[11,"cmp","","",32,null],[11,"eq","","",32,null],[11,"partial_cmp","","",32,null],[11,"fmt","","",32,null],[11,"fmt","","",32,null],[11,"hash","","",32,null],[11,"as_ref","","",32,null],[11,"hash","collections::enum_set","",33,null],[11,"cmp","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"new","","Returns an empty `EnumSet`.",33,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",33,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",33,null],[11,"clear","","",33,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",33,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",33,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",33,null],[11,"union","","Returns the union of both `EnumSets`.",33,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",33,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",33,null],[11,"remove","","Removes an enum from the EnumSet",33,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",33,null],[11,"iter","","Returns an iterator over an `EnumSet`.",33,null],[11,"sub","","",33,null],[11,"bitor","","",33,null],[11,"bitand","","",33,null],[11,"bitxor","","",33,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",33,null],[11,"extend","","",33,null],[11,"clone","collections::linked_list","",35,null],[11,"clone","","",36,null],[11,"default","","",37,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",37,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",37,null],[11,"iter","","Provides a forward iterator.",37,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",37,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",37,null],[11,"len","","Returns the length of the `LinkedList`.",37,null],[11,"clear","","Removes all elements from the `LinkedList`.",37,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",37,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",37,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",37,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",37,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",37,null],[11,"push_front","","Adds an element first in the list.",37,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",37,null],[11,"push_back","","Appends an element to the back of a list",37,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",37,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",37,null],[11,"front_place","","Returns a place for insertion at the front of the list.",37,null],[11,"back_place","","Returns a place for insertion at the back of the list.",37,null],[11,"drop","","",37,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"next_back","","",35,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"next_back","","",38,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",38,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",38,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"next_back","","",36,null],[11,"from_iter","","",37,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",37,null],[11,"extend","","",37,null],[11,"extend","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"partial_cmp","","",37,null],[11,"cmp","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"hash","","",37,null],[11,"make_place","","",39,null],[11,"pointer","","",39,null],[11,"finalize","","",39,null],[11,"make_place","","",40,null],[11,"pointer","","",40,null],[11,"finalize","","",40,null],[11,"start","core::ops","",41,null],[11,"end","","",42,null],[11,"start","","",43,null],[11,"end","","",43,null],[11,"borrow","collections::vec","",7,null],[11,"borrow_mut","","",7,null],[11,"clone","collections::str","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"borrow","collections::string","",45,null],[11,"fmt","core::str::pattern","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"clone","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"haystack","","",47,null],[11,"next","","",47,null],[11,"next_match","","",47,null],[11,"next_reject","","",47,null],[11,"next_back","","",47,null],[11,"next_match_back","","",47,null],[11,"next_reject_back","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"haystack","","",48,null],[11,"next","","",48,null],[11,"next_match","","",48,null],[11,"next_reject","","",48,null],[11,"next_back","","",48,null],[11,"next_match_back","","",48,null],[11,"next_reject_back","","",48,null],[11,"clone","","",49,null],[11,"fmt","","",49,null],[11,"haystack","","",49,null],[11,"next","","",49,null],[11,"next_match","","",49,null],[11,"next_reject","","",49,null],[11,"next_back","","",49,null],[11,"next_match_back","","",49,null],[11,"next_reject_back","","",49,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"haystack","","",50,null],[11,"next","","",50,null],[11,"next_match","","",50,null],[11,"next_back","","",50,null],[11,"next_match_back","","",50,null],[11,"cmp","collections::string","",45,null],[11,"partial_cmp","","",45,null],[11,"lt","","",45,null],[11,"le","","",45,null],[11,"gt","","",45,null],[11,"ge","","",45,null],[11,"fmt","","",51,null],[11,"fmt","","",52,null],[11,"new","","Creates a new empty `String`.",45,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",45,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",45,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",45,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",45,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",45,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",45,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",45,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",45,null],[11,"as_str","","Extracts a string slice containing the entire string.",45,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",45,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",45,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",45,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",45,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",45,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",45,null],[11,"push","","Appends the given `char` to the end of this `String`.",45,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",45,null],[11,"truncate","","Shortens this `String` to the specified length.",45,null],[11,"pop","","Removes the last character from the string buffer and returns it.",45,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",45,null],[11,"insert","","Inserts a character into this `String` at a byte position.",45,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",45,null],[11,"len","","Returns the length of this `String`, in bytes.",45,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",45,null],[11,"clear","","Truncates this `String`, removing all contents.",45,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",45,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",45,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",51,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",51,null],[11,"fmt","","",51,null],[11,"fmt","","",52,null],[11,"clone","","",45,null],[11,"clone_from","","",45,null],[11,"from_iter","","",45,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",45,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",45,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"extend","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"eq","collections::borrow","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","collections::string","",45,null],[11,"ne","","",45,null],[11,"default","","",45,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",45,null],[11,"fmt","","",45,null],[11,"hash","","",45,null],[11,"add","","",45,null],[11,"index","","",45,null],[11,"index","","",45,null],[11,"index","","",45,null],[11,"index","","",45,null],[11,"index","","",45,null],[11,"index","","",45,null],[11,"index_mut","","",45,null],[11,"index_mut","","",45,null],[11,"index_mut","","",45,null],[11,"index_mut","","",45,null],[11,"index_mut","","",45,null],[11,"index_mut","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"from_str","","",45,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"fmt","","",53,null],[11,"eq","","",53,null],[11,"as_ref","","",45,null],[11,"as_ref","","",45,null],[11,"from","","",45,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",32,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",32,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",45,null],[11,"write_str","","",45,null],[11,"write_char","","",45,null],[11,"drop","","",54,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"clone","collections::vec","",7,null],[11,"clone_from","","",7,null],[11,"hash","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"index_mut","","",7,null],[11,"deref","","",7,null],[11,"deref_mut","","",7,null],[11,"from_iter","","",7,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",7,null],[11,"extend","","",7,null],[11,"extend","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","collections::borrow","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"eq","collections::vec","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"cmp","","",7,null],[11,"drop","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"from","","",7,null],[11,"from","","",7,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",32,null],[11,"from","","",32,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",32,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",55,null],[11,"size_hint","","",55,null],[11,"count","","",55,null],[11,"next_back","","",55,null],[11,"clone","","",55,null],[11,"drop","","",55,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"next_back","","",56,null],[11,"drop","","",56,null],[11,"clone","collections::vec_deque","",57,null],[11,"drop","","",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",57,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",57,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",57,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",57,null],[11,"swap","","Swaps elements at indices `i` and `j`.",57,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",57,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",57,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",57,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",57,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",57,null],[11,"iter","","Returns a front-to-back iterator.",57,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",57,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",57,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",57,null],[11,"len","","Returns the number of elements in the `VecDeque`.",57,null],[11,"is_empty","","Returns true if the buffer contains no elements",57,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",57,null],[11,"clear","","Clears the buffer, removing all values.",57,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",57,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",57,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",57,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",57,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",57,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",57,null],[11,"push_front","","Inserts an element first in the sequence.",57,null],[11,"push_back","","Appends an element to the back of a buffer",57,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",57,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",57,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",57,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",57,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",57,null],[11,"split_off","","Splits the collection into two at the given index.",57,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",57,null],[11,"retain","","Retains only the elements specified by the predicate.",57,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",57,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"next_back","","",59,null],[11,"clone","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"drop","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"eq","","",57,null],[11,"partial_cmp","","",57,null],[11,"cmp","","",57,null],[11,"hash","","",57,null],[11,"index","","",57,null],[11,"index_mut","","",57,null],[11,"from_iter","","",57,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",57,null],[11,"extend","","",57,null],[11,"extend","","",57,null],[11,"fmt","","",57,null],[11,"from","","",57,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",7,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"eq","collections","",62,null],[11,"ne","","",62,null],[11,"hash","","",62,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"clone","alloc::boxed","",63,null],[11,"pointer","","",64,null],[11,"make_place","","",64,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",64,null],[11,"finalize","","",65,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",63,null],[11,"drop","","",64,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",65,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",65,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",65,null],[11,"default","","",65,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",65,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",65,null],[11,"clone","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"partial_cmp","","",65,null],[11,"lt","","",65,null],[11,"le","","",65,null],[11,"ge","","",65,null],[11,"gt","","",65,null],[11,"cmp","","",65,null],[11,"hash","","",65,null],[11,"from","","",65,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",65,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",65,null],[11,"fmt","","",65,null],[11,"fmt","","",65,null],[11,"fmt","","",65,null],[11,"deref","","",65,null],[11,"deref_mut","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"call_once","","",65,null],[11,"call_once","","",65,null],[11,"clone","","",65,null],[11,"borrow","","",65,null],[11,"borrow_mut","","",65,null],[11,"as_ref","","",65,null],[11,"as_mut","","",65,null],[11,"deref","regex_syntax","",6,null],[11,"deref_mut","","",6,null],[6,"Result","","An alias for computations that can return a `Error`.",null,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"new","","Create a new builder for configuring expression parsing.",68,{"inputs":[],"output":{"name":"exprbuilder"}}],[11,"case_insensitive","","Set the default value for the case insensitive (`i`) flag.",68,null],[11,"multi_line","","Set the default value for the multi-line matching (`m`) flag.",68,null],[11,"dot_matches_new_line","","Set the default value for the any character (`s`) flag.",68,null],[11,"swap_greed","","Set the default value for the greedy swap (`U`) flag.",68,null],[11,"ignore_whitespace","","Set the default value for the ignore whitespace (`x`) flag.",68,null],[11,"unicode","","Set the default value for the Unicode (`u`) flag.",68,null],[11,"allow_bytes","","Whether the parser allows matching arbitrary bytes or not.",68,null],[11,"nest_limit","","Set the nesting limit for regular expression parsing.",68,null],[11,"parse","","Parse a string as a regular expression using the current configuraiton.",68,null],[11,"parse","","Parses a string in a regular expression syntax tree.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"prefixes","","Returns a set of literal prefixes extracted from this expression.",2,null],[11,"suffixes","","Returns a set of literal suffixes extracted from this expression.",2,null],[11,"is_anchored_start","","Returns true if and only if the expression is required to match from\nthe beginning of text.",2,null],[11,"is_anchored_end","","Returns true if and only if the expression is required to match at the\nend of the text.",2,null],[11,"has_bytes","","Returns true if and only if the expression contains sub-expressions\nthat can match arbitrary bytes.",2,null],[11,"deref","","",66,null],[11,"into_iter","","",66,null],[11,"new","","Create a new class from an existing set of ranges.",66,{"inputs":[{"name":"vec"}],"output":{"name":"charclass"}}],[11,"matches","","Returns true if `c` is matched by this character class.",66,null],[11,"remove","","Removes the given character from the class if it exists.",66,null],[11,"negate","","Negates the character class.",66,null],[11,"case_fold","","Apply case folding to this character class.",66,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"new","","Create a new class from an existing set of ranges.",67,{"inputs":[{"name":"vec"}],"output":{"name":"byteclass"}}],[11,"matches","","Returns true if `b` is matched by this byte class.",67,null],[11,"remove","","Removes the given byte from the class if it exists.",67,null],[11,"negate","","Negates the byte class.",67,null],[11,"case_fold","","Apply case folding to this byte class.",67,null],[11,"deref","","",67,null],[11,"into_iter","","",67,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",2,null],[11,"fmt","","",3,null],[11,"fmt","","",66,null],[11,"fmt","","",0,null],[11,"fmt","","",67,null],[11,"fmt","","",1,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"position","","Returns an approximate *character* offset at which the error occurred.",69,null],[11,"kind","","Returns the type of the regex parse error.",69,null],[11,"description","","",69,null],[11,"fmt","","",69,null],[11,"fmt","","",4,null]],"paths":[[3,"ClassRange"],[3,"ByteRange"],[4,"Expr"],[4,"Repeater"],[4,"ErrorKind"],[3,"Literals"],[3,"Lit"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"EncodeUtf16"],[3,"String"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"CharClass"],[3,"ByteClass"],[3,"ExprBuilder"],[3,"Error"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",12,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",12,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",12,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",12,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",12,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",12,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",12,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",12,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",12,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",12,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",12,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",12,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",14,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",15,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",15,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",15,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",15,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",15,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",15,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",15,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",15,null],[10,"swap_bytes","","Reverses the byte order of the integer.",15,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",15,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",15,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",15,null],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",16,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",16,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["gfx"] = {"doc":"An efficient, low-level, bindless graphics API for Rust. See [the\nblog](http://gfx-rs.github.io/) for explanations and annotated examples.","items":[[0,"preset","gfx","State presets",null,null],[0,"blend","gfx::preset","Blending preset modes.",null,null],[17,"ADD","gfx::preset::blend","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",null,null],[0,"depth","gfx::preset","Depth preset modes.",null,null],[17,"LESS_EQUAL_TEST","gfx::preset::depth","&quot;&lt;=&quot; comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","&quot;&lt;=&quot; comparison with writable depth",null,null],[0,"state","gfx","Fixed-function hardware state.",null,null],[11,"fmt","draw_state::state","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"clone","","",4,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"new_fill","","Create a new filling rasterizer.",5,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",5,null],[11,"with_offset","","Add polygon offset.",5,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"stencilside"}}],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"stencil"}}],[11,"new","","Create a new stencil state with a given function.",9,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"depth"}}],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"hash","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"clone","","",11,null],[11,"cmp","","",12,null],[11,"partial_cmp","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"clone","","",12,null],[11,"cmp","","",13,null],[11,"partial_cmp","","",13,null],[11,"lt","","",13,null],[11,"le","","",13,null],[11,"gt","","",13,null],[11,"ge","","",13,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"hash","","",14,null],[11,"partial_cmp","","",14,null],[11,"lt","","",14,null],[11,"le","","",14,null],[11,"gt","","",14,null],[11,"ge","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"cmp","","",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"partial_cmp","","",15,null],[11,"lt","","",15,null],[11,"le","","",15,null],[11,"gt","","",15,null],[11,"ge","","",15,null],[11,"hash","","",15,null],[11,"clone","","",15,null],[11,"default","","",15,{"inputs":[],"output":{"name":"blend"}}],[11,"new","","Create a new blend state with a given equation.",15,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"fmt","","",15,null],[11,"hash","","",16,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,null],[11,"is_all","","Returns `true` if all flags are currently set.",16,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,null],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"bitor","","Returns the union of the two sets of flags.",16,null],[11,"bitor_assign","","Adds the set of flags.",16,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,null],[11,"bitxor_assign","","Toggles the set of flags.",16,null],[11,"bitand","","Returns the intersection between the two sets of flags.",16,null],[11,"bitand_assign","","Disables all flags disabled in the set.",16,null],[11,"sub","","Returns the set difference of the two sets of flags.",16,null],[11,"sub_assign","","Disables all flags enabled in the set.",16,null],[11,"not","","Returns the complement of this set of flags.",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"color"}}],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"refvalues"}}],[11,"partial_cmp","draw_state::target","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"hash","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"hash","","",20,null],[11,"cmp","","",20,null],[11,"partial_cmp","","",20,null],[11,"lt","","",20,null],[11,"le","","",20,null],[11,"gt","","",20,null],[11,"ge","","",20,null],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",20,null],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,null],[11,"is_all","","Returns `true` if all flags are currently set.",20,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,null],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,null],[11,"bitor_assign","","Adds the set of flags.",20,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,null],[11,"bitxor_assign","","Toggles the set of flags.",20,null],[11,"bitand","","Returns the intersection between the two sets of flags.",20,null],[11,"bitand_assign","","Disables all flags disabled in the set.",20,null],[11,"sub","","Returns the set difference of the two sets of flags.",20,null],[11,"sub_assign","","Disables all flags enabled in the set.",20,null],[11,"not","","Returns the complement of this set of flags.",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}],[4,"FrontFace","gfx::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","",null,null],[6,"OffsetSlope","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face.",3,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"cull_face","","Which face should be culled.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[12,"samples","","Multi-sampling mode.",5,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",6,null],[13,"Less","","`x &lt; y`",6,null],[13,"LessEqual","","`x &lt;= y`",6,null],[13,"Equal","","`x == y`",6,null],[13,"GreaterEqual","","`x &gt;= y`",6,null],[13,"Greater","","`x &gt; y`",6,null],[13,"NotEqual","","`x != y`",6,null],[13,"Always","","`true`",6,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",7,null],[13,"Zero","","Set the value in the stencil buffer to zero.",7,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",7,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",7,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",7,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",7,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",7,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",7,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",8,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",8,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",8,null],[12,"op_fail","","What operation to do if the stencil test fails.",8,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",8,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",8,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",9,null],[12,"back","","",9,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",10,null],[12,"write","","Specify whether to write to the depth buffer or not.",10,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",11,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",11,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",11,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",12,null],[13,"SourceAlpha","","",12,null],[13,"DestColor","","",12,null],[13,"DestAlpha","","",12,null],[13,"ConstColor","","",12,null],[13,"ConstAlpha","","",12,null],[4,"Factor","","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SourceAlphaSaturated","","",13,null],[13,"ZeroPlus","","",13,null],[13,"OneMinus","","",13,null],[3,"BlendChannel","","",null,null],[12,"equation","","",14,null],[12,"source","","",14,null],[12,"destination","","",14,null],[3,"Blend","","",null,null],[12,"color","","",15,null],[12,"alpha","","",15,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",17,null],[12,"blend","","Optional blending.",17,null],[3,"RefValues","","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",18,null],[12,"blend","","Constant blend color.",18,null],[11,"partial_cmp","gfx_core::draw","",21,null],[11,"lt","","",21,null],[11,"le","","",21,null],[11,"gt","","",21,null],[11,"ge","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,null],[11,"from","","",21,{"inputs":[{"name":"f32"}],"output":{"name":"clearcolor"}}],[11,"from","","",21,{"inputs":[{"name":"i32"}],"output":{"name":"clearcolor"}}],[11,"from","","",21,{"inputs":[{"name":"u32"}],"output":{"name":"clearcolor"}}],[11,"eq","gfx_core::dummy","",22,null],[11,"hash","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"new","","Create a new dummy device",23,{"inputs":[],"output":{"name":"dummydevice"}}],[11,"clone_empty","","",24,null],[11,"reset","","",24,null],[11,"bind_pipeline_state","","",24,null],[11,"bind_vertex_buffers","","",24,null],[11,"bind_constant_buffers","","",24,null],[11,"bind_global_constant","","",24,null],[11,"bind_resource_views","","",24,null],[11,"bind_unordered_views","","",24,null],[11,"bind_samplers","","",24,null],[11,"bind_pixel_targets","","",24,null],[11,"bind_index","","",24,null],[11,"set_scissor","","",24,null],[11,"set_ref_values","","",24,null],[11,"update_buffer","","",24,null],[11,"update_texture","","",24,null],[11,"generate_mipmap","","",24,null],[11,"clear_color","","",24,null],[11,"clear_depth_stencil","","",24,null],[11,"call_draw","","",24,null],[11,"call_draw_indexed","","",24,null],[11,"get_capabilities","","",23,null],[11,"pin_submitted_resources","","",23,null],[11,"submit","","",23,null],[11,"cleanup","","",23,null],[11,"fmt","gfx_core::factory","",25,null],[11,"clone","","",25,null],[11,"hash","","",25,null],[11,"partial_cmp","","",25,null],[11,"eq","","",25,null],[11,"cmp","","",25,null],[11,"hash","","",26,null],[11,"cmp","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"eq","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"hash","","",28,null],[11,"partial_cmp","","",28,null],[11,"lt","","",28,null],[11,"le","","",28,null],[11,"gt","","",28,null],[11,"ge","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"cmp","","",28,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"hash","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"hash","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"description","","",30,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"description","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"description","","",32,null],[11,"fmt","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"description","","",33,null],[11,"fmt","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"description","","",34,null],[11,"cause","","",34,null],[11,"from","","",34,{"inputs":[{"name":"error"}],"output":{"name":"combinederror"}}],[11,"from","","",34,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",34,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[11,"fmt","gfx_core::format","",35,null],[11,"clone","","",35,null],[11,"hash","","",35,null],[11,"partial_cmp","","",35,null],[11,"eq","","",35,null],[11,"cmp","","",35,null],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"hash","","",36,null],[11,"partial_cmp","","",36,null],[11,"eq","","",36,null],[11,"cmp","","",36,null],[11,"get_channel_type","","",36,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"hash","","",37,null],[11,"partial_cmp","","",37,null],[11,"eq","","",37,null],[11,"cmp","","",37,null],[11,"get_channel_type","","",37,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"hash","","",38,null],[11,"partial_cmp","","",38,null],[11,"eq","","",38,null],[11,"cmp","","",38,null],[11,"get_channel_type","","",38,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"hash","","",39,null],[11,"partial_cmp","","",39,null],[11,"eq","","",39,null],[11,"cmp","","",39,null],[11,"get_channel_type","","",39,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"hash","","",40,null],[11,"partial_cmp","","",40,null],[11,"eq","","",40,null],[11,"cmp","","",40,null],[11,"get_channel_type","","",40,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"hash","","",41,null],[11,"partial_cmp","","",41,null],[11,"eq","","",41,null],[11,"cmp","","",41,null],[11,"get_channel_type","","",41,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"hash","","",42,null],[11,"partial_cmp","","",42,null],[11,"eq","","",42,null],[11,"cmp","","",42,null],[11,"get_total_bits","","Return the total number of bits for this format.",42,null],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",42,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"hash","","",43,null],[11,"partial_cmp","","",43,null],[11,"eq","","",43,null],[11,"cmp","","",43,null],[11,"get_surface_type","","",43,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"hash","","",44,null],[11,"partial_cmp","","",44,null],[11,"eq","","",44,null],[11,"cmp","","",44,null],[11,"get_surface_type","","",44,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"hash","","",45,null],[11,"partial_cmp","","",45,null],[11,"eq","","",45,null],[11,"cmp","","",45,null],[11,"get_surface_type","","",45,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"hash","","",46,null],[11,"partial_cmp","","",46,null],[11,"eq","","",46,null],[11,"cmp","","",46,null],[11,"get_surface_type","","",46,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"hash","","",47,null],[11,"partial_cmp","","",47,null],[11,"eq","","",47,null],[11,"cmp","","",47,null],[11,"get_surface_type","","",47,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"hash","","",48,null],[11,"partial_cmp","","",48,null],[11,"eq","","",48,null],[11,"cmp","","",48,null],[11,"get_surface_type","","",48,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"partial_cmp","","",49,null],[11,"eq","","",49,null],[11,"cmp","","",49,null],[11,"get_surface_type","","",49,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"hash","","",50,null],[11,"partial_cmp","","",50,null],[11,"eq","","",50,null],[11,"cmp","","",50,null],[11,"get_surface_type","","",50,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"hash","","",51,null],[11,"partial_cmp","","",51,null],[11,"eq","","",51,null],[11,"cmp","","",51,null],[11,"get_surface_type","","",51,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"hash","","",52,null],[11,"partial_cmp","","",52,null],[11,"eq","","",52,null],[11,"cmp","","",52,null],[11,"get_surface_type","","",52,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"hash","","",53,null],[11,"partial_cmp","","",53,null],[11,"eq","","",53,null],[11,"cmp","","",53,null],[11,"get_surface_type","","",53,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"hash","","",54,null],[11,"partial_cmp","","",54,null],[11,"eq","","",54,null],[11,"cmp","","",54,null],[11,"get_surface_type","","",54,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"hash","","",55,null],[11,"partial_cmp","","",55,null],[11,"eq","","",55,null],[11,"cmp","","",55,null],[11,"get_surface_type","","",55,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",56,null],[11,"clone","","",56,null],[11,"hash","","",56,null],[11,"partial_cmp","","",56,null],[11,"eq","","",56,null],[11,"cmp","","",56,null],[11,"get_surface_type","","",56,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"hash","","",57,null],[11,"partial_cmp","","",57,null],[11,"eq","","",57,null],[11,"cmp","","",57,null],[11,"get_surface_type","","",57,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"hash","","",58,null],[11,"partial_cmp","","",58,null],[11,"eq","","",58,null],[11,"cmp","","",58,null],[11,"get_surface_type","","",58,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"hash","","",59,null],[11,"partial_cmp","","",59,null],[11,"eq","","",59,null],[11,"cmp","","",59,null],[11,"get_surface_type","","",59,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"hash","","",60,null],[11,"partial_cmp","","",60,null],[11,"eq","","",60,null],[11,"cmp","","",60,null],[11,"get_surface_type","","",60,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"hash","","",61,null],[11,"partial_cmp","","",61,null],[11,"eq","","",61,null],[11,"cmp","","",61,null],[11,"get_surface_type","","",61,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"hash","","",62,null],[11,"partial_cmp","","",62,null],[11,"eq","","",62,null],[11,"cmp","","",62,null],[11,"get_surface_type","","",62,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"hash","","",63,null],[11,"partial_cmp","","",63,null],[11,"eq","","",63,null],[11,"cmp","","",63,null],[11,"get_surface_type","","",63,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"hash","","",64,null],[11,"partial_cmp","","",64,null],[11,"eq","","",64,null],[11,"cmp","","",64,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"hash","","",65,null],[11,"partial_cmp","","",65,null],[11,"lt","","",65,null],[11,"le","","",65,null],[11,"gt","","",65,null],[11,"ge","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"cmp","","",65,null],[11,"new","","Create a new swizzle where each channel is unmapped.",65,{"inputs":[],"output":{"name":"swizzle"}}],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"hash","","",66,null],[11,"partial_cmp","","",66,null],[11,"lt","","",66,null],[11,"le","","",66,null],[11,"gt","","",66,null],[11,"ge","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"cmp","","",66,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"hash","","",67,null],[11,"partial_cmp","","",67,null],[11,"lt","","",67,null],[11,"le","","",67,null],[11,"gt","","",67,null],[11,"ge","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"cmp","","",67,null],[11,"from","","",67,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[11,"cast2","","Convert a 2-element slice.",67,null],[11,"cast3","","Convert a 3-element slice.",67,null],[11,"cast4","","Convert a 4-element slice.",67,null],[11,"cast_slice","","Convert a generic slice by transmutation.",67,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"hash","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"cmp","","",68,null],[11,"from","","",68,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[11,"cast2","","Convert a 2-element slice.",68,null],[11,"cast3","","Convert a 3-element slice.",68,null],[11,"cast4","","Convert a 4-element slice.",68,null],[11,"cast_slice","","Convert a generic slice by transmutation.",68,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"hash","","",69,null],[11,"partial_cmp","","",69,null],[11,"lt","","",69,null],[11,"le","","",69,null],[11,"gt","","",69,null],[11,"ge","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"cmp","","",69,null],[11,"from","","",69,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"cast2","","Convert a 2-element slice.",69,null],[11,"cast3","","Convert a 3-element slice.",69,null],[11,"cast4","","Convert a 4-element slice.",69,null],[11,"cast_slice","","Convert a generic slice by transmutation.",69,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"hash","","",70,null],[11,"partial_cmp","","",70,null],[11,"lt","","",70,null],[11,"le","","",70,null],[11,"gt","","",70,null],[11,"ge","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"cmp","","",70,null],[11,"from","","",70,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"cast2","","Convert a 2-element slice.",70,null],[11,"cast3","","Convert a 3-element slice.",70,null],[11,"cast4","","Convert a 4-element slice.",70,null],[11,"cast_slice","","Convert a generic slice by transmutation.",70,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"hash","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"cmp","","",71,null],[11,"from","","",71,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"cast2","","Convert a 2-element slice.",71,null],[11,"cast3","","Convert a 3-element slice.",71,null],[11,"cast4","","Convert a 4-element slice.",71,null],[11,"cast_slice","","Convert a generic slice by transmutation.",71,null],[11,"eq","gfx_core::handle","",72,null],[11,"ne","","",72,null],[11,"hash","","",72,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"get_info","","Get raw buffer info",72,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"hash","","",73,null],[11,"fmt","","",73,null],[11,"clone","","",73,null],[11,"new","","",73,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"raw","","",73,null],[11,"get_info","","Get the associated information about the buffer",73,null],[11,"len","","Get the number of elements in the buffer.",73,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"hash","","",74,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"get_info","","Get program info",75,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"hash","","",77,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"hash","","",78,null],[11,"fmt","","",78,null],[11,"clone","","",78,null],[11,"get_info","","Get texture descriptor",77,null],[11,"new","","",78,{"inputs":[{"name":"rawtexture"}],"output":{"name":"texture"}}],[11,"raw","","",78,null],[11,"get_info","","Get texture descriptor",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"hash","","",79,null],[11,"fmt","","",79,null],[11,"clone","","",79,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"hash","","",80,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"new","","",80,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"raw","","",80,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"hash","","",81,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"hash","","",82,null],[11,"fmt","","",82,null],[11,"clone","","",82,null],[11,"new","","",82,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"raw","","",82,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"hash","","",83,null],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"get_dimensions","","Get target dimensions",83,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"hash","","",84,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"get_dimensions","","Get target dimensions",84,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"hash","","",85,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"get_dimensions","","Get target dimensions",85,null],[11,"new","","",85,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"raw","","",85,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"hash","","",86,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"get_dimensions","","Get target dimensions",86,null],[11,"new","","",86,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"raw","","",86,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"get_info","","Get sampler info",87,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"make_buffer","","",89,null],[11,"make_shader","","",89,null],[11,"make_program","","",89,null],[11,"make_pso","","",89,null],[11,"make_texture","","",89,null],[11,"make_buffer_srv","","",89,null],[11,"make_texture_srv","","",89,null],[11,"make_buffer_uav","","",89,null],[11,"make_texture_uav","","",89,null],[11,"make_rtv","","",89,null],[11,"make_dsv","","",89,null],[11,"make_sampler","","",89,null],[11,"make_fence","","",89,null],[11,"clean_with","","",89,null],[11,"new","","Create a new handle manager",89,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",89,null],[11,"extend","","Extend with all references of another handle manager",89,null],[11,"count","","Count the total number of referenced resources",89,null],[11,"ref_buffer","","Reference a buffer",89,null],[11,"ref_shader","","Reference a shader",89,null],[11,"ref_program","","Reference a program",89,null],[11,"ref_pso","","Reference a pipeline state object",89,null],[11,"ref_texture","","Reference a texture",89,null],[11,"ref_srv","","Reference a shader resource view",89,null],[11,"ref_uav","","Reference an unordered access view",89,null],[11,"ref_rtv","","Reference an RTV",89,null],[11,"ref_dsv","","Reference a DSV",89,null],[11,"ref_sampler","","Reference a sampler",89,null],[11,"ref_fence","","Reference a fence",89,null],[11,"deref","gfx_core::mapping","",90,null],[11,"drop","","",90,null],[11,"set","","Set a value in the buffer",91,null],[11,"to_mut_slice","","Returns a mutable slice of the specified length.",91,null],[11,"drop","","",91,null],[11,"deref","","",92,null],[11,"deref_mut","","",92,null],[11,"drop","","",92,null],[11,"fmt","gfx_core::pso","",93,null],[11,"eq","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",93,null],[11,"description","","",93,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"hash","","",94,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"from","","",94,{"inputs":[{"name":"colormask"}],"output":{"name":"colorinfo"}}],[11,"from","","",94,{"inputs":[{"name":"blend"}],"output":{"name":"colorinfo"}}],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"hash","","",95,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"from","","",95,{"inputs":[{"name":"depth"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",95,{"inputs":[{"name":"stencil"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",95,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"hash","","",96,null],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"hash","","",97,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"new","","Create a new empty PSO descriptor.",97,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"fmt","","",98,null],[11,"clone","","",98,null],[11,"new","","Create an empty set",98,{"inputs":[],"output":{"name":"vertexbufferset"}}],[11,"fmt","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"new","","Create an empty set",103,{"inputs":[],"output":{"name":"pixeltargetset"}}],[11,"add_color","","Add a color view to the specified slot",103,null],[11,"add_depth_stencil","","Add a depth or stencil view to the specified slot",103,null],[11,"fmt","gfx_core::shade","",104,null],[11,"eq","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"eq","","",105,null],[11,"clone","","",105,null],[11,"fmt","","",106,null],[11,"eq","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"clone","","",107,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"can_sample","","Check if this texture can be used with a sampler.",109,null],[11,"fmt","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"fmt","","",111,null],[11,"eq","","",111,null],[11,"clone","","",111,null],[11,"fmt","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"eq","","",113,null],[11,"hash","","",113,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"hash","","",115,null],[11,"cmp","","",115,null],[11,"partial_cmp","","",115,null],[11,"lt","","",115,null],[11,"le","","",115,null],[11,"gt","","",115,null],[11,"ge","","",115,null],[11,"clone","","",115,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"fmt","","",115,null],[11,"empty","","Returns an empty set of flags.",115,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",115,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",115,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",115,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",115,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",115,null],[11,"is_all","","Returns `true` if all flags are currently set.",115,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",115,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",115,null],[11,"insert","","Inserts the specified flags in-place.",115,null],[11,"remove","","Removes the specified flags in-place.",115,null],[11,"toggle","","Toggles the specified flags in-place.",115,null],[11,"bitor","","Returns the union of the two sets of flags.",115,null],[11,"bitor_assign","","Adds the set of flags.",115,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",115,null],[11,"bitxor_assign","","Toggles the set of flags.",115,null],[11,"bitand","","Returns the intersection between the two sets of flags.",115,null],[11,"bitand_assign","","Disables all flags disabled in the set.",115,null],[11,"sub","","Returns the set difference of the two sets of flags.",115,null],[11,"sub_assign","","Disables all flags enabled in the set.",115,null],[11,"not","","Returns the complement of this set of flags.",115,null],[11,"from_iter","","",115,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"from","","",115,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"fmt","","",116,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",117,null],[11,"eq","","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"fmt","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",119,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"clone","","",121,null],[11,"fmt","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",123,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"fmt","","",124,null],[11,"description","","",124,null],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",117,null],[11,"fmt","","",125,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"fmt","","",125,null],[11,"description","","",125,null],[11,"eq","gfx_core::tex","",126,null],[11,"ne","","",126,null],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"fmt","","",126,null],[11,"description","","",126,null],[11,"fmt","","",127,null],[11,"clone","","",127,null],[11,"hash","","",127,null],[11,"partial_cmp","","",127,null],[11,"lt","","",127,null],[11,"le","","",127,null],[11,"gt","","",127,null],[11,"ge","","",127,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"cmp","","",127,null],[11,"from","","",127,{"inputs":[{"name":"u8"}],"output":{"name":"aamode"}}],[11,"get_num_fragments","","Return the number of actual data fragments stored per texel.",127,null],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",127,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"hash","","",128,null],[11,"partial_cmp","","",128,null],[11,"lt","","",128,null],[11,"le","","",128,null],[11,"gt","","",128,null],[11,"ge","","",128,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"cmp","","",128,null],[11,"fmt","","",129,null],[11,"clone","","",129,null],[11,"hash","","",129,null],[11,"partial_cmp","","",129,null],[11,"eq","","",129,null],[11,"cmp","","",129,null],[11,"fmt","","",130,null],[11,"clone","","",130,null],[11,"hash","","",130,null],[11,"partial_cmp","","",130,null],[11,"lt","","",130,null],[11,"le","","",130,null],[11,"gt","","",130,null],[11,"ge","","",130,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"cmp","","",130,null],[11,"get_dimensions","","Get texture dimensions, with 0 values where not applicable.",130,null],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",130,null],[11,"get_num_levels","","Count the number of mipmap levels.",130,null],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",130,null],[11,"is_cube","","Check if it&#39;s one of the cube kinds.",130,null],[11,"fmt","","",131,null],[11,"clone","","",131,null],[11,"hash","","",131,null],[11,"partial_cmp","","",131,null],[11,"lt","","",131,null],[11,"le","","",131,null],[11,"gt","","",131,null],[11,"ge","","",131,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"cmp","","",131,null],[11,"get_texel_count","","Get the total number of texels.",131,null],[11,"convert","","Convert into a differently typed format.",131,null],[11,"is_inside","","Check if it fits inside given dimensions.",131,null],[11,"fmt","","",132,null],[11,"clone","","",132,null],[11,"hash","","",132,null],[11,"partial_cmp","","",132,null],[11,"eq","","",132,null],[11,"cmp","","",132,null],[11,"partial_cmp","","",133,null],[11,"lt","","",133,null],[11,"le","","",133,null],[11,"gt","","",133,null],[11,"ge","","",133,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"hash","","",133,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"from","","",133,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"into","","",133,null],[11,"partial_cmp","","",134,null],[11,"lt","","",134,null],[11,"le","","",134,null],[11,"gt","","",134,null],[11,"ge","","",134,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"from","","",134,null],[11,"into","","",134,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"hash","","",135,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",135,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"hash","","",136,null],[11,"partial_cmp","","",136,null],[11,"lt","","",136,null],[11,"le","","",136,null],[11,"gt","","",136,null],[11,"ge","","",136,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"cmp","","",136,null],[11,"to_image_info","","Get image info for a given mip.",136,null],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",136,null],[11,"fmt","","",137,null],[11,"clone","","",137,null],[11,"hash","","",137,null],[11,"partial_cmp","","",137,null],[11,"lt","","",137,null],[11,"le","","",137,null],[11,"gt","","",137,null],[11,"ge","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"cmp","","",137,null],[11,"fmt","","",138,null],[11,"clone","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"lt","","",138,null],[11,"le","","",138,null],[11,"gt","","",138,null],[11,"ge","","",138,null],[11,"eq","","",138,null],[11,"ne","","",138,null],[11,"cmp","","",138,null],[11,"hash","","",139,null],[11,"cmp","","",139,null],[11,"partial_cmp","","",139,null],[11,"lt","","",139,null],[11,"le","","",139,null],[11,"gt","","",139,null],[11,"ge","","",139,null],[11,"clone","","",139,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"fmt","","",139,null],[11,"empty","","Returns an empty set of flags.",139,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",139,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",139,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",139,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",139,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",139,null],[11,"is_all","","Returns `true` if all flags are currently set.",139,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",139,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",139,null],[11,"insert","","Inserts the specified flags in-place.",139,null],[11,"remove","","Removes the specified flags in-place.",139,null],[11,"toggle","","Toggles the specified flags in-place.",139,null],[11,"bitor","","Returns the union of the two sets of flags.",139,null],[11,"bitor_assign","","Adds the set of flags.",139,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",139,null],[11,"bitxor_assign","","Toggles the set of flags.",139,null],[11,"bitand","","Returns the intersection between the two sets of flags.",139,null],[11,"bitand_assign","","Disables all flags disabled in the set.",139,null],[11,"sub","","Returns the set difference of the two sets of flags.",139,null],[11,"sub_assign","","Disables all flags enabled in the set.",139,null],[11,"not","","Returns the complement of this set of flags.",139,null],[11,"from_iter","","",139,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"fmt","","",140,null],[11,"clone","","",140,null],[11,"hash","","",140,null],[11,"partial_cmp","","",140,null],[11,"lt","","",140,null],[11,"le","","",140,null],[11,"gt","","",140,null],[11,"ge","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"cmp","","",140,null],[11,"from","","",140,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[11,"reference","gfx_core","",141,null],[11,"reference","","",142,null],[11,"reference","","",143,null],[11,"reference","","",144,null],[11,"reference","","",145,null],[11,"get_usage","","Return the aggregated stage usage for the set.",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"eq","","",148,null],[11,"hash","","",148,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"hash","","",149,null],[11,"partial_cmp","","",149,null],[11,"eq","","",149,null],[11,"cmp","","",149,null],[8,"Device","gfx","A `Device` is responsible for submitting `CommandBuffer`s to the GPU.",null,null],[16,"Resources","","Associated `Resources` type.",150,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer`\ntype.",150,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",150,null],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",150,null],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",150,null],[10,"cleanup","","Cleanup unused resources. This should be called between frames.",150,null],[8,"Resources","","Different types of a specific API.",null,null],[16,"Buffer","","",151,null],[16,"Shader","","",151,null],[16,"Program","","",151,null],[16,"PipelineStateObject","","",151,null],[16,"Texture","","",151,null],[16,"ShaderResourceView","","",151,null],[16,"UnorderedAccessView","","",151,null],[16,"RenderTargetView","","",151,null],[16,"DepthStencilView","","",151,null],[16,"Sampler","","",151,null],[16,"Fence","","",151,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",148,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",148,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a &quot;path&quot; of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",148,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",148,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",148,null],[6,"VertexCount","","",null,null],[6,"InstanceCount","","",null,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",146,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",146,null],[3,"VertexShader","","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[0,"format","","Universal format specification.\nApplicable to textures, views, and vertex buffers.",null,null],[4,"ChannelType","gfx::format","Type of a surface channel. This is how we interpret the\nstorage allocated with `SurfaceType`.",null,null],[13,"Int","","",35,null],[13,"Uint","","",35,null],[13,"Inorm","","",35,null],[13,"Unorm","","",35,null],[13,"Float","","",35,null],[13,"Srgb","","",35,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only\ncarry information about the number of bits per each channel.\nThe actual types are up to the views to decide and interpret.\nThe actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",42,null],[13,"R4_G4_B4_A4","","",42,null],[13,"R5_G5_B5_A1","","",42,null],[13,"R5_G6_B5","","",42,null],[13,"R8","","",42,null],[13,"R8_G8","","",42,null],[13,"R8_G8_B8_A8","","",42,null],[13,"R10_G10_B10_A2","","",42,null],[13,"R11_G11_B10","","",42,null],[13,"R16","","",42,null],[13,"R16_G16","","",42,null],[13,"R16_G16_B16","","",42,null],[13,"R16_G16_B16_A16","","",42,null],[13,"R32","","",42,null],[13,"R32_G32","","",42,null],[13,"R32_G32_B32","","",42,null],[13,"R32_G32_B32_A32","","",42,null],[13,"D16","","",42,null],[13,"D24","","",42,null],[13,"D24_S8","","",42,null],[13,"D32","","",42,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto\ndifferent physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",64,null],[13,"One","","",64,null],[13,"X","","",64,null],[13,"Y","","",64,null],[13,"Z","","",64,null],[13,"W","","",64,null],[3,"Swizzle","","Channel swizzle configuration for the resource views.\nNote: It&#39;s not currently mirrored at compile-time,\nthus providing less safety and convenience.",null,null],[12,"0","","",65,null],[12,"1","","",65,null],[12,"2","","",65,null],[12,"3","","",65,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",66,null],[12,"1","","",66,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",152,null],[10,"get_surface_type","","Return the run-time value of the type.",152,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel.\nFor example, normalized integers are visible as floats.",153,null],[10,"get_channel_type","","Return the run-time value of the type.",153,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",154,null],[16,"Channel","","Associated channel type.",154,null],[16,"View","","Shader view type of this format.",154,null],[11,"get_format","","Return the run-time value of the type.",154,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[3,"U8Norm","","",null,null],[12,"0","","",67,null],[3,"I8Norm","","",null,null],[12,"0","","",68,null],[3,"U16Norm","","",null,null],[12,"0","","",69,null],[3,"I16Norm","","",null,null],[12,"0","","",70,null],[3,"F16","","",null,null],[12,"0","","",71,null],[6,"Vec1","","",null,null],[6,"Vec2","","",null,null],[6,"Vec3","","",null,null],[6,"Vec4","","",null,null],[6,"Rgba8","","",null,null],[6,"Srgba8","","",null,null],[6,"Rgb10a2F","","",null,null],[6,"Rgba16F","","",null,null],[6,"Rgba32F","","",null,null],[6,"Depth","","",null,null],[6,"DepthStencil","","",null,null],[6,"Depth32F","","",null,null],[0,"handle","gfx","Device resource handles",null,null],[3,"RawBuffer","gfx::handle","Raw (untyped) Buffer Handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture object",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",155,null],[10,"make_shader","","",155,null],[10,"make_program","","",155,null],[10,"make_pso","","",155,null],[10,"make_texture","","",155,null],[10,"make_buffer_srv","","",155,null],[10,"make_texture_srv","","",155,null],[10,"make_buffer_uav","","",155,null],[10,"make_texture_uav","","",155,null],[10,"make_rtv","","",155,null],[10,"make_dsv","","",155,null],[10,"make_sampler","","",155,null],[10,"make_fence","","",155,null],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",155,null],[0,"tex","gfx","Texture creation and modification.",null,null],[4,"Error","gfx::tex","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",126,null],[13,"Kind","","The kind doesn&#39;t support a particular operation.",126,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",126,null],[13,"Size","","Unsupported size in one of the dimensions.",126,null],[13,"Data","","The given data has a different size than the target texture slice.",126,null],[6,"Size","","",null,null],[6,"Bits","","",null,null],[6,"NumSamples","","",null,null],[6,"NumFragments","","",null,null],[6,"Dimensions","","",null,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",127,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",127,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",127,null],[4,"FilterMethod","","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They &quot;layer&quot; on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",128,null],[13,"Mipmap","","Add simple mipmapping.",128,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",128,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",128,null],[13,"Anisotropic","","Anisotropic filtering with a given &quot;max&quot;, must be between 1 and 16,\ninclusive.",128,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",129,null],[13,"NegX","","",129,null],[13,"PosY","","",129,null],[13,"NegY","","",129,null],[13,"PosZ","","",129,null],[13,"NegZ","","",129,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",130,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",130,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",130,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",130,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",130,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",130,null],[13,"CubeArray","","An array of Cube textures.",130,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",131,null],[12,"yoffset","","",131,null],[12,"zoffset","","",131,null],[12,"width","","",131,null],[12,"height","","",131,null],[12,"depth","","",131,null],[12,"format","","Format of each texel.",131,null],[12,"mipmap","","Which mipmap to select.",131,null],[6,"RawImageInfo","","",null,null],[6,"NewImageInfo","","",null,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",132,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",132,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",132,null],[13,"Border","","Use border color.",132,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",134,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",135,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak).",135,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",135,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",135,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",135,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",135,null],[3,"Descriptor","","Texture storage descriptor.",null,null],[12,"kind","","",136,null],[12,"levels","","",136,null],[12,"format","","",136,null],[12,"bind","","",136,null],[12,"usage","","",136,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",137,null],[12,"min","","",137,null],[12,"max","","",137,null],[12,"swizzle","","",137,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",138,null],[12,"level","","",138,null],[12,"layer","","",138,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",140,null],[12,"layer","","",140,null],[12,"flags","","",140,null],[6,"Level","","",null,null],[6,"Layer","","",null,null],[8,"Factory","gfx","A `Factory` is responsible for creating and managing resources for the context it was created\nwith. ",null,null],[16,"Mapper","","Associated mapper type",156,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being\nused.",156,null],[10,"create_buffer_raw","","",156,null],[10,"create_buffer_const_raw","","",156,null],[11,"create_buffer_const","","",156,null],[11,"create_buffer_dynamic","","",156,null],[11,"create_buffer_staging","","",156,null],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the\n`FactoryExt` trait and `pso` module, both in the `gfx` crate.",156,null],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",156,null],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader\n`Program`.",156,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",156,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",156,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment\nshader.",156,null],[10,"create_sampler","","",156,null],[10,"map_buffer_raw","","",156,null],[10,"unmap_buffer_raw","","",156,null],[10,"map_buffer_readable","","",156,null],[10,"map_buffer_writable","","",156,null],[10,"map_buffer_rw","","",156,null],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",156,null],[10,"view_buffer_as_shader_resource_raw","","",156,null],[10,"view_buffer_as_unordered_access_raw","","",156,null],[10,"view_texture_as_shader_resource_raw","","",156,null],[10,"view_texture_as_unordered_access_raw","","",156,null],[10,"view_texture_as_render_target_raw","","",156,null],[10,"view_texture_as_depth_stencil_raw","","",156,null],[11,"create_texture","","",156,null],[11,"view_buffer_as_shader_resource","","",156,null],[11,"view_buffer_as_unordered_access","","",156,null],[11,"view_texture_as_shader_resource","","",156,null],[11,"view_texture_as_unordered_access","","",156,null],[11,"view_texture_as_render_target","","",156,null],[11,"view_texture_as_depth_stencil","","",156,null],[11,"view_texture_as_depth_stencil_trivial","","",156,null],[11,"create_texture_const_u8","","",156,null],[11,"create_texture_const","","",156,null],[11,"create_render_target","","",156,null],[11,"create_depth_stencil","","",156,null],[11,"create_depth_stencil_view_only","","",156,null],[8,"Typed","","A service trait used to get the raw data out of\nstrong types. Not meant for public use.",null,null],[16,"Raw","","The raw type behind the phantom.",157,null],[10,"new","","Crete a new phantom from the raw type.",157,null],[10,"raw","","Get an internal reference to the raw type.",157,null],[4,"Usage","","A hint as to how this buffer/texture will be used.",null,null],[13,"GpuOnly","","GPU: read + write, CPU: copy. Optimal for render targets.",28,null],[13,"Const","","GPU: read, CPU: none. Optimal for resourced textures/buffers.",28,null],[13,"Dynamic","","GPU: read, CPU: write.",28,null],[13,"CpuOnly","","GPU: copy, CPU: as specified. Used as a staging buffer,\nto be copied back and forth with on-GPU targets.",28,null],[3,"Bind","","Bind flags",null,null],[4,"MapAccess","","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",25,null],[13,"Writable","","Only allow writes.",25,null],[13,"RW","","Allow full access.",25,null],[4,"BufferRole","","Role of the memory buffer. GLES doesn&#39;t allow chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",27,null],[13,"Index","","Index buffer",27,null],[13,"Uniform","","Uniform block buffer",27,null],[3,"BufferInfo","","An information block that is immutable and associated with each buffer.",null,null],[12,"role","","Role",29,null],[12,"usage","","Usage hint",29,null],[12,"bind","","Bind flags",29,null],[12,"size","","Size in bytes",29,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers\nthat you use via shader resource / unordered access views.",29,null],[4,"BufferError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",30,null],[13,"Other","","Unknown other error.",30,null],[4,"BufferUpdateError","","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",31,null],[4,"ResourceViewError","","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag is not present in the texture.",32,null],[13,"Channel","","Selected channel type is not supported for this texture.",32,null],[13,"Unsupported","","The backend was refused for some reason.",32,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag is not present in the texture.",33,null],[13,"BadLevel","","Selected mip level doesn&#39;t exist.",33,null],[13,"BadLayer","","Selected array layer doesn&#39;t exist.",33,null],[13,"Channel","","Selected channel type is not supported for this texture.",33,null],[13,"Unsupported","","The backend was refused for some reason.",33,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",34,null],[13,"Resource","","Failed to create SRV or UAV.",34,null],[13,"Target","","Failed to create RTV or DSV.",34,null],[17,"RENDER_TARGET","","The resource can be rendered into.",null,null],[17,"DEPTH_STENCIL","","The resource can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","The resource can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","The resource can be bound to the shader for writing.",null,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"clone_empty","","Clone as an empty buffer",158,null],[10,"reset","","Reset the command buffer contents, retain the allocated storage",158,null],[10,"bind_pipeline_state","","Bind a pipeline state object",158,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",158,null],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",158,null],[10,"bind_global_constant","","Bind a global constant",158,null],[10,"bind_resource_views","","Bind a complete set of shader resource views",158,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",158,null],[10,"bind_samplers","","Bind a complete set of samplers",158,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple\ncolors views and an optional depth/stencil view.",158,null],[10,"bind_index","","Bind an index buffer",158,null],[10,"set_scissor","","Set scissor rectangle",158,null],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",158,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",158,null],[10,"update_texture","","Update a texture",158,null],[10,"generate_mipmap","","",158,null],[10,"clear_color","","Clear color target",158,null],[10,"clear_depth_stencil","","",158,null],[10,"call_draw","","Draw a primitive",158,null],[10,"call_draw_indexed","","Draw a primitive with index buffer",158,null],[6,"InstanceOption","","",null,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",123,null],[12,"globals","","Global constants in the program",123,null],[12,"constant_buffers","","Constant buffers in the program",123,null],[12,"textures","","Textures in the program",123,null],[12,"unordereds","","Unordered access resources in the program",123,null],[12,"samplers","","Samplers in the program",123,null],[12,"outputs","","Output targets in the program",123,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",123,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",123,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",114,null],[13,"F32","","",114,null],[13,"I32Vector2","","",114,null],[13,"I32Vector3","","",114,null],[13,"I32Vector4","","",114,null],[13,"F32Vector2","","",114,null],[13,"F32Vector3","","",114,null],[13,"F32Vector4","","",114,null],[13,"F32Matrix2","","",114,null],[13,"F32Matrix3","","",114,null],[13,"F32Matrix4","","",114,null],[3,"Encoder","","Graphics Command Encoder",null,null],[3,"Slice","","A `Slice` dictates in which and in what order vertices get processed. It is required for\nprocessing a PSO.",null,null],[12,"start","","The start index of the index-buffer. Processing will start at this location in the\nindex-buffer. ",159,null],[12,"end","","The end index in the index-buffer. Processing will stop at this location (exclusive) in\nthe index buffer.",159,null],[12,"base_vertex","","This is the index of the first vertex in the `VertexBuffer`. This value will be added to\nevery index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\nbase-vertex.",159,null],[12,"instances","","Instancing configuration.",159,null],[12,"buffer","","Represents the type of index-buffer used.",159,null],[4,"UpdateError","","An error occuring in buffer/texture updates.",null,null],[13,"OutOfBounds","","",160,null],[12,"target","gfx::UpdateError","",160,null],[12,"source","","",160,null],[13,"UnitCountMismatch","gfx","",160,null],[12,"target","gfx::UpdateError","",160,null],[12,"slice","","",160,null],[4,"PipelineStateError","gfx","Error creating a PipelineState",null,null],[13,"Program","","Shader program failed to link.",161,null],[13,"DescriptorInit","","Unable to create PSO descriptor due to mismatched formats.",161,null],[13,"DeviceCreate","","Device failed to create the handle give the descriptor.",161,null],[4,"IndexBuffer","","Type of index-buffer used in a Slice.",null,null],[13,"Auto","","Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\nget processed in order.",162,null],[13,"Index16","","An index-buffer with unsigned 16 bit indices.",162,null],[13,"Index32","","An index-buffer with unsigned 32 bit indices.",162,null],[0,"traits","","public re-exported traits",null,null],[8,"Device","gfx::traits","A `Device` is responsible for submitting `CommandBuffer`s to the GPU.",null,null],[16,"Resources","","Associated `Resources` type.",150,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer`\ntype.",150,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",150,null],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",150,null],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",150,null],[10,"cleanup","","Cleanup unused resources. This should be called between frames.",150,null],[8,"Factory","","A `Factory` is responsible for creating and managing resources for the context it was created\nwith. ",null,null],[16,"Mapper","","Associated mapper type",156,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being\nused.",156,null],[10,"create_buffer_raw","","",156,null],[10,"create_buffer_const_raw","","",156,null],[11,"create_buffer_const","","",156,null],[11,"create_buffer_dynamic","","",156,null],[11,"create_buffer_staging","","",156,null],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the\n`FactoryExt` trait and `pso` module, both in the `gfx` crate.",156,null],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",156,null],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader\n`Program`.",156,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",156,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",156,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment\nshader.",156,null],[10,"create_sampler","","",156,null],[10,"map_buffer_raw","","",156,null],[10,"unmap_buffer_raw","","",156,null],[10,"map_buffer_readable","","",156,null],[10,"map_buffer_writable","","",156,null],[10,"map_buffer_rw","","",156,null],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",156,null],[10,"view_buffer_as_shader_resource_raw","","",156,null],[10,"view_buffer_as_unordered_access_raw","","",156,null],[10,"view_texture_as_shader_resource_raw","","",156,null],[10,"view_texture_as_unordered_access_raw","","",156,null],[10,"view_texture_as_render_target_raw","","",156,null],[10,"view_texture_as_depth_stencil_raw","","",156,null],[11,"create_texture","","",156,null],[11,"view_buffer_as_shader_resource","","",156,null],[11,"view_buffer_as_unordered_access","","",156,null],[11,"view_texture_as_shader_resource","","",156,null],[11,"view_texture_as_unordered_access","","",156,null],[11,"view_texture_as_render_target","","",156,null],[11,"view_texture_as_depth_stencil","","",156,null],[11,"view_texture_as_depth_stencil_trivial","","",156,null],[11,"create_texture_const_u8","","",156,null],[11,"create_texture_const","","",156,null],[11,"create_render_target","","",156,null],[11,"create_depth_stencil","","",156,null],[11,"create_depth_stencil_view_only","","",156,null],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",163,null],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",163,null],[8,"FactoryExt","","This trait is responsible for creating and managing graphics resources, much like the `Factory`\ntrait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. ",null,null],[11,"create_vertex_buffer","","Create a vertex buffer from the supplied data. A `Slice` will have to manually be\nconstructed.",164,null],[11,"create_vertex_buffer_with_slice","","Shorthand for creating a new vertex buffer from the supplied vertices, together with a\n`Slice` from the supplied indices.",164,null],[11,"create_constant_buffer","","Create a constant buffer for `num` identical elements of type `T`.",164,null],[11,"create_shader_set","","Creates a `ShaderSet` from the supplied vertex and pixel shader source code.",164,null],[11,"link_program","","Creates a basic shader `Program` from the supplied vertex and pixel shader source code.",164,null],[11,"create_pipeline_state","","Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\nshader `Program`.  ",164,null],[11,"create_pipeline_from_program","","Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\nprimitive type and a `Rasterizer`.",164,null],[11,"create_pipeline_simple","","Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\nshader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\nof rendering triangle faces without culling.",164,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",164,null],[11,"eq","gfx","",160,null],[11,"ne","","",160,null],[11,"fmt","","",160,null],[11,"clone","","",160,null],[11,"fmt","","",160,null],[11,"description","","",160,null],[11,"from","","",165,{"inputs":[{"name":"c"}],"output":{"name":"encoder"}}],[11,"flush","","Submits the commands in this `Encoder`&#39;s internal `CommandBuffer` to the GPU, so they can\nbe executed. ",165,null],[11,"clone_empty","","Clone the renderer shared data but ignore the commands.",165,null],[11,"update_buffer","","Update a buffer with a slice of data.",165,null],[11,"update_constant_buffer","","Update a buffer with a single structure.",165,null],[11,"update_texture","","Update the contents of a texture.",165,null],[11,"clear","","Clears the supplied `RenderTargetView` to the supplied `ClearColor`.",165,null],[11,"clear_depth","","Clear a depth view with a specified value.",165,null],[11,"clear_stencil","","Clear a stencil view with a specified value.",165,null],[11,"draw","","Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.",165,null],[11,"create_vertex_buffer","gfx::factory","Create a vertex buffer from the supplied data. A `Slice` will have to manually be\nconstructed.",164,null],[11,"create_vertex_buffer_with_slice","","Shorthand for creating a new vertex buffer from the supplied vertices, together with a\n`Slice` from the supplied indices.",164,null],[11,"create_constant_buffer","","Create a constant buffer for `num` identical elements of type `T`.",164,null],[11,"create_shader_set","","Creates a `ShaderSet` from the supplied vertex and pixel shader source code.",164,null],[11,"link_program","","Creates a basic shader `Program` from the supplied vertex and pixel shader source code.",164,null],[11,"create_pipeline_state","","Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\nshader `Program`.  ",164,null],[11,"create_pipeline_from_program","","Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\nprimitive type and a `Rasterizer`.",164,null],[11,"create_pipeline_simple","","Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\nshader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\nof rendering triangle faces without culling.",164,null],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",164,null],[11,"fmt","gfx","",161,null],[11,"eq","","",161,null],[11,"ne","","",161,null],[11,"clone","","",161,null],[11,"fmt","","",161,null],[11,"description","","",161,null],[11,"cause","","",161,null],[11,"from","","",161,{"inputs":[{"name":"programerror"}],"output":{"name":"self"}}],[11,"from","","",161,{"inputs":[{"name":"initerror"}],"output":{"name":"self"}}],[11,"from","","",161,{"inputs":[{"name":"creationerror"}],"output":{"name":"self"}}],[11,"eq","","",159,null],[11,"ne","","",159,null],[11,"fmt","","",159,null],[11,"clone","","",159,null],[11,"new_match_vertex_buffer","","Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.",159,{"inputs":[{"name":"buffer"}],"output":{"name":"self"}}],[11,"get_prim_count","","Calculates the number of primitives of the specified type in this `Slice`.",159,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"fmt","","",162,null],[11,"clone","","",162,null],[11,"default","","",162,{"inputs":[],"output":{"name":"self"}}],[11,"into_index_buffer","","",162,null],[11,"into_index_buffer","gfx::handle","",73,null],[11,"into_index_buffer","","",73,null],[0,"pso","gfx","A typed high-level graphics pipeline interface.",null,null],[3,"Descriptor","gfx::pso","All the information surrounding a shader program that is required\nfor PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",97,null],[12,"rasterizer","","Rasterizer setup",97,null],[12,"scissor","","Enable scissor test",97,null],[12,"attributes","","Vertex attributes",97,null],[12,"color_targets","","Render target views (RTV)",97,null],[12,"depth_stencil","","Depth stencil view (DSV)",97,null],[3,"RawDataSet","","A complete set of raw data that needs to be specified at run-time\nwhenever we draw something with a PSO. This is what &quot;data&quot; struct\ngets transformed into when we call `encoder.draw(...)` with it.\nIt doesn&#39;t have any typing information, since PSO knows what\nformat and layout to expect from each resource.",null,null],[12,"vertex_buffers","","",166,null],[12,"constant_buffers","","",166,null],[12,"global_constants","","",166,null],[12,"resource_views","","",166,null],[12,"unordered_views","","",166,null],[12,"samplers","","",166,null],[12,"pixel_targets","","",166,null],[12,"ref_values","","",166,null],[12,"scissor","","",166,null],[3,"PipelineState","","A strongly typed Pipleline State Object. See the module documentation for more information.",null,null],[4,"InitError","","Failure to initilize the link between the shader and the data.",null,null],[13,"VertexImport","","Vertex attribute mismatch.",167,null],[13,"ConstantBuffer","","Constant buffer mismatch.",167,null],[13,"GlobalConstant","","Global constant mismatch.",167,null],[13,"ResourceView","","Shader resource view mismatch.",167,null],[13,"UnorderedView","","Unordered access view mismatch.",167,null],[13,"Sampler","","Sampler mismatch.",167,null],[13,"PixelExport","","Pixel target mismatch.",167,null],[0,"buffer","","Buffer components for a PSO.",null,null],[3,"Element","gfx::pso::buffer","A struct element descriptor.",null,null],[12,"format","","Element format",96,null],[12,"offset","","Offset from the beginning of the container, in bytes",96,null],[12,"stride","","Total container size, in bytes",96,null],[6,"ElemOffset","","",null,null],[6,"ElemStride","","",null,null],[6,"InstanceRate","","",null,null],[3,"VertexBufferCommon","","Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.",null,null],[3,"RawVertexBuffer","","Raw vertex/instance buffer component.\n- init: ?\n- data: `RawBuffer`",null,null],[3,"ConstantBuffer","","Constant buffer component.\n- init: `&amp;str` = name of the buffer\n- data: `Buffer&lt;T&gt;`",null,null],[3,"Global","","Global (uniform) constant component. Describes a free-standing value passed into\nthe shader, which is not enclosed into any constant buffer. Deprecated in DX10 and higher.\n- init: `&amp;str` = name of the constant\n- data: `T` = value",null,null],[6,"VertexBuffer","","Vertex buffer component. Advanced per vertex.\n- init: `()`\n- data: `Buffer&lt;T&gt;`",null,null],[6,"InstanceBuffer","","Instance buffer component. Same as the vertex buffer but advances per instance.",null,null],[8,"Structure","","A trait to be implemented by any struct having the layout described\nin the graphics API, like a vertex buffer.",null,null],[10,"query","","Get the layout of an element by name.",168,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"new","","",169,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",169,null],[11,"link_input","","",169,null],[11,"bind_to","","",169,null],[11,"new","","",170,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",170,null],[11,"link_input","","",170,null],[11,"bind_to","","",170,null],[11,"new","","",171,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",171,null],[11,"link_constant_buffer","","",171,null],[11,"bind_to","","",171,null],[11,"new","","",172,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",172,null],[11,"link_global_constant","","",172,null],[11,"bind_to","","",172,null],[0,"resource","gfx::pso","Resource components for a PSO.",null,null],[3,"ShaderResource","gfx::pso::resource","Shader resource component (SRV). Typically is a view into some texture,\nbut can also be a buffer.\n- init: `&amp;str` = name of the resource\n- data: `ShaderResourceView&lt;T&gt;`",null,null],[3,"RawShaderResource","","Raw (untyped) shader resource (SRV).\n- init: `&amp;str` = name of the resource. This may change in the future.\n- data: `RawShaderResourceView`",null,null],[3,"UnorderedAccess","","Unordered access component (UAV). A writable resource (texture/buffer)\nwith no defined access order across simultaneously executing shaders.\nSupported on DX10 and higher.\n- init: `&amp;str` = name of the resource\n- data: `UnorderedAccessView&lt;T&gt;`",null,null],[3,"Sampler","","Sampler component.\n- init: `&amp;str` = name of the sampler\n- data: `Sampler`",null,null],[3,"TextureSampler","","A convenience type for a texture paired with a sampler.\nIt only makes sense for DX9 class hardware, where every texture by default\nis bundled with a sampler, hence they are represented by the same name.\nIn DX10 and higher samplers are totally separated from the textures.\n- init: `&amp;str` = name of the sampler/texture (assuming they match)\n- data: (`ShaderResourceView&lt;T&gt;`, `Sampler`)",null,null],[11,"new","","",173,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",173,null],[11,"link_resource_view","","",173,null],[11,"bind_to","","",173,null],[11,"new","","",174,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",174,null],[11,"link_resource_view","","",174,null],[11,"bind_to","","",174,null],[11,"new","","",175,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",175,null],[11,"link_unordered_view","","",175,null],[11,"bind_to","","",175,null],[11,"new","","",176,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",176,null],[11,"link_sampler","","",176,null],[11,"bind_to","","",176,null],[11,"new","","",177,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",177,null],[11,"link_resource_view","","",177,null],[11,"link_sampler","","",177,null],[11,"bind_to","","",177,null],[0,"target","gfx::pso","Render target components for a PSO.",null,null],[3,"RenderTarget","gfx::pso::target","Render target component. Typically points to a color-formatted texture.\n- init: `&amp;str` = name of the target\n- data: `RenderTargetView&lt;T&gt;`",null,null],[3,"BlendTarget","","Render target component with active blending mode.\n- init: (`&amp;str`, `ColorMask`, `Blend` = blending state)\n- data: `RenderTargetView&lt;T&gt;`",null,null],[3,"RawRenderTarget","","Raw (untyped) render target component with optional blending.\n- init: (`&amp;str`, `Format`, `ColorMask`, `Option&lt;Blend&gt;`)\n- data: `RawRenderTargetView`",null,null],[3,"DepthTarget","","Depth target component.\n- init: `Depth` = depth state\n- data: `DepthStencilView&lt;T&gt;`",null,null],[3,"StencilTarget","","Stencil target component.\n- init: `Stencil` = stencil state\n- data: (`DepthStencilView&lt;T&gt;`, `(front, back)` = stencil reference values)",null,null],[3,"DepthStencilTarget","","Depth + stencil target component.\n- init: (`Depth` = depth state, `Stencil` = stencil state)\n- data: (`DepthStencilView&lt;T&gt;`, `(front, back)` = stencil reference values)",null,null],[3,"Scissor","","Scissor component. Sets up the scissor test for rendering.\n- init: `()`\n- data: `Rect` = target area",null,null],[3,"BlendRef","","Blend reference component. Sets up the reference color for blending.\n- init: `()`\n- data: `ColorValue`",null,null],[11,"new","","",178,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",178,null],[11,"link_output","","",178,null],[11,"bind_to","","",178,null],[11,"new","","",179,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",179,null],[11,"link_output","","",179,null],[11,"bind_to","","",179,null],[11,"new","","",180,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",180,null],[11,"link_output","","",180,null],[11,"bind_to","","",180,null],[11,"new","","",181,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",181,null],[11,"link_depth_stencil","","",181,null],[11,"bind_to","","",181,null],[11,"new","","",182,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",182,null],[11,"link_depth_stencil","","",182,null],[11,"bind_to","","",182,null],[11,"new","","",183,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",183,null],[11,"link_depth_stencil","","",183,null],[11,"bind_to","","",183,null],[11,"new","","",184,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",184,null],[11,"link_scissor","","",184,null],[11,"bind_to","","",184,null],[11,"new","","",185,{"inputs":[],"output":{"name":"self"}}],[11,"is_active","","",185,null],[11,"bind_to","","",185,null],[0,"bundle","gfx::pso","Combine slice data with pipeline state.",null,null],[3,"Bundle","gfx::pso::bundle","Slice-PSO bundle.",null,null],[12,"slice","","Slice",186,null],[12,"pso","","Pipeline state",186,null],[12,"data","","Pipeline data",186,null],[11,"new","","Create new Bundle",186,{"inputs":[{"name":"slice"},{"name":"pipelinestate"},{"name":"data"}],"output":{"name":"self"}}],[11,"encode","","Draw bundle using encoder.",186,null],[8,"PipelineInit","gfx::pso","A service trait implemented by the &quot;init&quot; structure of PSO.",null,null],[16,"Meta","","The associated &quot;meta&quot; struct.",187,null],[10,"link_to","","Attempt to map a PSO descriptor to a give shader program,\nrepresented by `ProgramInfo`. Returns an instance of the\n&quot;meta&quot; struct upon successful mapping.",187,null],[8,"PipelineData","","a service trait implemented the &quot;data&quot; structure of PSO.",null,null],[16,"Meta","","The associated &quot;meta&quot; struct.",188,null],[10,"bake_to","","Dump all the contained data into the raw data set,\ngiven the mapping (&quot;meta&quot;), and a handle manager.",188,null],[8,"DataLink","","The &quot;link&quot; logic portion of a PSO component.\nDefines the input data for the component.",null,null],[16,"Init","","The assotiated &quot;init&quot; type - a member of the PSO &quot;init&quot; struct.",189,null],[10,"new","","Create a new empty data link.",189,{"inputs":[],"output":{"name":"self"}}],[10,"is_active","","Check if this link is actually used by the shader.",189,null],[11,"link_input","","Attempt to link with a vertex attribute.",189,null],[11,"link_constant_buffer","","Attempt to link with a constant buffer.",189,null],[11,"link_global_constant","","Attempt to link with a global constant.",189,null],[11,"link_output","","Attempt to link with an output render target (RTV).",189,null],[11,"link_depth_stencil","","Attempt to link with a depth-stencil target (DSV).",189,null],[11,"link_resource_view","","Attempt to link with a shader resource (SRV).",189,null],[11,"link_unordered_view","","Attempt to link with an unordered access (UAV).",189,null],[11,"link_sampler","","Attempt to link with a sampler.",189,null],[11,"link_scissor","","Attempt to enable scissor test.",189,null],[8,"DataBind","","The &quot;bind&quot; logic portion of the PSO component.\nDefines how the user data translates into the raw data set.",null,null],[16,"Data","","The associated &quot;data&quot; type - a member of the PSO &quot;data&quot; struct.",190,null],[10,"bind_to","","Dump the given data into the raw data set.",190,null],[11,"fmt","","",166,null],[11,"new","","Create an empty data set.",166,{"inputs":[],"output":{"name":"rawdataset"}}],[11,"clear","","Clear all contained data.",166,null],[11,"fmt","","",167,null],[11,"eq","","",167,null],[11,"ne","","",167,null],[11,"clone","","",167,null],[11,"fmt","","",167,null],[11,"description","","",167,null],[11,"new","","Create a new PSO from a raw handle and the &quot;meta&quot; instance.",191,{"inputs":[{"name":"rawpipelinestate"},{"name":"primitive"},{"name":"m"}],"output":{"name":"pipelinestate"}}],[11,"get_handle","","Get a raw handle reference.",191,null],[11,"get_meta","","Get a &quot;meta&quot; struct reference. Can be used by the user to check\nwhat resources are actually used and what not.",191,null],[0,"shade","gfx","Shaders\nShader parameter handling.",null,null],[6,"ConstFormat","gfx::shade","",null,null],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",192,null],[3,"Usage","","Parameter usage flags.",null,null],[0,"core","","Shader handling.",null,null],[6,"Dimension","gfx::shade::core","",null,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",104,null],[13,"NoArray","","",104,null],[4,"IsComparison","","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",105,null],[13,"NoCompare","","",105,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",106,null],[13,"NoMultiSample","","",106,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",107,null],[13,"NoRect","","",107,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",108,null],[13,"RowMajor","","",108,null],[4,"TextureType","","A type of the texture variable.\nThis has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",109,null],[13,"D1","","Sample from a 1D texture",109,null],[13,"D2","","Sample from a 2D texture",109,null],[13,"D3","","Sample from a 3D texture",109,null],[13,"Cube","","Sample from a cubemap.",109,null],[3,"SamplerType","","A type of the sampler variable.",null,null],[12,"0","","",110,null],[12,"1","","",110,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"I32","","",111,null],[13,"U32","","",111,null],[13,"F32","","",111,null],[13,"F64","","",111,null],[13,"Bool","","",111,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",112,null],[13,"Vector","","A vector with `Dimension` components.",112,null],[13,"Matrix","","A matrix.",112,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",113,null],[13,"Geometry","","",113,null],[13,"Pixel","","",113,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[6,"Location","","",null,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",114,null],[13,"F32","","",114,null],[13,"I32Vector2","","",114,null],[13,"I32Vector3","","",114,null],[13,"I32Vector4","","",114,null],[13,"F32Vector2","","",114,null],[13,"F32Vector3","","",114,null],[13,"F32Vector4","","",114,null],[13,"F32Matrix2","","",114,null],[13,"F32Matrix3","","",114,null],[13,"F32Matrix4","","",114,null],[6,"ConstFormat","","",null,null],[8,"BaseTyped","","A trait that statically links simple data types to\nbase types of the shader constants.",null,null],[10,"get_base_type","","",193,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",192,null],[3,"Usage","","Parameter usage flags.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[3,"AttributeVar","","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",116,null],[12,"slot","","Slot of the vertex attribute.",116,null],[12,"base_type","","Type that this attribute is composed of.",116,null],[12,"container","","&quot;Scalarness&quot; of this attribute.",116,null],[3,"ConstVar","","A constant in the shader - a bit of data that doesn&#39;t vary",null,null],[12,"name","","Name of this constant.",117,null],[12,"location","","Location of this constant in the program.",117,null],[12,"count","","Number of elements this constant represents.",117,null],[12,"base_type","","Type that this constant is composed of",117,null],[12,"container","","&quot;Scalarness&quot; of this constant.",117,null],[3,"ConstantBufferVar","","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",118,null],[12,"slot","","Slot of the constant buffer.",118,null],[12,"size","","Size (in bytes) of this buffer&#39;s data.",118,null],[12,"usage","","What program stage this buffer is used in.",118,null],[3,"TextureVar","","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",119,null],[12,"slot","","Slot of this texture variable.",119,null],[12,"base_type","","Base type for the texture.",119,null],[12,"ty","","Type of this texture.",119,null],[12,"usage","","What program stage this texture is used in.",119,null],[3,"UnorderedVar","","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",120,null],[12,"slot","","Slot of this unordered variable.",120,null],[12,"usage","","What program stage this UAV is used in.",120,null],[3,"SamplerVar","","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",121,null],[12,"slot","","Slot of this sampler variable.",121,null],[12,"ty","","Type of this sampler.",121,null],[12,"usage","","What program stage this texture is used in.",121,null],[3,"OutputVar","","Target output variable.",null,null],[12,"name","","Name of this output variable.",122,null],[12,"slot","","Output color target index.",122,null],[12,"base_type","","Type of the output component.",122,null],[12,"container","","&quot;Scalarness&quot; of this output.",122,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",123,null],[12,"globals","","Global constants in the program",123,null],[12,"constant_buffers","","Constant buffers in the program",123,null],[12,"textures","","Textures in the program",123,null],[12,"unordereds","","Unordered access resources in the program",123,null],[12,"samplers","","Samplers in the program",123,null],[12,"outputs","","Output targets in the program",123,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",123,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",123,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",124,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",124,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\netc)",124,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",125,null],[13,"StageNotSupported","","The device does not support the shader stage.",125,null],[13,"CompilationFailed","","The shader failed to compile.",125,null],[6,"CreateProgramError","","",null,null],[4,"ProgramError","gfx::shade","Program linking error",null,null],[13,"Vertex","","Unable to compile the vertex shader",194,null],[13,"Pixel","","Unable to compile the pixel shader",194,null],[13,"Link","","Unable to link",194,null],[8,"ToUniform","","",null,null],[10,"convert","","",195,null],[11,"fmt","","",194,null],[11,"eq","","",194,null],[11,"ne","","",194,null],[11,"clone","","",194,null],[11,"fmt","","",194,null],[11,"description","","",194,null],[11,"cause","","",194,null],[0,"macros","gfx","Convenience macros\nVarious helper macros.",null,null],[8,"IntoIndexBuffer","","A helper trait to create `IndexBuffers` from different kinds of data.",null,null],[10,"into_index_buffer","","Turns self into an `IndexBuffer`.",196,null],[14,"gfx_pipeline_inner!","","",null,null],[14,"gfx_pipeline_base!","","",null,null],[14,"gfx_pipeline!","","",null,null],[14,"gfx_impl_struct!","","",null,null],[14,"gfx_vertex_struct!","","",null,null],[14,"gfx_constant_struct!","","",null,null],[14,"gfx_format!","","",null,null],[14,"gfx_defines!","","Defines vertex, constant and pipeline formats in one block",null,null]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"MultiSample"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"Mirror"],[4,"ClearColor"],[4,"DummyResources"],[3,"DummyDevice"],[3,"DummyCommandBuffer"],[4,"MapAccess"],[3,"Bind"],[4,"BufferRole"],[4,"Usage"],[3,"BufferInfo"],[4,"BufferError"],[4,"BufferUpdateError"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[4,"ChannelType"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"SurfaceType"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[4,"ChannelSource"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[3,"Readable"],[3,"Writable"],[3,"RW"],[3,"CreationError"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[3,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[3,"Usage"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"CompatibilityError"],[4,"CreateShaderError"],[4,"Error"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[3,"ImageInfoCommon"],[4,"WrapMode"],[3,"Lod"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Descriptor"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilFlags"],[3,"DepthStencilDesc"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"],[4,"ShaderSet"],[3,"Capabilities"],[4,"Primitive"],[4,"IndexType"],[8,"Device"],[8,"Resources"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[8,"Producer"],[8,"Factory"],[8,"Typed"],[8,"CommandBuffer"],[3,"Slice"],[4,"UpdateError"],[4,"PipelineStateError"],[4,"IndexBuffer"],[8,"DeviceFence"],[8,"FactoryExt"],[3,"Encoder"],[3,"RawDataSet"],[4,"InitError"],[8,"Structure"],[3,"VertexBufferCommon"],[3,"RawVertexBuffer"],[3,"ConstantBuffer"],[3,"Global"],[3,"ShaderResource"],[3,"RawShaderResource"],[3,"UnorderedAccess"],[3,"Sampler"],[3,"TextureSampler"],[3,"RenderTarget"],[3,"BlendTarget"],[3,"RawRenderTarget"],[3,"DepthTarget"],[3,"StencilTarget"],[3,"DepthStencilTarget"],[3,"Scissor"],[3,"BlendRef"],[3,"Bundle"],[8,"PipelineInit"],[8,"PipelineData"],[8,"DataLink"],[8,"DataBind"],[3,"PipelineState"],[8,"Formatted"],[8,"BaseTyped"],[4,"ProgramError"],[8,"ToUniform"],[8,"IntoIndexBuffer"]]};
searchIndex["gfx_core"] = {"doc":"Low-level graphics abstraction for Rust. Mostly operates on data, not types.\nDesigned for use by libraries and higher-level abstractions only.","items":[[0,"state","gfx_core","Fixed-function hardware state.",null,null],[11,"fmt","draw_state::state","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"clone","","",4,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"new_fill","","Create a new filling rasterizer.",5,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",5,null],[11,"with_offset","","Add polygon offset.",5,null],[11,"cmp","","",6,null],[11,"partial_cmp","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"clone","","",6,null],[11,"cmp","","",7,null],[11,"partial_cmp","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"stencilside"}}],[11,"cmp","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"stencil"}}],[11,"new","","Create a new stencil state with a given function.",9,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"depth"}}],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"hash","","",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"clone","","",11,null],[11,"cmp","","",12,null],[11,"partial_cmp","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"clone","","",12,null],[11,"cmp","","",13,null],[11,"partial_cmp","","",13,null],[11,"lt","","",13,null],[11,"le","","",13,null],[11,"gt","","",13,null],[11,"ge","","",13,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"hash","","",14,null],[11,"partial_cmp","","",14,null],[11,"lt","","",14,null],[11,"le","","",14,null],[11,"gt","","",14,null],[11,"ge","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"cmp","","",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"partial_cmp","","",15,null],[11,"lt","","",15,null],[11,"le","","",15,null],[11,"gt","","",15,null],[11,"ge","","",15,null],[11,"hash","","",15,null],[11,"clone","","",15,null],[11,"default","","",15,{"inputs":[],"output":{"name":"blend"}}],[11,"new","","Create a new blend state with a given equation.",15,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"fmt","","",15,null],[11,"hash","","",16,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,null],[11,"is_all","","Returns `true` if all flags are currently set.",16,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,null],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"bitor","","Returns the union of the two sets of flags.",16,null],[11,"bitor_assign","","Adds the set of flags.",16,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,null],[11,"bitxor_assign","","Toggles the set of flags.",16,null],[11,"bitand","","Returns the intersection between the two sets of flags.",16,null],[11,"bitand_assign","","Disables all flags disabled in the set.",16,null],[11,"sub","","Returns the set difference of the two sets of flags.",16,null],[11,"sub_assign","","Disables all flags enabled in the set.",16,null],[11,"not","","Returns the complement of this set of flags.",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"color"}}],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"refvalues"}}],[11,"partial_cmp","draw_state::target","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"hash","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"hash","","",20,null],[11,"cmp","","",20,null],[11,"partial_cmp","","",20,null],[11,"lt","","",20,null],[11,"le","","",20,null],[11,"gt","","",20,null],[11,"ge","","",20,null],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",20,null],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,null],[11,"is_all","","Returns `true` if all flags are currently set.",20,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,null],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,null],[11,"bitor_assign","","Adds the set of flags.",20,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,null],[11,"bitxor_assign","","Toggles the set of flags.",20,null],[11,"bitand","","Returns the intersection between the two sets of flags.",20,null],[11,"bitand_assign","","Disables all flags disabled in the set.",20,null],[11,"sub","","Returns the set difference of the two sets of flags.",20,null],[11,"sub_assign","","Disables all flags enabled in the set.",20,null],[11,"not","","Returns the complement of this set of flags.",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}],[4,"FrontFace","gfx_core::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",0,null],[13,"CounterClockwise","","Counter-clockwise winding order.",0,null],[6,"LineWidth","","",null,null],[6,"OffsetSlope","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",2,null],[13,"Front","","",2,null],[13,"Back","","",2,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",3,null],[13,"Line","","Rasterize as a line with the given width.",3,null],[13,"Fill","","Rasterize as a face.",3,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"cull_face","","Which face should be culled.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[12,"samples","","Multi-sampling mode.",5,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",6,null],[13,"Less","","`x &lt; y`",6,null],[13,"LessEqual","","`x &lt;= y`",6,null],[13,"Equal","","`x == y`",6,null],[13,"GreaterEqual","","`x &gt;= y`",6,null],[13,"Greater","","`x &gt; y`",6,null],[13,"NotEqual","","`x != y`",6,null],[13,"Always","","`true`",6,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",7,null],[13,"Zero","","Set the value in the stencil buffer to zero.",7,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",7,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",7,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",7,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",7,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",7,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",7,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",8,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",8,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",8,null],[12,"op_fail","","What operation to do if the stencil test fails.",8,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",8,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",8,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",9,null],[12,"back","","",9,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",10,null],[12,"write","","Specify whether to write to the depth buffer or not.",10,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",11,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",11,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",11,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",11,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",12,null],[13,"SourceAlpha","","",12,null],[13,"DestColor","","",12,null],[13,"DestAlpha","","",12,null],[13,"ConstColor","","",12,null],[13,"ConstAlpha","","",12,null],[4,"Factor","","",null,null],[13,"Zero","","",13,null],[13,"One","","",13,null],[13,"SourceAlphaSaturated","","",13,null],[13,"ZeroPlus","","",13,null],[13,"OneMinus","","",13,null],[3,"BlendChannel","","",null,null],[12,"equation","","",14,null],[12,"source","","",14,null],[12,"destination","","",14,null],[3,"Blend","","",null,null],[12,"color","","",15,null],[12,"alpha","","",15,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",17,null],[12,"blend","","Optional blending.",17,null],[3,"RefValues","","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",18,null],[12,"blend","","Constant blend color.",18,null],[0,"target","gfx_core","Render target specification.",null,null],[6,"Layer","gfx_core::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[6,"ColorValue","","",null,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"VertexShader","gfx_core","",null,null],[3,"HullShader","","",null,null],[3,"DomainShader","","",null,null],[3,"GeometryShader","","",null,null],[3,"PixelShader","","",null,null],[3,"Capabilities","","Features that the device supports.",null,null],[12,"max_vertex_count","","",21,null],[12,"max_index_count","","",21,null],[12,"max_texture_size","","",21,null],[12,"instance_base_supported","","",21,null],[12,"instance_call_supported","","",21,null],[12,"instance_rate_supported","","",21,null],[12,"vertex_base_supported","","",21,null],[12,"srgb_color_supported","","",21,null],[12,"constant_buffer_supported","","",21,null],[12,"unordered_access_view_supported","","",21,null],[12,"separate_blending_slots_supported","","",21,null],[4,"ShaderSet","","A complete set of shaders to link a program.",null,null],[13,"Simple","","Simple program: Vs-Ps",22,null],[13,"Geometry","","Geometry shader programs: Vs-Gs-Ps",22,null],[4,"Primitive","","Describes what geometric primitives are created from vertex data.",null,null],[13,"PointList","","Each vertex represents a single point.",23,null],[13,"LineList","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",23,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a &quot;path&quot; of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",23,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",23,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",23,null],[4,"IndexType","","A type of each index value in the slice&#39;s index buffer",null,null],[13,"U16","","",24,null],[13,"U32","","",24,null],[0,"draw","","Command Buffer device interface",null,null],[4,"ClearColor","gfx_core::draw","A universal clear color supporting integet formats\nas well as the standard floating-point.",null,null],[13,"Float","","Standard floating-point vec4 color",25,null],[13,"Int","","Integer vector to clear ivec4 targets.",25,null],[13,"Uint","","Unsigned int vector to clear uvec4 targets.",25,null],[6,"InstanceOption","","Optional instance parameters",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"clone_empty","","Clone as an empty buffer",26,null],[10,"reset","","Reset the command buffer contents, retain the allocated storage",26,null],[10,"bind_pipeline_state","","Bind a pipeline state object",26,null],[10,"bind_vertex_buffers","","Bind a complete set of vertex buffers",26,null],[10,"bind_constant_buffers","","Bind a complete set of constant buffers",26,null],[10,"bind_global_constant","","Bind a global constant",26,null],[10,"bind_resource_views","","Bind a complete set of shader resource views",26,null],[10,"bind_unordered_views","","Bind a complete set of unordered access views",26,null],[10,"bind_samplers","","Bind a complete set of samplers",26,null],[10,"bind_pixel_targets","","Bind a complete set of pixel targets, including multiple\ncolors views and an optional depth/stencil view.",26,null],[10,"bind_index","","Bind an index buffer",26,null],[10,"set_scissor","","Set scissor rectangle",26,null],[10,"set_ref_values","","Set reference values for the blending and stencil front/back",26,null],[10,"update_buffer","","Update a vertex/index/uniform buffer",26,null],[10,"update_texture","","Update a texture",26,null],[10,"generate_mipmap","","",26,null],[10,"clear_color","","Clear color target",26,null],[10,"clear_depth_stencil","","",26,null],[10,"call_draw","","Draw a primitive",26,null],[10,"call_draw_indexed","","Draw a primitive with index buffer",26,null],[11,"partial_cmp","","",25,null],[11,"lt","","",25,null],[11,"le","","",25,null],[11,"gt","","",25,null],[11,"ge","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,null],[11,"from","","",25,{"inputs":[{"name":"f32"}],"output":{"name":"clearcolor"}}],[11,"from","","",25,{"inputs":[{"name":"i32"}],"output":{"name":"clearcolor"}}],[11,"from","","",25,{"inputs":[{"name":"u32"}],"output":{"name":"clearcolor"}}],[0,"dummy","gfx_core","Dummy backend implementation to test the code for compile errors\noutside of the graphics development environment.",null,null],[3,"DummyDevice","gfx_core::dummy","Dummy device which does minimal work, just to allow testing\ngfx-rs apps for compilation.",null,null],[3,"DummyCommandBuffer","","Dummy command buffer, which ignores all the calls.",null,null],[4,"DummyResources","","Dummy resources phantom type",null,null],[11,"eq","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"new","","Create a new dummy device",28,{"inputs":[],"output":{"name":"dummydevice"}}],[11,"clone_empty","","",29,null],[11,"reset","","",29,null],[11,"bind_pipeline_state","","",29,null],[11,"bind_vertex_buffers","","",29,null],[11,"bind_constant_buffers","","",29,null],[11,"bind_global_constant","","",29,null],[11,"bind_resource_views","","",29,null],[11,"bind_unordered_views","","",29,null],[11,"bind_samplers","","",29,null],[11,"bind_pixel_targets","","",29,null],[11,"bind_index","","",29,null],[11,"set_scissor","","",29,null],[11,"set_ref_values","","",29,null],[11,"update_buffer","","",29,null],[11,"update_texture","","",29,null],[11,"generate_mipmap","","",29,null],[11,"clear_color","","",29,null],[11,"clear_depth_stencil","","",29,null],[11,"call_draw","","",29,null],[11,"call_draw_indexed","","",29,null],[11,"get_capabilities","","",28,null],[11,"pin_submitted_resources","","",28,null],[11,"submit","","",28,null],[11,"cleanup","","",28,null],[0,"factory","gfx_core","Resource factory",null,null],[3,"Bind","gfx_core::factory","Bind flags",null,null],[3,"BufferInfo","","An information block that is immutable and associated with each buffer.",null,null],[12,"role","","Role",30,null],[12,"usage","","Usage hint",30,null],[12,"bind","","Bind flags",30,null],[12,"size","","Size in bytes",30,null],[12,"stride","","Stride of a single element, in bytes. Only used for structured buffers\nthat you use via shader resource / unordered access views.",30,null],[4,"MapAccess","","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",31,null],[13,"Writable","","Only allow writes.",31,null],[13,"RW","","Allow full access.",31,null],[4,"BufferRole","","Role of the memory buffer. GLES doesn&#39;t allow chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",32,null],[13,"Index","","Index buffer",32,null],[13,"Uniform","","Uniform block buffer",32,null],[4,"Usage","","A hint as to how this buffer/texture will be used.",null,null],[13,"GpuOnly","","GPU: read + write, CPU: copy. Optimal for render targets.",33,null],[13,"Const","","GPU: read, CPU: none. Optimal for resourced textures/buffers.",33,null],[13,"Dynamic","","GPU: read, CPU: write.",33,null],[13,"CpuOnly","","GPU: copy, CPU: as specified. Used as a staging buffer,\nto be copied back and forth with on-GPU targets.",33,null],[4,"BufferError","","Error creating a buffer.",null,null],[13,"UnsupportedBind","","Some of the bind flags are not supported.",34,null],[13,"Other","","Unknown other error.",34,null],[4,"BufferUpdateError","","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",35,null],[4,"ResourceViewError","","Error creating either a ShaderResourceView, or UnorderedAccessView.",null,null],[13,"NoBindFlag","","The corresponding bind flag is not present in the texture.",36,null],[13,"Channel","","Selected channel type is not supported for this texture.",36,null],[13,"Unsupported","","The backend was refused for some reason.",36,null],[4,"TargetViewError","","Error creating either a RenderTargetView, or DepthStencilView.",null,null],[13,"NoBindFlag","","The `RENDER_TARGET`/`DEPTH_STENCIL` flag is not present in the texture.",37,null],[13,"BadLevel","","Selected mip level doesn&#39;t exist.",37,null],[13,"BadLayer","","Selected array layer doesn&#39;t exist.",37,null],[13,"Channel","","Selected channel type is not supported for this texture.",37,null],[13,"Unsupported","","The backend was refused for some reason.",37,null],[4,"CombinedError","","An error from creating textures with views at the same time.",null,null],[13,"Texture","","Failed to create the raw texture.",38,null],[13,"Resource","","Failed to create SRV or UAV.",38,null],[13,"Target","","Failed to create RTV or DSV.",38,null],[5,"cast_slice","","Cast a slice from one POD type to another.",null,null],[17,"RENDER_TARGET","","The resource can be rendered into.",null,null],[17,"DEPTH_STENCIL","","The resource can serve as a depth/stencil target.",null,null],[17,"SHADER_RESOURCE","","The resource can be bound to the shader for reading.",null,null],[17,"UNORDERED_ACCESS","","The resource can be bound to the shader for writing.",null,null],[8,"Typed","","A service trait used to get the raw data out of\nstrong types. Not meant for public use.",null,null],[16,"Raw","","The raw type behind the phantom.",39,null],[10,"new","","Crete a new phantom from the raw type.",39,{"inputs":[{"name":"raw"}],"output":{"name":"self"}}],[10,"raw","","Get an internal reference to the raw type.",39,null],[8,"Factory","","A `Factory` is responsible for creating and managing resources for the context it was created\nwith. ",null,null],[16,"Mapper","","Associated mapper type",40,null],[10,"get_capabilities","","Returns the capabilities of this `Factory`. This usually depends on the graphics API being\nused.",40,null],[10,"create_buffer_raw","","",40,null],[10,"create_buffer_const_raw","","",40,null],[11,"create_buffer_const","","",40,null],[11,"create_buffer_dynamic","","",40,null],[11,"create_buffer_staging","","",40,null],[10,"create_pipeline_state_raw","","Creates a new `RawPipelineState`. To create a safely typed `PipelineState`, see the\n`FactoryExt` trait and `pso` module, both in the `gfx` crate.",40,null],[10,"create_program","","Creates a new shader `Program` for the supplied `ShaderSet`.",40,null],[10,"create_shader","","Compiles a shader source into a `Shader` object that can be used to create a shader\n`Program`.",40,null],[11,"create_shader_vertex","","Compiles a `VertexShader` from source.",40,null],[11,"create_shader_geometry","","Compiles a `GeometryShader` from source.",40,null],[11,"create_shader_pixel","","Compiles a `PixelShader` from source. This is the same as what some APIs call a fragment\nshader.",40,null],[10,"create_sampler","","",40,null],[10,"map_buffer_raw","","",40,null],[10,"unmap_buffer_raw","","",40,null],[10,"map_buffer_readable","","",40,null],[10,"map_buffer_writable","","",40,null],[10,"map_buffer_rw","","",40,null],[10,"create_texture_raw","","Create a new empty raw texture with no data. The channel type parameter is a hint,\nrequired to assist backends that have no concept of typeless formats (OpenGL).\nThe initial data, if given, has to be provided for all mip levels and slices:\nSlice0.Mip0, Slice0.Mip1, ..., Slice1.Mip0, ...",40,null],[10,"view_buffer_as_shader_resource_raw","","",40,null],[10,"view_buffer_as_unordered_access_raw","","",40,null],[10,"view_texture_as_shader_resource_raw","","",40,null],[10,"view_texture_as_unordered_access_raw","","",40,null],[10,"view_texture_as_render_target_raw","","",40,null],[10,"view_texture_as_depth_stencil_raw","","",40,null],[11,"create_texture","","",40,null],[11,"view_buffer_as_shader_resource","","",40,null],[11,"view_buffer_as_unordered_access","","",40,null],[11,"view_texture_as_shader_resource","","",40,null],[11,"view_texture_as_unordered_access","","",40,null],[11,"view_texture_as_render_target","","",40,null],[11,"view_texture_as_depth_stencil","","",40,null],[11,"view_texture_as_depth_stencil_trivial","","",40,null],[11,"create_texture_const_u8","","",40,null],[11,"create_texture_const","","",40,null],[11,"create_render_target","","",40,null],[11,"create_depth_stencil","","",40,null],[11,"create_depth_stencil_view_only","","",40,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"hash","","",31,null],[11,"partial_cmp","","",31,null],[11,"eq","","",31,null],[11,"cmp","","",31,null],[11,"hash","","",41,null],[11,"cmp","","",41,null],[11,"partial_cmp","","",41,null],[11,"lt","","",41,null],[11,"le","","",41,null],[11,"gt","","",41,null],[11,"ge","","",41,null],[11,"clone","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"empty","","Returns an empty set of flags.",41,{"inputs":[],"output":{"name":"bind"}}],[11,"all","","Returns the set containing all flags.",41,{"inputs":[],"output":{"name":"bind"}}],[11,"bits","","Returns the raw value of the flags currently stored.",41,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",41,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",41,{"inputs":[{"name":"u8"}],"output":{"name":"bind"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,null],[11,"is_all","","Returns `true` if all flags are currently set.",41,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,null],[11,"insert","","Inserts the specified flags in-place.",41,null],[11,"remove","","Removes the specified flags in-place.",41,null],[11,"toggle","","Toggles the specified flags in-place.",41,null],[11,"bitor","","Returns the union of the two sets of flags.",41,null],[11,"bitor_assign","","Adds the set of flags.",41,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,null],[11,"bitxor_assign","","Toggles the set of flags.",41,null],[11,"bitand","","Returns the intersection between the two sets of flags.",41,null],[11,"bitand_assign","","Disables all flags disabled in the set.",41,null],[11,"sub","","Returns the set difference of the two sets of flags.",41,null],[11,"sub_assign","","Disables all flags enabled in the set.",41,null],[11,"not","","Returns the complement of this set of flags.",41,null],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"bind"}}],[11,"eq","","",32,null],[11,"hash","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"hash","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"cmp","","",33,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"hash","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"hash","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"description","","",34,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"description","","",35,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"description","","",36,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"description","","",37,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"description","","",38,null],[11,"cause","","",38,null],[11,"from","","",38,{"inputs":[{"name":"error"}],"output":{"name":"combinederror"}}],[11,"from","","",38,{"inputs":[{"name":"resourceviewerror"}],"output":{"name":"combinederror"}}],[11,"from","","",38,{"inputs":[{"name":"targetviewerror"}],"output":{"name":"combinederror"}}],[0,"format","gfx_core","Universal format specification.\nApplicable to textures, views, and vertex buffers.",null,null],[3,"Swizzle","gfx_core::format","Channel swizzle configuration for the resource views.\nNote: It&#39;s not currently mirrored at compile-time,\nthus providing less safety and convenience.",null,null],[12,"0","","",42,null],[12,"1","","",42,null],[12,"2","","",42,null],[12,"3","","",42,null],[3,"Format","","Complete run-time surface format.",null,null],[12,"0","","",43,null],[12,"1","","",43,null],[3,"U8Norm","","",null,null],[12,"0","","",44,null],[3,"I8Norm","","",null,null],[12,"0","","",45,null],[3,"U16Norm","","",null,null],[12,"0","","",46,null],[3,"I16Norm","","",null,null],[12,"0","","",47,null],[3,"F16","","",null,null],[12,"0","","",48,null],[4,"ChannelType","","Type of a surface channel. This is how we interpret the\nstorage allocated with `SurfaceType`.",null,null],[13,"Int","","",49,null],[13,"Uint","","",49,null],[13,"Inorm","","",49,null],[13,"Unorm","","",49,null],[13,"Float","","",49,null],[13,"Srgb","","",49,null],[4,"Int","","",null,null],[4,"Uint","","",null,null],[4,"Inorm","","",null,null],[4,"Unorm","","",null,null],[4,"Float","","",null,null],[4,"Srgb","","",null,null],[4,"SurfaceType","","Type of the allocated texture surface. It is supposed to only\ncarry information about the number of bits per each channel.\nThe actual types are up to the views to decide and interpret.\nThe actual components are up to the swizzle to define.",null,null],[13,"R4_G4","","",50,null],[13,"R4_G4_B4_A4","","",50,null],[13,"R5_G5_B5_A1","","",50,null],[13,"R5_G6_B5","","",50,null],[13,"R8","","",50,null],[13,"R8_G8","","",50,null],[13,"R8_G8_B8_A8","","",50,null],[13,"R10_G10_B10_A2","","",50,null],[13,"R11_G11_B10","","",50,null],[13,"R16","","",50,null],[13,"R16_G16","","",50,null],[13,"R16_G16_B16","","",50,null],[13,"R16_G16_B16_A16","","",50,null],[13,"R32","","",50,null],[13,"R32_G32","","",50,null],[13,"R32_G32_B32","","",50,null],[13,"R32_G32_B32_A32","","",50,null],[13,"D16","","",50,null],[13,"D24","","",50,null],[13,"D24_S8","","",50,null],[13,"D32","","",50,null],[4,"R4_G4","","",null,null],[4,"R4_G4_B4_A4","","",null,null],[4,"R5_G5_B5_A1","","",null,null],[4,"R5_G6_B5","","",null,null],[4,"R8","","",null,null],[4,"R8_G8","","",null,null],[4,"R8_G8_B8_A8","","",null,null],[4,"R10_G10_B10_A2","","",null,null],[4,"R11_G11_B10","","",null,null],[4,"R16","","",null,null],[4,"R16_G16","","",null,null],[4,"R16_G16_B16","","",null,null],[4,"R16_G16_B16_A16","","",null,null],[4,"R32","","",null,null],[4,"R32_G32","","",null,null],[4,"R32_G32_B32","","",null,null],[4,"R32_G32_B32_A32","","",null,null],[4,"D16","","",null,null],[4,"D24","","",null,null],[4,"D24_S8","","",null,null],[4,"D32","","",null,null],[4,"ChannelSource","","Source channel in a swizzle configuration. Some may redirect onto\ndifferent physical channels, some may be hardcoded to 0 or 1.",null,null],[13,"Zero","","",51,null],[13,"One","","",51,null],[13,"X","","",51,null],[13,"Y","","",51,null],[13,"Z","","",51,null],[13,"W","","",51,null],[6,"Vec1","","Abstracted 1-element container for macro internal use",null,null],[6,"Vec2","","Abstracted 2-element container for macro internal use",null,null],[6,"Vec3","","Abstracted 3-element container for macro internal use",null,null],[6,"Vec4","","Abstracted 4-element container for macro internal use",null,null],[6,"Rgba8","","Standard 8bits RGBA format.",null,null],[6,"Srgba8","","Standard 8bit gamma transforming RGB format.",null,null],[6,"Rgb10a2F","","Standard HDR floating-point format with 10 bits for RGB components\nand 2 bits for the alpha.",null,null],[6,"Rgba16F","","Standard 16-bit floating-point RGBA format.",null,null],[6,"Rgba32F","","Standard 32-bit floating-point RGBA format.",null,null],[6,"Depth","","Standard 24-bit depth format.",null,null],[6,"DepthStencil","","Standard 24-bit depth format with 8-bit stencil.",null,null],[6,"Depth32F","","Standard 32-bit floating-point depth format.",null,null],[8,"SurfaceTyped","","Compile-time surface type trait.",null,null],[16,"DataType","","The corresponding data type to be passed from CPU.",52,null],[10,"get_surface_type","","Return the run-time value of the type.",52,{"inputs":[],"output":{"name":"surfacetype"}}],[8,"BufferSurface","","An ability of a surface type to be used for vertex buffers.",null,null],[8,"TextureSurface","","An ability of a surface type to be used for textures.",null,null],[8,"RenderSurface","","An ability of a surface type to be used for render targets.",null,null],[8,"DepthSurface","","An ability of a surface type to be used for depth targets.",null,null],[8,"StencilSurface","","An ability of a surface type to be used for stencil targets.",null,null],[8,"ChannelTyped","","Compile-time channel type trait.",null,null],[16,"ShaderType","","Shader-visible type that corresponds to this channel.\nFor example, normalized integers are visible as floats.",53,null],[10,"get_channel_type","","Return the run-time value of the type.",53,{"inputs":[],"output":{"name":"channeltype"}}],[8,"TextureChannel","","An ability of a channel type to be used for textures.",null,null],[8,"RenderChannel","","An ability of a channel type to be used for render targets.",null,null],[8,"BlendChannel","","An ability of a channel type to be used for blended render targets.",null,null],[8,"Formatted","","Compile-time full format trait.",null,null],[16,"Surface","","Associated surface type.",54,null],[16,"Channel","","Associated channel type.",54,null],[16,"View","","Shader view type of this format.",54,null],[11,"get_format","","Return the run-time value of the type.",54,{"inputs":[],"output":{"name":"format"}}],[8,"BufferFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthFormat","","Ability to be used for depth targets.",null,null],[8,"StencilFormat","","Ability to be used for vertex buffers.",null,null],[8,"DepthStencilFormat","","Ability to be used for depth+stencil targets.",null,null],[8,"TextureFormat","","Ability to be used for textures.",null,null],[8,"RenderFormat","","Ability to be used for render targets.",null,null],[8,"BlendFormat","","Ability to be used for blended render targets.",null,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"partial_cmp","","",49,null],[11,"eq","","",49,null],[11,"cmp","","",49,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"hash","","",55,null],[11,"partial_cmp","","",55,null],[11,"eq","","",55,null],[11,"cmp","","",55,null],[11,"get_channel_type","","",55,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",56,null],[11,"clone","","",56,null],[11,"hash","","",56,null],[11,"partial_cmp","","",56,null],[11,"eq","","",56,null],[11,"cmp","","",56,null],[11,"get_channel_type","","",56,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"hash","","",57,null],[11,"partial_cmp","","",57,null],[11,"eq","","",57,null],[11,"cmp","","",57,null],[11,"get_channel_type","","",57,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"hash","","",58,null],[11,"partial_cmp","","",58,null],[11,"eq","","",58,null],[11,"cmp","","",58,null],[11,"get_channel_type","","",58,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"hash","","",59,null],[11,"partial_cmp","","",59,null],[11,"eq","","",59,null],[11,"cmp","","",59,null],[11,"get_channel_type","","",59,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"hash","","",60,null],[11,"partial_cmp","","",60,null],[11,"eq","","",60,null],[11,"cmp","","",60,null],[11,"get_channel_type","","",60,{"inputs":[],"output":{"name":"channeltype"}}],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"hash","","",50,null],[11,"partial_cmp","","",50,null],[11,"eq","","",50,null],[11,"cmp","","",50,null],[11,"get_total_bits","","Return the total number of bits for this format.",50,null],[11,"get_alpha_stencil_bits","","Return the number of bits allocated for alpha and stencil.",50,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"hash","","",61,null],[11,"partial_cmp","","",61,null],[11,"eq","","",61,null],[11,"cmp","","",61,null],[11,"get_surface_type","","",61,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"hash","","",62,null],[11,"partial_cmp","","",62,null],[11,"eq","","",62,null],[11,"cmp","","",62,null],[11,"get_surface_type","","",62,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"hash","","",63,null],[11,"partial_cmp","","",63,null],[11,"eq","","",63,null],[11,"cmp","","",63,null],[11,"get_surface_type","","",63,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"hash","","",64,null],[11,"partial_cmp","","",64,null],[11,"eq","","",64,null],[11,"cmp","","",64,null],[11,"get_surface_type","","",64,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"hash","","",65,null],[11,"partial_cmp","","",65,null],[11,"eq","","",65,null],[11,"cmp","","",65,null],[11,"get_surface_type","","",65,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"hash","","",66,null],[11,"partial_cmp","","",66,null],[11,"eq","","",66,null],[11,"cmp","","",66,null],[11,"get_surface_type","","",66,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"hash","","",67,null],[11,"partial_cmp","","",67,null],[11,"eq","","",67,null],[11,"cmp","","",67,null],[11,"get_surface_type","","",67,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"hash","","",68,null],[11,"partial_cmp","","",68,null],[11,"eq","","",68,null],[11,"cmp","","",68,null],[11,"get_surface_type","","",68,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"hash","","",69,null],[11,"partial_cmp","","",69,null],[11,"eq","","",69,null],[11,"cmp","","",69,null],[11,"get_surface_type","","",69,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"hash","","",70,null],[11,"partial_cmp","","",70,null],[11,"eq","","",70,null],[11,"cmp","","",70,null],[11,"get_surface_type","","",70,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"hash","","",71,null],[11,"partial_cmp","","",71,null],[11,"eq","","",71,null],[11,"cmp","","",71,null],[11,"get_surface_type","","",71,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"hash","","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"cmp","","",72,null],[11,"get_surface_type","","",72,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",73,null],[11,"clone","","",73,null],[11,"hash","","",73,null],[11,"partial_cmp","","",73,null],[11,"eq","","",73,null],[11,"cmp","","",73,null],[11,"get_surface_type","","",73,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"hash","","",74,null],[11,"partial_cmp","","",74,null],[11,"eq","","",74,null],[11,"cmp","","",74,null],[11,"get_surface_type","","",74,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"hash","","",75,null],[11,"partial_cmp","","",75,null],[11,"eq","","",75,null],[11,"cmp","","",75,null],[11,"get_surface_type","","",75,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"hash","","",76,null],[11,"partial_cmp","","",76,null],[11,"eq","","",76,null],[11,"cmp","","",76,null],[11,"get_surface_type","","",76,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"hash","","",77,null],[11,"partial_cmp","","",77,null],[11,"eq","","",77,null],[11,"cmp","","",77,null],[11,"get_surface_type","","",77,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",78,null],[11,"clone","","",78,null],[11,"hash","","",78,null],[11,"partial_cmp","","",78,null],[11,"eq","","",78,null],[11,"cmp","","",78,null],[11,"get_surface_type","","",78,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",79,null],[11,"clone","","",79,null],[11,"hash","","",79,null],[11,"partial_cmp","","",79,null],[11,"eq","","",79,null],[11,"cmp","","",79,null],[11,"get_surface_type","","",79,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"hash","","",80,null],[11,"partial_cmp","","",80,null],[11,"eq","","",80,null],[11,"cmp","","",80,null],[11,"get_surface_type","","",80,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"hash","","",81,null],[11,"partial_cmp","","",81,null],[11,"eq","","",81,null],[11,"cmp","","",81,null],[11,"get_surface_type","","",81,{"inputs":[],"output":{"name":"surfacetype"}}],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"hash","","",51,null],[11,"partial_cmp","","",51,null],[11,"eq","","",51,null],[11,"cmp","","",51,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"hash","","",42,null],[11,"partial_cmp","","",42,null],[11,"lt","","",42,null],[11,"le","","",42,null],[11,"gt","","",42,null],[11,"ge","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"cmp","","",42,null],[11,"new","","Create a new swizzle where each channel is unmapped.",42,{"inputs":[],"output":{"name":"swizzle"}}],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"hash","","",43,null],[11,"partial_cmp","","",43,null],[11,"lt","","",43,null],[11,"le","","",43,null],[11,"gt","","",43,null],[11,"ge","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"cmp","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"hash","","",44,null],[11,"partial_cmp","","",44,null],[11,"lt","","",44,null],[11,"le","","",44,null],[11,"gt","","",44,null],[11,"ge","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"cmp","","",44,null],[11,"from","","",44,{"inputs":[{"name":"u8"}],"output":{"name":"u8norm"}}],[11,"cast2","","Convert a 2-element slice.",44,null],[11,"cast3","","Convert a 3-element slice.",44,null],[11,"cast4","","Convert a 4-element slice.",44,null],[11,"cast_slice","","Convert a generic slice by transmutation.",44,null],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"hash","","",45,null],[11,"partial_cmp","","",45,null],[11,"lt","","",45,null],[11,"le","","",45,null],[11,"gt","","",45,null],[11,"ge","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"cmp","","",45,null],[11,"from","","",45,{"inputs":[{"name":"i8"}],"output":{"name":"i8norm"}}],[11,"cast2","","Convert a 2-element slice.",45,null],[11,"cast3","","Convert a 3-element slice.",45,null],[11,"cast4","","Convert a 4-element slice.",45,null],[11,"cast_slice","","Convert a generic slice by transmutation.",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"hash","","",46,null],[11,"partial_cmp","","",46,null],[11,"lt","","",46,null],[11,"le","","",46,null],[11,"gt","","",46,null],[11,"ge","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"cmp","","",46,null],[11,"from","","",46,{"inputs":[{"name":"u16"}],"output":{"name":"u16norm"}}],[11,"cast2","","Convert a 2-element slice.",46,null],[11,"cast3","","Convert a 3-element slice.",46,null],[11,"cast4","","Convert a 4-element slice.",46,null],[11,"cast_slice","","Convert a generic slice by transmutation.",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"hash","","",47,null],[11,"partial_cmp","","",47,null],[11,"lt","","",47,null],[11,"le","","",47,null],[11,"gt","","",47,null],[11,"ge","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"cmp","","",47,null],[11,"from","","",47,{"inputs":[{"name":"i16"}],"output":{"name":"i16norm"}}],[11,"cast2","","Convert a 2-element slice.",47,null],[11,"cast3","","Convert a 3-element slice.",47,null],[11,"cast4","","Convert a 4-element slice.",47,null],[11,"cast_slice","","Convert a generic slice by transmutation.",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"hash","","",48,null],[11,"partial_cmp","","",48,null],[11,"lt","","",48,null],[11,"le","","",48,null],[11,"gt","","",48,null],[11,"ge","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"cmp","","",48,null],[11,"from","","",48,{"inputs":[{"name":"u16"}],"output":{"name":"f16"}}],[11,"cast2","","Convert a 2-element slice.",48,null],[11,"cast3","","Convert a 3-element slice.",48,null],[11,"cast4","","Convert a 4-element slice.",48,null],[11,"cast_slice","","Convert a generic slice by transmutation.",48,null],[0,"handle","gfx_core","Device resource handles",null,null],[3,"RawBuffer","gfx_core::handle","Raw (untyped) Buffer Handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"RawPipelineState","","Raw Pipeline State Handle",null,null],[3,"RawTexture","","Raw texture object",null,null],[3,"Texture","","Typed texture object",null,null],[3,"RawShaderResourceView","","Raw Shader Resource View Handle",null,null],[3,"ShaderResourceView","","Type-safe Shader Resource View Handle",null,null],[3,"RawUnorderedAccessView","","Raw Unordered Access View Handle",null,null],[3,"UnorderedAccessView","","Type-safe Unordered Access View Handle",null,null],[3,"RawRenderTargetView","","Raw RTV",null,null],[3,"RawDepthStencilView","","Raw DSV",null,null],[3,"RenderTargetView","","Typed RTV",null,null],[3,"DepthStencilView","","Typed DSV",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",82,null],[10,"make_shader","","",82,null],[10,"make_program","","",82,null],[10,"make_pso","","",82,null],[10,"make_texture","","",82,null],[10,"make_buffer_srv","","",82,null],[10,"make_texture_srv","","",82,null],[10,"make_buffer_uav","","",82,null],[10,"make_texture_uav","","",82,null],[10,"make_rtv","","",82,null],[10,"make_dsv","","",82,null],[10,"make_sampler","","",82,null],[10,"make_fence","","",82,null],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",82,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"hash","","",83,null],[11,"fmt","","",83,null],[11,"clone","","",83,null],[11,"get_info","","Get raw buffer info",83,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"hash","","",84,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"new","","",84,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"raw","","",84,null],[11,"get_info","","Get the associated information about the buffer",84,null],[11,"len","","Get the number of elements in the buffer.",84,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"hash","","",85,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"get_info","","Get program info",86,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"hash","","",88,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"hash","","",89,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"get_info","","Get texture descriptor",88,null],[11,"new","","",89,{"inputs":[{"name":"rawtexture"}],"output":{"name":"texture"}}],[11,"raw","","",89,null],[11,"get_info","","Get texture descriptor",89,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"hash","","",90,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"hash","","",91,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"new","","",91,{"inputs":[{"name":"rawshaderresourceview"}],"output":{"name":"shaderresourceview"}}],[11,"raw","","",91,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"hash","","",92,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"hash","","",93,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"new","","",93,{"inputs":[{"name":"rawunorderedaccessview"}],"output":{"name":"unorderedaccessview"}}],[11,"raw","","",93,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"hash","","",94,null],[11,"fmt","","",94,null],[11,"clone","","",94,null],[11,"get_dimensions","","Get target dimensions",94,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"hash","","",95,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"get_dimensions","","Get target dimensions",95,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"hash","","",96,null],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"get_dimensions","","Get target dimensions",96,null],[11,"new","","",96,{"inputs":[{"name":"rawrendertargetview"}],"output":{"name":"rendertargetview"}}],[11,"raw","","",96,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"hash","","",97,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"get_dimensions","","Get target dimensions",97,null],[11,"new","","",97,{"inputs":[{"name":"rawdepthstencilview"}],"output":{"name":"depthstencilview"}}],[11,"raw","","",97,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"fmt","","",98,null],[11,"clone","","",98,null],[11,"get_info","","Get sampler info",98,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"fmt","","",99,null],[11,"clone","","",99,null],[11,"make_buffer","","",100,null],[11,"make_shader","","",100,null],[11,"make_program","","",100,null],[11,"make_pso","","",100,null],[11,"make_texture","","",100,null],[11,"make_buffer_srv","","",100,null],[11,"make_texture_srv","","",100,null],[11,"make_buffer_uav","","",100,null],[11,"make_texture_uav","","",100,null],[11,"make_rtv","","",100,null],[11,"make_dsv","","",100,null],[11,"make_sampler","","",100,null],[11,"make_fence","","",100,null],[11,"clean_with","","",100,null],[11,"new","","Create a new handle manager",100,{"inputs":[],"output":{"name":"manager"}}],[11,"clear","","Clear all references",100,null],[11,"extend","","Extend with all references of another handle manager",100,null],[11,"count","","Count the total number of referenced resources",100,null],[11,"ref_buffer","","Reference a buffer",100,null],[11,"ref_shader","","Reference a shader",100,null],[11,"ref_program","","Reference a program",100,null],[11,"ref_pso","","Reference a pipeline state object",100,null],[11,"ref_texture","","Reference a texture",100,null],[11,"ref_srv","","Reference a shader resource view",100,null],[11,"ref_uav","","Reference an unordered access view",100,null],[11,"ref_rtv","","Reference an RTV",100,null],[11,"ref_dsv","","Reference a DSV",100,null],[11,"ref_sampler","","Reference a sampler",100,null],[11,"ref_fence","","Reference a fence",100,null],[0,"mapping","gfx_core","Memory mapping",null,null],[3,"Readable","gfx_core::mapping","A handle to a readable map, which can be sliced.",null,null],[3,"Writable","","A handle to a writable map, which only allows setting elements.",null,null],[3,"RW","","A handle to a complete readable/writable map, which can be sliced both ways.",null,null],[8,"Raw","","Unsafe operations for a buffer mapping",null,null],[10,"set","","Set the element at `index` to `val`. Not bounds-checked.",101,null],[10,"to_slice","","Returns a slice of the specified length.",101,null],[10,"to_mut_slice","","Returns a mutable slice of the specified length.",101,null],[8,"Builder","","A service trait with methods for mapping already implemented.\nTo be used by device back ends.",null,null],[16,"RawMapping","","",102,null],[10,"map_readable","","",102,null],[10,"map_writable","","",102,null],[10,"map_read_write","","",102,null],[11,"deref","","",103,null],[11,"drop","","",103,null],[11,"set","","Set a value in the buffer",104,null],[11,"to_mut_slice","","Returns a mutable slice of the specified length.",104,null],[11,"drop","","",104,null],[11,"deref","","",105,null],[11,"deref_mut","","",105,null],[11,"drop","","",105,null],[0,"pso","gfx_core","Raw Pipeline State Objects",null,null],[3,"CreationError","gfx_core::pso","Error types happening upon PSO creation on the device side.",null,null],[3,"ColorInfo","","Color output configuration of the PSO.",null,null],[12,"mask","","Color channel mask",106,null],[12,"color","","Optional color blending",106,null],[12,"alpha","","Optional alpha blending",106,null],[3,"DepthStencilInfo","","Depth and stencil state of the PSO.",null,null],[12,"depth","","Optional depth test configuration",107,null],[12,"front","","Optional stencil test on the front faces",107,null],[12,"back","","Optional stencil test on the back faces",107,null],[3,"Element","","A struct element descriptor.",null,null],[12,"format","","Element format",108,null],[12,"offset","","Offset from the beginning of the container, in bytes",108,null],[12,"stride","","Total container size, in bytes",108,null],[3,"Descriptor","","All the information surrounding a shader program that is required\nfor PSO creation, including the formats of vertex buffers and pixel targets;",null,null],[12,"primitive","","Type of the primitive",109,null],[12,"rasterizer","","Rasterizer setup",109,null],[12,"scissor","","Enable scissor test",109,null],[12,"attributes","","Vertex attributes",109,null],[12,"color_targets","","Render target views (RTV)",109,null],[12,"depth_stencil","","Depth stencil view (DSV)",109,null],[3,"VertexBufferSet","","A complete set of vertex buffers to be used for vertex import in PSO.",null,null],[12,"0","","Array of buffer handles with offsets in them",110,null],[3,"ConstantBufferParam","","A constant buffer run-time parameter for PSO.",null,null],[12,"0","","",111,null],[12,"1","","",111,null],[12,"2","","",111,null],[3,"ResourceViewParam","","A shader resource view (SRV) run-time parameter for PSO.",null,null],[12,"0","","",112,null],[12,"1","","",112,null],[12,"2","","",112,null],[3,"UnorderedViewParam","","An unordered access view (UAV) run-time parameter for PSO.",null,null],[12,"0","","",113,null],[12,"1","","",113,null],[12,"2","","",113,null],[3,"SamplerParam","","A sampler run-time parameter for PSO.",null,null],[12,"0","","",114,null],[12,"1","","",114,null],[12,"2","","",114,null],[3,"PixelTargetSet","","A complete set of render targets to be used for pixel export in PSO.",null,null],[12,"colors","","Array of color target views",115,null],[12,"depth","","Depth target view",115,null],[12,"stencil","","Stencil target view",115,null],[12,"size","","Rendering dimensions",115,null],[6,"BufferOffset","","An offset inside a vertex buffer, in bytes.",null,null],[6,"ElemOffset","","Offset of an attribute from the start of the buffer, in bytes",null,null],[6,"ElemStride","","Offset between attribute values, in bytes",null,null],[6,"InstanceRate","","The number of instances between each subsequent attribute value",null,null],[6,"AttributeDesc","","PSO vertex attribute descriptor",null,null],[6,"ColorTargetDesc","","PSO color target descriptor",null,null],[6,"DepthStencilDesc","","PSO depth-stencil target descriptor",null,null],[11,"fmt","","",116,null],[11,"eq","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"description","","",116,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"hash","","",106,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"from","","",106,{"inputs":[{"name":"colormask"}],"output":{"name":"colorinfo"}}],[11,"from","","",106,{"inputs":[{"name":"blend"}],"output":{"name":"colorinfo"}}],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"hash","","",107,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"from","","",107,{"inputs":[{"name":"depth"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",107,{"inputs":[{"name":"stencil"}],"output":{"name":"depthstencilinfo"}}],[11,"from","","",107,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"hash","","",108,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"hash","","",109,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"new","","Create a new empty PSO descriptor.",109,{"inputs":[{"name":"primitive"},{"name":"rasterizer"}],"output":{"name":"descriptor"}}],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"new","","Create an empty set",110,{"inputs":[],"output":{"name":"vertexbufferset"}}],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"fmt","","",112,null],[11,"clone","","",112,null],[11,"fmt","","",113,null],[11,"clone","","",113,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"new","","Create an empty set",115,{"inputs":[],"output":{"name":"pixeltargetset"}}],[11,"add_color","","Add a color view to the specified slot",115,null],[11,"add_depth_stencil","","Add a depth or stencil view to the specified slot",115,null],[0,"shade","gfx_core","Shader handling.",null,null],[3,"SamplerType","gfx_core::shade","A type of the sampler variable.",null,null],[12,"0","","",117,null],[12,"1","","",117,null],[3,"Usage","","Parameter usage flags.",null,null],[3,"AttributeVar","","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",118,null],[12,"slot","","Slot of the vertex attribute.",118,null],[12,"base_type","","Type that this attribute is composed of.",118,null],[12,"container","","&quot;Scalarness&quot; of this attribute.",118,null],[3,"ConstVar","","A constant in the shader - a bit of data that doesn&#39;t vary",null,null],[12,"name","","Name of this constant.",119,null],[12,"location","","Location of this constant in the program.",119,null],[12,"count","","Number of elements this constant represents.",119,null],[12,"base_type","","Type that this constant is composed of",119,null],[12,"container","","&quot;Scalarness&quot; of this constant.",119,null],[3,"ConstantBufferVar","","A constant buffer.",null,null],[12,"name","","Name of this constant buffer.",120,null],[12,"slot","","Slot of the constant buffer.",120,null],[12,"size","","Size (in bytes) of this buffer&#39;s data.",120,null],[12,"usage","","What program stage this buffer is used in.",120,null],[3,"TextureVar","","Texture shader parameter.",null,null],[12,"name","","Name of this texture variable.",121,null],[12,"slot","","Slot of this texture variable.",121,null],[12,"base_type","","Base type for the texture.",121,null],[12,"ty","","Type of this texture.",121,null],[12,"usage","","What program stage this texture is used in.",121,null],[3,"UnorderedVar","","Unordered access shader parameter.",null,null],[12,"name","","Name of this unordered variable.",122,null],[12,"slot","","Slot of this unordered variable.",122,null],[12,"usage","","What program stage this UAV is used in.",122,null],[3,"SamplerVar","","Sampler shader parameter.",null,null],[12,"name","","Name of this sampler variable.",123,null],[12,"slot","","Slot of this sampler variable.",123,null],[12,"ty","","Type of this sampler.",123,null],[12,"usage","","What program stage this texture is used in.",123,null],[3,"OutputVar","","Target output variable.",null,null],[12,"name","","Name of this output variable.",124,null],[12,"slot","","Output color target index.",124,null],[12,"base_type","","Type of the output component.",124,null],[12,"container","","&quot;Scalarness&quot; of this output.",124,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"vertex_attributes","","Attributes in the program",125,null],[12,"globals","","Global constants in the program",125,null],[12,"constant_buffers","","Constant buffers in the program",125,null],[12,"textures","","Textures in the program",125,null],[12,"unordereds","","Unordered access resources in the program",125,null],[12,"samplers","","Samplers in the program",125,null],[12,"outputs","","Output targets in the program",125,null],[12,"output_depth","","A flag indicating that the pixel shader manually assigns the depth.",125,null],[12,"knows_outputs","","A hacky flag to make sure the clients know we are\nunable to actually get the output variable info",125,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",126,null],[13,"NoArray","","",126,null],[4,"IsComparison","","Whether the sampler compares the depth value upon sampling.",null,null],[13,"Compare","","",127,null],[13,"NoCompare","","",127,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",128,null],[13,"NoMultiSample","","",128,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",129,null],[13,"NoRect","","",129,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",130,null],[13,"RowMajor","","",130,null],[4,"TextureType","","A type of the texture variable.\nThis has to match the actual data we bind to the shader.",null,null],[13,"Buffer","","Sample from a buffer.",131,null],[13,"D1","","Sample from a 1D texture",131,null],[13,"D2","","Sample from a 2D texture",131,null],[13,"D3","","Sample from a 3D texture",131,null],[13,"Cube","","Sample from a cubemap.",131,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"I32","","",132,null],[13,"U32","","",132,null],[13,"F32","","",132,null],[13,"F64","","",132,null],[13,"Bool","","",132,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",133,null],[13,"Vector","","A vector with `Dimension` components.",133,null],[13,"Matrix","","A matrix.",133,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",134,null],[13,"Geometry","","",134,null],[13,"Pixel","","",134,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",135,null],[13,"F32","","",135,null],[13,"I32Vector2","","",135,null],[13,"I32Vector3","","",135,null],[13,"I32Vector4","","",135,null],[13,"F32Vector2","","",135,null],[13,"F32Vector3","","",135,null],[13,"F32Vector4","","",135,null],[13,"F32Matrix2","","",135,null],[13,"F32Matrix3","","",135,null],[13,"F32Matrix4","","",135,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a ConstVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",136,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",136,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\netc)",136,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",137,null],[13,"StageNotSupported","","The device does not support the shader stage.",137,null],[13,"CompilationFailed","","The shader failed to compile.",137,null],[6,"Dimension","","Number of components in a container type (vectors/matrices)",null,null],[6,"Location","","Location of a parameter in the program.",null,null],[6,"ConstFormat","","Format of a shader constant.",null,null],[6,"CreateProgramError","","An error type for creating programs.",null,null],[17,"STAGES","","A constant static array of all shader stages.",null,null],[17,"VERTEX","","Used by the vertex shader",null,null],[17,"GEOMETRY","","Used by the geometry shader",null,null],[17,"PIXEL","","Used by the pixel shader",null,null],[8,"BaseTyped","","A trait that statically links simple data types to\nbase types of the shader constants.",null,null],[10,"get_base_type","","",138,{"inputs":[],"output":{"name":"basetype"}}],[8,"Formatted","","A trait that statically links simple data types to\nconstant formats.",null,null],[10,"get_format","","Get the associated constant format.",139,{"inputs":[],"output":{"name":"constformat"}}],[11,"fmt","","",126,null],[11,"eq","","",126,null],[11,"clone","","",126,null],[11,"fmt","","",127,null],[11,"eq","","",127,null],[11,"clone","","",127,null],[11,"fmt","","",128,null],[11,"eq","","",128,null],[11,"clone","","",128,null],[11,"fmt","","",129,null],[11,"eq","","",129,null],[11,"clone","","",129,null],[11,"fmt","","",130,null],[11,"eq","","",130,null],[11,"clone","","",130,null],[11,"fmt","","",131,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"clone","","",131,null],[11,"can_sample","","Check if this texture can be used with a sampler.",131,null],[11,"fmt","","",117,null],[11,"eq","","",117,null],[11,"ne","","",117,null],[11,"clone","","",117,null],[11,"fmt","","",132,null],[11,"eq","","",132,null],[11,"clone","","",132,null],[11,"fmt","","",133,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"clone","","",133,null],[11,"eq","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"clone","","",135,null],[11,"fmt","","",135,null],[11,"hash","","",140,null],[11,"cmp","","",140,null],[11,"partial_cmp","","",140,null],[11,"lt","","",140,null],[11,"le","","",140,null],[11,"gt","","",140,null],[11,"ge","","",140,null],[11,"clone","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"fmt","","",140,null],[11,"empty","","Returns an empty set of flags.",140,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Returns the set containing all flags.",140,{"inputs":[],"output":{"name":"usage"}}],[11,"bits","","Returns the raw value of the flags currently stored.",140,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",140,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",140,{"inputs":[{"name":"u8"}],"output":{"name":"usage"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",140,null],[11,"is_all","","Returns `true` if all flags are currently set.",140,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",140,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",140,null],[11,"insert","","Inserts the specified flags in-place.",140,null],[11,"remove","","Removes the specified flags in-place.",140,null],[11,"toggle","","Toggles the specified flags in-place.",140,null],[11,"bitor","","Returns the union of the two sets of flags.",140,null],[11,"bitor_assign","","Adds the set of flags.",140,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",140,null],[11,"bitxor_assign","","Toggles the set of flags.",140,null],[11,"bitand","","Returns the intersection between the two sets of flags.",140,null],[11,"bitand_assign","","Disables all flags disabled in the set.",140,null],[11,"sub","","Returns the set difference of the two sets of flags.",140,null],[11,"sub_assign","","Disables all flags enabled in the set.",140,null],[11,"not","","Returns the complement of this set of flags.",140,null],[11,"from_iter","","",140,{"inputs":[{"name":"t"}],"output":{"name":"usage"}}],[11,"from","","",140,{"inputs":[{"name":"stage"}],"output":{"name":"usage"}}],[11,"fmt","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",119,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"clone","","",121,null],[11,"fmt","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",123,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"fmt","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"fmt","","",125,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"fmt","","",136,null],[11,"description","","",136,null],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",119,null],[11,"fmt","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"fmt","","",137,null],[11,"description","","",137,null],[0,"tex","gfx_core","Texture creation and modification.",null,null],[6,"Layer","gfx_core::tex","",null,null],[6,"Level","","",null,null],[3,"ImageInfoCommon","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",141,null],[12,"yoffset","","",141,null],[12,"zoffset","","",141,null],[12,"width","","",141,null],[12,"height","","",141,null],[12,"depth","","",141,null],[12,"format","","Format of each texel.",141,null],[12,"mipmap","","Which mipmap to select.",141,null],[3,"Lod","","A wrapper for the LOD level of a texture.",null,null],[3,"PackedColor","","A wrapper for the 8bpp RGBA color, encoded as u32.",null,null],[12,"0","","",142,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filter","","Filter method to use.",143,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak).",143,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",143,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling.",143,null],[12,"comparison","","Comparison mode, used primary for a shadow map.",143,null],[12,"border","","Border color is used when one of the wrap modes is set to border.",143,null],[3,"Descriptor","","Texture storage descriptor.",null,null],[12,"kind","","",144,null],[12,"levels","","",144,null],[12,"format","","",144,null],[12,"bind","","",144,null],[12,"usage","","",144,null],[3,"ResourceDesc","","Texture resource view descriptor.",null,null],[12,"channel","","",145,null],[12,"min","","",145,null],[12,"max","","",145,null],[12,"swizzle","","",145,null],[3,"RenderDesc","","Texture render view descriptor.",null,null],[12,"channel","","",146,null],[12,"level","","",146,null],[12,"layer","","",146,null],[3,"DepthStencilFlags","","Depth-stencil read-only flags",null,null],[3,"DepthStencilDesc","","Texture depth-stencil view descriptor.",null,null],[12,"level","","",147,null],[12,"layer","","",147,null],[12,"flags","","",147,null],[4,"Error","","Pure texture object creation error.",null,null],[13,"Format","","Failed to map a given format to the device.",148,null],[13,"Kind","","The kind doesn&#39;t support a particular operation.",148,null],[13,"Samples","","Failed to map a given multisampled kind to the device.",148,null],[13,"Size","","Unsupported size in one of the dimensions.",148,null],[13,"Data","","The given data has a different size than the target texture slice.",148,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Single","","No additional sample information",149,null],[13,"Multi","","MultiSampled Anti-Aliasing (MSAA)",149,null],[13,"Coverage","","Coverage Sampling Anti-Aliasing (CSAA/EQAA)",149,null],[4,"FilterMethod","","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They &quot;layer&quot; on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",150,null],[13,"Mipmap","","Add simple mipmapping.",150,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",150,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",150,null],[13,"Anisotropic","","Anisotropic filtering with a given &quot;max&quot;, must be between 1 and 16,\ninclusive.",150,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosX","","",151,null],[13,"NegX","","",151,null],[13,"PosY","","",151,null],[13,"NegY","","",151,null],[13,"PosZ","","",151,null],[13,"NegZ","","",151,null],[4,"Kind","","Specifies the kind of a texture storage to be allocated.",null,null],[13,"D1","","A single row of texels.",152,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",152,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",152,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",152,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",152,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",152,null],[13,"CubeArray","","An array of Cube textures.",152,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",153,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",153,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",153,null],[13,"Border","","Use border color.",153,null],[6,"Size","","Dimension size",null,null],[6,"Bits","","Number of bits per component",null,null],[6,"NumSamples","","Number of MSAA samples",null,null],[6,"NumFragments","","Number of EQAA fragments",null,null],[6,"Dimensions","","Dimensions: width, height, depth, and samples.",null,null],[6,"RawImageInfo","","New raw image info based on the universal format spec.",null,null],[6,"NewImageInfo","","New image info based on the universal format spec.\nThe format is suppsed to come from compile-time information\nas opposed to run-time enum values.",null,null],[17,"CUBE_FACES","","A constant array of cube faces in the order they map to the hardware.",null,null],[17,"RO_DEPTH","","Depth is read-only in the view.",null,null],[17,"RO_STENCIL","","Stencil is read-only in the view.",null,null],[17,"RO_DEPTH_STENCIL","","Both depth and stencil are read-only.",null,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"hash","","",149,null],[11,"partial_cmp","","",149,null],[11,"lt","","",149,null],[11,"le","","",149,null],[11,"gt","","",149,null],[11,"ge","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"cmp","","",149,null],[11,"from","","",149,{"inputs":[{"name":"numsamples"}],"output":{"name":"aamode"}}],[11,"get_num_fragments","","Return the number of actual data fragments stored per texel.",149,null],[11,"needs_resolve","","Return true if the surface has to be resolved before sampling.",149,null],[11,"fmt","","",150,null],[11,"clone","","",150,null],[11,"hash","","",150,null],[11,"partial_cmp","","",150,null],[11,"lt","","",150,null],[11,"le","","",150,null],[11,"gt","","",150,null],[11,"ge","","",150,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"cmp","","",150,null],[11,"fmt","","",151,null],[11,"clone","","",151,null],[11,"hash","","",151,null],[11,"partial_cmp","","",151,null],[11,"eq","","",151,null],[11,"cmp","","",151,null],[11,"fmt","","",152,null],[11,"clone","","",152,null],[11,"hash","","",152,null],[11,"partial_cmp","","",152,null],[11,"lt","","",152,null],[11,"le","","",152,null],[11,"gt","","",152,null],[11,"ge","","",152,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"cmp","","",152,null],[11,"get_dimensions","","Get texture dimensions, with 0 values where not applicable.",152,null],[11,"get_level_dimensions","","Get the dimensionality of a particular mipmap level.",152,null],[11,"get_num_levels","","Count the number of mipmap levels.",152,null],[11,"get_num_slices","","Return the number of slices for an array, or None for non-arrays.",152,null],[11,"is_cube","","Check if it&#39;s one of the cube kinds.",152,null],[11,"fmt","","",141,null],[11,"clone","","",141,null],[11,"hash","","",141,null],[11,"partial_cmp","","",141,null],[11,"lt","","",141,null],[11,"le","","",141,null],[11,"gt","","",141,null],[11,"ge","","",141,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"cmp","","",141,null],[11,"get_texel_count","","Get the total number of texels.",141,null],[11,"convert","","Convert into a differently typed format.",141,null],[11,"is_inside","","Check if it fits inside given dimensions.",141,null],[11,"fmt","","",153,null],[11,"clone","","",153,null],[11,"hash","","",153,null],[11,"partial_cmp","","",153,null],[11,"eq","","",153,null],[11,"cmp","","",153,null],[11,"partial_cmp","","",154,null],[11,"lt","","",154,null],[11,"le","","",154,null],[11,"gt","","",154,null],[11,"ge","","",154,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"hash","","",154,null],[11,"fmt","","",154,null],[11,"clone","","",154,null],[11,"from","","",154,{"inputs":[{"name":"f32"}],"output":{"name":"lod"}}],[11,"into","","",154,null],[11,"partial_cmp","","",142,null],[11,"lt","","",142,null],[11,"le","","",142,null],[11,"gt","","",142,null],[11,"ge","","",142,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"hash","","",142,null],[11,"fmt","","",142,null],[11,"clone","","",142,null],[11,"from","","",142,null],[11,"into","","",142,null],[11,"partial_cmp","","",143,null],[11,"lt","","",143,null],[11,"le","","",143,null],[11,"gt","","",143,null],[11,"ge","","",143,null],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"hash","","",143,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",143,{"inputs":[{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"fmt","","",144,null],[11,"clone","","",144,null],[11,"hash","","",144,null],[11,"partial_cmp","","",144,null],[11,"lt","","",144,null],[11,"le","","",144,null],[11,"gt","","",144,null],[11,"ge","","",144,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"cmp","","",144,null],[11,"to_image_info","","Get image info for a given mip.",144,null],[11,"to_raw_image_info","","Get the raw image info for a given mip and a channel type.",144,null],[11,"fmt","","",145,null],[11,"clone","","",145,null],[11,"hash","","",145,null],[11,"partial_cmp","","",145,null],[11,"lt","","",145,null],[11,"le","","",145,null],[11,"gt","","",145,null],[11,"ge","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"cmp","","",145,null],[11,"fmt","","",146,null],[11,"clone","","",146,null],[11,"hash","","",146,null],[11,"partial_cmp","","",146,null],[11,"lt","","",146,null],[11,"le","","",146,null],[11,"gt","","",146,null],[11,"ge","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"cmp","","",146,null],[11,"hash","","",155,null],[11,"cmp","","",155,null],[11,"partial_cmp","","",155,null],[11,"lt","","",155,null],[11,"le","","",155,null],[11,"gt","","",155,null],[11,"ge","","",155,null],[11,"clone","","",155,null],[11,"eq","","",155,null],[11,"ne","","",155,null],[11,"fmt","","",155,null],[11,"empty","","Returns an empty set of flags.",155,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"all","","Returns the set containing all flags.",155,{"inputs":[],"output":{"name":"depthstencilflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",155,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",155,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",155,{"inputs":[{"name":"u8"}],"output":{"name":"depthstencilflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",155,null],[11,"is_all","","Returns `true` if all flags are currently set.",155,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",155,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",155,null],[11,"insert","","Inserts the specified flags in-place.",155,null],[11,"remove","","Removes the specified flags in-place.",155,null],[11,"toggle","","Toggles the specified flags in-place.",155,null],[11,"bitor","","Returns the union of the two sets of flags.",155,null],[11,"bitor_assign","","Adds the set of flags.",155,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",155,null],[11,"bitxor_assign","","Toggles the set of flags.",155,null],[11,"bitand","","Returns the intersection between the two sets of flags.",155,null],[11,"bitand_assign","","Disables all flags disabled in the set.",155,null],[11,"sub","","Returns the set difference of the two sets of flags.",155,null],[11,"sub_assign","","Disables all flags enabled in the set.",155,null],[11,"not","","Returns the complement of this set of flags.",155,null],[11,"from_iter","","",155,{"inputs":[{"name":"t"}],"output":{"name":"depthstencilflags"}}],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"hash","","",147,null],[11,"partial_cmp","","",147,null],[11,"lt","","",147,null],[11,"le","","",147,null],[11,"gt","","",147,null],[11,"ge","","",147,null],[11,"eq","","",147,null],[11,"ne","","",147,null],[11,"cmp","","",147,null],[11,"from","","",147,{"inputs":[{"name":"renderdesc"}],"output":{"name":"depthstencildesc"}}],[6,"VertexCount","gfx_core","Draw vertex count.",null,null],[6,"InstanceCount","","Draw number of instances",null,null],[6,"AttributeSlot","","Slot for an attribute.",null,null],[6,"ConstantBufferSlot","","Slot for a constant buffer object.",null,null],[6,"ResourceViewSlot","","Slot for a shader resource view.",null,null],[6,"UnorderedViewSlot","","Slot for an unordered access object.",null,null],[6,"ColorSlot","","Slot for an active color buffer.",null,null],[6,"SamplerSlot","","Slot for a sampler.",null,null],[17,"MAX_VERTEX_ATTRIBUTES","","Compile-time maximum number of vertex attributes.",null,null],[17,"MAX_COLOR_TARGETS","","Compile-time maximum number of color targets.",null,null],[17,"MAX_CONSTANT_BUFFERS","","Compile-time maximum number of constant buffers.",null,null],[17,"MAX_RESOURCE_VIEWS","","Compile-time maximum number of shader resource views (SRV).",null,null],[17,"MAX_UNORDERED_VIEWS","","Compile-time maximum number of unordered access views (UAV).",null,null],[17,"MAX_SAMPLERS","","Compile-time maximum number of samplers.",null,null],[8,"Resources","","Different types of a specific API.",null,null],[16,"Buffer","","",156,null],[16,"Shader","","",156,null],[16,"Program","","",156,null],[16,"PipelineStateObject","","",156,null],[16,"Texture","","",156,null],[16,"ShaderResourceView","","",156,null],[16,"UnorderedAccessView","","",156,null],[16,"RenderTargetView","","",156,null],[16,"DepthStencilView","","",156,null],[16,"Sampler","","",156,null],[16,"Fence","","",156,null],[8,"Device","","A `Device` is responsible for submitting `CommandBuffer`s to the GPU.",null,null],[16,"Resources","","Associated `Resources` type.",157,null],[16,"CommandBuffer","","Associated `CommandBuffer` type. Every `Device` type can only work with one `CommandBuffer`\ntype.",157,null],[10,"get_capabilities","","Returns the capabilities of this `Ðevice`.",157,null],[10,"pin_submitted_resources","","Pin everything from this handle manager to live for a frame.",157,null],[10,"submit","","Submits a `CommandBuffer` to the GPU for execution.",157,null],[10,"cleanup","","Cleanup unused resources. This should be called between frames.",157,null],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",158,null],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",158,null],[11,"reference","","",159,null],[11,"reference","","",160,null],[11,"reference","","",161,null],[11,"reference","","",162,null],[11,"reference","","",163,null],[11,"get_usage","","Return the aggregated stage usage for the set.",22,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"eq","","",23,null],[11,"hash","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"hash","","",24,null],[11,"partial_cmp","","",24,null],[11,"eq","","",24,null],[11,"cmp","","",24,null]],"paths":[[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"MultiSample"],[3,"Rasterizer"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Color"],[3,"RefValues"],[3,"Rect"],[3,"Mirror"],[3,"Capabilities"],[4,"ShaderSet"],[4,"Primitive"],[4,"IndexType"],[4,"ClearColor"],[8,"CommandBuffer"],[4,"DummyResources"],[3,"DummyDevice"],[3,"DummyCommandBuffer"],[3,"BufferInfo"],[4,"MapAccess"],[4,"BufferRole"],[4,"Usage"],[4,"BufferError"],[4,"BufferUpdateError"],[4,"ResourceViewError"],[4,"TargetViewError"],[4,"CombinedError"],[8,"Typed"],[8,"Factory"],[3,"Bind"],[3,"Swizzle"],[3,"Format"],[3,"U8Norm"],[3,"I8Norm"],[3,"U16Norm"],[3,"I16Norm"],[3,"F16"],[4,"ChannelType"],[4,"SurfaceType"],[4,"ChannelSource"],[8,"SurfaceTyped"],[8,"ChannelTyped"],[8,"Formatted"],[4,"Int"],[4,"Uint"],[4,"Inorm"],[4,"Unorm"],[4,"Float"],[4,"Srgb"],[4,"R4_G4"],[4,"R4_G4_B4_A4"],[4,"R5_G5_B5_A1"],[4,"R5_G6_B5"],[4,"R8"],[4,"R8_G8"],[4,"R8_G8_B8_A8"],[4,"R10_G10_B10_A2"],[4,"R11_G11_B10"],[4,"R16"],[4,"R16_G16"],[4,"R16_G16_B16"],[4,"R16_G16_B16_A16"],[4,"R32"],[4,"R32_G32"],[4,"R32_G32_B32"],[4,"R32_G32_B32_A32"],[4,"D16"],[4,"D24"],[4,"D24_S8"],[4,"D32"],[8,"Producer"],[3,"RawBuffer"],[3,"Buffer"],[3,"Shader"],[3,"Program"],[3,"RawPipelineState"],[3,"RawTexture"],[3,"Texture"],[3,"RawShaderResourceView"],[3,"ShaderResourceView"],[3,"RawUnorderedAccessView"],[3,"UnorderedAccessView"],[3,"RawRenderTargetView"],[3,"RawDepthStencilView"],[3,"RenderTargetView"],[3,"DepthStencilView"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[8,"Raw"],[8,"Builder"],[3,"Readable"],[3,"Writable"],[3,"RW"],[3,"ColorInfo"],[3,"DepthStencilInfo"],[3,"Element"],[3,"Descriptor"],[3,"VertexBufferSet"],[3,"ConstantBufferParam"],[3,"ResourceViewParam"],[3,"UnorderedViewParam"],[3,"SamplerParam"],[3,"PixelTargetSet"],[3,"CreationError"],[3,"SamplerType"],[3,"AttributeVar"],[3,"ConstVar"],[3,"ConstantBufferVar"],[3,"TextureVar"],[3,"UnorderedVar"],[3,"SamplerVar"],[3,"OutputVar"],[3,"ProgramInfo"],[4,"IsArray"],[4,"IsComparison"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"TextureType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[4,"CompatibilityError"],[4,"CreateShaderError"],[8,"BaseTyped"],[8,"Formatted"],[3,"Usage"],[3,"ImageInfoCommon"],[3,"PackedColor"],[3,"SamplerInfo"],[3,"Descriptor"],[3,"ResourceDesc"],[3,"RenderDesc"],[3,"DepthStencilDesc"],[4,"Error"],[4,"AaMode"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"WrapMode"],[3,"Lod"],[3,"DepthStencilFlags"],[8,"Resources"],[8,"Device"],[8,"DeviceFence"],[3,"VertexShader"],[3,"HullShader"],[3,"DomainShader"],[3,"GeometryShader"],[3,"PixelShader"]]};
searchIndex["draw_state"] = {"doc":"Graphics state blocks for gfx-rs","items":[[0,"preset","draw_state","State presets",null,null],[0,"blend","draw_state::preset","Blending preset modes.",null,null],[17,"ADD","draw_state::preset::blend","When combining two fragments, add their values together, saturating at 1.0",null,null],[17,"MULTIPLY","","When combining two fragments, multiply their values together.",null,null],[17,"ALPHA","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",null,null],[17,"INVERT","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",null,null],[0,"depth","draw_state::preset","Depth preset modes.",null,null],[17,"LESS_EQUAL_TEST","draw_state::preset::depth","&quot;&lt;=&quot; comparison with read-only depth",null,null],[17,"LESS_EQUAL_WRITE","","&quot;&lt;=&quot; comparison with writable depth",null,null],[0,"state","draw_state","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"Rasterizer","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",1,null],[12,"cull_face","","Which face should be culled.",1,null],[12,"method","","How to rasterize this primitive.",1,null],[12,"offset","","Any polygon offset to apply.",1,null],[12,"samples","","Multi-sampling mode.",1,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",2,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",2,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",2,null],[12,"op_fail","","What operation to do if the stencil test fails.",2,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",2,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",2,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",3,null],[12,"back","","",3,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",4,null],[12,"write","","Specify whether to write to the depth buffer or not.",4,null],[3,"BlendChannel","","",null,null],[12,"equation","","",5,null],[12,"source","","",5,null],[12,"destination","","",5,null],[3,"Blend","","",null,null],[12,"color","","",6,null],[12,"alpha","","",6,null],[3,"ColorMask","","",null,null],[3,"Color","","The state of an active color render target",null,null],[12,"mask","","Color mask to use.",7,null],[12,"blend","","Optional blending.",7,null],[3,"RefValues","","The complete set of the rasterizer reference values.\nSwitching these doesn&#39;t roll the hardware context.",null,null],[12,"stencil","","Stencil front and back values.",8,null],[12,"blend","","Constant blend color.",8,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",9,null],[13,"CounterClockwise","","Counter-clockwise winding order.",9,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",10,null],[13,"Front","","",10,null],[13,"Back","","",10,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",11,null],[13,"Line","","Rasterize as a line with the given width.",11,null],[13,"Fill","","Rasterize as a face.",11,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",12,null],[13,"Less","","`x &lt; y`",12,null],[13,"LessEqual","","`x &lt;= y`",12,null],[13,"Equal","","`x == y`",12,null],[13,"GreaterEqual","","`x &gt;= y`",12,null],[13,"Greater","","`x &gt; y`",12,null],[13,"NotEqual","","`x != y`",12,null],[13,"Always","","`true`",12,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",13,null],[13,"Zero","","Set the value in the stencil buffer to zero.",13,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",13,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",13,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",13,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",13,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",13,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",13,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",14,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",14,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",14,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",14,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",14,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",15,null],[13,"SourceAlpha","","",15,null],[13,"DestColor","","",15,null],[13,"DestAlpha","","",15,null],[13,"ConstColor","","",15,null],[13,"ConstAlpha","","",15,null],[4,"Factor","","",null,null],[13,"Zero","","",16,null],[13,"One","","",16,null],[13,"SourceAlphaSaturated","","",16,null],[13,"ZeroPlus","","",16,null],[13,"OneMinus","","",16,null],[6,"LineWidth","","Width of a line.\nCould be f32 if not for Hash deriving issues.",null,null],[6,"OffsetSlope","","Slope depth offset factor\nCould be f32 if not for Hash deriving issues.",null,null],[6,"OffsetUnits","","Number of units to offset, where\nthe unit is the minimal difference in the depth value\ndictated by the precision of the depth buffer.",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"hash","","",9,null],[11,"partial_cmp","","",9,null],[11,"eq","","",9,null],[11,"cmp","","",9,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"hash","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"clone","","",17,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"new_fill","","Create a new filling rasterizer.",1,{"inputs":[],"output":{"name":"rasterizer"}}],[11,"with_cull_back","","Add back face culling.",1,null],[11,"with_offset","","Add polygon offset.",1,null],[11,"cmp","","",12,null],[11,"partial_cmp","","",12,null],[11,"hash","","",12,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"clone","","",12,null],[11,"cmp","","",13,null],[11,"partial_cmp","","",13,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"hash","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"stencilside"}}],[11,"cmp","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"stencil"}}],[11,"new","","Create a new stencil state with a given function.",3,null],[11,"cmp","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"hash","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"depth"}}],[11,"cmp","","",14,null],[11,"partial_cmp","","",14,null],[11,"hash","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"clone","","",14,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"hash","","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"hash","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"clone","","",16,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"hash","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"cmp","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"blendchannel"}}],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"hash","","",6,null],[11,"clone","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"blend"}}],[11,"new","","Create a new blend state with a given equation.",6,{"inputs":[{"name":"equation"},{"name":"factor"},{"name":"factor"}],"output":{"name":"blend"}}],[11,"fmt","","",6,null],[11,"hash","","",18,null],[11,"cmp","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"u8"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,null],[11,"is_all","","Returns `true` if all flags are currently set.",18,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,null],[11,"insert","","Inserts the specified flags in-place.",18,null],[11,"remove","","Removes the specified flags in-place.",18,null],[11,"toggle","","Toggles the specified flags in-place.",18,null],[11,"bitor","","Returns the union of the two sets of flags.",18,null],[11,"bitor_assign","","Adds the set of flags.",18,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,null],[11,"bitxor_assign","","Toggles the set of flags.",18,null],[11,"bitand","","Returns the intersection between the two sets of flags.",18,null],[11,"bitand_assign","","Disables all flags disabled in the set.",18,null],[11,"sub","","Returns the set difference of the two sets of flags.",18,null],[11,"sub_assign","","Disables all flags enabled in the set.",18,null],[11,"not","","Returns the complement of this set of flags.",18,null],[11,"from_iter","","",18,{"inputs":[{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"color"}}],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"refvalues"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"partial_cmp","","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"hash","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"hash","","",20,null],[11,"cmp","","",20,null],[11,"partial_cmp","","",20,null],[11,"lt","","",20,null],[11,"le","","",20,null],[11,"gt","","",20,null],[11,"ge","","",20,null],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",20,null],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,null],[11,"is_all","","Returns `true` if all flags are currently set.",20,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,null],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,null],[11,"bitor_assign","","Adds the set of flags.",20,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,null],[11,"bitxor_assign","","Toggles the set of flags.",20,null],[11,"bitand","","Returns the intersection between the two sets of flags.",20,null],[11,"bitand_assign","","Disables all flags disabled in the set.",20,null],[11,"sub","","Returns the set difference of the two sets of flags.",20,null],[11,"sub_assign","","Disables all flags enabled in the set.",20,null],[11,"not","","Returns the complement of this set of flags.",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"mirror"}}]],"paths":[[3,"Offset"],[3,"Rasterizer"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[3,"Color"],[3,"RefValues"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"Mirror"]]};
searchIndex["gfx_gl"] = {"doc":"An OpenGL loader generated by [gl-rs](https://github.com/bjz/gl-rs).","items":[[3,"FnPtr","gfx_gl","",null,null],[3,"Gl","","",null,null],[12,"AttachShader","","Fallbacks: AttachObjectARB",0,null],[12,"MultiTexCoordP3ui","","",0,null],[12,"BeginQuery","","Fallbacks: BeginQueryARB",0,null],[12,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",0,null],[12,"TextureParameterIuiv","","",0,null],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",0,null],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",0,null],[12,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",0,null],[12,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",0,null],[12,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",0,null],[12,"GetTexParameteriv","","",0,null],[12,"ReadPixels","","",0,null],[12,"InvalidateBufferSubData","","",0,null],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",0,null],[12,"ShaderBinary","","",0,null],[12,"NormalP3uiv","","",0,null],[12,"Uniform3f","","Fallbacks: Uniform3fARB",0,null],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",0,null],[12,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",0,null],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",0,null],[12,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",0,null],[12,"GetTextureLevelParameterfv","","",0,null],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",0,null],[12,"GetBufferParameteri64v","","",0,null],[12,"ProgramUniform4dv","","",0,null],[12,"TextureStorage1D","","",0,null],[12,"CullFace","","",0,null],[12,"ProgramUniformMatrix3x4dv","","",0,null],[12,"MultiTexCoordP2uiv","","",0,null],[12,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",0,null],[12,"Disable","","",0,null],[12,"NamedRenderbufferStorage","","",0,null],[12,"UniformMatrix2x3dv","","",0,null],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",0,null],[12,"FrontFace","","",0,null],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",0,null],[12,"SecondaryColorP3ui","","",0,null],[12,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",0,null],[12,"GetQueryBufferObjectui64v","","",0,null],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",0,null],[12,"IsShader","","",0,null],[12,"ColorP4ui","","",0,null],[12,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",0,null],[12,"GetProgramResourceiv","","",0,null],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",0,null],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",0,null],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",0,null],[12,"GetProgramiv","","",0,null],[12,"CompileShader","","Fallbacks: CompileShaderARB",0,null],[12,"BindTextureUnit","","",0,null],[12,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",0,null],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",0,null],[12,"BindProgramPipeline","","",0,null],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",0,null],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",0,null],[12,"ClipControl","","",0,null],[12,"ProgramUniformMatrix3dv","","",0,null],[12,"GetNamedFramebufferParameteriv","","",0,null],[12,"ClearNamedFramebufferfi","","",0,null],[12,"StencilOp","","",0,null],[12,"TexImage2D","","",0,null],[12,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV",0,null],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",0,null],[12,"TextureStorage3DMultisample","","",0,null],[12,"TexCoordP3ui","","",0,null],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",0,null],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",0,null],[12,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",0,null],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",0,null],[12,"InvalidateTexSubImage","","",0,null],[12,"DepthRangeArrayv","","",0,null],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",0,null],[12,"ProgramUniform3dv","","",0,null],[12,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",0,null],[12,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",0,null],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES",0,null],[12,"Finish","","",0,null],[12,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",0,null],[12,"MultiTexCoordP2ui","","",0,null],[12,"Uniform3dv","","",0,null],[12,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",0,null],[12,"GetActiveUniformsiv","","",0,null],[12,"SamplerParameteri","","",0,null],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",0,null],[12,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",0,null],[12,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",0,null],[12,"IsSampler","","",0,null],[12,"VertexAttribBinding","","",0,null],[12,"TexParameteriv","","",0,null],[12,"PointSize","","",0,null],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",0,null],[12,"UniformMatrix4x2dv","","",0,null],[12,"StencilMask","","",0,null],[12,"Uniform4f","","Fallbacks: Uniform4fARB",0,null],[12,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",0,null],[12,"UniformMatrix3dv","","",0,null],[12,"BindTransformFeedback","","",0,null],[12,"EndQueryIndexed","","",0,null],[12,"PatchParameterfv","","",0,null],[12,"VertexAttribFormat","","",0,null],[12,"TexCoordP2ui","","",0,null],[12,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",0,null],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",0,null],[12,"GetShaderiv","","",0,null],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",0,null],[12,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",0,null],[12,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",0,null],[12,"TexCoordP4ui","","",0,null],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",0,null],[12,"Uniform3i","","Fallbacks: Uniform3iARB",0,null],[12,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",0,null],[12,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",0,null],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",0,null],[12,"ProgramUniformMatrix4dv","","",0,null],[12,"Uniform1f","","Fallbacks: Uniform1fARB",0,null],[12,"GetProgramInfoLog","","",0,null],[12,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",0,null],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",0,null],[12,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",0,null],[12,"ReadBuffer","","",0,null],[12,"BufferStorage","","Fallbacks: BufferStorageEXT",0,null],[12,"BlendEquationSeparateiARB","","",0,null],[12,"BufferData","","Fallbacks: BufferDataARB",0,null],[12,"Uniform1dv","","",0,null],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",0,null],[12,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",0,null],[12,"TexStorage1D","","Fallbacks: TexStorage1DEXT",0,null],[12,"BlendFuncSeparateiARB","","",0,null],[12,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",0,null],[12,"GetnConvolutionFilter","","",0,null],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",0,null],[12,"ClearBufferSubData","","",0,null],[12,"GetUniformSubroutineuiv","","",0,null],[12,"GetCompressedTextureSubImage","","",0,null],[12,"IsTexture","","",0,null],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",0,null],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",0,null],[12,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",0,null],[12,"VertexAttribIFormat","","",0,null],[12,"GetSubroutineIndex","","",0,null],[12,"DeleteSamplers","","",0,null],[12,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",0,null],[12,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",0,null],[12,"ScissorArrayv","","Fallbacks: ScissorArrayvNV",0,null],[12,"VertexBindingDivisor","","",0,null],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",0,null],[12,"ClearDepth","","",0,null],[12,"NamedFramebufferParameteri","","",0,null],[12,"UnmapNamedBuffer","","",0,null],[12,"ProgramUniform1d","","",0,null],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",0,null],[12,"GetTextureParameteriv","","",0,null],[12,"EndQuery","","Fallbacks: EndQueryARB",0,null],[12,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",0,null],[12,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",0,null],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",0,null],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",0,null],[12,"GetNamedBufferParameteriv","","",0,null],[12,"InvalidateNamedFramebufferData","","",0,null],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",0,null],[12,"DepthRangef","","Fallbacks: DepthRangefOES",0,null],[12,"TextureParameteri","","",0,null],[12,"DepthRangeIndexed","","",0,null],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",0,null],[12,"CopyTextureSubImage1D","","",0,null],[12,"GetQueryBufferObjecti64v","","",0,null],[12,"CompressedTextureSubImage1D","","",0,null],[12,"GetActiveSubroutineUniformiv","","",0,null],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",0,null],[12,"BlitNamedFramebuffer","","",0,null],[12,"DetachShader","","Fallbacks: DetachObjectARB",0,null],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",0,null],[12,"GetnUniformiv","","Fallbacks: GetnUniformivKHR",0,null],[12,"Uniform2i","","Fallbacks: Uniform2iARB",0,null],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",0,null],[12,"PixelStorei","","",0,null],[12,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",0,null],[12,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",0,null],[12,"Uniform2f","","Fallbacks: Uniform2fARB",0,null],[12,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV",0,null],[12,"MapNamedBufferRange","","",0,null],[12,"UniformMatrix4dv","","",0,null],[12,"GetnMinmax","","",0,null],[12,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",0,null],[12,"IsEnabled","","",0,null],[12,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",0,null],[12,"FlushMappedNamedBufferRange","","",0,null],[12,"MemoryBarrierByRegion","","",0,null],[12,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",0,null],[12,"GetVertexArrayIndexediv","","",0,null],[12,"GetVertexArrayIndexed64iv","","",0,null],[12,"NamedBufferData","","",0,null],[12,"Scissor","","",0,null],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",0,null],[12,"PointParameteriv","","Fallbacks: PointParameterivNV",0,null],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",0,null],[12,"BindVertexBuffer","","",0,null],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",0,null],[12,"Uniform2dv","","",0,null],[12,"FramebufferParameteri","","",0,null],[12,"ClearStencil","","",0,null],[12,"DepthRange","","",0,null],[12,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",0,null],[12,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",0,null],[12,"GetnSeparableFilter","","",0,null],[12,"MultiTexCoordP3uiv","","",0,null],[12,"GenSamplers","","",0,null],[12,"GenBuffers","","Fallbacks: GenBuffersARB",0,null],[12,"ScissorIndexed","","Fallbacks: ScissorIndexedNV",0,null],[12,"ProgramUniformMatrix2x4dv","","",0,null],[12,"PointParameteri","","Fallbacks: PointParameteriNV",0,null],[12,"GetQueryBufferObjectiv","","",0,null],[12,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",0,null],[12,"PrimitiveRestartIndex","","",0,null],[12,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",0,null],[12,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",0,null],[12,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",0,null],[12,"ActiveShaderProgram","","",0,null],[12,"DrawArraysIndirect","","",0,null],[12,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",0,null],[12,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",0,null],[12,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",0,null],[12,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",0,null],[12,"QueryCounter","","Fallbacks: QueryCounterEXT",0,null],[12,"ClearNamedFramebufferfv","","",0,null],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",0,null],[12,"CheckNamedFramebufferStatus","","",0,null],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",0,null],[12,"IsProgram","","",0,null],[12,"CopyTextureSubImage3D","","",0,null],[12,"GetnMapiv","","",0,null],[12,"GetTransformFeedbacki_v","","",0,null],[12,"VertexP3ui","","",0,null],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",0,null],[12,"TexCoordP3uiv","","",0,null],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",0,null],[12,"GetString","","",0,null],[12,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",0,null],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",0,null],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",0,null],[12,"GetTexParameterfv","","",0,null],[12,"InvalidateTexImage","","",0,null],[12,"GetnPixelMapuiv","","",0,null],[12,"ProgramUniformMatrix3x2dv","","",0,null],[12,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",0,null],[12,"BlendEquationiARB","","",0,null],[12,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",0,null],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",0,null],[12,"GetFloatv","","",0,null],[12,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV",0,null],[12,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",0,null],[12,"VertexP2ui","","",0,null],[12,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",0,null],[12,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",0,null],[12,"GetQueryBufferObjectuiv","","",0,null],[12,"CompressedTextureSubImage3D","","",0,null],[12,"SampleMaski","","",0,null],[12,"Uniform4dv","","",0,null],[12,"GetnTexImage","","",0,null],[12,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",0,null],[12,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",0,null],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",0,null],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",0,null],[12,"MultiTexCoordP4uiv","","",0,null],[12,"VertexAttribP4uiv","","",0,null],[12,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",0,null],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",0,null],[12,"SamplerParameterfv","","",0,null],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",0,null],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",0,null],[12,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",0,null],[12,"IsSync","","Fallbacks: IsSyncAPPLE",0,null],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",0,null],[12,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",0,null],[12,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",0,null],[12,"GetTexLevelParameterfv","","",0,null],[12,"GetTextureImage","","",0,null],[12,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",0,null],[12,"BindVertexBuffers","","",0,null],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",0,null],[12,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV",0,null],[12,"ColorP4uiv","","",0,null],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",0,null],[12,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",0,null],[12,"BindFragDataLocationIndexed","","",0,null],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",0,null],[12,"PolygonMode","","Fallbacks: PolygonModeNV",0,null],[12,"GetSamplerParameterfv","","",0,null],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",0,null],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",0,null],[12,"GetActiveSubroutineName","","",0,null],[12,"UniformMatrix2dv","","",0,null],[12,"InvalidateNamedFramebufferSubData","","",0,null],[12,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",0,null],[12,"DepthFunc","","",0,null],[12,"NamedFramebufferDrawBuffers","","",0,null],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",0,null],[12,"UniformMatrix3x4dv","","",0,null],[12,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",0,null],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",0,null],[12,"TexCoordP1uiv","","",0,null],[12,"TexImage1D","","",0,null],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",0,null],[12,"DeleteProgramPipelines","","",0,null],[12,"TextureStorage2DMultisample","","",0,null],[12,"GetCompressedTextureImage","","",0,null],[12,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",0,null],[12,"ProgramUniformMatrix4x2dv","","",0,null],[12,"ViewportArrayv","","Fallbacks: ViewportArrayvNV",0,null],[12,"GetTexLevelParameteriv","","",0,null],[12,"SamplerParameteriv","","",0,null],[12,"GetProgramPipelineInfoLog","","",0,null],[12,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",0,null],[12,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",0,null],[12,"VertexAttribP4ui","","",0,null],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",0,null],[12,"InvalidateFramebuffer","","",0,null],[12,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",0,null],[12,"VertexArrayAttribIFormat","","",0,null],[12,"ProgramUniformMatrix2x3dv","","",0,null],[12,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",0,null],[12,"BindBuffersRange","","",0,null],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",0,null],[12,"GetUniformBlockIndex","","",0,null],[12,"UniformBlockBinding","","",0,null],[12,"VertexArrayElementBuffer","","",0,null],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",0,null],[12,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",0,null],[12,"GetnPolygonStipple","","",0,null],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",0,null],[12,"DeleteTextures","","",0,null],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",0,null],[12,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",0,null],[12,"MultiTexCoordP4ui","","",0,null],[12,"ClearBufferfi","","",0,null],[12,"BlendFunciARB","","",0,null],[12,"UniformSubroutinesuiv","","",0,null],[12,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",0,null],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",0,null],[12,"TexParameteri","","",0,null],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",0,null],[12,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",0,null],[12,"DrawTransformFeedbackInstanced","","",0,null],[12,"GetSamplerParameteriv","","",0,null],[12,"DrawTransformFeedbackStream","","",0,null],[12,"GetTextureParameterIuiv","","",0,null],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",0,null],[12,"InvalidateBufferData","","",0,null],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",0,null],[12,"ProgramUniform3d","","",0,null],[12,"TransformFeedbackBufferRange","","",0,null],[12,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",0,null],[12,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",0,null],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",0,null],[12,"TexParameterf","","",0,null],[12,"BindTextures","","",0,null],[12,"GetTransformFeedbackiv","","",0,null],[12,"ProgramUniform2dv","","",0,null],[12,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",0,null],[12,"GetnUniformdv","","",0,null],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",0,null],[12,"NamedFramebufferTextureLayer","","",0,null],[12,"ClearNamedBufferSubData","","",0,null],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",0,null],[12,"LineWidth","","",0,null],[12,"GetnMapfv","","",0,null],[12,"CreateFramebuffers","","",0,null],[12,"GetProgramStageiv","","",0,null],[12,"ProgramUniform4d","","",0,null],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",0,null],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",0,null],[12,"GetProgramResourceName","","",0,null],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",0,null],[12,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",0,null],[12,"ColorP3ui","","",0,null],[12,"BindSamplers","","",0,null],[12,"TexCoordP4uiv","","",0,null],[12,"GetInteger64i_v","","",0,null],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",0,null],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",0,null],[12,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES",0,null],[12,"CompressedTextureSubImage2D","","",0,null],[12,"ClearBufferiv","","",0,null],[12,"VertexP2uiv","","",0,null],[12,"GetProgramResourceLocationIndex","","",0,null],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",0,null],[12,"Uniform2d","","",0,null],[12,"ProgramUniformMatrix2dv","","",0,null],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",0,null],[12,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",0,null],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",0,null],[12,"VertexP3uiv","","",0,null],[12,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",0,null],[12,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",0,null],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",0,null],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",0,null],[12,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",0,null],[12,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",0,null],[12,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",0,null],[12,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",0,null],[12,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",0,null],[12,"GetStringi","","",0,null],[12,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",0,null],[12,"DrawElements","","",0,null],[12,"StencilFunc","","",0,null],[12,"IsQuery","","Fallbacks: IsQueryARB",0,null],[12,"BindSampler","","",0,null],[12,"VertexArrayVertexBuffer","","",0,null],[12,"TextureSubImage2D","","",0,null],[12,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",0,null],[12,"MapNamedBuffer","","",0,null],[12,"GetTexImage","","",0,null],[12,"VertexP4ui","","",0,null],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",0,null],[12,"VertexAttribP2ui","","",0,null],[12,"GetProgramInterfaceiv","","",0,null],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",0,null],[12,"CreateQueries","","",0,null],[12,"GetTextureParameterfv","","",0,null],[12,"ProgramUniform1dv","","",0,null],[12,"GetNamedBufferSubData","","",0,null],[12,"TextureSubImage1D","","",0,null],[12,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",0,null],[12,"ClearColor","","",0,null],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",0,null],[12,"TextureParameterf","","",0,null],[12,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",0,null],[12,"TexParameterfv","","",0,null],[12,"GetnPixelMapusv","","",0,null],[12,"BindBuffersBase","","",0,null],[12,"GetShaderPrecisionFormat","","",0,null],[12,"Uniform1i","","Fallbacks: Uniform1iARB",0,null],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES",0,null],[12,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",0,null],[12,"UseProgramStages","","",0,null],[12,"CreateProgramPipelines","","",0,null],[12,"CreateVertexArrays","","",0,null],[12,"TextureSubImage3D","","",0,null],[12,"ClearNamedFramebufferuiv","","",0,null],[12,"DisableVertexArrayAttrib","","",0,null],[12,"TransformFeedbackBufferBase","","",0,null],[12,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",0,null],[12,"TextureBarrier","","",0,null],[12,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",0,null],[12,"ClearNamedFramebufferiv","","",0,null],[12,"ShaderStorageBlockBinding","","",0,null],[12,"Uniform4d","","",0,null],[12,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",0,null],[12,"VertexAttribP3uiv","","",0,null],[12,"GetQueryIndexediv","","",0,null],[12,"VertexAttribP2uiv","","",0,null],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",0,null],[12,"ClampColor","","Fallbacks: ClampColorARB",0,null],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",0,null],[12,"GetActiveUniformName","","",0,null],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",0,null],[12,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",0,null],[12,"BlendFunc","","",0,null],[12,"DeleteShader","","",0,null],[12,"GetActiveUniformBlockiv","","",0,null],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",0,null],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",0,null],[12,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",0,null],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",0,null],[12,"StencilMaskSeparate","","",0,null],[12,"IsBuffer","","Fallbacks: IsBufferARB",0,null],[12,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",0,null],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES",0,null],[12,"GetProgramResourceLocation","","",0,null],[12,"UniformMatrix2x4dv","","",0,null],[12,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",0,null],[12,"GetDoublev","","",0,null],[12,"DrawTransformFeedbackStreamInstanced","","",0,null],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",0,null],[12,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",0,null],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",0,null],[12,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",0,null],[12,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",0,null],[12,"GetUniformdv","","",0,null],[12,"VertexArrayVertexBuffers","","",0,null],[12,"BindFramebuffer","","",0,null],[12,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",0,null],[12,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",0,null],[12,"GetnHistogram","","",0,null],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",0,null],[12,"VertexAttribLFormat","","",0,null],[12,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",0,null],[12,"GetTextureSubImage","","",0,null],[12,"GetnCompressedTexImage","","",0,null],[12,"DepthMask","","",0,null],[12,"PolygonOffset","","",0,null],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",0,null],[12,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",0,null],[12,"NamedRenderbufferStorageMultisample","","",0,null],[12,"Viewport","","",0,null],[12,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",0,null],[12,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",0,null],[12,"Enable","","",0,null],[12,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",0,null],[12,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",0,null],[12,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",0,null],[12,"BlendColor","","Fallbacks: BlendColorEXT",0,null],[12,"GenerateTextureMipmap","","",0,null],[12,"CreateRenderbuffers","","",0,null],[12,"ClearBufferData","","",0,null],[12,"TextureParameteriv","","",0,null],[12,"VertexArrayAttribLFormat","","",0,null],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",0,null],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",0,null],[12,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",0,null],[12,"NamedFramebufferReadBuffer","","",0,null],[12,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",0,null],[12,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",0,null],[12,"Clear","","",0,null],[12,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",0,null],[12,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",0,null],[12,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",0,null],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",0,null],[12,"CreateTextures","","",0,null],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",0,null],[12,"DeleteProgram","","",0,null],[12,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",0,null],[12,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",0,null],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",0,null],[12,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",0,null],[12,"VertexP4uiv","","",0,null],[12,"BeginQueryIndexed","","",0,null],[12,"GenProgramPipelines","","",0,null],[12,"GetNamedBufferPointerv","","",0,null],[12,"UniformMatrix3x2dv","","",0,null],[12,"UniformMatrix4x3dv","","",0,null],[12,"TextureStorage2D","","",0,null],[12,"SamplerParameterf","","",0,null],[12,"GetBooleanv","","",0,null],[12,"VertexArrayAttribFormat","","",0,null],[12,"MultiTexCoordP1uiv","","",0,null],[12,"GetActiveUniformBlockName","","",0,null],[12,"TextureBuffer","","",0,null],[12,"ClearTexImage","","",0,null],[12,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[12,"GetNamedBufferParameteri64v","","",0,null],[12,"BindImageTexture","","",0,null],[12,"Uniform4i","","Fallbacks: Uniform4iARB",0,null],[12,"DispatchCompute","","",0,null],[12,"Uniform1d","","",0,null],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",0,null],[12,"GetVertexArrayiv","","",0,null],[12,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",0,null],[12,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",0,null],[12,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT, MultiDrawElementsBaseVertexOES",0,null],[12,"GetnMapdv","","",0,null],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",0,null],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",0,null],[12,"TexImage2DMultisample","","",0,null],[12,"NamedFramebufferRenderbuffer","","",0,null],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",0,null],[12,"MultiTexCoordP1ui","","",0,null],[12,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES",0,null],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES",0,null],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",0,null],[12,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",0,null],[12,"GetError","","",0,null],[12,"TextureStorage3D","","",0,null],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",0,null],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",0,null],[12,"BindImageTextures","","",0,null],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",0,null],[12,"NormalP3ui","","",0,null],[12,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",0,null],[12,"Hint","","",0,null],[12,"LinkProgram","","Fallbacks: LinkProgramARB",0,null],[12,"VertexAttribP3ui","","",0,null],[12,"GetTransformFeedbacki64_v","","",0,null],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",0,null],[12,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",0,null],[12,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",0,null],[12,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",0,null],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",0,null],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",0,null],[12,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",0,null],[12,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",0,null],[12,"ProgramUniform2d","","",0,null],[12,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",0,null],[12,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",0,null],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",0,null],[12,"CreateSamplers","","",0,null],[12,"PixelStoref","","",0,null],[12,"VertexAttribP1uiv","","",0,null],[12,"GetInternalformati64v","","",0,null],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",0,null],[12,"IsProgramPipeline","","",0,null],[12,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",0,null],[12,"TextureParameterfv","","",0,null],[12,"TexCoordP2uiv","","",0,null],[12,"GetShaderInfoLog","","",0,null],[12,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR",0,null],[12,"VertexAttribP1ui","","",0,null],[12,"BindBuffer","","Fallbacks: BindBufferARB",0,null],[12,"GetTextureParameterIiv","","",0,null],[12,"NamedFramebufferDrawBuffer","","",0,null],[12,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",0,null],[12,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",0,null],[12,"LogicOp","","",0,null],[12,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",0,null],[12,"GetFragDataIndex","","",0,null],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",0,null],[12,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",0,null],[12,"StencilFuncSeparate","","",0,null],[12,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",0,null],[12,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",0,null],[12,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",0,null],[12,"SecondaryColorP3uiv","","",0,null],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",0,null],[12,"CopyNamedBufferSubData","","",0,null],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",0,null],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",0,null],[12,"GetIntegerv","","",0,null],[12,"BindRenderbuffer","","",0,null],[12,"VertexArrayBindingDivisor","","",0,null],[12,"DrawBuffer","","",0,null],[12,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",0,null],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",0,null],[12,"CopyTextureSubImage2D","","",0,null],[12,"TexImage3DMultisample","","",0,null],[12,"CreateShaderProgramv","","",0,null],[12,"GetInternalformativ","","",0,null],[12,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",0,null],[12,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",0,null],[12,"GetAttachedShaders","","",0,null],[12,"ValidateProgramPipeline","","",0,null],[12,"ColorP3uiv","","",0,null],[12,"ClearBufferuiv","","",0,null],[12,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",0,null],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",0,null],[12,"VertexArrayAttribBinding","","",0,null],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",0,null],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",0,null],[12,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",0,null],[12,"GetProgramPipelineiv","","",0,null],[12,"NamedFramebufferTexture","","",0,null],[12,"CreateBuffers","","",0,null],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",0,null],[12,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",0,null],[12,"CreateTransformFeedbacks","","",0,null],[12,"GetProgramResourceIndex","","",0,null],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",0,null],[12,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",0,null],[12,"TexStorage2DMultisample","","",0,null],[12,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",0,null],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",0,null],[12,"GetNamedRenderbufferParameteriv","","",0,null],[12,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",0,null],[12,"GetnPixelMapfv","","",0,null],[12,"GetFramebufferParameteriv","","",0,null],[12,"ProgramUniformMatrix4x3dv","","",0,null],[12,"DispatchComputeIndirect","","",0,null],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",0,null],[12,"GetActiveAtomicCounterBufferiv","","",0,null],[12,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",0,null],[12,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",0,null],[12,"ClearDepthf","","Fallbacks: ClearDepthfOES",0,null],[12,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV",0,null],[12,"GetTextureLevelParameteriv","","",0,null],[12,"TextureParameterIiv","","",0,null],[12,"ReleaseShaderCompiler","","",0,null],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",0,null],[12,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",0,null],[12,"ClearNamedBufferData","","",0,null],[12,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",0,null],[12,"ClearTexSubImage","","",0,null],[12,"BindTexture","","Fallbacks: BindTextureEXT",0,null],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",0,null],[12,"GetnColorTable","","",0,null],[12,"ClearBufferfv","","",0,null],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",0,null],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",0,null],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",0,null],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",0,null],[12,"GetUniformIndices","","",0,null],[12,"InvalidateSubFramebuffer","","",0,null],[12,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",0,null],[12,"GenQueries","","Fallbacks: GenQueriesARB",0,null],[12,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",0,null],[12,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",0,null],[12,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",0,null],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",0,null],[12,"DrawElementsIndirect","","",0,null],[12,"GetSubroutineUniformLocation","","",0,null],[12,"GenTextures","","",0,null],[12,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",0,null],[12,"ColorMask","","",0,null],[12,"Flush","","",0,null],[12,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",0,null],[12,"GetActiveSubroutineUniformName","","",0,null],[12,"EnableVertexArrayAttrib","","",0,null],[12,"Uniform3d","","",0,null],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",0,null],[12,"TexCoordP1ui","","",0,null],[12,"TextureBufferRange","","",0,null],[11,"hash","core::num","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"shl","","",1,null],[11,"shl_assign","","",1,null],[11,"shr","","",1,null],[11,"shr_assign","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"add","","",1,null],[11,"add_assign","","",1,null],[11,"sub","","",1,null],[11,"sub_assign","","",1,null],[11,"mul","","",1,null],[11,"mul_assign","","",1,null],[11,"div","","",1,null],[11,"div_assign","","",1,null],[11,"rem","","",1,null],[11,"rem_assign","","",1,null],[11,"not","","",1,null],[11,"bitxor","","",1,null],[11,"bitxor_assign","","",1,null],[11,"bitor","","",1,null],[11,"bitor_assign","","",1,null],[11,"bitand","","",1,null],[11,"bitand_assign","","",1,null],[11,"neg","","",1,null],[11,"eq","core::num::dec2flt","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","core::num","",3,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"hash","core::nonzero","",6,null],[11,"fmt","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",6,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",6,null],[11,"new","core::ptr","Creates a new `Unique`.",7,null],[11,"get","","Dereferences the content.",7,null],[11,"get_mut","","Mutably dereferences the content.",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"new","","Creates a new `Shared`.",8,null],[11,"clone","","",8,null],[11,"deref","","",8,null],[11,"fmt","","",8,null],[11,"hash","core::marker","",9,null],[11,"eq","","",9,null],[11,"partial_cmp","","",9,null],[11,"cmp","","",9,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"contains","","# Examples",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"from","","",14,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"contains","","# Examples",15,null],[11,"hash","core::cmp","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"reverse","","Reverse the `Ordering`.",16,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"fmt","gfx_gl","",17,null],[11,"fmt","","",17,null],[11,"is","","Returns true if the boxed type is the same as `T`",17,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",17,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",17,null],[11,"is","","Forwards to the method defined on the type `Any`.",17,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",17,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",17,null],[11,"hash","core::any","",18,null],[11,"fmt","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"clone","","",18,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",18,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",19,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"new","","Creates a new `AtomicBool`.",19,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",19,null],[11,"store","","Stores a value into the bool.",19,null],[11,"swap","","Stores a value into the bool, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",19,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",19,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",19,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",19,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",19,null],[11,"new","","Creates a new `AtomicPtr`.",20,null],[11,"load","","Loads a value from the pointer.",20,null],[11,"store","","Stores a value into the pointer.",20,null],[11,"swap","","Stores a value into the pointer, returning the old value.",20,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",20,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"default","","",31,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",31,null],[11,"new","","Creates a new atomic integer.",31,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",31,null],[11,"store","","Stores a value into the atomic integer.",31,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",31,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",31,null],[11,"fetch_add","","Add to the current value, returning the previous value.",31,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",31,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",31,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",31,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",31,null],[11,"fmt","","",19,null],[11,"fmt","","",20,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",32,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",32,null],[11,"set","","Sets the contained value.",32,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",32,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",32,null],[11,"clone","","",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",32,null],[11,"partial_cmp","","",32,null],[11,"lt","","",32,null],[11,"le","","",32,null],[11,"gt","","",32,null],[11,"ge","","",32,null],[11,"cmp","","",32,null],[11,"fmt","","",33,null],[11,"eq","","",33,null],[11,"clone","","",33,null],[11,"new","","Creates a new `RefCell` containing `value`.",34,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",34,null],[11,"borrow_state","","Query the current state of this `RefCell`",34,null],[11,"borrow","","Immutably borrows the wrapped value.",34,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",34,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",34,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",34,null],[11,"clone","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",34,null],[11,"partial_cmp","","",34,null],[11,"lt","","",34,null],[11,"le","","",34,null],[11,"gt","","",34,null],[11,"ge","","",34,null],[11,"cmp","","",34,null],[11,"deref","","",35,null],[11,"clone","","Copies a `Ref`.",35,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",35,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",36,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",37,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",37,null],[11,"get","","Gets a mutable pointer to the wrapped value.",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"count","","",39,null],[11,"nth","","",39,null],[11,"last","","",39,null],[11,"len","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","","",41,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"fmt","core::iter::range","",42,null],[11,"clone","","",42,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",12,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",14,null],[11,"next","core::iter::range","",42,null],[11,"size_hint","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next","core::ops","",11,null],[11,"size_hint","","",11,null],[11,"next_back","","",11,null],[11,"next","","",12,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"next_back","","",14,null],[11,"fmt","core::iter::sources","",43,null],[11,"clone","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"fmt","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"clone","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"len","","",45,null],[11,"fmt","core::iter","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"next_back","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"count","","",49,null],[11,"nth","","",49,null],[11,"find","","",49,null],[11,"last","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"next","","",53,null],[11,"size_hint","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","# Overflow Behavior",54,null],[11,"size_hint","","",54,null],[11,"nth","","",54,null],[11,"count","","",54,null],[11,"next_back","","",54,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"next","","",55,null],[11,"count","","",55,null],[11,"nth","","",55,null],[11,"last","","",55,null],[11,"size_hint","","",55,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",55,null],[11,"is_empty","","Checks if the iterator has finished iterating.",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"count","","",58,null],[11,"last","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"next","","",59,null],[11,"nth","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"next","","",62,null],[11,"nth","","",62,null],[11,"last","","",62,null],[11,"count","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"next_back","","",63,null],[11,"hash","core::option","",64,null],[11,"fmt","","",64,null],[11,"cmp","","",64,null],[11,"partial_cmp","","",64,null],[11,"lt","","",64,null],[11,"le","","",64,null],[11,"gt","","",64,null],[11,"ge","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"clone","","",64,null],[11,"is_some","","Returns `true` if the option is a `Some` value",64,null],[11,"is_none","","Returns `true` if the option is a `None` value",64,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",64,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",64,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",64,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",64,null],[11,"unwrap_or","","Returns the contained value or a default.",64,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",64,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",64,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",64,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",64,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",64,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",64,null],[11,"iter","","Returns an iterator over the possibly contained value.",64,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",64,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",64,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",64,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",64,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",64,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",64,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",64,null],[11,"unwrap_or_default","","Returns the contained value or a default",64,null],[11,"default","","",64,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"clone","","",65,null],[11,"fmt","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"next","","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",64,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",68,null],[11,"hash","core::result","",69,null],[11,"fmt","","",69,null],[11,"cmp","","",69,null],[11,"partial_cmp","","",69,null],[11,"lt","","",69,null],[11,"le","","",69,null],[11,"gt","","",69,null],[11,"ge","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"is_ok","","Returns true if the result is `Ok`",69,null],[11,"is_err","","Returns true if the result is `Err`",69,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",69,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",69,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",69,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",69,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",69,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",69,null],[11,"iter","","Returns an iterator over the possibly contained value.",69,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",69,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",69,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",69,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",69,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"fmt","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",69,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",73,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"clone","","",73,null],[11,"fmt","","",74,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"count","","",74,null],[11,"nth","","",74,null],[11,"last","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"clone","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"count","","",83,null],[11,"nth","","",83,null],[11,"last","","",83,null],[11,"next_back","","",83,null],[11,"fmt","core::str::pattern","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"clone","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_reject","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"next_reject_back","","",87,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"haystack","","",88,null],[11,"next","","",88,null],[11,"next_match","","",88,null],[11,"next_back","","",88,null],[11,"next_match_back","","",88,null],[11,"eq","core::str","",89,null],[11,"ne","","",89,null],[11,"clone","","",89,null],[11,"fmt","","",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",90,null],[11,"fmt","","",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"as_str","","View the underlying data as a subslice of the original data.",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"count","","",93,null],[11,"last","","",93,null],[11,"nth","","",93,null],[11,"next_back","","",93,null],[11,"len","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"next_back","","",94,null],[11,"next_back","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"next_back","","",96,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"next_back","","",100,null],[11,"next_back","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"next_back","","",102,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"fmt","core::hash::sip","",107,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",107,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",107,null],[11,"finish","","",107,null],[11,"clone","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",108,null],[11,"build_hasher","","",108,null],[11,"clone","","",108,null],[11,"default","","",108,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",109,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"field","","Adds a new field to the generated tuple struct output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the set output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the list output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"entry","","Adds a new entry to the map output.",114,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"partial_cmp","core::fmt","",115,null],[11,"eq","","",115,null],[11,"cmp","","",115,null],[11,"hash","","",115,null],[11,"default","","",115,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",117,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",117,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",117,null],[11,"write_fmt","","Writes some formatted information into this instance",117,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",117,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",117,null],[11,"align","","Flag indicating what form of alignment was requested",117,null],[11,"width","","Optionally specified integer width that the output should be",117,null],[11,"precision","","Optionally specified precision for numeric types",117,null],[11,"sign_plus","","Determines if the `+` flag was specified.",117,null],[11,"sign_minus","","Determines if the `-` flag was specified.",117,null],[11,"alternate","","Determines if the `#` flag was specified.",117,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",117,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",117,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",117,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",117,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",117,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",117,null],[11,"write_str","","",117,null],[11,"write_char","","",117,null],[11,"write_fmt","","",117,null],[11,"fmt","","",115,null],[11,"fmt","core::marker","",9,null],[11,"fmt","core::cell","",32,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[11,"fmt","","",37,null],[11,"from","alloc::boxed","",118,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",118,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",118,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",118,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",118,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",118,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",89,null],[11,"description","","",90,null],[11,"description","core::num","",5,null],[11,"description","","",4,null],[11,"description","core::num::dec2flt","",2,null],[11,"description","collections::string","",119,null],[11,"description","","",120,null],[11,"description","","",121,null],[11,"description","rustc_unicode::char","",122,null],[11,"description","alloc::boxed","",118,null],[11,"cause","","",118,null],[11,"description","core::fmt","",115,null],[11,"is","gfx_gl::__gl_imports","Returns true if the boxed type is the same as `T`",123,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",123,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",123,null],[11,"is","","Forwards to the method defined on the type `Any`.",123,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",123,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",123,null],[11,"is","","Forwards to the method defined on the type `Any`.",123,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",123,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",123,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",123,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",123,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",123,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",124,null],[11,"size_hint","","",124,null],[11,"next_back","","",124,null],[11,"clone","std::thread::local","",125,null],[11,"eq","","",125,null],[11,"with","","Acquires a reference to the value in this TLS key.",126,null],[11,"state","","Query the current state of this key.",126,null],[11,"new","std::thread::local::elf","",127,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",127,null],[11,"new","std::thread::local::os","",128,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",128,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",129,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",129,null],[11,"stack_size","","Sets the size of the stack for the new thread.",129,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",129,null],[11,"clone","","",130,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",130,null],[11,"name","","Gets the thread&#39;s name.",130,null],[11,"fmt","","",130,null],[11,"thread","","Extracts a handle to the underlying thread",131,null],[11,"join","","Waits for the associated thread to finish.",131,null],[11,"clone","std::collections::hash::map","",132,null],[11,"new","","Creates an empty HashMap.",132,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",132,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",132,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",132,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",132,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",132,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",132,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",132,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",132,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",132,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",132,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",132,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",132,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",132,null],[11,"len","","Returns the number of elements in the map.",132,null],[11,"is_empty","","Returns true if the map contains no elements.",132,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",132,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",132,null],[11,"get","","Returns a reference to the value corresponding to the key.",132,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",132,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",132,null],[11,"insert","","Inserts a key-value pair into the map.",132,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",132,null],[11,"eq","","",132,null],[11,"fmt","","",132,null],[11,"default","","",132,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",132,null],[11,"clone","","",133,null],[11,"clone","","",134,null],[11,"clone","","",135,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",132,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"len","","",133,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"len","","",136,null],[11,"next","","",137,null],[11,"size_hint","","",137,null],[11,"len","","",137,null],[11,"next","","",134,null],[11,"size_hint","","",134,null],[11,"len","","",134,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"len","","",135,null],[11,"next","","",138,null],[11,"size_hint","","",138,null],[11,"len","","",138,null],[11,"next","","",139,null],[11,"size_hint","","",139,null],[11,"len","","",139,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",140,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",140,null],[11,"key","","Returns a reference to this entry&#39;s key.",140,null],[11,"key","","Gets a reference to the key in the entry.",141,null],[11,"get","","Gets a reference to the value in the entry.",141,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",141,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",141,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",141,null],[11,"remove","","Takes the value out of the entry, and returns it",141,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",142,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",142,null],[11,"from_iter","","",132,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",132,null],[11,"extend","","",132,null],[11,"clone","","",143,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",143,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",143,null],[11,"default","","",143,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",144,null],[11,"new","","Creates an empty HashSet.",144,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",144,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",144,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",144,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",144,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",144,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",144,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",144,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",144,null],[11,"difference","","Visit the values representing the difference.",144,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",144,null],[11,"intersection","","Visit the values representing the intersection.",144,null],[11,"union","","Visit the values representing the union.",144,null],[11,"len","","Returns the number of elements in the set.",144,null],[11,"is_empty","","Returns true if the set contains no elements.",144,null],[11,"drain","","Clears the set, returning all elements in an iterator.",144,null],[11,"clear","","Clears the set, removing all values.",144,null],[11,"contains","","Returns `true` if the set contains a value.",144,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",144,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",144,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",144,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",144,null],[11,"insert","","Adds a value to the set.",144,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",144,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",144,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",144,null],[11,"eq","","",144,null],[11,"fmt","","",144,null],[11,"from_iter","","",144,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",144,null],[11,"extend","","",144,null],[11,"default","","",144,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",144,null],[11,"clone","","",145,null],[11,"next","","",145,null],[11,"size_hint","","",145,null],[11,"len","","",145,null],[11,"next","","",146,null],[11,"size_hint","","",146,null],[11,"len","","",146,null],[11,"next","","",147,null],[11,"size_hint","","",147,null],[11,"len","","",147,null],[11,"clone","","",148,null],[11,"next","","",148,null],[11,"size_hint","","",148,null],[11,"clone","","",149,null],[11,"next","","",149,null],[11,"size_hint","","",149,null],[11,"clone","","",150,null],[11,"next","","",150,null],[11,"size_hint","","",150,null],[11,"clone","","",151,null],[11,"next","","",151,null],[11,"size_hint","","",151,null],[11,"clone","collections::linked_list","",152,null],[11,"clone","","",153,null],[11,"default","","",154,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",154,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",154,null],[11,"iter","","Provides a forward iterator.",154,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",154,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",154,null],[11,"len","","Returns the length of the `LinkedList`.",154,null],[11,"clear","","Removes all elements from the `LinkedList`.",154,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",154,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",154,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",154,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",154,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",154,null],[11,"push_front","","Adds an element first in the list.",154,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",154,null],[11,"push_back","","Appends an element to the back of a list",154,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",154,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",154,null],[11,"front_place","","Returns a place for insertion at the front of the list.",154,null],[11,"back_place","","Returns a place for insertion at the back of the list.",154,null],[11,"drop","","",154,null],[11,"next","","",152,null],[11,"size_hint","","",152,null],[11,"next_back","","",152,null],[11,"next","","",155,null],[11,"size_hint","","",155,null],[11,"next_back","","",155,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",155,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",155,null],[11,"next","","",153,null],[11,"size_hint","","",153,null],[11,"next_back","","",153,null],[11,"from_iter","","",154,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",154,null],[11,"extend","","",154,null],[11,"extend","","",154,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"partial_cmp","","",154,null],[11,"cmp","","",154,null],[11,"clone","","",154,null],[11,"fmt","","",154,null],[11,"hash","","",154,null],[11,"make_place","","",156,null],[11,"pointer","","",156,null],[11,"finalize","","",156,null],[11,"make_place","","",157,null],[11,"pointer","","",157,null],[11,"finalize","","",157,null],[11,"clone","collections::binary_heap","",158,null],[11,"clone_from","","",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",158,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",158,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",158,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",158,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",158,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",158,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",158,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",158,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",158,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",158,null],[11,"push","","Pushes an item onto the binary heap.",158,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",158,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",158,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",158,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",158,null],[11,"len","","Returns the length of the binary heap.",158,null],[11,"is_empty","","Checks if the binary heap is empty.",158,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",158,null],[11,"clear","","Drops all items from the binary heap.",158,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",158,null],[11,"clone","","",159,null],[11,"next","","",159,null],[11,"size_hint","","",159,null],[11,"next_back","","",159,null],[11,"clone","","",160,null],[11,"next","","",160,null],[11,"size_hint","","",160,null],[11,"next_back","","",160,null],[11,"next","","",161,null],[11,"size_hint","","",161,null],[11,"next_back","","",161,null],[11,"from","","",158,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",162,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",158,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",158,null],[11,"extend","","",158,null],[11,"extend","","",158,null],[11,"clone","collections::vec_deque","",163,null],[11,"drop","","",163,null],[11,"default","","",163,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",163,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",163,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",163,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",163,null],[11,"swap","","Swaps elements at indices `i` and `j`.",163,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",163,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",163,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",163,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",163,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",163,null],[11,"iter","","Returns a front-to-back iterator.",163,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",163,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",163,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",163,null],[11,"len","","Returns the number of elements in the `VecDeque`.",163,null],[11,"is_empty","","Returns true if the buffer contains no elements",163,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",163,null],[11,"clear","","Clears the buffer, removing all values.",163,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",163,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",163,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",163,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",163,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",163,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",163,null],[11,"push_front","","Inserts an element first in the sequence.",163,null],[11,"push_back","","Appends an element to the back of a buffer",163,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",163,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",163,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",163,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",163,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",163,null],[11,"split_off","","Splits the collection into two at the given index.",163,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",163,null],[11,"retain","","Retains only the elements specified by the predicate.",163,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",163,null],[11,"clone","","",164,null],[11,"next","","",164,null],[11,"size_hint","","",164,null],[11,"next_back","","",164,null],[11,"next","","",165,null],[11,"size_hint","","",165,null],[11,"next_back","","",165,null],[11,"clone","","",166,null],[11,"next","","",166,null],[11,"size_hint","","",166,null],[11,"next_back","","",166,null],[11,"drop","","",167,null],[11,"next","","",167,null],[11,"size_hint","","",167,null],[11,"next_back","","",167,null],[11,"eq","","",163,null],[11,"partial_cmp","","",163,null],[11,"cmp","","",163,null],[11,"hash","","",163,null],[11,"index","","",163,null],[11,"index_mut","","",163,null],[11,"from_iter","","",163,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",163,null],[11,"extend","","",163,null],[11,"extend","","",163,null],[11,"fmt","","",163,null],[11,"from","","",163,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",162,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",168,null],[11,"size_hint","","",168,null],[11,"next","","",169,null],[11,"size_hint","","",169,null],[11,"clone","","",170,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"fmt","","",170,null],[11,"fmt","","",170,null],[11,"description","","",170,null],[11,"next","","",171,null],[11,"size_hint","","",171,null],[11,"fmt","","",172,null],[11,"fmt","","",172,null],[11,"description","","",172,null],[11,"next","","",173,null],[11,"size_hint","","",173,null],[11,"len","","",173,null],[11,"next","","",174,null],[11,"size_hint","","",174,null],[11,"len","","",174,null],[11,"clone","std::ffi::c_str","",175,null],[11,"hash","","",175,null],[11,"cmp","","",175,null],[11,"partial_cmp","","",175,null],[11,"lt","","",175,null],[11,"le","","",175,null],[11,"gt","","",175,null],[11,"ge","","",175,null],[11,"eq","","",175,null],[11,"ne","","",175,null],[11,"hash","","",176,null],[11,"fmt","","",177,null],[11,"eq","","",177,null],[11,"ne","","",177,null],[11,"clone","","",177,null],[11,"fmt","","",178,null],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"clone","","",178,null],[11,"fmt","","",179,null],[11,"eq","","",179,null],[11,"ne","","",179,null],[11,"clone","","",179,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",175,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",175,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",175,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",175,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",175,null],[11,"into_bytes","","Returns the underlying byte buffer.",175,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",175,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",175,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",175,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",176,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",176,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",176,null],[11,"as_ptr","","Returns the inner pointer to this C string.",176,null],[11,"to_bytes","","Converts this C string to a byte slice.",176,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",176,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",176,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",176,null],[11,"deref","","",175,null],[11,"fmt","","",175,null],[11,"from","collections::vec","",162,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",176,null],[11,"default","","",175,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",175,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",177,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",177,null],[11,"description","","",177,null],[11,"fmt","","",177,null],[11,"from","std::io::error","",180,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",179,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",179,null],[11,"description","","",179,null],[11,"cause","","",179,null],[11,"fmt","","",179,null],[11,"eq","","",176,null],[11,"partial_cmp","","",176,null],[11,"cmp","","",176,null],[11,"to_owned","","",176,null],[11,"from","","",175,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",175,null],[11,"as_ref","","",176,null],[11,"as_ref","","",175,null],[11,"clone","std::ffi::os_str","",181,null],[11,"new","","Constructs a new empty `OsString`.",181,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",181,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",181,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",181,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",181,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",181,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",181,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",181,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",181,null],[11,"from","","",181,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",181,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",181,null],[11,"new","","Coerces into an `OsStr` slice.",182,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",182,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",182,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",182,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",182,null],[11,"len","","Returns the length of this `OsStr`.",182,null],[11,"deref","","",181,null],[11,"default","","",181,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",181,null],[11,"eq","","",181,null],[11,"eq","","",181,null],[11,"partial_cmp","","",181,null],[11,"lt","","",181,null],[11,"le","","",181,null],[11,"gt","","",181,null],[11,"ge","","",181,null],[11,"partial_cmp","","",181,null],[11,"cmp","","",181,null],[11,"hash","","",181,null],[11,"eq","","",182,null],[11,"eq","","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"partial_cmp","","",182,null],[11,"cmp","","",182,null],[11,"eq","","",181,null],[11,"eq","","",182,null],[11,"partial_cmp","","",181,null],[11,"partial_cmp","","",182,null],[11,"eq","","",181,null],[11,"partial_cmp","","",181,null],[11,"eq","collections::borrow","",183,null],[11,"eq","std::ffi::os_str","",182,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::ffi::os_str","",182,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","","",183,null],[11,"eq","","",183,null],[11,"eq","std::ffi::os_str","",181,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::ffi::os_str","",181,null],[11,"hash","","",182,null],[11,"fmt","","",182,null],[11,"borrow","","",181,null],[11,"to_owned","","",182,null],[11,"as_ref","","",182,null],[11,"as_ref","","",181,null],[11,"as_ref","collections::string","",184,null],[11,"clone","std::fs","",185,null],[11,"clone","","",186,null],[11,"fmt","","",187,null],[11,"eq","","",187,null],[11,"ne","","",187,null],[11,"clone","","",187,null],[11,"hash","","",188,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"clone","","",188,null],[11,"open","","Attempts to open a file in read-only mode.",189,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",189,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",189,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",189,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",189,null],[11,"metadata","","Queries metadata about the underlying file.",189,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",189,null],[11,"fmt","","",189,null],[11,"read","","",189,null],[11,"read_to_end","","",189,null],[11,"write","","",189,null],[11,"flush","","",189,null],[11,"seek","","",189,null],[11,"new","","Creates a blank new set of options ready for configuration.",186,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",186,null],[11,"write","","Sets the option for write access.",186,null],[11,"append","","Sets the option for the append mode.",186,null],[11,"truncate","","Sets the option for truncating a previous file.",186,null],[11,"create","","Sets the option for creating a new file.",186,null],[11,"create_new","","Sets the option to always create a new file.",186,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",186,null],[11,"file_type","","Returns the file type for this metadata.",185,null],[11,"is_dir","","Returns whether this metadata is for a directory.",185,null],[11,"is_file","","Returns whether this metadata is for a regular file.",185,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",185,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",185,null],[11,"modified","","Returns the last modification time listed in this metadata.",185,null],[11,"accessed","","Returns the last access time of this metadata.",185,null],[11,"created","","Returns the creation time listed in the this metadata.",185,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",187,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",187,null],[11,"is_dir","","Test whether this file type represents a directory.",188,null],[11,"is_file","","Test whether this file type represents a regular file.",188,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",188,null],[11,"next","","",190,null],[11,"path","","Returns the full path to the file that this entry represents.",191,null],[11,"metadata","","Return the metadata for the file that this entry points at.",191,null],[11,"file_type","","Return the file type for the file that this entry points at.",191,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",191,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",192,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",192,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",192,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",193,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",193,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",193,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",193,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",193,null],[11,"read","","",193,null],[11,"fill_buf","","",193,null],[11,"consume","","",193,null],[11,"fmt","","",193,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",193,null],[11,"fmt","","",194,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",195,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",195,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",195,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",195,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",195,null],[11,"write","","",195,null],[11,"flush","","",195,null],[11,"fmt","","",195,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",195,null],[11,"drop","","",195,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",194,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",194,null],[11,"from","std::io::error","",180,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",194,null],[11,"fmt","","",194,null],[11,"new","","Creates a new `LineWriter`.",196,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",196,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",196,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",196,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",196,null],[11,"write","","",196,null],[11,"flush","","",196,null],[11,"fmt","","",196,null],[11,"fmt","std::io::cursor","",197,null],[11,"clone","","",197,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",197,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",197,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",197,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",197,null],[11,"position","","Returns the current position of this cursor.",197,null],[11,"set_position","","Sets the position of this cursor.",197,null],[11,"seek","","",197,null],[11,"read","","",197,null],[11,"fill_buf","","",197,null],[11,"consume","","",197,null],[11,"write","","",197,null],[11,"flush","","",197,null],[11,"write","","",197,null],[11,"flush","","",197,null],[11,"write","","",197,null],[11,"flush","","",197,null],[11,"fmt","std::io::error","",180,null],[11,"fmt","","",198,null],[11,"clone","","",198,null],[11,"eq","","",198,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",180,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",180,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",180,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",180,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",180,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",180,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",180,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",180,null],[11,"fmt","","",180,null],[11,"description","","",180,null],[11,"cause","","",180,null],[11,"read","alloc::boxed","",118,null],[11,"read_to_end","","",118,null],[11,"read_to_string","","",118,null],[11,"read_exact","","",118,null],[11,"write","","",118,null],[11,"flush","","",118,null],[11,"write_all","","",118,null],[11,"write_fmt","","",118,null],[11,"seek","","",118,null],[11,"fill_buf","","",118,null],[11,"consume","","",118,null],[11,"read_until","","",118,null],[11,"read_line","","",118,null],[11,"write","collections::vec","",162,null],[11,"write_all","","",162,null],[11,"flush","","",162,null],[11,"read","std::io::util","",199,null],[11,"fill_buf","","",199,null],[11,"consume","","",199,null],[11,"read","","",200,null],[11,"write","","",201,null],[11,"flush","","",201,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",202,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",202,null],[11,"read","","",202,null],[11,"read_to_end","","",202,null],[11,"read_to_string","","",202,null],[11,"read_exact","","",202,null],[11,"read","","",203,null],[11,"read_to_end","","",203,null],[11,"fill_buf","","",203,null],[11,"consume","","",203,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",204,null],[11,"write","","",204,null],[11,"flush","","",204,null],[11,"write_all","","",204,null],[11,"write_fmt","","",204,null],[11,"write","","",205,null],[11,"flush","","",205,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",206,null],[11,"write","","",206,null],[11,"flush","","",206,null],[11,"write_all","","",206,null],[11,"write_fmt","","",206,null],[11,"write","","",207,null],[11,"flush","","",207,null],[11,"fmt","std::io","",208,null],[11,"clone","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"read","","",209,null],[11,"fill_buf","","",209,null],[11,"consume","","",209,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",210,null],[11,"read","","",210,null],[11,"fill_buf","","",210,null],[11,"consume","","",210,null],[11,"next","","",211,null],[11,"fmt","","",212,null],[11,"next","","",213,null],[11,"description","","",212,null],[11,"cause","","",212,null],[11,"fmt","","",212,null],[11,"next","","",214,null],[11,"next","","",215,null],[11,"cmp","std::net::ip","",216,null],[11,"partial_cmp","","",216,null],[11,"lt","","",216,null],[11,"le","","",216,null],[11,"gt","","",216,null],[11,"ge","","",216,null],[11,"hash","","",216,null],[11,"fmt","","",216,null],[11,"eq","","",216,null],[11,"ne","","",216,null],[11,"clone","","",216,null],[11,"fmt","","",217,null],[11,"hash","","",217,null],[11,"clone","","",217,null],[11,"eq","","",217,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",218,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",218,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",218,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",218,null],[11,"is_private","","Returns true if this is a private address.",218,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",218,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",218,null],[11,"is_multicast","","Returns true if this is a multicast address.",218,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",218,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",218,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",218,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",218,null],[11,"fmt","","",216,null],[11,"fmt","","",218,null],[11,"fmt","","",218,null],[11,"clone","","",218,null],[11,"eq","","",218,null],[11,"hash","","",218,null],[11,"partial_cmp","","",218,null],[11,"cmp","","",218,null],[11,"from","","",218,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",218,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",219,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",219,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",219,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",219,null],[11,"is_global","","Returns true if the address appears to be globally routable.",219,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",219,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",219,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",219,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",219,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",219,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",219,null],[11,"is_multicast","","Returns true if this is a multicast address.",219,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",219,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",219,null],[11,"fmt","","",219,null],[11,"fmt","","",219,null],[11,"clone","","",219,null],[11,"eq","","",219,null],[11,"hash","","",219,null],[11,"partial_cmp","","",219,null],[11,"cmp","","",219,null],[11,"from","","",219,null],[11,"fmt","std::net::addr","",220,null],[11,"hash","","",220,null],[11,"eq","","",220,null],[11,"ne","","",220,null],[11,"clone","","",220,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",220,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",220,null],[11,"set_ip","","Change the IP address associated with this socket address.",220,null],[11,"port","","Returns the port number associated with this socket address.",220,null],[11,"set_port","","Change the port number associated with this socket address.",220,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",221,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",221,null],[11,"set_ip","","Change the IP address associated with this socket address.",221,null],[11,"port","","Returns the port number associated with this socket address.",221,null],[11,"set_port","","Change the port number associated with this socket address.",221,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",222,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",222,null],[11,"set_ip","","Change the IP address associated with this socket address.",222,null],[11,"port","","Returns the port number associated with this socket address.",222,null],[11,"set_port","","Change the port number associated with this socket address.",222,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",222,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",222,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",222,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",222,null],[11,"fmt","","",220,null],[11,"fmt","","",221,null],[11,"fmt","","",221,null],[11,"fmt","","",222,null],[11,"fmt","","",222,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"eq","","",221,null],[11,"eq","","",222,null],[11,"hash","","",221,null],[11,"hash","","",222,null],[11,"to_socket_addrs","","",220,null],[11,"to_socket_addrs","","",221,null],[11,"to_socket_addrs","","",222,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",223,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",223,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",223,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",223,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",223,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",223,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",223,null],[11,"read_timeout","","Returns the read timeout of this socket.",223,null],[11,"write_timeout","","Returns the write timeout of this socket.",223,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",223,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",223,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",223,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",223,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",223,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",223,null],[11,"read","","",223,null],[11,"read_to_end","","",223,null],[11,"write","","",223,null],[11,"flush","","",223,null],[11,"fmt","","",223,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",224,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",224,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",224,null],[11,"accept","","Accept a new incoming connection from this listener.",224,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",224,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",224,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",224,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",224,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",224,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",224,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",224,null],[11,"next","","",225,null],[11,"fmt","","",224,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",226,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",226,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",226,null],[11,"local_addr","","Returns the socket address that this socket was created from.",226,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",226,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",226,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",226,null],[11,"read_timeout","","Returns the read timeout of this socket.",226,null],[11,"write_timeout","","Returns the write timeout of this socket.",226,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",226,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",226,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",226,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",226,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",226,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",226,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",226,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",226,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",226,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",226,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",226,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",226,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",226,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",226,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",226,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",226,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",226,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",226,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",226,null],[11,"fmt","","",226,null],[11,"from_str","std::net::ip","",216,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",218,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",219,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",221,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",222,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",220,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",227,null],[11,"ne","","",227,null],[11,"clone","","",227,null],[11,"fmt","","",227,null],[11,"fmt","","",227,null],[11,"description","","",227,null],[11,"fmt","std::net","",228,null],[11,"eq","","",228,null],[11,"clone","","",228,null],[11,"next","","",229,null],[11,"clone","std::os::linux::raw::arch","",230,null],[11,"as_raw_stat","std::fs","",185,null],[11,"st_dev","","",185,null],[11,"st_ino","","",185,null],[11,"st_mode","","",185,null],[11,"st_nlink","","",185,null],[11,"st_uid","","",185,null],[11,"st_gid","","",185,null],[11,"st_rdev","","",185,null],[11,"st_size","","",185,null],[11,"st_atime","","",185,null],[11,"st_atime_nsec","","",185,null],[11,"st_mtime","","",185,null],[11,"st_mtime_nsec","","",185,null],[11,"st_ctime","","",185,null],[11,"st_ctime_nsec","","",185,null],[11,"st_blksize","","",185,null],[11,"st_blocks","","",185,null],[11,"as_raw_fd","","",189,null],[11,"from_raw_fd","","",189,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",189,null],[11,"as_raw_fd","std::net::tcp","",223,null],[11,"as_raw_fd","","",224,null],[11,"as_raw_fd","std::net::udp","",226,null],[11,"from_raw_fd","std::net::tcp","",223,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",224,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",226,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",223,null],[11,"into_raw_fd","","",224,null],[11,"into_raw_fd","std::net::udp","",226,null],[11,"from_vec","std::ffi::os_str","",181,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",181,null],[11,"from_bytes","","",182,null],[11,"as_bytes","","",182,null],[11,"mode","std::fs","",187,null],[11,"set_mode","","",187,null],[11,"from_mode","","",187,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",186,null],[11,"custom_flags","","",186,null],[11,"dev","","",185,null],[11,"ino","","",185,null],[11,"mode","","",185,null],[11,"nlink","","",185,null],[11,"uid","","",185,null],[11,"gid","","",185,null],[11,"rdev","","",185,null],[11,"size","","",185,null],[11,"atime","","",185,null],[11,"atime_nsec","","",185,null],[11,"mtime","","",185,null],[11,"mtime_nsec","","",185,null],[11,"ctime","","",185,null],[11,"ctime_nsec","","",185,null],[11,"blksize","","",185,null],[11,"blocks","","",185,null],[11,"is_block_device","","",188,null],[11,"is_char_device","","",188,null],[11,"is_fifo","","",188,null],[11,"is_socket","","",188,null],[11,"ino","","",191,null],[11,"mode","","",192,null],[11,"uid","std::process","",231,null],[11,"gid","","",231,null],[11,"before_exec","","",231,null],[11,"exec","","",231,null],[11,"from_raw","","",232,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",232,null],[11,"from_raw_fd","","",233,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",234,null],[11,"as_raw_fd","","",235,null],[11,"as_raw_fd","","",236,null],[11,"into_raw_fd","","",234,null],[11,"into_raw_fd","","",235,null],[11,"into_raw_fd","","",236,null],[11,"as_pthread_t","std::thread","",131,null],[11,"into_pthread_t","","",131,null],[11,"clone","std::sys::ext::net","",237,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",237,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",237,null],[11,"fmt","","",237,null],[11,"fmt","","",238,null],[11,"connect","","Connects to the socket named by `path`.",238,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",238,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",238,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",238,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",238,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",238,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",238,null],[11,"read_timeout","","Returns the read timeout of this socket.",238,null],[11,"write_timeout","","Returns the write timeout of this socket.",238,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",238,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",238,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",238,null],[11,"read","","",238,null],[11,"read_to_end","","",238,null],[11,"write","","",238,null],[11,"flush","","",238,null],[11,"as_raw_fd","","",238,null],[11,"from_raw_fd","","",238,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",238,null],[11,"fmt","","",239,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",239,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",239,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",239,null],[11,"local_addr","","Returns the local socket address of this listener.",239,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",239,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",239,null],[11,"incoming","","Returns an iterator over incoming connections.",239,null],[11,"as_raw_fd","","",239,null],[11,"from_raw_fd","","",239,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",239,null],[11,"fmt","","",240,null],[11,"next","","",240,null],[11,"size_hint","","",240,null],[11,"fmt","","",241,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",241,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",241,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",241,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",241,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",241,null],[11,"local_addr","","Returns the address of this socket.",241,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",241,null],[11,"recv_from","","Receives data from the socket.",241,null],[11,"recv","","Receives data from the socket.",241,null],[11,"send_to","","Sends data on the socket to the specified address.",241,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",241,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",241,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",241,null],[11,"read_timeout","","Returns the read timeout of this socket.",241,null],[11,"write_timeout","","Returns the write timeout of this socket.",241,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",241,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",241,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",241,null],[11,"as_raw_fd","","",241,null],[11,"from_raw_fd","","",241,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",241,null],[11,"deref","std::panic","",242,null],[11,"deref_mut","","",242,null],[11,"call_once","","",242,null],[11,"eq","std::path","",243,null],[11,"ne","","",243,null],[11,"cmp","","",243,null],[11,"partial_cmp","","",243,null],[11,"lt","","",243,null],[11,"le","","",243,null],[11,"gt","","",243,null],[11,"ge","","",243,null],[11,"hash","","",243,null],[11,"fmt","","",243,null],[11,"clone","","",243,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",243,null],[11,"fmt","","",244,null],[11,"clone","","",244,null],[11,"kind","","The parsed prefix data.",244,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",244,null],[11,"eq","","",244,null],[11,"partial_cmp","","",244,null],[11,"cmp","","",244,null],[11,"hash","","",244,null],[11,"fmt","","",245,null],[11,"hash","","",245,null],[11,"cmp","","",245,null],[11,"partial_cmp","","",245,null],[11,"lt","","",245,null],[11,"le","","",245,null],[11,"gt","","",245,null],[11,"ge","","",245,null],[11,"eq","","",245,null],[11,"ne","","",245,null],[11,"clone","","",245,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",245,null],[11,"as_ref","","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",246,null],[11,"as_ref","","",246,null],[11,"as_ref","","",246,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",247,null],[11,"as_ref","","",247,null],[11,"as_ref","","",247,null],[11,"next","","",247,null],[11,"next_back","","",247,null],[11,"next","","",246,null],[11,"next_back","","",246,null],[11,"eq","","",246,null],[11,"partial_cmp","","",246,null],[11,"cmp","","",246,null],[11,"clone","","",248,null],[11,"new","","Allocates an empty `PathBuf`.",248,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",248,null],[11,"push","","Extends `self` with `path`.",248,null],[11,"pop","","Truncate `self` to `self.parent()`.",248,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",248,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",248,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",248,null],[11,"from","","",248,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",248,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",248,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",248,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",248,null],[11,"fmt","","",248,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",249,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",249,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",249,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",249,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",249,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",249,null],[11,"is_relative","","A path is *relative* if it is not absolute.",249,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",249,null],[11,"parent","","The path without its final component, if any.",249,null],[11,"file_name","","The final component of the path, if it is a normal file.",249,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",249,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",249,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",249,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",249,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",249,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",249,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",249,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",249,null],[11,"components","","Produce an iterator over the components of the path.",249,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",249,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",249,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",249,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",249,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",249,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",249,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",249,null],[11,"exists","","Returns whether the path points at an existing entity.",249,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",249,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",249,null],[11,"deref","","",248,null],[11,"borrow","","",248,null],[11,"from","collections::borrow","",183,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",183,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",249,null],[11,"eq","","",248,null],[11,"hash","","",248,null],[11,"partial_cmp","","",248,null],[11,"cmp","","",248,null],[11,"as_ref","","",248,null],[11,"into","","",248,null],[11,"eq","","",250,null],[11,"ne","","",250,null],[11,"clone","","",250,null],[11,"fmt","","",250,null],[11,"as_ref","","",249,null],[11,"fmt","","",249,null],[11,"fmt","","",251,null],[11,"fmt","","",251,null],[11,"eq","","",249,null],[11,"hash","","",249,null],[11,"partial_cmp","","",249,null],[11,"cmp","","",249,null],[11,"as_ref","","",249,null],[11,"as_ref","std::ffi::os_str","",182,null],[11,"as_ref","collections::borrow","",183,null],[11,"as_ref","std::ffi::os_str","",181,null],[11,"as_ref","collections::string","",184,null],[11,"as_ref","std::path","",248,null],[11,"eq","","",248,null],[11,"eq","","",249,null],[11,"partial_cmp","","",248,null],[11,"partial_cmp","","",249,null],[11,"eq","","",248,null],[11,"partial_cmp","","",248,null],[11,"eq","collections::borrow","",183,null],[11,"eq","std::path","",249,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::path","",249,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","","",183,null],[11,"eq","","",183,null],[11,"eq","std::path","",248,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::path","",248,null],[11,"eq","","",248,null],[11,"eq","std::ffi::os_str","",182,null],[11,"partial_cmp","std::path","",248,null],[11,"partial_cmp","std::ffi::os_str","",182,null],[11,"eq","std::path","",248,null],[11,"partial_cmp","","",248,null],[11,"eq","","",248,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","std::path","",248,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"eq","std::path","",248,null],[11,"eq","std::ffi::os_str","",181,null],[11,"partial_cmp","std::path","",248,null],[11,"partial_cmp","std::ffi::os_str","",181,null],[11,"eq","std::path","",249,null],[11,"eq","std::ffi::os_str","",182,null],[11,"partial_cmp","std::path","",249,null],[11,"partial_cmp","std::ffi::os_str","",182,null],[11,"eq","std::path","",249,null],[11,"partial_cmp","","",249,null],[11,"eq","","",249,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","std::path","",249,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"eq","std::path","",249,null],[11,"eq","std::ffi::os_str","",181,null],[11,"partial_cmp","std::path","",249,null],[11,"partial_cmp","std::ffi::os_str","",181,null],[11,"eq","","",182,null],[11,"partial_cmp","","",182,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","","",183,null],[11,"eq","std::ffi::os_str","",181,null],[11,"partial_cmp","","",181,null],[11,"eq","collections::borrow","",183,null],[11,"eq","std::ffi::os_str","",182,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::ffi::os_str","",182,null],[11,"eq","collections::borrow","",183,null],[11,"partial_cmp","","",183,null],[11,"eq","","",183,null],[11,"eq","std::ffi::os_str","",181,null],[11,"partial_cmp","collections::borrow","",183,null],[11,"partial_cmp","std::ffi::os_str","",181,null],[11,"fmt","std::path","",250,null],[11,"description","","",250,null],[11,"write","std::process","",234,null],[11,"flush","","",234,null],[11,"read","","",235,null],[11,"read_to_end","","",235,null],[11,"read","","",236,null],[11,"read_to_end","","",236,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",231,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",231,null],[11,"args","","Add multiple arguments to pass to the program.",231,null],[11,"env","","Inserts or updates an environment variable mapping.",231,null],[11,"env_remove","","Removes an environment variable mapping.",231,null],[11,"env_clear","","Clears the entire environment map for the child process.",231,null],[11,"current_dir","","Sets the working directory for the child process.",231,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",231,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",231,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",231,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",231,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",231,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",231,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",231,null],[11,"clone","","",252,null],[11,"eq","","",252,null],[11,"ne","","",252,null],[11,"fmt","","",252,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",233,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",233,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",233,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",232,null],[11,"clone","","",232,null],[11,"eq","","",232,null],[11,"ne","","",232,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",232,null],[11,"code","","Returns the exit code of the process, if any.",232,null],[11,"fmt","","",232,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",253,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",253,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",253,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",253,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",254,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",254,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",254,null],[11,"id","","Retrieves the id of this handle.",255,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",255,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",255,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",255,null],[11,"drop","","",254,null],[11,"drop","","",255,null],[11,"fmt","","",254,null],[11,"fmt","","",255,null],[11,"clone","std::sync::mpsc","",256,null],[11,"eq","","",256,null],[11,"ne","","",256,null],[11,"fmt","","",257,null],[11,"clone","","",257,null],[11,"eq","","",257,null],[11,"fmt","","",258,null],[11,"clone","","",258,null],[11,"eq","","",258,null],[11,"clone","","",259,null],[11,"eq","","",259,null],[11,"ne","","",259,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",260,null],[11,"clone","","",260,null],[11,"drop","","",260,null],[11,"fmt","","",260,null],[11,"send","","Sends a value on this synchronous channel.",261,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",261,null],[11,"clone","","",261,null],[11,"drop","","",261,null],[11,"fmt","","",261,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",262,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",262,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",262,null],[11,"next","","",263,null],[11,"next","","",264,null],[11,"into_iter","","",262,null],[11,"drop","","",262,null],[11,"fmt","","",262,null],[11,"fmt","","",256,null],[11,"fmt","","",256,null],[11,"description","","",256,null],[11,"cause","","",256,null],[11,"fmt","","",259,null],[11,"fmt","","",259,null],[11,"description","","",259,null],[11,"cause","","",259,null],[11,"fmt","","",257,null],[11,"description","","",257,null],[11,"cause","","",257,null],[11,"fmt","","",258,null],[11,"description","","",258,null],[11,"cause","","",258,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",265,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",265,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",266,null],[11,"clone","std::sync::condvar","",267,null],[11,"eq","","",267,null],[11,"ne","","",267,null],[11,"fmt","","",267,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",267,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",268,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",268,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",268,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",268,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",268,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",268,null],[11,"default","","",268,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",268,null],[11,"new","","Creates a new condition variable",269,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",269,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",269,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",269,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",269,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",269,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",269,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",270,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",270,null],[11,"try_lock","","Attempts to acquire this lock.",270,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",270,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",270,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",270,null],[11,"drop","","",270,null],[11,"default","","",270,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",270,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",271,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",271,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",271,null],[11,"destroy","","Deallocates resources associated with this static mutex.",271,null],[11,"deref","","",272,null],[11,"deref_mut","","",272,null],[11,"drop","","",272,null],[11,"new","std::sync::once","Creates a new `Once` value.",273,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",273,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",273,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",274,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",275,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",275,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",275,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",275,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",275,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",275,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",275,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",275,null],[11,"drop","","",275,null],[11,"fmt","","",275,null],[11,"default","","",275,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",276,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",276,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",276,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",276,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",276,null],[11,"destroy","","Deallocates all resources associated with this static lock.",276,null],[11,"deref","","",277,null],[11,"deref","","",278,null],[11,"deref_mut","","",278,null],[11,"drop","","",277,null],[11,"drop","","",278,null],[11,"hash","std::time::duration","",279,null],[11,"fmt","","",279,null],[11,"cmp","","",279,null],[11,"partial_cmp","","",279,null],[11,"lt","","",279,null],[11,"le","","",279,null],[11,"gt","","",279,null],[11,"ge","","",279,null],[11,"eq","","",279,null],[11,"ne","","",279,null],[11,"clone","","",279,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",279,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",279,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",279,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",279,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",279,null],[11,"add","","",279,null],[11,"add_assign","","",279,null],[11,"sub","","",279,null],[11,"sub_assign","","",279,null],[11,"mul","","",279,null],[11,"mul_assign","","",279,null],[11,"div","","",279,null],[11,"div_assign","","",279,null],[11,"cmp","std::time","",280,null],[11,"partial_cmp","","",280,null],[11,"lt","","",280,null],[11,"le","","",280,null],[11,"gt","","",280,null],[11,"ge","","",280,null],[11,"eq","","",280,null],[11,"ne","","",280,null],[11,"clone","","",280,null],[11,"cmp","","",281,null],[11,"partial_cmp","","",281,null],[11,"lt","","",281,null],[11,"le","","",281,null],[11,"gt","","",281,null],[11,"ge","","",281,null],[11,"eq","","",281,null],[11,"ne","","",281,null],[11,"clone","","",281,null],[11,"fmt","","",282,null],[11,"clone","","",282,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",280,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",280,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",280,null],[11,"add","","",280,null],[11,"add_assign","","",280,null],[11,"sub","","",280,null],[11,"sub_assign","","",280,null],[11,"sub","","",280,null],[11,"fmt","","",280,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",281,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",281,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",281,null],[11,"add","","",281,null],[11,"add_assign","","",281,null],[11,"sub","","",281,null],[11,"sub_assign","","",281,null],[11,"fmt","","",281,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",282,null],[11,"description","","",282,null],[11,"fmt","","",282,null],[11,"fmt","std::sys_common::poison","",283,null],[11,"fmt","","",283,null],[11,"description","","",283,null],[11,"new","","Creates a `PoisonError`.",283,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",283,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",283,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",283,null],[11,"from","","",284,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",284,null],[11,"fmt","","",284,null],[11,"description","","",284,null],[11,"cause","","",284,null],[11,"clone","libc::unix","",285,null],[11,"clone","","",286,null],[11,"clone","","",287,null],[11,"clone","","",288,null],[11,"clone","","",289,null],[11,"clone","","",290,null],[11,"clone","","",291,null],[11,"clone","","",292,null],[11,"clone","","",293,null],[11,"clone","","",294,null],[11,"clone","","",295,null],[11,"clone","","",296,null],[11,"clone","","",297,null],[11,"clone","libc::unix::notbsd","",298,null],[11,"clone","","",299,null],[11,"clone","","",300,null],[11,"clone","","",301,null],[11,"clone","","",302,null],[11,"clone","","",303,null],[11,"clone","","",304,null],[11,"clone","","",305,null],[11,"clone","","",306,null],[11,"clone","","",307,null],[11,"clone","","",308,null],[11,"clone","","",309,null],[11,"clone","","",310,null],[11,"clone","","",311,null],[11,"clone","","",312,null],[11,"clone","libc::unix::notbsd::linux","",313,null],[11,"clone","","",314,null],[11,"clone","","",315,null],[11,"clone","","",316,null],[11,"clone","","",317,null],[11,"clone","","",318,null],[11,"clone","","",319,null],[11,"clone","","",320,null],[11,"clone","","",321,null],[11,"clone","","",322,null],[11,"clone","","",323,null],[11,"clone","","",324,null],[11,"clone","","",325,null],[11,"clone","","",326,null],[11,"clone","","",327,null],[11,"clone","","",328,null],[11,"clone","libc::unix::notbsd::linux::other","",329,null],[11,"clone","","",330,null],[11,"clone","","",331,null],[11,"clone","","",332,null],[11,"clone","","",333,null],[11,"clone","","",334,null],[11,"clone","","",335,null],[11,"clone","","",336,null],[11,"clone","","",337,null],[11,"clone","","",338,null],[11,"clone","","",339,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",340,null],[11,"clone","","",341,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",342,null],[11,"clone","","",343,null],[11,"clone","","",344,null],[11,"clone","","",345,null],[11,"clone","","",346,null],[11,"clone","","",347,null],[11,"clone","","",348,null],[11,"clone","","",349,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",350,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",350,null],[11,"file","","Returns the name of the source file from which the panic originated.",351,null],[11,"line","","Returns the line number from which the panic originated.",351,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",352,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",352,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",352,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Creates a new `Weak&lt;T&gt;` reference from this value.",352,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",352,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",352,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",352,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",352,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",352,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",352,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",352,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",352,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",352,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",352,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",352,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",352,null],[11,"hash","","",352,null],[11,"fmt","","",352,null],[11,"fmt","","",352,null],[11,"fmt","","",352,null],[11,"from","","",352,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",353,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",353,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",353,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",353,null],[11,"fmt","","",353,null],[11,"default","","",353,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",352,null],[11,"as_ref","","",352,null],[11,"borrow","collections::borrow","",183,null],[11,"clone","","",183,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",183,null],[11,"into_owned","","Extracts the owned data.",183,null],[11,"deref","","",183,null],[11,"cmp","","",183,null],[11,"eq","","",183,null],[11,"partial_cmp","","",183,null],[11,"fmt","","",183,null],[11,"fmt","","",183,null],[11,"hash","","",183,null],[11,"as_ref","","",183,null],[11,"borrow","collections::vec","",162,null],[11,"borrow_mut","","",162,null],[11,"clone","collections::str","",354,null],[11,"next","","",354,null],[11,"size_hint","","",354,null],[11,"borrow","collections::string","",184,null],[11,"cmp","","",184,null],[11,"partial_cmp","","",184,null],[11,"lt","","",184,null],[11,"le","","",184,null],[11,"gt","","",184,null],[11,"ge","","",184,null],[11,"fmt","","",119,null],[11,"fmt","","",120,null],[11,"new","","Creates a new empty `String`.",184,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",184,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",184,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",184,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",184,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",184,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",184,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",184,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",184,null],[11,"as_str","","Extracts a string slice containing the entire string.",184,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",184,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",184,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",184,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",184,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",184,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",184,null],[11,"push","","Appends the given `char` to the end of this `String`.",184,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",184,null],[11,"truncate","","Shortens this `String` to the specified length.",184,null],[11,"pop","","Removes the last character from the string buffer and returns it.",184,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",184,null],[11,"insert","","Inserts a character into this `String` at a byte position.",184,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",184,null],[11,"len","","Returns the length of this `String`, in bytes.",184,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",184,null],[11,"clear","","Truncates this `String`, removing all contents.",184,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",184,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",184,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",119,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",119,null],[11,"fmt","","",119,null],[11,"fmt","","",120,null],[11,"clone","","",184,null],[11,"clone_from","","",184,null],[11,"from_iter","","",184,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",184,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",184,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",184,null],[11,"extend","","",184,null],[11,"extend","","",184,null],[11,"extend","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"eq","collections::borrow","",183,null],[11,"ne","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"eq","collections::string","",184,null],[11,"ne","","",184,null],[11,"default","","",184,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",184,null],[11,"fmt","","",184,null],[11,"hash","","",184,null],[11,"add","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"index_mut","","",184,null],[11,"deref","","",184,null],[11,"deref_mut","","",184,null],[11,"from_str","","",184,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",121,null],[11,"fmt","","",121,null],[11,"fmt","","",121,null],[11,"eq","","",121,null],[11,"as_ref","","",184,null],[11,"as_ref","","",184,null],[11,"from","","",184,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",183,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",183,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",184,null],[11,"write_str","","",184,null],[11,"write_char","","",184,null],[11,"drop","","",355,null],[11,"next","","",355,null],[11,"size_hint","","",355,null],[11,"next_back","","",355,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",162,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",162,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",162,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",162,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",162,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",162,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",162,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",162,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",162,null],[11,"as_slice","","Extracts a slice containing the entire vector.",162,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",162,null],[11,"set_len","","Sets the length of a vector.",162,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",162,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",162,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",162,null],[11,"retain","","Retains only the elements specified by the predicate.",162,null],[11,"push","","Appends an element to the back of a collection.",162,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",162,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",162,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",162,null],[11,"clear","","Clears the vector, removing all values.",162,null],[11,"len","","Returns the number of elements in the vector.",162,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",162,null],[11,"split_off","","Splits the collection into two at the given index.",162,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",162,null],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",162,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",162,null],[11,"clone","","",162,null],[11,"clone_from","","",162,null],[11,"hash","","",162,null],[11,"index","","",162,null],[11,"index_mut","","",162,null],[11,"index","","",162,null],[11,"index","","",162,null],[11,"index","","",162,null],[11,"index","","",162,null],[11,"index","","",162,null],[11,"index","","",162,null],[11,"index_mut","","",162,null],[11,"index_mut","","",162,null],[11,"index_mut","","",162,null],[11,"index_mut","","",162,null],[11,"index_mut","","",162,null],[11,"index_mut","","",162,null],[11,"deref","","",162,null],[11,"deref_mut","","",162,null],[11,"from_iter","","",162,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",162,null],[11,"extend","","",162,null],[11,"extend","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","collections::borrow","",183,null],[11,"ne","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"eq","collections::vec","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"partial_cmp","","",162,null],[11,"cmp","","",162,null],[11,"drop","","",162,null],[11,"default","","",162,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",162,null],[11,"as_ref","","",162,null],[11,"as_mut","","",162,null],[11,"as_ref","","",162,null],[11,"as_mut","","",162,null],[11,"from","","",162,null],[11,"from","","",162,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",183,null],[11,"from","","",183,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",183,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",356,null],[11,"size_hint","","",356,null],[11,"count","","",356,null],[11,"next_back","","",356,null],[11,"clone","","",356,null],[11,"drop","","",356,null],[11,"next","","",357,null],[11,"size_hint","","",357,null],[11,"next_back","","",357,null],[11,"drop","","",357,null],[11,"next","rustc_unicode::char","",358,null],[11,"next","","",359,null],[11,"clone","","",360,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",122,null],[11,"next","","",360,null],[11,"size_hint","","",360,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",122,null],[11,"fmt","","",122,null],[11,"clone","alloc::boxed","",361,null],[11,"pointer","","",362,null],[11,"make_place","","",362,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",362,null],[11,"finalize","","",118,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",361,null],[11,"drop","","",362,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",118,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",118,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",118,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",118,null],[11,"clone","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"partial_cmp","","",118,null],[11,"lt","","",118,null],[11,"le","","",118,null],[11,"ge","","",118,null],[11,"gt","","",118,null],[11,"cmp","","",118,null],[11,"hash","","",118,null],[11,"from","","",118,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",118,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",118,null],[11,"fmt","","",118,null],[11,"fmt","","",118,null],[11,"fmt","","",118,null],[11,"deref","","",118,null],[11,"deref_mut","","",118,null],[11,"next","","",118,null],[11,"size_hint","","",118,null],[11,"next_back","","",118,null],[11,"call_once","","",118,null],[11,"call_once","","",118,null],[11,"clone","","",118,null],[11,"borrow","","",118,null],[11,"borrow_mut","","",118,null],[11,"as_ref","","",118,null],[11,"as_mut","","",118,null],[0,"types","gfx_gl","",null,null],[4,"__GLsync","gfx_gl::types","",null,null],[4,"_cl_context","","",null,null],[4,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","gfx_gl","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"READ_ONLY","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"RG16","","",null,null],[17,"RGB8I","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"OR","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"RGBA4","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE26","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"TEXTURE23","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"RGB16F","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"DECR","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"CW","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"STATIC_READ","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"SAMPLER","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"BYTE","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"TEXTURE10","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"TEXTURE2","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"GREEN","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"REPEAT","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"RIGHT","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MIN","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"R16_SNORM","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"TEXTURE0","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"LESS","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"STREAM_READ","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"INT","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"RGBA32F","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"PROGRAM","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"RG8UI","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"ALPHA","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"DEPTH_BUFFER_BIT","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"TEXTURE31","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"LINES","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"RG32I","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"RGBA32UI","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"RENDERER","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"BACK","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"RGB10","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"RGB","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"FILL","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"TRIANGLES","","",null,null],[17,"SRGB","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"INDEX","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"NONE","","",null,null],[17,"COPY","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"RG8","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"INT_VEC2","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"RGB5","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"RGB32I","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"AND","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"EQUAL","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"SHORT","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"BLUE","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"STACK_UNDERFLOW","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"RGB8UI","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"TEXTURE3","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"READ_WRITE","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"NO_ERROR","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"VERSION","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"STENCIL","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"RGBA12","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"STACK_OVERFLOW","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"TEXTURE28","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"BGRA","","",null,null],[17,"GREATER","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"DST_COLOR","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"R32F","","",null,null],[17,"MIPMAP","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"TEXTURE22","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"VERTEX_ARRAY","","",null,null],[17,"TEXTURE11","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"R8I","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"TEXTURE15","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"LEQUAL","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"RG16F","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"R32UI","","",null,null],[17,"R8UI","","",null,null],[17,"ISOLINES","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"R16I","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"QUERY","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"SIGNALED","","",null,null],[17,"FILTER","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"RGBA16","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"INCR","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"POINTS","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"KEEP","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"ALWAYS","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"INT_VEC4","","",null,null],[17,"RGB16I","","",null,null],[17,"SRGB_READ","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"TEXTURE20","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SET","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"RGB12","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"XOR","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"INVERT","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"STEREO","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"QUADS","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"RGB16","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"TEXTURE25","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"RG16UI","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"R8_SNORM","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"FIXED","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"TEXTURE13","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"RGBA8I","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"TEXTURE","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"TEXTURE30","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"LOCATION","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"TEXTURE12","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"TEXTURE27","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"TEXTURE9","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"CCW","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"R8","","",null,null],[17,"FLOAT","","",null,null],[17,"LINEAR","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"BGR","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"NAND","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"TEXTURE19","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"NOOP","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"TEXTURE24","","",null,null],[17,"COLOR","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"UNIFORM","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"DITHER","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"RGBA16UI","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"RGB5_A1","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"SRGB8","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"FASTEST","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"NICEST","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"VENDOR","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"BLEND","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"TYPE","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"ZERO","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"BOOL","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"RGBA8","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"RGBA16F","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"NOR","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"RGB16UI","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"NEVER","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"RED","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"PATCHES","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"GEQUAL","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"R16","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"OFFSET","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"RGBA16I","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"LEFT","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"NEAREST","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"DONT_CARE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"RGBA32I","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"BLEND_DST","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"RGB8","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"R16UI","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"R16F","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"TEXTURE4","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"RG","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"TEXTURE16","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"REPLACE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE8","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"EQUIV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"ONE","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"SHADER","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"RG16I","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"SAMPLES","","",null,null],[17,"TEXTURE7","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"TEXTURE5","","",null,null],[17,"RG32UI","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"CLEAR","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"BUFFER","","",null,null],[17,"RGB4","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"FALSE","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE17","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"POINT","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"LINE","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"VIEWPORT","","",null,null],[17,"RGB32UI","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"RGB32F","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"MAX","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"DOUBLE","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DEPTH","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"RG32F","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"RGBA8UI","","",null,null],[17,"R32I","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"RGBA","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"RGB565","","",null,null],[17,"RGB9_E5","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"TRUE","","",null,null],[17,"RG8I","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"CULL_FACE","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"RGB10_A2","","",null,null],[17,"TEXTURE1","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"FRONT","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"RGBA2","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"INT_VEC3","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[11,"clone","","",363,null],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",363,null],[11,"clone","","",0,null],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",0,{"inputs":[{"name":"f"}],"output":{"name":"gl"}}],[11,"AttachShader","","",0,null],[11,"MultiTexCoordP3ui","","",0,null],[11,"BeginQuery","","",0,null],[11,"ProgramUniformMatrix2x3fv","","",0,null],[11,"TextureParameterIuiv","","",0,null],[11,"BindVertexArray","","",0,null],[11,"DeleteQueries","","",0,null],[11,"VertexAttrib3sv","","",0,null],[11,"VertexAttribI2uiv","","",0,null],[11,"ProgramUniform1uiv","","",0,null],[11,"GetTexParameteriv","","",0,null],[11,"ReadPixels","","",0,null],[11,"InvalidateBufferSubData","","",0,null],[11,"GetIntegeri_v","","",0,null],[11,"ShaderBinary","","",0,null],[11,"NormalP3uiv","","",0,null],[11,"Uniform3f","","",0,null],[11,"FenceSync","","",0,null],[11,"VertexAttrib4dv","","",0,null],[11,"Uniform4fv","","",0,null],[11,"GetQueryObjectiv","","",0,null],[11,"GetTextureLevelParameterfv","","",0,null],[11,"VertexAttrib1f","","",0,null],[11,"GetBufferParameteri64v","","",0,null],[11,"ProgramUniform4dv","","",0,null],[11,"TextureStorage1D","","",0,null],[11,"CullFace","","",0,null],[11,"ProgramUniformMatrix3x4dv","","",0,null],[11,"MultiTexCoordP2uiv","","",0,null],[11,"ProgramUniform4i","","",0,null],[11,"Disable","","",0,null],[11,"NamedRenderbufferStorage","","",0,null],[11,"UniformMatrix2x3dv","","",0,null],[11,"BlendEquation","","",0,null],[11,"FrontFace","","",0,null],[11,"GetTransformFeedbackVarying","","",0,null],[11,"SecondaryColorP3ui","","",0,null],[11,"VertexAttrib2dv","","",0,null],[11,"GetQueryBufferObjectui64v","","",0,null],[11,"GetUniformiv","","",0,null],[11,"IsShader","","",0,null],[11,"ColorP4ui","","",0,null],[11,"GetGraphicsResetStatus","","",0,null],[11,"GetProgramResourceiv","","",0,null],[11,"FlushMappedBufferRange","","",0,null],[11,"MapBufferRange","","",0,null],[11,"BeginTransformFeedback","","",0,null],[11,"GetProgramiv","","",0,null],[11,"CompileShader","","",0,null],[11,"BindTextureUnit","","",0,null],[11,"BeginConditionalRender","","",0,null],[11,"GetUniformuiv","","",0,null],[11,"BindProgramPipeline","","",0,null],[11,"Uniform4ui","","",0,null],[11,"GetSynciv","","",0,null],[11,"ClipControl","","",0,null],[11,"ProgramUniformMatrix3dv","","",0,null],[11,"GetNamedFramebufferParameteriv","","",0,null],[11,"ClearNamedFramebufferfi","","",0,null],[11,"StencilOp","","",0,null],[11,"TexImage2D","","",0,null],[11,"ViewportIndexedf","","",0,null],[11,"WaitSync","","",0,null],[11,"TextureStorage3DMultisample","","",0,null],[11,"TexCoordP3ui","","",0,null],[11,"Uniform1uiv","","",0,null],[11,"GetFragDataLocation","","",0,null],[11,"VertexAttrib3d","","",0,null],[11,"ShaderSource","","",0,null],[11,"InvalidateTexSubImage","","",0,null],[11,"DepthRangeArrayv","","",0,null],[11,"GetVertexAttribiv","","",0,null],[11,"ProgramUniform3dv","","",0,null],[11,"ProvokingVertex","","",0,null],[11,"GetQueryObjectui64v","","",0,null],[11,"TexSubImage3D","","",0,null],[11,"Finish","","",0,null],[11,"DrawElementsInstancedBaseVertexBaseInstance","","",0,null],[11,"MultiTexCoordP2ui","","",0,null],[11,"Uniform3dv","","",0,null],[11,"VertexAttribI1ui","","",0,null],[11,"GetActiveUniformsiv","","",0,null],[11,"SamplerParameteri","","",0,null],[11,"Uniform2iv","","",0,null],[11,"ProgramUniform2iv","","",0,null],[11,"VertexAttrib4d","","",0,null],[11,"IsSampler","","",0,null],[11,"VertexAttribBinding","","",0,null],[11,"TexParameteriv","","",0,null],[11,"PointSize","","",0,null],[11,"IsRenderbuffer","","",0,null],[11,"UniformMatrix4x2dv","","",0,null],[11,"StencilMask","","",0,null],[11,"Uniform4f","","",0,null],[11,"VertexAttribL3dv","","",0,null],[11,"UniformMatrix3dv","","",0,null],[11,"BindTransformFeedback","","",0,null],[11,"EndQueryIndexed","","",0,null],[11,"PatchParameterfv","","",0,null],[11,"VertexAttribFormat","","",0,null],[11,"TexCoordP2ui","","",0,null],[11,"DrawElementsInstancedBaseInstance","","",0,null],[11,"UniformMatrix3fv","","",0,null],[11,"GetShaderiv","","",0,null],[11,"GetQueryiv","","",0,null],[11,"NamedBufferSubData","","",0,null],[11,"VertexAttribLPointer","","",0,null],[11,"TexCoordP4ui","","",0,null],[11,"CopyTexImage2D","","",0,null],[11,"Uniform3i","","",0,null],[11,"TexStorage3DMultisample","","",0,null],[11,"VertexAttribI4bv","","",0,null],[11,"CompressedTexImage2D","","",0,null],[11,"ProgramUniformMatrix4dv","","",0,null],[11,"Uniform1f","","",0,null],[11,"GetProgramInfoLog","","",0,null],[11,"ProgramUniform1ui","","",0,null],[11,"DrawElementsInstanced","","",0,null],[11,"FramebufferTexture1D","","",0,null],[11,"ReadBuffer","","",0,null],[11,"BufferStorage","","",0,null],[11,"BlendEquationSeparateiARB","","",0,null],[11,"BufferData","","",0,null],[11,"Uniform1dv","","",0,null],[11,"DeleteBuffers","","",0,null],[11,"BlendFuncSeparatei","","",0,null],[11,"TexStorage1D","","",0,null],[11,"BlendFuncSeparateiARB","","",0,null],[11,"VertexAttrib1d","","",0,null],[11,"GetnConvolutionFilter","","",0,null],[11,"GetObjectPtrLabel","","",0,null],[11,"ClearBufferSubData","","",0,null],[11,"GetUniformSubroutineuiv","","",0,null],[11,"GetCompressedTextureSubImage","","",0,null],[11,"IsTexture","","",0,null],[11,"GetObjectLabel","","",0,null],[11,"PushDebugGroup","","",0,null],[11,"VertexAttrib4bv","","",0,null],[11,"VertexAttribIFormat","","",0,null],[11,"GetSubroutineIndex","","",0,null],[11,"DeleteSamplers","","",0,null],[11,"ProgramUniform2uiv","","",0,null],[11,"CopyTexImage1D","","",0,null],[11,"ScissorArrayv","","",0,null],[11,"VertexBindingDivisor","","",0,null],[11,"VertexAttrib4fv","","",0,null],[11,"ClearDepth","","",0,null],[11,"NamedFramebufferParameteri","","",0,null],[11,"UnmapNamedBuffer","","",0,null],[11,"ProgramUniform1d","","",0,null],[11,"IsVertexArray","","",0,null],[11,"GetTextureParameteriv","","",0,null],[11,"EndQuery","","",0,null],[11,"VertexAttribL4dv","","",0,null],[11,"EndConditionalRender","","",0,null],[11,"GetInteger64v","","",0,null],[11,"GetQueryObjectuiv","","",0,null],[11,"GetNamedBufferParameteriv","","",0,null],[11,"InvalidateNamedFramebufferData","","",0,null],[11,"BindBufferRange","","",0,null],[11,"DepthRangef","","",0,null],[11,"TextureParameteri","","",0,null],[11,"DepthRangeIndexed","","",0,null],[11,"ClientWaitSync","","",0,null],[11,"CopyTextureSubImage1D","","",0,null],[11,"GetQueryBufferObjecti64v","","",0,null],[11,"CompressedTextureSubImage1D","","",0,null],[11,"GetActiveSubroutineUniformiv","","",0,null],[11,"UniformMatrix4x3fv","","",0,null],[11,"BlitNamedFramebuffer","","",0,null],[11,"DetachShader","","",0,null],[11,"EnableVertexAttribArray","","",0,null],[11,"GetnUniformiv","","",0,null],[11,"Uniform2i","","",0,null],[11,"VertexAttrib2fv","","",0,null],[11,"PixelStorei","","",0,null],[11,"ProgramUniformMatrix3x4fv","","",0,null],[11,"ProgramUniformMatrix4x2fv","","",0,null],[11,"Uniform2f","","",0,null],[11,"ViewportIndexedfv","","",0,null],[11,"MapNamedBufferRange","","",0,null],[11,"UniformMatrix4dv","","",0,null],[11,"GetnMinmax","","",0,null],[11,"VertexAttribI3i","","",0,null],[11,"IsEnabled","","",0,null],[11,"GetMultisamplefv","","",0,null],[11,"FlushMappedNamedBufferRange","","",0,null],[11,"MemoryBarrierByRegion","","",0,null],[11,"IsTransformFeedback","","",0,null],[11,"GetVertexArrayIndexediv","","",0,null],[11,"GetVertexArrayIndexed64iv","","",0,null],[11,"NamedBufferData","","",0,null],[11,"Scissor","","",0,null],[11,"GetDebugMessageLog","","",0,null],[11,"PointParameteriv","","",0,null],[11,"Uniform4iv","","",0,null],[11,"BindVertexBuffer","","",0,null],[11,"GenRenderbuffers","","",0,null],[11,"Uniform2dv","","",0,null],[11,"FramebufferParameteri","","",0,null],[11,"ClearStencil","","",0,null],[11,"DepthRange","","",0,null],[11,"VertexAttrib4iv","","",0,null],[11,"VertexAttribI4ubv","","",0,null],[11,"GetnSeparableFilter","","",0,null],[11,"MultiTexCoordP3uiv","","",0,null],[11,"GenSamplers","","",0,null],[11,"GenBuffers","","",0,null],[11,"ScissorIndexed","","",0,null],[11,"ProgramUniformMatrix2x4dv","","",0,null],[11,"PointParameteri","","",0,null],[11,"GetQueryBufferObjectiv","","",0,null],[11,"TexParameterIiv","","",0,null],[11,"PrimitiveRestartIndex","","",0,null],[11,"GetTexParameterIuiv","","",0,null],[11,"VertexAttrib2s","","",0,null],[11,"GetDoublei_v","","",0,null],[11,"ActiveShaderProgram","","",0,null],[11,"DrawArraysIndirect","","",0,null],[11,"BindFragDataLocation","","",0,null],[11,"DrawRangeElementsBaseVertex","","",0,null],[11,"MapBuffer","","",0,null],[11,"VertexAttrib3dv","","",0,null],[11,"QueryCounter","","",0,null],[11,"ClearNamedFramebufferfv","","",0,null],[11,"VertexAttribIPointer","","",0,null],[11,"CheckNamedFramebufferStatus","","",0,null],[11,"Uniform3iv","","",0,null],[11,"IsProgram","","",0,null],[11,"CopyTextureSubImage3D","","",0,null],[11,"GetnMapiv","","",0,null],[11,"GetTransformFeedbacki_v","","",0,null],[11,"VertexP3ui","","",0,null],[11,"RenderbufferStorage","","",0,null],[11,"TexCoordP3uiv","","",0,null],[11,"ProgramParameteri","","",0,null],[11,"GetString","","",0,null],[11,"ProgramUniform1fv","","",0,null],[11,"ObjectPtrLabel","","",0,null],[11,"VertexAttribPointer","","",0,null],[11,"GetTexParameterfv","","",0,null],[11,"InvalidateTexImage","","",0,null],[11,"GetnPixelMapuiv","","",0,null],[11,"ProgramUniformMatrix3x2dv","","",0,null],[11,"PauseTransformFeedback","","",0,null],[11,"BlendEquationiARB","","",0,null],[11,"ProgramUniform4f","","",0,null],[11,"VertexAttrib4f","","",0,null],[11,"GetFloatv","","",0,null],[11,"ScissorIndexedv","","",0,null],[11,"VertexAttribL3d","","",0,null],[11,"VertexP2ui","","",0,null],[11,"ProgramUniform4fv","","",0,null],[11,"DrawElementsInstancedBaseVertex","","",0,null],[11,"GetQueryBufferObjectuiv","","",0,null],[11,"CompressedTextureSubImage3D","","",0,null],[11,"SampleMaski","","",0,null],[11,"Uniform4dv","","",0,null],[11,"GetnTexImage","","",0,null],[11,"GetPointerv","","",0,null],[11,"VertexAttribI1iv","","",0,null],[11,"Uniform4uiv","","",0,null],[11,"DrawRangeElements","","",0,null],[11,"MultiTexCoordP4uiv","","",0,null],[11,"VertexAttribP4uiv","","",0,null],[11,"BlendEquationSeparatei","","",0,null],[11,"GetVertexAttribIuiv","","",0,null],[11,"SamplerParameterfv","","",0,null],[11,"Uniform2uiv","","",0,null],[11,"UniformMatrix3x2fv","","",0,null],[11,"TextureView","","",0,null],[11,"IsSync","","",0,null],[11,"Uniform3ui","","",0,null],[11,"GetVertexAttribLdv","","",0,null],[11,"VertexAttribI3ui","","",0,null],[11,"GetTexLevelParameterfv","","",0,null],[11,"GetTextureImage","","",0,null],[11,"ProgramUniform3iv","","",0,null],[11,"BindVertexBuffers","","",0,null],[11,"BlendEquationSeparate","","",0,null],[11,"GetFloati_v","","",0,null],[11,"ColorP4uiv","","",0,null],[11,"StencilOpSeparate","","",0,null],[11,"VertexAttrib4Nusv","","",0,null],[11,"BindFragDataLocationIndexed","","",0,null],[11,"VertexAttribI4i","","",0,null],[11,"PolygonMode","","",0,null],[11,"GetSamplerParameterfv","","",0,null],[11,"GetBufferParameteriv","","",0,null],[11,"DeleteFramebuffers","","",0,null],[11,"GetActiveSubroutineName","","",0,null],[11,"UniformMatrix2dv","","",0,null],[11,"InvalidateNamedFramebufferSubData","","",0,null],[11,"ProgramUniformMatrix2x4fv","","",0,null],[11,"DepthFunc","","",0,null],[11,"NamedFramebufferDrawBuffers","","",0,null],[11,"VertexAttribI4iv","","",0,null],[11,"UniformMatrix3x4dv","","",0,null],[11,"VertexAttribI3uiv","","",0,null],[11,"ObjectLabel","","",0,null],[11,"TexCoordP1uiv","","",0,null],[11,"TexImage1D","","",0,null],[11,"GetVertexAttribPointerv","","",0,null],[11,"DeleteProgramPipelines","","",0,null],[11,"TextureStorage2DMultisample","","",0,null],[11,"GetCompressedTextureImage","","",0,null],[11,"VertexAttribL1dv","","",0,null],[11,"ProgramUniformMatrix4x2dv","","",0,null],[11,"ViewportArrayv","","",0,null],[11,"GetTexLevelParameteriv","","",0,null],[11,"SamplerParameteriv","","",0,null],[11,"GetProgramPipelineInfoLog","","",0,null],[11,"SamplerParameterIuiv","","",0,null],[11,"VertexAttribI1uiv","","",0,null],[11,"VertexAttribP4ui","","",0,null],[11,"Uniform1iv","","",0,null],[11,"InvalidateFramebuffer","","",0,null],[11,"VertexAttrib4sv","","",0,null],[11,"VertexArrayAttribIFormat","","",0,null],[11,"ProgramUniformMatrix2x3dv","","",0,null],[11,"VertexAttrib4Nbv","","",0,null],[11,"BindBuffersRange","","",0,null],[11,"Uniform1ui","","",0,null],[11,"GetUniformBlockIndex","","",0,null],[11,"UniformBlockBinding","","",0,null],[11,"VertexArrayElementBuffer","","",0,null],[11,"GetUniformLocation","","",0,null],[11,"GetBooleani_v","","",0,null],[11,"GetnPolygonStipple","","",0,null],[11,"GetUniformfv","","",0,null],[11,"DeleteTextures","","",0,null],[11,"UnmapBuffer","","",0,null],[11,"VertexAttribL2dv","","",0,null],[11,"MultiTexCoordP4ui","","",0,null],[11,"ClearBufferfi","","",0,null],[11,"BlendFunciARB","","",0,null],[11,"UniformSubroutinesuiv","","",0,null],[11,"BlendFunci","","",0,null],[11,"FramebufferTexture2D","","",0,null],[11,"TexParameteri","","",0,null],[11,"DrawArrays","","",0,null],[11,"VertexAttribL2d","","",0,null],[11,"DrawTransformFeedbackInstanced","","",0,null],[11,"GetSamplerParameteriv","","",0,null],[11,"DrawTransformFeedbackStream","","",0,null],[11,"GetTextureParameterIuiv","","",0,null],[11,"CopyTexSubImage2D","","",0,null],[11,"InvalidateBufferData","","",0,null],[11,"EndTransformFeedback","","",0,null],[11,"ProgramUniform3d","","",0,null],[11,"TransformFeedbackBufferRange","","",0,null],[11,"ProgramUniformMatrix4x3fv","","",0,null],[11,"VertexAttrib1sv","","",0,null],[11,"VertexAttrib2f","","",0,null],[11,"TexParameterf","","",0,null],[11,"BindTextures","","",0,null],[11,"GetTransformFeedbackiv","","",0,null],[11,"ProgramUniform2dv","","",0,null],[11,"VertexAttribI2iv","","",0,null],[11,"GetnUniformdv","","",0,null],[11,"BindBufferBase","","",0,null],[11,"NamedFramebufferTextureLayer","","",0,null],[11,"ClearNamedBufferSubData","","",0,null],[11,"RenderbufferStorageMultisample","","",0,null],[11,"LineWidth","","",0,null],[11,"GetnMapfv","","",0,null],[11,"CreateFramebuffers","","",0,null],[11,"GetProgramStageiv","","",0,null],[11,"ProgramUniform4d","","",0,null],[11,"GetActiveAttrib","","",0,null],[11,"TexStorage3D","","",0,null],[11,"GetProgramResourceName","","",0,null],[11,"UniformMatrix2x3fv","","",0,null],[11,"VertexAttribI1i","","",0,null],[11,"ColorP3ui","","",0,null],[11,"BindSamplers","","",0,null],[11,"TexCoordP4uiv","","",0,null],[11,"GetInteger64i_v","","",0,null],[11,"Uniform2fv","","",0,null],[11,"DebugMessageControl","","",0,null],[11,"TexImage3D","","",0,null],[11,"CompressedTextureSubImage2D","","",0,null],[11,"ClearBufferiv","","",0,null],[11,"VertexP2uiv","","",0,null],[11,"GetProgramResourceLocationIndex","","",0,null],[11,"UniformMatrix2fv","","",0,null],[11,"Uniform2d","","",0,null],[11,"ProgramUniformMatrix2dv","","",0,null],[11,"SampleCoverage","","",0,null],[11,"Enablei","","",0,null],[11,"VertexAttrib1fv","","",0,null],[11,"VertexP3uiv","","",0,null],[11,"MultiDrawArrays","","",0,null],[11,"ProgramUniform4uiv","","",0,null],[11,"GetVertexAttribIiv","","",0,null],[11,"GetFramebufferAttachmentParameteriv","","",0,null],[11,"ReadnPixels","","",0,null],[11,"ProgramUniform3i","","",0,null],[11,"VertexAttrib4usv","","",0,null],[11,"CompressedTexSubImage1D","","",0,null],[11,"FramebufferTexture","","",0,null],[11,"GetStringi","","",0,null],[11,"ProgramUniform4ui","","",0,null],[11,"DrawElements","","",0,null],[11,"StencilFunc","","",0,null],[11,"IsQuery","","",0,null],[11,"BindSampler","","",0,null],[11,"VertexArrayVertexBuffer","","",0,null],[11,"TextureSubImage2D","","",0,null],[11,"MultiDrawElements","","",0,null],[11,"MapNamedBuffer","","",0,null],[11,"GetTexImage","","",0,null],[11,"VertexP4ui","","",0,null],[11,"DeleteRenderbuffers","","",0,null],[11,"VertexAttribP2ui","","",0,null],[11,"GetProgramInterfaceiv","","",0,null],[11,"BlendFuncSeparate","","",0,null],[11,"CreateQueries","","",0,null],[11,"GetTextureParameterfv","","",0,null],[11,"ProgramUniform1dv","","",0,null],[11,"GetNamedBufferSubData","","",0,null],[11,"TextureSubImage1D","","",0,null],[11,"ColorMaski","","",0,null],[11,"ClearColor","","",0,null],[11,"IsFramebuffer","","",0,null],[11,"TextureParameterf","","",0,null],[11,"VertexAttrib4s","","",0,null],[11,"TexParameterfv","","",0,null],[11,"GetnPixelMapusv","","",0,null],[11,"BindBuffersBase","","",0,null],[11,"GetShaderPrecisionFormat","","",0,null],[11,"Uniform1i","","",0,null],[11,"CompressedTexImage3D","","",0,null],[11,"ResumeTransformFeedback","","",0,null],[11,"UseProgramStages","","",0,null],[11,"CreateProgramPipelines","","",0,null],[11,"CreateVertexArrays","","",0,null],[11,"TextureSubImage3D","","",0,null],[11,"ClearNamedFramebufferuiv","","",0,null],[11,"DisableVertexArrayAttrib","","",0,null],[11,"TransformFeedbackBufferBase","","",0,null],[11,"BlendEquationi","","",0,null],[11,"TextureBarrier","","",0,null],[11,"ProgramUniform3ui","","",0,null],[11,"ClearNamedFramebufferiv","","",0,null],[11,"ShaderStorageBlockBinding","","",0,null],[11,"Uniform4d","","",0,null],[11,"GetnUniformuiv","","",0,null],[11,"VertexAttribP3uiv","","",0,null],[11,"GetQueryIndexediv","","",0,null],[11,"VertexAttribP2uiv","","",0,null],[11,"VertexAttribI4ui","","",0,null],[11,"ClampColor","","",0,null],[11,"DeleteVertexArrays","","",0,null],[11,"GetActiveUniformName","","",0,null],[11,"GetActiveUniform","","",0,null],[11,"ProgramUniformMatrix3fv","","",0,null],[11,"BlendFunc","","",0,null],[11,"DeleteShader","","",0,null],[11,"GetActiveUniformBlockiv","","",0,null],[11,"GetBufferPointerv","","",0,null],[11,"BindAttribLocation","","",0,null],[11,"MultiDrawArraysIndirect","","",0,null],[11,"TexSubImage2D","","",0,null],[11,"StencilMaskSeparate","","",0,null],[11,"IsBuffer","","",0,null],[11,"TexParameterIuiv","","",0,null],[11,"CompressedTexSubImage3D","","",0,null],[11,"GetProgramResourceLocation","","",0,null],[11,"UniformMatrix2x4dv","","",0,null],[11,"Disablei","","",0,null],[11,"GetDoublev","","",0,null],[11,"DrawTransformFeedbackStreamInstanced","","",0,null],[11,"BufferSubData","","",0,null],[11,"NamedBufferStorage","","",0,null],[11,"DebugMessageInsert","","",0,null],[11,"GetSamplerParameterIuiv","","",0,null],[11,"ProgramUniform3f","","",0,null],[11,"GetUniformdv","","",0,null],[11,"VertexArrayVertexBuffers","","",0,null],[11,"BindFramebuffer","","",0,null],[11,"VertexAttribI2ui","","",0,null],[11,"VertexAttrib1s","","",0,null],[11,"GetnHistogram","","",0,null],[11,"DrawArraysInstanced","","",0,null],[11,"VertexAttribLFormat","","",0,null],[11,"VertexAttrib4Nuiv","","",0,null],[11,"GetTextureSubImage","","",0,null],[11,"GetnCompressedTexImage","","",0,null],[11,"DepthMask","","",0,null],[11,"PolygonOffset","","",0,null],[11,"CreateShader","","",0,null],[11,"VertexAttrib4ubv","","",0,null],[11,"NamedRenderbufferStorageMultisample","","",0,null],[11,"Viewport","","",0,null],[11,"VertexAttribL1d","","",0,null],[11,"ProgramUniform2f","","",0,null],[11,"Enable","","",0,null],[11,"VertexAttribL4d","","",0,null],[11,"DeleteTransformFeedbacks","","",0,null],[11,"PatchParameteri","","",0,null],[11,"BlendColor","","",0,null],[11,"GenerateTextureMipmap","","",0,null],[11,"CreateRenderbuffers","","",0,null],[11,"ClearBufferData","","",0,null],[11,"TextureParameteriv","","",0,null],[11,"VertexArrayAttribLFormat","","",0,null],[11,"BlitFramebuffer","","",0,null],[11,"ProgramBinary","","",0,null],[11,"CopyImageSubData","","",0,null],[11,"NamedFramebufferReadBuffer","","",0,null],[11,"VertexAttribI4sv","","",0,null],[11,"VertexAttrib4Niv","","",0,null],[11,"Clear","","",0,null],[11,"VertexAttrib2sv","","",0,null],[11,"ProgramUniformMatrix3x2fv","","",0,null],[11,"VertexAttrib4Nubv","","",0,null],[11,"UseProgram","","",0,null],[11,"CreateTextures","","",0,null],[11,"VertexAttrib3fv","","",0,null],[11,"DeleteProgram","","",0,null],[11,"VertexAttribI2i","","",0,null],[11,"ProgramUniform3fv","","",0,null],[11,"DeleteSync","","",0,null],[11,"ProgramUniform1iv","","",0,null],[11,"VertexP4uiv","","",0,null],[11,"BeginQueryIndexed","","",0,null],[11,"GenProgramPipelines","","",0,null],[11,"GetNamedBufferPointerv","","",0,null],[11,"UniformMatrix3x2dv","","",0,null],[11,"UniformMatrix4x3dv","","",0,null],[11,"TextureStorage2D","","",0,null],[11,"SamplerParameterf","","",0,null],[11,"GetBooleanv","","",0,null],[11,"VertexArrayAttribFormat","","",0,null],[11,"MultiTexCoordP1uiv","","",0,null],[11,"GetActiveUniformBlockName","","",0,null],[11,"TextureBuffer","","",0,null],[11,"ClearTexImage","","",0,null],[11,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[11,"GetNamedBufferParameteri64v","","",0,null],[11,"BindImageTexture","","",0,null],[11,"Uniform4i","","",0,null],[11,"DispatchCompute","","",0,null],[11,"Uniform1d","","",0,null],[11,"UniformMatrix4x2fv","","",0,null],[11,"GetVertexArrayiv","","",0,null],[11,"PointParameterf","","",0,null],[11,"VertexAttrib4Nub","","",0,null],[11,"MultiDrawElementsBaseVertex","","",0,null],[11,"GetnMapdv","","",0,null],[11,"GetShaderSource","","",0,null],[11,"TexStorage2D","","",0,null],[11,"TexImage2DMultisample","","",0,null],[11,"NamedFramebufferRenderbuffer","","",0,null],[11,"Uniform1fv","","",0,null],[11,"MultiTexCoordP1ui","","",0,null],[11,"FramebufferTexture3D","","",0,null],[11,"CopyTexSubImage3D","","",0,null],[11,"GenFramebuffers","","",0,null],[11,"MemoryBarrier","","",0,null],[11,"GetError","","",0,null],[11,"TextureStorage3D","","",0,null],[11,"DrawBuffers","","",0,null],[11,"FramebufferTextureLayer","","",0,null],[11,"BindImageTextures","","",0,null],[11,"GenerateMipmap","","",0,null],[11,"NormalP3ui","","",0,null],[11,"TexBuffer","","",0,null],[11,"Hint","","",0,null],[11,"LinkProgram","","",0,null],[11,"VertexAttribP3ui","","",0,null],[11,"GetTransformFeedbacki64_v","","",0,null],[11,"ValidateProgram","","",0,null],[11,"SamplerParameterIiv","","",0,null],[11,"GetVertexAttribdv","","",0,null],[11,"VertexAttrib3s","","",0,null],[11,"CompressedTexSubImage2D","","",0,null],[11,"CreateProgram","","",0,null],[11,"GetTexParameterIiv","","",0,null],[11,"GenTransformFeedbacks","","",0,null],[11,"ProgramUniform2d","","",0,null],[11,"ProgramUniform4iv","","",0,null],[11,"IsEnabledi","","",0,null],[11,"GetRenderbufferParameteriv","","",0,null],[11,"CreateSamplers","","",0,null],[11,"PixelStoref","","",0,null],[11,"VertexAttribP1uiv","","",0,null],[11,"GetInternalformati64v","","",0,null],[11,"VertexAttribDivisor","","",0,null],[11,"IsProgramPipeline","","",0,null],[11,"VertexAttribI4usv","","",0,null],[11,"TextureParameterfv","","",0,null],[11,"TexCoordP2uiv","","",0,null],[11,"GetShaderInfoLog","","",0,null],[11,"GetnUniformfv","","",0,null],[11,"VertexAttribP1ui","","",0,null],[11,"BindBuffer","","",0,null],[11,"GetTextureParameterIiv","","",0,null],[11,"NamedFramebufferDrawBuffer","","",0,null],[11,"TexBufferRange","","",0,null],[11,"VertexAttrib1dv","","",0,null],[11,"LogicOp","","",0,null],[11,"ProgramUniform1i","","",0,null],[11,"GetFragDataIndex","","",0,null],[11,"Uniform3fv","","",0,null],[11,"ProgramUniform1f","","",0,null],[11,"StencilFuncSeparate","","",0,null],[11,"CompressedTexImage1D","","",0,null],[11,"DrawElementsBaseVertex","","",0,null],[11,"ProgramUniformMatrix4fv","","",0,null],[11,"SecondaryColorP3uiv","","",0,null],[11,"DebugMessageCallback","","",0,null],[11,"CopyNamedBufferSubData","","",0,null],[11,"CheckFramebufferStatus","","",0,null],[11,"Uniform2ui","","",0,null],[11,"GetIntegerv","","",0,null],[11,"BindRenderbuffer","","",0,null],[11,"VertexArrayBindingDivisor","","",0,null],[11,"DrawBuffer","","",0,null],[11,"CopyTexSubImage1D","","",0,null],[11,"TransformFeedbackVaryings","","",0,null],[11,"CopyTextureSubImage2D","","",0,null],[11,"TexImage3DMultisample","","",0,null],[11,"CreateShaderProgramv","","",0,null],[11,"GetInternalformativ","","",0,null],[11,"TexSubImage1D","","",0,null],[11,"VertexAttrib2d","","",0,null],[11,"GetAttachedShaders","","",0,null],[11,"ValidateProgramPipeline","","",0,null],[11,"ColorP3uiv","","",0,null],[11,"ClearBufferuiv","","",0,null],[11,"ProgramUniform3uiv","","",0,null],[11,"UniformMatrix3x4fv","","",0,null],[11,"VertexArrayAttribBinding","","",0,null],[11,"GetAttribLocation","","",0,null],[11,"GetProgramBinary","","",0,null],[11,"ProgramUniform2ui","","",0,null],[11,"GetProgramPipelineiv","","",0,null],[11,"NamedFramebufferTexture","","",0,null],[11,"CreateBuffers","","",0,null],[11,"FramebufferRenderbuffer","","",0,null],[11,"ProgramUniformMatrix2fv","","",0,null],[11,"CreateTransformFeedbacks","","",0,null],[11,"GetProgramResourceIndex","","",0,null],[11,"ActiveTexture","","",0,null],[11,"GetQueryObjecti64v","","",0,null],[11,"TexStorage2DMultisample","","",0,null],[11,"VertexAttrib4uiv","","",0,null],[11,"UniformMatrix4fv","","",0,null],[11,"GetNamedRenderbufferParameteriv","","",0,null],[11,"ProgramUniform2fv","","",0,null],[11,"GetnPixelMapfv","","",0,null],[11,"GetFramebufferParameteriv","","",0,null],[11,"ProgramUniformMatrix4x3dv","","",0,null],[11,"DispatchComputeIndirect","","",0,null],[11,"PopDebugGroup","","",0,null],[11,"GetActiveAtomicCounterBufferiv","","",0,null],[11,"GetBufferSubData","","",0,null],[11,"GetSamplerParameterIiv","","",0,null],[11,"ClearDepthf","","",0,null],[11,"DrawTransformFeedback","","",0,null],[11,"GetTextureLevelParameteriv","","",0,null],[11,"TextureParameterIiv","","",0,null],[11,"ReleaseShaderCompiler","","",0,null],[11,"CopyBufferSubData","","",0,null],[11,"DrawArraysInstancedBaseInstance","","",0,null],[11,"ClearNamedBufferData","","",0,null],[11,"VertexAttrib4Nsv","","",0,null],[11,"ClearTexSubImage","","",0,null],[11,"BindTexture","","",0,null],[11,"Uniform3uiv","","",0,null],[11,"GetnColorTable","","",0,null],[11,"ClearBufferfv","","",0,null],[11,"UniformMatrix2x4fv","","",0,null],[11,"GetVertexAttribfv","","",0,null],[11,"VertexAttrib3f","","",0,null],[11,"GenVertexArrays","","",0,null],[11,"GetUniformIndices","","",0,null],[11,"InvalidateSubFramebuffer","","",0,null],[11,"MultiDrawElementsIndirect","","",0,null],[11,"GenQueries","","",0,null],[11,"MinSampleShading","","",0,null],[11,"PointParameterfv","","",0,null],[11,"GetCompressedTexImage","","",0,null],[11,"VertexAttribI4uiv","","",0,null],[11,"DrawElementsIndirect","","",0,null],[11,"GetSubroutineUniformLocation","","",0,null],[11,"GenTextures","","",0,null],[11,"ProgramUniform2i","","",0,null],[11,"ColorMask","","",0,null],[11,"Flush","","",0,null],[11,"VertexAttribI3iv","","",0,null],[11,"GetActiveSubroutineUniformName","","",0,null],[11,"EnableVertexArrayAttrib","","",0,null],[11,"Uniform3d","","",0,null],[11,"DisableVertexAttribArray","","",0,null],[11,"TexCoordP1ui","","",0,null],[11,"TextureBufferRange","","",0,null]],"paths":[[3,"Gl"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Rc"],[3,"Weak"],[3,"EncodeUtf16"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"FnPtr"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["getopts"] = {"doc":"Simple getopt alternative.","items":[[3,"Options","getopts","A description of the options that a program can handle.",null,null],[3,"Matches","","The result of checking command line arguments. Contains a vector\nof matches and a vector of free strings.",null,null],[12,"free","","Free string fragments",0,null],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",null,null],[13,"FloatingFrees","","Flags and &quot;free&quot; arguments can be freely inter-mixed.",1,null],[13,"StopAtFirstFree","","As soon as a &quot;free&quot; argument (i.e. non-flag) is encountered, stop\nconsidering any remaining arguments as flags.",1,null],[4,"HasArg","","Describes whether an option has an argument.",null,null],[13,"Yes","","The option requires an argument.",2,null],[13,"No","","The option takes no argument.",2,null],[13,"Maybe","","The option argument is optional.",2,null],[4,"Occur","","Describes how often an option may occur.",null,null],[13,"Req","","The option occurs once.",3,null],[13,"Optional","","The option occurs at most once.",3,null],[13,"Multi","","The option occurs zero or more times.",3,null],[4,"Fail","","The type returned when the command line does not conform to the\nexpected format. Use the `Debug` implementation to output detailed\ninformation.",null,null],[13,"ArgumentMissing","","The option requires an argument but none was passed.",4,null],[13,"UnrecognizedOption","","The passed option is not declared among the possible options.",4,null],[13,"OptionMissing","","A required option is not present.",4,null],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",4,null],[13,"UnexpectedArgument","","There&#39;s an argument being passed to a non-argument option.",4,null],[4,"FailType","","The type of failure that occurred.",null,null],[13,"ArgumentMissing_","","",5,null],[13,"UnrecognizedOption_","","",5,null],[13,"OptionMissing_","","",5,null],[13,"OptionDuplicated_","","",5,null],[13,"UnexpectedArgument_","","",5,null],[6,"Result","","The result of parsing a command line with a set of options.",null,null],[11,"new","","Create a blank set of options.",6,{"inputs":[],"output":{"name":"options"}}],[11,"parsing_style","","Set the parsing style.",6,null],[11,"opt","","Create a generic option group, stating all parameters explicitly.",6,null],[11,"optflag","","Create a long option that is optional and does not take an argument.",6,null],[11,"optflagmulti","","Create a long option that can occur more than once and does not\ntake an argument.",6,null],[11,"optflagopt","","Create a long option that is optional and takes an optional argument.",6,null],[11,"optmulti","","Create a long option that is optional, takes an argument, and may occur\nmultiple times.",6,null],[11,"optopt","","Create a long option that is optional and takes an argument.",6,null],[11,"reqopt","","Create a long option that is required and takes an argument.",6,null],[11,"parse","","Parse command line arguments according to the provided options.",6,null],[11,"short_usage","","Derive a short one-line usage summary from a set of long options.",6,null],[11,"usage","","Derive a usage message from a set of options.",6,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"description","","",4,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"opt_present","","Returns true if an option was matched.",0,null],[11,"opt_count","","Returns the number of times an option was matched.",0,null],[11,"opts_present","","Returns true if any of several options were matched.",0,null],[11,"opts_str","","Returns the string argument supplied to one of several matching options or `None`.",0,null],[11,"opt_strs","","Returns a vector of the arguments provided to all matches of the given\noption.",0,null],[11,"opt_str","","Returns the string argument supplied to a matching option or `None`.",0,null],[11,"opt_default","","Returns the matching string, a default, or `None`.",0,null],[11,"fmt","","",4,null]],"paths":[[3,"Matches"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[4,"Fail"],[4,"FailType"],[3,"Options"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,null],[11,"store","","Do an atomic store with the given memory ordering.",0,null],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,null],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,null],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,null],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,null],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,null],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,null],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,null],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,null],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,null],[11,"drop","","",1,null],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,null],[11,"deref","","",2,null],[11,"deref_mut","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"deref","","",3,null],[11,"as_raw","","",3,null],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,null],[11,"swap","","",5,null],[11,"take","","",5,null],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,null],[11,"is_empty","","Check if this queue is empty.",6,null],[11,"try_pop","","Attempt to dequeue from the front.",6,null],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,null],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,null],[11,"pop","","Attempt to pop the top element of the stack.",7,null],[11,"is_empty","","Check if this queue is empty.",7,null],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,null],[11,"try_pop","","Attempt to dequeue from the front.",8,null],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"push","","Pushes data onto the front of this work queue.",10,null],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,null],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,null],[11,"clone","","",11,null],[11,"drop","crossbeam::sync","",12,null],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,null],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,null],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",13,null],[11,"spawn","","Create a scoped thread.",13,null],[11,"join","","Join the scoped thread, returning the result it produced.",14,null],[11,"thread","","Get the underlying thread handle.",14,null],[11,"drop","","",13,null]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["glfw_sys"] = {"doc":"","items":[],"paths":[]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[0,"isize","bitflags::__core","The pointer-sized signed integer type.",null,null],[17,"MIN","bitflags::__core::isize","",null,null],[17,"MAX","","",null,null],[0,"i8","bitflags::__core","The 8-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i8","",null,null],[17,"MAX","","",null,null],[0,"i16","bitflags::__core","The 16-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i16","",null,null],[17,"MAX","","",null,null],[0,"i32","bitflags::__core","The 32-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i32","",null,null],[17,"MAX","","",null,null],[0,"i64","bitflags::__core","The 64-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i64","",null,null],[17,"MAX","","",null,null],[0,"usize","bitflags::__core","The pointer-sized unsigned integer type.",null,null],[17,"MIN","bitflags::__core::usize","",null,null],[17,"MAX","","",null,null],[0,"u8","bitflags::__core","The 8-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u8","",null,null],[17,"MAX","","",null,null],[0,"u16","bitflags::__core","The 16-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u16","",null,null],[17,"MAX","","",null,null],[0,"u32","bitflags::__core","The 32-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u32","",null,null],[17,"MAX","","",null,null],[0,"u64","bitflags::__core","The 64-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u64","",null,null],[17,"MAX","","",null,null],[0,"f32","bitflags::__core","Operations and constants for 32-bits floats (`f32` type)",null,null],[17,"RADIX","bitflags::__core::f32","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN","","Smallest finite f32 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f32 value",null,null],[17,"MAX","","Largest finite f32 value",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f32::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"f64","bitflags::__core","Operations and constants for 64-bits floats (`f64` type)",null,null],[17,"RADIX","bitflags::__core::f64","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN","","Smallest finite f64 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f64 value",null,null],[17,"MAX","","Largest finite f64 value",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f64::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"num","bitflags::__core","Numeric traits and functions for the built-in numeric types.",null,null],[11,"hash","core::num","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"eq","core::num::dec2flt","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","core::num","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"hash","core::nonzero","",5,null],[11,"fmt","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",5,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",5,null],[11,"new","core::ptr","Creates a new `Unique`.",6,null],[11,"get","","Dereferences the content.",6,null],[11,"get_mut","","Mutably dereferences the content.",6,null],[11,"deref","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new `Shared`.",7,null],[11,"clone","","",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"hash","core::marker","",8,null],[11,"eq","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"contains","","# Examples",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","core::cmp","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"reverse","","Reverse the `Ordering`.",15,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"fmt","bitflags::__core","",16,null],[11,"fmt","","",16,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"is","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",16,null],[11,"hash","core::any","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",17,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",18,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `AtomicBool`.",18,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",18,null],[11,"store","","Stores a value into the bool.",18,null],[11,"swap","","Stores a value into the bool, returning the old value.",18,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",18,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",18,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",18,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",18,null],[11,"new","","Creates a new `AtomicPtr`.",19,null],[11,"load","","Loads a value from the pointer.",19,null],[11,"store","","Stores a value into the pointer.",19,null],[11,"swap","","Stores a value into the pointer, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"default","","",21,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",21,null],[11,"new","","Creates a new atomic integer.",21,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",21,null],[11,"store","","Stores a value into the atomic integer.",21,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",21,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"fetch_add","","Add to the current value, returning the previous value.",21,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",21,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",21,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",21,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,null],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"cmp","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,null],[11,"borrow_state","","Query the current state of this `RefCell`",33,null],[11,"borrow","","Immutably borrows the wrapped value.",33,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",33,null],[11,"clone","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"cmp","","",33,null],[11,"deref","","",34,null],[11,"clone","","Copies a `Ref`.",34,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",36,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",36,null],[11,"get","","Gets a mutable pointer to the wrapped value.",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"count","","",37,null],[11,"last","","",37,null],[11,"len","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"nth","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","core::iter::range","",41,null],[11,"clone","","",41,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",10,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",13,null],[11,"next","core::iter::range","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","core::ops","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"fmt","core::iter::sources","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"fmt","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"len","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"fmt","core::iter","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"count","","",48,null],[11,"nth","","",48,null],[11,"find","","",48,null],[11,"last","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","# Overflow Behavior",53,null],[11,"size_hint","","",53,null],[11,"nth","","",53,null],[11,"count","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",54,null],[11,"is_empty","","Checks if the iterator has finished iterating.",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"last","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"count","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"hash","core::option","",63,null],[11,"fmt","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"is_some","","Returns `true` if the option is a `Some` value",63,null],[11,"is_none","","Returns `true` if the option is a `None` value",63,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",63,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",63,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",63,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",63,null],[11,"unwrap_or","","Returns the contained value or a default.",63,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",63,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",63,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",63,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",63,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",63,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",63,null],[11,"iter","","Returns an iterator over the possibly contained value.",63,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",63,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",63,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",63,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",63,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",63,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",63,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",63,null],[11,"unwrap_or_default","","Returns the contained value or a default",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",63,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"hash","core::result","",68,null],[11,"fmt","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"is_ok","","Returns true if the result is `Ok`",68,null],[11,"is_err","","Returns true if the result is `Err`",68,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",68,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",68,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",68,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",68,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",68,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",68,null],[11,"iter","","Returns an iterator over the possibly contained value.",68,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",68,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",68,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",68,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",68,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",68,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",68,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",72,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"count","","",72,null],[11,"nth","","",72,null],[11,"last","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"count","","",80,null],[11,"nth","","",80,null],[11,"last","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","core::str::pattern","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"haystack","","",84,null],[11,"next","","",84,null],[11,"next_match","","",84,null],[11,"next_reject","","",84,null],[11,"next_back","","",84,null],[11,"next_match_back","","",84,null],[11,"next_reject_back","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"eq","core::str","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"as_str","","View the underlying data as a subslice of the original data.",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"count","","",92,null],[11,"last","","",92,null],[11,"nth","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"next_back","","",93,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"next_back","","",95,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"next_back","","",99,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"next_back","","",101,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"fmt","core::hash::sip","",106,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",106,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",106,null],[11,"finish","","",106,null],[11,"clone","","",106,null],[11,"default","","",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",107,null],[11,"build_hasher","","",107,null],[11,"clone","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",108,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",109,null],[11,"finish","","Finishes output and returns any error encountered.",109,null],[11,"field","","Adds a new field to the generated tuple struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"entry","","Adds a new entry to the set output.",111,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the list output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the map output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"partial_cmp","core::fmt","",114,null],[11,"eq","","",114,null],[11,"cmp","","",114,null],[11,"hash","","",114,null],[11,"default","","",114,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"fmt","","",115,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",116,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",116,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",116,null],[11,"write_fmt","","Writes some formatted information into this instance",116,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",116,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",116,null],[11,"align","","Flag indicating what form of alignment was requested",116,null],[11,"width","","Optionally specified integer width that the output should be",116,null],[11,"precision","","Optionally specified precision for numeric types",116,null],[11,"sign_plus","","Determines if the `+` flag was specified.",116,null],[11,"sign_minus","","Determines if the `-` flag was specified.",116,null],[11,"alternate","","Determines if the `#` flag was specified.",116,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",116,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",116,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",116,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",116,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",116,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",116,null],[11,"write_str","","",116,null],[11,"write_char","","",116,null],[11,"write_fmt","","",116,null],[11,"fmt","","",114,null],[11,"fmt","core::marker","",8,null],[11,"fmt","core::cell","",31,null],[11,"fmt","","",33,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[3,"Wrapping","bitflags::__core::num","Provides intentionally-wrapped arithmetic on `T`.",null,null],[12,"0","","",0,null],[11,"explicit_sig_bits","bitflags::__core::num::dec2flt::rawfp","The number of bits in the singificand, *excluding* the hidden bit.",117,{"inputs":[],"output":{"name":"u8"}}],[11,"max_exp","","The maximum legal exponent in fractional representation.",117,{"inputs":[],"output":{"name":"i16"}}],[11,"min_exp","","The minimum legal exponent in fractional representation, excluding subnormals.",117,{"inputs":[],"output":{"name":"i16"}}],[11,"max_exp_int","","`MAX_EXP` for integral representation, i.e., with the shift applied.",117,{"inputs":[],"output":{"name":"i16"}}],[11,"max_encoded_exp","","`MAX_EXP` encoded (i.e., with offset bias)",117,{"inputs":[],"output":{"name":"i16"}}],[11,"min_exp_int","","`MIN_EXP` for integral representation, i.e., with the shift applied.",117,{"inputs":[],"output":{"name":"i16"}}],[11,"max_sig","","The maximum normalized singificand in integral representation.",117,{"inputs":[],"output":{"name":"u64"}}],[11,"min_sig","","The minimal normalized significand in integral representation.",117,{"inputs":[],"output":{"name":"u64"}}],[8,"Zero","bitflags::__core::num","Types that have a &quot;zero&quot; value.",null,null],[10,"zero","","The &quot;zero&quot; (usually, additive identity) for this type.",118,{"inputs":[],"output":{"name":"self"}}],[8,"One","","Types that have a &quot;one&quot; value.",null,null],[10,"one","","The &quot;one&quot; (usually, multiplicative identity) for this type.",119,{"inputs":[],"output":{"name":"self"}}],[4,"FpCategory","","A classification of floating point numbers.",null,null],[13,"Nan","","&quot;Not a Number&quot;, often obtained by dividing by zero",2,null],[13,"Infinite","","Positive or negative infinity",2,null],[13,"Zero","","Positive or negative zero",2,null],[13,"Subnormal","","De-normalized floating point representation (less precise than `Normal`)",2,null],[13,"Normal","","A regular floating point number",2,null],[3,"TryFromIntError","","The error type returned when a checked integral type conversion fails.",null,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[3,"ParseFloatError","","An error which can be returned when parsing a float.",null,null],[0,"prelude","bitflags::__core","The libcore prelude",null,null],[0,"v1","bitflags::__core::prelude","The core prelude",null,null],[8,"Clone","bitflags::__core::prelude::v1","A common trait for the ability to explicitly duplicate an object.",null,null],[10,"clone","","Returns a copy of the value.",120,null],[11,"clone_from","","Performs copy-assignment from `source`.",120,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[8,"Default","","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",121,{"inputs":[],"output":{"name":"self"}}],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",122,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",123,null],[5,"drop","","Disposes of a value.",null,null],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",124,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",125,null],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",126,null],[10,"next","","Advances the iterator and returns the next value.",126,null],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",126,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",126,null],[11,"last","","Consumes the iterator, returning the last element.",126,null],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",126,null],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",126,null],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",126,null],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",126,null],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",126,null],[11,"filter_map","","Creates an iterator that both filters and maps.",126,null],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",126,null],[11,"peekable","","Creates an iterator which can use `peek` to look at the next element of\nthe iterator without consuming it.",126,null],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",126,null],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",126,null],[11,"skip","","Creates an iterator that skips the first `n` elements.",126,null],[11,"take","","Creates an iterator that yields its first `n` elements.",126,null],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",126,null],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",126,null],[11,"fuse","","Creates an iterator which ends after the first `None`.",126,null],[11,"inspect","","Do something with each element of an iterator, passing the value on.",126,null],[11,"by_ref","","Borrows an iterator, rather than consuming it.",126,null],[11,"collect","","Transforms an iterator into a collection.",126,null],[11,"partition","","Consumes an iterator, creating two collections from it.",126,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",126,null],[11,"all","","Tests if every element of the iterator matches a predicate.",126,null],[11,"any","","Tests if any element of the iterator matches a predicate.",126,null],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",126,null],[11,"position","","Searches for an element in an iterator, returning its index.",126,null],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",126,null],[11,"max","","Returns the maximum element of an iterator.",126,null],[11,"min","","Returns the minimum element of an iterator.",126,null],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",126,null],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",126,null],[11,"rev","","Reverses an iterator&#39;s direction.",126,null],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",126,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",126,null],[11,"cycle","","Repeats an iterator endlessly.",126,null],[11,"sum","","Sums the elements of an iterator.",126,null],[11,"product","","Iterates over the entire iterator, multiplying all the elements",126,null],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",126,null],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",126,null],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",126,null],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",126,null],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",126,null],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",126,null],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",126,null],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",126,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",127,null],[8,"Send","","Types that can be transferred across thread boundaries.",null,null],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",128,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",128,null],[10,"into_iter","","Creates an iterator from a value.",128,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[8,"AsRef","","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",129,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",130,null],[10,"call_once","","This is called when the call operator is used.",130,null],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",131,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",132,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",132,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",132,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",132,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",132,null],[8,"Copy","","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"Drop","","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",133,null],[4,"Result","","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",68,null],[13,"Err","","Contains the error value",68,null],[8,"SliceExt","","Extension methods for slices.",null,null],[16,"Item","","",134,null],[10,"split_at","","",134,null],[10,"iter","","",134,null],[10,"split","","",134,null],[10,"splitn","","",134,null],[10,"rsplitn","","",134,null],[10,"windows","","",134,null],[10,"chunks","","",134,null],[10,"get","","",134,null],[10,"first","","",134,null],[10,"split_first","","",134,null],[10,"split_last","","",134,null],[10,"last","","",134,null],[10,"get_unchecked","","",134,null],[10,"as_ptr","","",134,null],[10,"binary_search","","",134,null],[10,"binary_search_by","","",134,null],[10,"binary_search_by_key","","",134,null],[10,"len","","",134,null],[11,"is_empty","","",134,null],[10,"get_mut","","",134,null],[10,"iter_mut","","",134,null],[10,"first_mut","","",134,null],[10,"split_first_mut","","",134,null],[10,"split_last_mut","","",134,null],[10,"last_mut","","",134,null],[10,"split_mut","","",134,null],[10,"splitn_mut","","",134,null],[10,"rsplitn_mut","","",134,null],[10,"chunks_mut","","",134,null],[10,"swap","","",134,null],[10,"split_at_mut","","",134,null],[10,"reverse","","",134,null],[10,"get_unchecked_mut","","",134,null],[10,"as_mut_ptr","","",134,null],[10,"contains","","",134,null],[10,"starts_with","","",134,null],[10,"ends_with","","",134,null],[10,"clone_from_slice","","",134,null],[10,"copy_from_slice","","",134,null],[4,"Option","","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",63,null],[13,"Some","","Some value `T`",63,null],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",135,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",136,null],[8,"PartialEq","","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",137,null],[11,"ne","","This method tests for `!=`.",137,null],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",138,null],[0,"intrinsics","bitflags::__core","rustc compiler intrinsics.",null,null],[5,"atomic_cxchg","bitflags::__core::intrinsics","",null,null],[5,"atomic_cxchg_acq","","",null,null],[5,"atomic_cxchg_rel","","",null,null],[5,"atomic_cxchg_acqrel","","",null,null],[5,"atomic_cxchg_relaxed","","",null,null],[5,"atomic_cxchg_failrelaxed","","",null,null],[5,"atomic_cxchg_failacq","","",null,null],[5,"atomic_cxchg_acq_failrelaxed","","",null,null],[5,"atomic_cxchg_acqrel_failrelaxed","","",null,null],[5,"atomic_cxchgweak","","",null,null],[5,"atomic_cxchgweak_acq","","",null,null],[5,"atomic_cxchgweak_rel","","",null,null],[5,"atomic_cxchgweak_acqrel","","",null,null],[5,"atomic_cxchgweak_relaxed","","",null,null],[5,"atomic_cxchgweak_failrelaxed","","",null,null],[5,"atomic_cxchgweak_failacq","","",null,null],[5,"atomic_cxchgweak_acq_failrelaxed","","",null,null],[5,"atomic_cxchgweak_acqrel_failrelaxed","","",null,null],[5,"atomic_load","","",null,null],[5,"atomic_load_acq","","",null,null],[5,"atomic_load_relaxed","","",null,null],[5,"atomic_load_unordered","","",null,null],[5,"atomic_store","","",null,null],[5,"atomic_store_rel","","",null,null],[5,"atomic_store_relaxed","","",null,null],[5,"atomic_store_unordered","","",null,null],[5,"atomic_xchg","","",null,null],[5,"atomic_xchg_acq","","",null,null],[5,"atomic_xchg_rel","","",null,null],[5,"atomic_xchg_acqrel","","",null,null],[5,"atomic_xchg_relaxed","","",null,null],[5,"atomic_xadd","","",null,null],[5,"atomic_xadd_acq","","",null,null],[5,"atomic_xadd_rel","","",null,null],[5,"atomic_xadd_acqrel","","",null,null],[5,"atomic_xadd_relaxed","","",null,null],[5,"atomic_xsub","","",null,null],[5,"atomic_xsub_acq","","",null,null],[5,"atomic_xsub_rel","","",null,null],[5,"atomic_xsub_acqrel","","",null,null],[5,"atomic_xsub_relaxed","","",null,null],[5,"atomic_and","","",null,null],[5,"atomic_and_acq","","",null,null],[5,"atomic_and_rel","","",null,null],[5,"atomic_and_acqrel","","",null,null],[5,"atomic_and_relaxed","","",null,null],[5,"atomic_nand","","",null,null],[5,"atomic_nand_acq","","",null,null],[5,"atomic_nand_rel","","",null,null],[5,"atomic_nand_acqrel","","",null,null],[5,"atomic_nand_relaxed","","",null,null],[5,"atomic_or","","",null,null],[5,"atomic_or_acq","","",null,null],[5,"atomic_or_rel","","",null,null],[5,"atomic_or_acqrel","","",null,null],[5,"atomic_or_relaxed","","",null,null],[5,"atomic_xor","","",null,null],[5,"atomic_xor_acq","","",null,null],[5,"atomic_xor_rel","","",null,null],[5,"atomic_xor_acqrel","","",null,null],[5,"atomic_xor_relaxed","","",null,null],[5,"atomic_max","","",null,null],[5,"atomic_max_acq","","",null,null],[5,"atomic_max_rel","","",null,null],[5,"atomic_max_acqrel","","",null,null],[5,"atomic_max_relaxed","","",null,null],[5,"atomic_min","","",null,null],[5,"atomic_min_acq","","",null,null],[5,"atomic_min_rel","","",null,null],[5,"atomic_min_acqrel","","",null,null],[5,"atomic_min_relaxed","","",null,null],[5,"atomic_umin","","",null,null],[5,"atomic_umin_acq","","",null,null],[5,"atomic_umin_rel","","",null,null],[5,"atomic_umin_acqrel","","",null,null],[5,"atomic_umin_relaxed","","",null,null],[5,"atomic_umax","","",null,null],[5,"atomic_umax_acq","","",null,null],[5,"atomic_umax_rel","","",null,null],[5,"atomic_umax_acqrel","","",null,null],[5,"atomic_umax_relaxed","","",null,null],[5,"atomic_fence","","",null,null],[5,"atomic_fence_acq","","",null,null],[5,"atomic_fence_rel","","",null,null],[5,"atomic_fence_acqrel","","",null,null],[5,"atomic_singlethreadfence","","A compiler-only memory barrier.",null,null],[5,"atomic_singlethreadfence_acq","","",null,null],[5,"atomic_singlethreadfence_rel","","",null,null],[5,"atomic_singlethreadfence_acqrel","","",null,null],[5,"rustc_peek","","Magic intrinsic that derives its meaning from attributes\nattached to the function.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abort","","Aborts the execution of the process.",null,null],[5,"unreachable","","Tells LLVM that this point in the code is not reachable,\nenabling further optimizations.",null,null],[5,"assume","","Informs the optimizer that a condition is always true.\nIf the condition is false, the behavior is undefined.",null,null],[5,"breakpoint","","Executes a breakpoint trap, for inspection by a debugger.",null,null],[5,"size_of","","The size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"move_val_init","","Moves a value to an uninitialized memory location.",null,null],[5,"min_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"pref_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"type_name","","Gets a static string slice containing the name of a type.",null,{"inputs":[],"output":{"name":"str"}}],[5,"type_id","","Gets an identifier which is globally unique to the specified type. This\nfunction will return the same value for a type regardless of whichever\ncrate it is invoked in.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"init_dropped","","Creates a value initialized to so that its drop flag,\nif any, says that it has been dropped.",null,{"inputs":[],"output":{"name":"t"}}],[5,"init","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninit","","Creates an uninitialized value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"forget","","Moves a value out of scope without running drop glue.",null,null],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"return_address","","Gives the address for the return value of the enclosing function.",null,null],[5,"needs_drop","","Returns `true` if the actual type given as `T` requires drop\nglue; returns `false` if the actual type provided for `T`\nimplements `Copy`.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"offset","","Calculates the offset from a pointer.",null,null],[5,"arith_offset","","Calculates the offset from a pointer, potentially wrapping.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"volatile_copy_nonoverlapping_memory","","Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_copy_memory","","Equivalent to the appropriate `llvm.memmove.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_set_memory","","Equivalent to the appropriate `llvm.memset.p0i8.*` intrinsic, with a\nsize of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`.",null,null],[5,"volatile_load","","Perform a volatile load from the `src` pointer.",null,null],[5,"volatile_store","","Perform a volatile store to the `dst` pointer.",null,null],[5,"sqrtf32","","Returns the square root of an `f32`",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sqrtf64","","Returns the square root of an `f64`",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powif32","","Raises an `f32` to an integer power.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"powif64","","Raises an `f64` to an integer power.",null,{"inputs":[{"name":"f64"},{"name":"i32"}],"output":{"name":"f64"}}],[5,"sinf32","","Returns the sine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sinf64","","Returns the sine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"cosf32","","Returns the cosine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"cosf64","","Returns the cosine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powf32","","Raises an `f32` to an `f32` power.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"powf64","","Raises an `f64` to an `f64` power.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"expf32","","Returns the exponential of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"expf64","","Returns the exponential of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"exp2f32","","Returns 2 raised to the power of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"exp2f64","","Returns 2 raised to the power of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"logf32","","Returns the natural logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"logf64","","Returns the natural logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log10f32","","Returns the base 10 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log10f64","","Returns the base 10 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log2f32","","Returns the base 2 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log2f64","","Returns the base 2 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"fmaf32","","Returns `a * b + c` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"fmaf64","","Returns `a * b + c` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"fabsf32","","Returns the absolute value of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"fabsf64","","Returns the absolute value of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"copysignf32","","Copies the sign from `y` to `x` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"copysignf64","","Copies the sign from `y` to `x` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"floorf32","","Returns the largest integer less than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"floorf64","","Returns the largest integer less than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ceilf32","","Returns the smallest integer greater than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"ceilf64","","Returns the smallest integer greater than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"truncf32","","Returns the integer part of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"truncf64","","Returns the integer part of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"rintf32","","Returns the nearest integer to an `f32`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"rintf64","","Returns the nearest integer to an `f64`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"nearbyintf32","","Returns the nearest integer to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"nearbyintf64","","Returns the nearest integer to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"roundf32","","Returns the nearest integer to an `f32`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"roundf64","","Returns the nearest integer to an `f64`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"fadd_fast","","Float addition that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fsub_fast","","Float subtraction that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fmul_fast","","Float multiplication that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fdiv_fast","","Float division that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"frem_fast","","Float remainder that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"ctpop","","Returns the number of bits set in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"ctlz","","Returns the number of leading bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"cttz","","Returns the number of trailing bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"bswap","","Reverses the bytes in an integer type `T`.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"add_with_overflow","","Performs checked integer addition.",null,null],[5,"sub_with_overflow","","Performs checked integer subtraction",null,null],[5,"mul_with_overflow","","Performs checked integer multiplication",null,null],[5,"unchecked_div","","Performs an unchecked division, resulting in undefined behavior\nwhere y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"unchecked_rem","","Returns the remainder of an unchecked division, resulting in\nundefined behavior where y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_add","","Returns (a + b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_sub","","Returns (a - b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_mul","","Returns (a * b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"discriminant_value","","Returns the value of the discriminant for the variant in &#39;v&#39;,\ncast to a `u64`; if `T` has no discriminant, returns 0.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"try","","Rust&#39;s &quot;try catch&quot; construct which invokes the function pointer `f` with\nthe data pointer `data`.",null,null],[0,"mem","bitflags::__core","Basic functions for dealing with memory.",null,null],[5,"forget","bitflags::__core::mem","Leaks a value into the void, consuming ownership and never running its\ndestructor.",null,null],[5,"size_of","","Returns the size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","Returns the size of the given value in bytes.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type",null,{"inputs":[],"output":{"name":"usize"}}],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"align_of","","Returns the alignment in memory for a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"zeroed","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"dropped","","Creates a value initialized to an unspecified series of bytes.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninitialized","","Bypasses Rust&#39;s normal memory-initialization checks by pretending to\nproduce a value of type T, while doing nothing at all.",null,{"inputs":[],"output":{"name":"t"}}],[5,"swap","","Swap the values at two mutable locations of the same type, without deinitializing or copying\neither one.",null,null],[5,"replace","","Replaces the value at a mutable location with a new one, returning the old value, without\ndeinitializing or copying either one.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"drop","","Disposes of a value.",null,null],[17,"POST_DROP_U8","","",null,null],[17,"POST_DROP_U16","","",null,null],[17,"POST_DROP_U32","","",null,null],[17,"POST_DROP_U64","","",null,null],[17,"POST_DROP_USIZE","","",null,null],[5,"transmute_copy","","Interprets `src` as `&amp;U`, and then reads `src` without moving the contained\nvalue.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"nonzero","bitflags::__core","Exposes the NonZero lang item which provides optimization hints.",null,null],[8,"Zeroable","bitflags::__core::nonzero","Unsafe trait to indicate what types are usable with the NonZero struct",null,null],[3,"NonZero","","A wrapper type for raw pointers and integers that will never be\nNULL or 0 that might allow certain optimizations.",null,null],[0,"ptr","bitflags::__core","Raw, unsafe pointers, `*const T`, and `*mut T`.",null,null],[5,"null","bitflags::__core::ptr","Creates a null raw pointer.",null,null],[5,"null_mut","","Creates a null mutable raw pointer.",null,null],[5,"swap","","Swaps the values at two mutable locations of the same type, without\ndeinitializing either. They may overlap, unlike `mem::swap` which is\notherwise equivalent.",null,null],[5,"replace","","Replaces the value at `dest` with `src`, returning the old\nvalue, without dropping either.",null,null],[5,"read","","Reads the value from `src` without moving it. This leaves the\nmemory in `src` unchanged.",null,null],[5,"read_and_drop","","",null,null],[5,"write","","Overwrites a memory location with the given value without reading or\ndropping the old value.",null,null],[5,"read_volatile","","Performs a volatile read of the value from `src` without moving it. This\nleaves the memory in `src` unchanged.",null,null],[5,"write_volatile","","Performs a volatile write of a memory location with the given value without\nreading or dropping the old value.",null,null],[3,"Unique","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper owns the referent. This in turn implies that the\n`Unique&lt;T&gt;` is `Send`/`Sync` if `T` is `Send`/`Sync`, unlike a raw\n`*mut T` (which conveys no particular ownership semantics).  It\nalso implies that the referent of the pointer should not be\nmodified without a unique path to the `Unique` reference. Useful\nfor building abstractions like `Vec&lt;T&gt;` or `Box&lt;T&gt;`, which\ninternally use raw pointers to manage the memory that they own.",null,null],[3,"Shared","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper has shared ownership of the referent. Useful for\nbuilding abstractions like `Rc&lt;T&gt;` or `Arc&lt;T&gt;`, which internally\nuse raw pointers to manage the memory that they own.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[0,"marker","bitflags::__core","Primitive traits and marker types representing basic &#39;kinds&#39; of types.",null,null],[8,"Send","bitflags::__core::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"Unsize","","Types that can be &quot;unsized&quot; to a dynamically sized type.",null,null],[8,"Copy","","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[3,"PhantomData","","`PhantomData&lt;T&gt;` allows you to describe that a type acts as if it stores a value of type `T`,\neven though it does not. This allows you to inform the compiler about certain safety properties\nof your code.",null,null],[8,"Reflect","","Types that can be reflected over.",null,null],[0,"ops","bitflags::__core","Overloadable operators.",null,null],[8,"Drop","bitflags::__core::ops","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",133,null],[8,"Add","","The `Add` trait is used to specify the functionality of `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator",139,null],[10,"add","","The method for the `+` operator",139,null],[8,"Sub","","The `Sub` trait is used to specify the functionality of `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",140,null],[10,"sub","","The method for the `-` operator",140,null],[8,"Mul","","The `Mul` trait is used to specify the functionality of `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator",141,null],[10,"mul","","The method for the `*` operator",141,null],[8,"Div","","The `Div` trait is used to specify the functionality of `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator",142,null],[10,"div","","The method for the `/` operator",142,null],[8,"Rem","","The `Rem` trait is used to specify the functionality of `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator",143,null],[10,"rem","","The method for the `%` operator",143,null],[8,"Neg","","The `Neg` trait is used to specify the functionality of unary `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",144,null],[10,"neg","","The method for the unary `-` operator",144,null],[8,"Not","","The `Not` trait is used to specify the functionality of unary `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator",145,null],[10,"not","","The method for the unary `!` operator",145,null],[8,"BitAnd","","The `BitAnd` trait is used to specify the functionality of `&amp;`.",null,null],[16,"Output","","The resulting type after applying the `&amp;` operator",146,null],[10,"bitand","","The method for the `&amp;` operator",146,null],[8,"BitOr","","The `BitOr` trait is used to specify the functionality of `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator",147,null],[10,"bitor","","The method for the `|` operator",147,null],[8,"BitXor","","The `BitXor` trait is used to specify the functionality of `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator",148,null],[10,"bitxor","","The method for the `^` operator",148,null],[8,"Shl","","The `Shl` trait is used to specify the functionality of `&lt;&lt;`.",null,null],[16,"Output","","The resulting type after applying the `&lt;&lt;` operator",149,null],[10,"shl","","The method for the `&lt;&lt;` operator",149,null],[8,"Shr","","The `Shr` trait is used to specify the functionality of `&gt;&gt;`.",null,null],[16,"Output","","The resulting type after applying the `&gt;&gt;` operator",150,null],[10,"shr","","The method for the `&gt;&gt;` operator",150,null],[8,"AddAssign","","The `AddAssign` trait is used to specify the functionality of `+=`.",null,null],[10,"add_assign","","The method for the `+=` operator",151,null],[8,"SubAssign","","The `SubAssign` trait is used to specify the functionality of `-=`.",null,null],[10,"sub_assign","","The method for the `-=` operator",152,null],[8,"MulAssign","","The `MulAssign` trait is used to specify the functionality of `*=`.",null,null],[10,"mul_assign","","The method for the `*=` operator",153,null],[8,"DivAssign","","The `DivAssign` trait is used to specify the functionality of `/=`.",null,null],[10,"div_assign","","The method for the `/=` operator",154,null],[8,"RemAssign","","The `RemAssign` trait is used to specify the functionality of `%=`.",null,null],[10,"rem_assign","","The method for the `%=` operator",155,null],[8,"BitAndAssign","","The `BitAndAssign` trait is used to specify the functionality of `&amp;=`.",null,null],[10,"bitand_assign","","The method for the `&amp;` operator",156,null],[8,"BitOrAssign","","The `BitOrAssign` trait is used to specify the functionality of `|=`.",null,null],[10,"bitor_assign","","The method for the `|=` operator",157,null],[8,"BitXorAssign","","The `BitXorAssign` trait is used to specify the functionality of `^=`.",null,null],[10,"bitxor_assign","","The method for the `^=` operator",158,null],[8,"ShlAssign","","The `ShlAssign` trait is used to specify the functionality of `&lt;&lt;=`.",null,null],[10,"shl_assign","","The method for the `&lt;&lt;=` operator",159,null],[8,"ShrAssign","","The `ShrAssign` trait is used to specify the functionality of `&gt;&gt;=`.",null,null],[10,"shr_assign","","The method for the `&gt;&gt;=` operator",160,null],[8,"Index","","The `Index` trait is used to specify the functionality of indexing operations\nlike `arr[idx]` when used in an immutable context.",null,null],[16,"Output","","The returned type after indexing",161,null],[10,"index","","The method for the indexing (`Foo[Bar]`) operation",161,null],[8,"IndexMut","","The `IndexMut` trait is used to specify the functionality of indexing\noperations like `arr[idx]`, when used in a mutable context.",null,null],[10,"index_mut","","The method for the indexing (`Foo[Bar]`) operation",162,null],[3,"RangeFull","","An unbounded range. Use `..` (two dots) for its shorthand.",null,null],[3,"Range","","A (half-open) range which is bounded at both ends: { x | start &lt;= x &lt; end }.\nUse `start..end` (two dots) for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",10,null],[12,"end","","The upper bound of the range (exclusive).",10,null],[3,"RangeFrom","","A range which is only bounded below: { x | start &lt;= x }.\nUse `start..` for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",11,null],[3,"RangeTo","","A range which is only bounded above: { x | x &lt; end }.\nUse `..end` (two dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (exclusive).",12,null],[4,"RangeInclusive","","An inclusive range which is bounded at both ends: { x | start &lt;= x &lt;= end }.\nUse `start...end` (three dots) for its shorthand.",null,null],[13,"Empty","","Empty range (iteration has finished)",13,null],[12,"at","bitflags::__core::ops::RangeInclusive","",13,null],[13,"NonEmpty","bitflags::__core::ops","Non-empty range (iteration will yield value(s))",13,null],[12,"start","bitflags::__core::ops::RangeInclusive","",13,null],[12,"end","","",13,null],[3,"RangeToInclusive","bitflags::__core::ops","An inclusive range which is only bounded above: { x | x &lt;= end }.\nUse `...end` (three dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (inclusive)",14,null],[8,"Deref","","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",163,null],[10,"deref","","The method called to dereference a value",163,null],[8,"DerefMut","","The `DerefMut` trait is used to specify the functionality of dereferencing\nmutably like `*v = 1;`",null,null],[10,"deref_mut","","The method called to mutably dereference a value",164,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",127,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",123,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",130,null],[10,"call_once","","This is called when the call operator is used.",130,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper for one,\nwhere unsizing can be performed on the pointee.",null,null],[8,"Place","","Both `in (PLACE) EXPR` and `box EXPR` desugar into expressions\nthat allocate an intermediate &quot;place&quot; that holds uninitialized\nstate.  The desugaring evaluates EXPR, and writes the result at\nthe address returned by the `pointer` method of this trait.",null,null],[10,"pointer","","Returns the address where the input value will be written.\nNote that the data at this address is generally uninitialized,\nand thus one should use `ptr::write` for initializing it.",165,null],[8,"Placer","","Interface to implementations of  `in (PLACE) EXPR`.",null,null],[16,"Place","","`Place` is the intermedate agent guarding the\nuninitialized state for `Data`.",166,null],[10,"make_place","","Creates a fresh place from `self`.",166,null],[8,"InPlace","","Specialization of `Place` trait supporting `in (PLACE) EXPR`.",null,null],[16,"Owner","","`Owner` is the type of the end value of `in (PLACE) EXPR`",167,null],[10,"finalize","","Converts self into the final value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nthe returned instance of `Owner` and forgetting self.",167,null],[8,"Boxed","","Core trait for the `box EXPR` form.",null,null],[16,"Data","","The kind of data that is stored in this kind of box.",168,null],[16,"Place","","The place that will negotiate the storage of the data.",168,null],[10,"finalize","","Converts filled place into final owning value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nreturned instance of `Self` and forgetting `filled`.",168,null],[8,"BoxPlace","","Specialization of `Place` trait supporting `box EXPR`.",null,null],[10,"make_place","","Creates a globally fresh place.",169,{"inputs":[],"output":{"name":"self"}}],[0,"cmp","bitflags::__core","Functionality for ordering and comparison.",null,null],[8,"PartialEq","bitflags::__core::cmp","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",137,null],[11,"ne","","This method tests for `!=`.",137,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two values.",null,null],[13,"Less","","An ordering where a compared value is less [than another].",15,null],[13,"Equal","","An ordering where a compared value is equal [to another].",15,null],[13,"Greater","","An ordering where a compared value is greater [than another].",15,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",125,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",132,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",132,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",132,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",132,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",132,null],[5,"min","","Compare and return the minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Compare and return the maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"clone","bitflags::__core","The `Clone` trait for types that cannot be &#39;implicitly copied&#39;.",null,null],[8,"Clone","bitflags::__core::clone","A common trait for the ability to explicitly duplicate an object.",null,null],[10,"clone","","Returns a copy of the value.",120,null],[11,"clone_from","","Performs copy-assignment from `source`.",120,null],[0,"default","bitflags::__core","The `Default` trait for types which may have meaningful default values.",null,null],[8,"Default","bitflags::__core::default","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",121,{"inputs":[],"output":{"name":"self"}}],[0,"convert","bitflags::__core","Traits for conversions between types.",null,null],[8,"AsRef","bitflags::__core::convert","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",129,null],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",131,null],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",138,null],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",135,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"TryInto","","An attempted conversion that consumes `self`, which may or may not be expensive.",null,null],[16,"Err","","The type returned in the event of a conversion error.",170,null],[10,"try_into","","Performs the conversion.",170,null],[8,"TryFrom","","Attempt to construct `Self` via a conversion.",null,null],[16,"Err","","The type returned in the event of a conversion error.",171,null],[10,"try_from","","Performs the conversion.",171,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[0,"borrow","bitflags::__core","A module for working with borrowed data.",null,null],[8,"Borrow","bitflags::__core::borrow","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",172,null],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",173,null],[0,"any","bitflags::__core","This module implements the `Any` trait, which enables dynamic typing\nof any `&#39;static` type through runtime reflection.",null,null],[8,"Any","bitflags::__core::any","A type to emulate dynamic typing.",null,null],[10,"get_type_id","","Gets the `TypeId` of `self`.",16,null],[3,"TypeId","","A `TypeId` represents a globally unique identifier for a type.",null,null],[0,"array","bitflags::__core","Implementations of things like `Eq` for fixed-length arrays\nup to a certain length. Eventually we should able to generalize\nto all lengths.",null,null],[8,"FixedSizeArray","bitflags::__core::array","Utility trait implemented only on arrays of fixed size",null,null],[10,"as_slice","","Converts the array to immutable slice",174,null],[10,"as_mut_slice","","Converts the array to mutable slice",174,null],[0,"sync","bitflags::__core","Synchronization primitives",null,null],[0,"atomic","bitflags::__core::sync","Atomic types",null,null],[3,"AtomicBool","bitflags::__core::sync::atomic","A boolean type which can be safely shared between threads.",null,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between threads.",null,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations. Corresponds to LLVM&#39;s\n`Monotonic` ordering.",20,null],[13,"Release","","When coupled with a store, all previous writes become visible\nto the other threads that perform a load with `Acquire` ordering\non the same value.",20,null],[13,"Acquire","","When coupled with a load, all subsequent loads will see data\nwritten before a store with `Release` ordering on the same value\nin other threads.",20,null],[13,"AcqRel","","When coupled with a load, uses `Acquire` ordering, and with a store\n`Release` ordering.",20,null],[13,"SeqCst","","Like `AcqRel` with the additional guarantee that all threads see all\nsequentially consistent operations in the same order.",20,null],[17,"ATOMIC_BOOL_INIT","","An `AtomicBool` initialized to `false`.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,null],[0,"cell","bitflags::__core","Shareable mutable containers.",null,null],[3,"Cell","bitflags::__core::cell","A mutable memory location that admits only `Copy` data.",null,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow rules",null,null],[4,"BorrowState","","An enumeration of values returned from the `state` method on a `RefCell&lt;T&gt;`.",null,null],[13,"Reading","","The cell is currently being read, there is at least one active `borrow`.",32,null],[13,"Writing","","The cell is currently being written to, there is an active `borrow_mut`.",32,null],[13,"Unused","","There are no outstanding borrows on this cell.",32,null],[3,"Ref","","Wraps a borrowed reference to a value in a `RefCell` box.\nA wrapper type for an immutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[0,"char","bitflags::__core","Character manipulation.",null,null],[17,"MAX","bitflags::__core::char","The highest valid code point a `char` can have.",null,null],[5,"from_u32","","Converts a `u32` to a `char`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[5,"from_u32_unchecked","","Converts a `u32` to a `char`, ignoring validity.",null,{"inputs":[{"name":"u32"}],"output":{"name":"char"}}],[5,"from_digit","","Converts a digit in the given radix to a `char`.",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[3,"EscapeUnicode","","Returns an iterator that yields the hexadecimal Unicode escape of a\ncharacter, as `char`s.",null,null],[3,"EscapeDefault","","An iterator that yields the literal escape code of a `char`.",null,null],[3,"EncodeUtf8","","An iterator over `u8` entries represending the UTF-8 encoding of a `char`\nvalue.",null,null],[3,"EncodeUtf16","","An iterator over `u16` entries represending the UTF-16 encoding of a `char`\nvalue.",null,null],[0,"panicking","bitflags::__core","Panic support for libcore",null,null],[5,"panic","bitflags::__core::panicking","",null,null],[5,"panic_fmt","","",null,null],[0,"iter","bitflags::__core","Composable external iteration.",null,null],[3,"Rev","bitflags::__core::iter","An double-ended iterator with the direction inverted.",null,null],[3,"Cloned","","An iterator that clones the elements of an underlying iterator.",null,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[3,"Chain","","An iterator that strings two iterators together.",null,null],[3,"Zip","","An iterator that iterates two other iterators simultaneously.",null,null],[3,"Map","","An iterator that maps the values of `iter` with `f`.",null,null],[3,"Filter","","An iterator that filters the elements of `iter` with `predicate`.",null,null],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements from `iter`.",null,null],[3,"Enumerate","","An iterator that yields the current count and the element during iteration.",null,null],[3,"Peekable","","An iterator with a `peek()` that returns an optional reference to the next\nelement.",null,null],[3,"SkipWhile","","An iterator that rejects elements while `predicate` is true.",null,null],[3,"TakeWhile","","An iterator that only accepts elements while `predicate` is true.",null,null],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",null,null],[3,"Take","","An iterator that only iterates over the first `n` iterations of `iter`.",null,null],[3,"Scan","","An iterator to maintain state while iterating another iterator.",null,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and yields the elements\nof the produced iterators.",null,null],[3,"Fuse","","An iterator that yields `None` forever after the underlying iterator\nyields `None` once.",null,null],[3,"Inspect","","An iterator that calls a function with a reference to each element before\nyielding it.",null,null],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",122,null],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",124,null],[8,"Step","","Objects that can be stepped over in both directions.",null,null],[10,"step","","Steps `self` if possible.",175,null],[10,"steps_between","","Returns the number of steps between two step objects. The count is\ninclusive of `start` and exclusive of `end`.",175,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[3,"StepBy","","An adapter for stepping range iterators by a custom amount.",null,null],[8,"FromIterator","","Conversion from an `Iterator`.",null,null],[10,"from_iter","","Creates a value from an iterator.",176,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[5,"repeat","","Creates a new iterator that endlessly repeats a single element.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"once","","Creates an iterator that yields an element exactly once.",null,{"inputs":[{"name":"t"}],"output":{"name":"once"}}],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",126,null],[10,"next","","Advances the iterator and returns the next value.",126,null],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",126,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",126,null],[11,"last","","Consumes the iterator, returning the last element.",126,null],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",126,null],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",126,null],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",126,null],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",126,null],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",126,null],[11,"filter_map","","Creates an iterator that both filters and maps.",126,null],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",126,null],[11,"peekable","","Creates an iterator which can use `peek` to look at the next element of\nthe iterator without consuming it.",126,null],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",126,null],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",126,null],[11,"skip","","Creates an iterator that skips the first `n` elements.",126,null],[11,"take","","Creates an iterator that yields its first `n` elements.",126,null],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",126,null],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",126,null],[11,"fuse","","Creates an iterator which ends after the first `None`.",126,null],[11,"inspect","","Do something with each element of an iterator, passing the value on.",126,null],[11,"by_ref","","Borrows an iterator, rather than consuming it.",126,null],[11,"collect","","Transforms an iterator into a collection.",126,null],[11,"partition","","Consumes an iterator, creating two collections from it.",126,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",126,null],[11,"all","","Tests if every element of the iterator matches a predicate.",126,null],[11,"any","","Tests if any element of the iterator matches a predicate.",126,null],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",126,null],[11,"position","","Searches for an element in an iterator, returning its index.",126,null],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",126,null],[11,"max","","Returns the maximum element of an iterator.",126,null],[11,"min","","Returns the minimum element of an iterator.",126,null],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",126,null],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",126,null],[11,"rev","","Reverses an iterator&#39;s direction.",126,null],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",126,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",126,null],[11,"cycle","","Repeats an iterator endlessly.",126,null],[11,"sum","","Sums the elements of an iterator.",126,null],[11,"product","","Iterates over the entire iterator, multiplying all the elements",126,null],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",126,null],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",126,null],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",126,null],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",126,null],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",126,null],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",126,null],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",126,null],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",126,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",136,null],[3,"Once","","An iterator that yields an element exactly once.",null,null],[3,"Empty","","An iterator that yields nothing.",null,null],[5,"empty","","Creates an iterator that yields nothing.",null,{"inputs":[],"output":{"name":"empty"}}],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",128,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",128,null],[10,"into_iter","","Creates an iterator from a value.",128,null],[0,"option","bitflags::__core","Optional values.",null,null],[4,"Option","bitflags::__core::option","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",63,null],[13,"Some","","Some value `T`",63,null],[3,"Iter","","An iterator over a reference of the contained item in an Option.",null,null],[3,"IterMut","","An iterator over a mutable reference of the contained item in an Option.",null,null],[3,"IntoIter","","An iterator over the item contained inside an Option.",null,null],[0,"raw","bitflags::__core","Contains struct definitions for the layout of compiler built-in types.",null,null],[3,"TraitObject","bitflags::__core::raw","The representation of a trait object like `&amp;SomeTrait`.",null,null],[12,"data","","",67,null],[12,"vtable","","",67,null],[0,"result","bitflags::__core","Error handling with the `Result` type.",null,null],[4,"Result","bitflags::__core::result","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",68,null],[13,"Err","","Contains the error value",68,null],[3,"Iter","","An iterator over a reference to the `Ok` variant of a `Result`.",null,null],[3,"IterMut","","An iterator over a mutable reference to the `Ok` variant of a `Result`.",null,null],[3,"IntoIter","","An iterator over the value in a `Ok` variant of a `Result`.",null,null],[0,"slice","bitflags::__core","Slice management and manipulation",null,null],[8,"SliceExt","bitflags::__core::slice","Extension methods for slices.",null,null],[16,"Item","","",134,null],[10,"split_at","","",134,null],[10,"iter","","",134,null],[10,"split","","",134,null],[10,"splitn","","",134,null],[10,"rsplitn","","",134,null],[10,"windows","","",134,null],[10,"chunks","","",134,null],[10,"get","","",134,null],[10,"first","","",134,null],[10,"split_first","","",134,null],[10,"split_last","","",134,null],[10,"last","","",134,null],[10,"get_unchecked","","",134,null],[10,"as_ptr","","",134,null],[10,"binary_search","","",134,null],[10,"binary_search_by","","",134,null],[10,"binary_search_by_key","","",134,null],[10,"len","","",134,null],[11,"is_empty","","",134,null],[10,"get_mut","","",134,null],[10,"iter_mut","","",134,null],[10,"first_mut","","",134,null],[10,"split_first_mut","","",134,null],[10,"split_last_mut","","",134,null],[10,"last_mut","","",134,null],[10,"split_mut","","",134,null],[10,"splitn_mut","","",134,null],[10,"rsplitn_mut","","",134,null],[10,"chunks_mut","","",134,null],[10,"swap","","",134,null],[10,"split_at_mut","","",134,null],[10,"reverse","","",134,null],[10,"get_unchecked_mut","","",134,null],[10,"as_mut_ptr","","",134,null],[10,"contains","","",134,null],[10,"starts_with","","",134,null],[10,"ends_with","","",134,null],[10,"clone_from_slice","","",134,null],[10,"copy_from_slice","","",134,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"Split","","An iterator over subslices separated by elements that match a predicate\nfunction.",null,null],[3,"SplitMut","","An iterator over the subslices of the vector which are separated\nby elements that match `pred`.",null,null],[3,"SplitN","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"SplitNMut","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (`size` elements at a\ntime).",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable chunks (`size`\nelements at a time). When the slice len is not evenly divided by the chunk\nsize, the last slice of the iteration will be the remainder.",null,null],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,null],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`, except that a mutable\nslice is returned.",null,null],[0,"str","bitflags::__core","String manipulation",null,null],[0,"pattern","bitflags::__core::str","The string Pattern API.",null,null],[8,"Pattern","bitflags::__core::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",177,null],[10,"into_searcher","","Constructs the associated searcher from\n`self` and the `haystack` to search in.",177,null],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",177,null],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the haystack",177,null],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the haystack",177,null],[4,"SearchStep","","Result of calling `Searcher::next()` or `ReverseSearcher::next_back()`.",null,null],[13,"Match","","Expresses that a match of the pattern has been found at\n`haystack[a..b]`.",83,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a possible match\nof the pattern.",83,null],[13,"Done","","Expresses that every byte of the haystack has been visted, ending\nthe iteration.",83,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlaying string to be searched in",178,null],[10,"next","","Performs the next search step starting from the front.",178,null],[11,"next_match","","Find the next `Match` result. See `next()`",178,null],[11,"next_reject","","Find the next `Reject` result. See `next()`",178,null],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",179,null],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",179,null],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",179,null],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher`\ncan be used for a `DoubleEndedIterator` implementation.",null,null],[3,"CharSearcher","","Associated type for `&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[8,"FromStr","bitflags::__core::str","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",180,null],[10,"from_str","","Parses a string `s` to return a value of this type.",180,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[3,"ParseBoolError","","An error returned when parsing a `bool` from a string fails.",null,null],[3,"Utf8Error","","Errors which can occur when attempting to interpret a sequence of `u8`\nas a string.",null,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without checking\nthat the string contains valid UTF-8.",null,null],[3,"Chars","","Iterator for the char (representing *Unicode Scalar Values*) of a string",null,null],[5,"next_code_point","","Reads the next code point out of a byte iterator (assuming a\nUTF-8-like encoding).",null,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[3,"CharIndices","","Iterator for a string&#39;s characters and their byte offsets.",null,null],[3,"Bytes","","External iterator for a string&#39;s bytes.\nUse with the `std::iter` module.",null,null],[3,"Split","","Created with the method [`split()`].",null,null],[3,"RSplit","","Created with the method [`rsplit()`].",null,null],[3,"SplitTerminator","","Created with the method [`split_terminator()`].",null,null],[3,"RSplitTerminator","","Created with the method [`rsplit_terminator()`].",null,null],[3,"SplitN","","Created with the method [`splitn()`].",null,null],[3,"RSplitN","","Created with the method [`rsplitn()`].",null,null],[3,"MatchIndices","","Created with the method [`match_indices()`].",null,null],[3,"RMatchIndices","","Created with the method [`rmatch_indices()`].",null,null],[3,"Matches","","Created with the method [`matches()`].",null,null],[3,"RMatches","","Created with the method [`rmatches()`].",null,null],[3,"Lines","","Created with the method [`lines()`].",null,null],[3,"LinesAny","","Created with the method [`lines_any()`].",null,null],[3,"CharRange","","Struct that contains a `char` and the index of the first byte of\nthe next `char` in a string.  This can be used as a data structure\nfor iterating over the UTF-8 bytes of a string.",null,null],[12,"ch","","Current `char`",105,null],[12,"next","","Index of the first byte of the next `char`",105,null],[0,"hash","bitflags::__core","Generic hashing support.",null,null],[8,"Hash","bitflags::__core::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the state given, updating the hasher as necessary.",181,null],[11,"hash_slice","","Feeds a slice of this type into the state provided.",181,null],[8,"Hasher","","A trait which represents the ability to hash an arbitrary stream of bytes.",null,null],[10,"finish","","Completes a round of hashing, producing the output hash generated.",182,null],[10,"write","","Writes some data into this `Hasher`",182,null],[11,"write_u8","","Write a single `u8` into this hasher",182,null],[11,"write_u16","","Write a single `u16` into this hasher.",182,null],[11,"write_u32","","Write a single `u32` into this hasher.",182,null],[11,"write_u64","","Write a single `u64` into this hasher.",182,null],[11,"write_usize","","Write a single `usize` into this hasher.",182,null],[11,"write_i8","","Write a single `i8` into this hasher.",182,null],[11,"write_i16","","Write a single `i16` into this hasher.",182,null],[11,"write_i32","","Write a single `i32` into this hasher.",182,null],[11,"write_i64","","Write a single `i64` into this hasher.",182,null],[11,"write_isize","","Write a single `isize` into this hasher.",182,null],[8,"BuildHasher","","A `BuildHasher` is typically used as a factory for instances of `Hasher`\nwhich a `HashMap` can then use to hash keys independently.",null,null],[16,"Hasher","","Type of the hasher that will be created.",183,null],[10,"build_hasher","","Creates a new hasher.",183,null],[3,"BuildHasherDefault","","A structure which implements `BuildHasher` for all `Hasher` types which also\nimplement `Default`.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[0,"fmt","bitflags::__core","Utilities for formatting and printing strings.",null,null],[4,"Alignment","bitflags::__core::fmt","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",108,null],[13,"Right","","Indication that contents should be right-aligned.",108,null],[13,"Center","","Indication that contents should be center-aligned.",108,null],[13,"Unknown","","No alignment was requested.",108,null],[6,"Result","","",null,null],[3,"Error","","The error type which is returned from formatting a message into a stream.",null,null],[8,"Write","","A collection of methods that are required to format a message into a stream.",null,null],[10,"write_str","","Writes a slice of bytes into this writer, returning whether the write\nsucceeded.",184,null],[11,"write_char","","Writes a `char` into this writer, returning whether the write succeeded.",184,null],[11,"write_fmt","","Glue for usage of the `write!` macro with implementors of this trait.",184,null],[3,"Formatter","","A struct to represent both where to emit formatting strings to and how they\nshould be formatted. A mutable version of this is passed to all formatting\ntraits.",null,null],[3,"Arguments","","This structure represents a safely precompiled version of a format string\nand its arguments. This cannot be generated at runtime because it cannot\nsafely be done so, so no constructors are given and the fields are private\nto prevent modification.",null,null],[8,"Debug","","Format trait for the `?` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",185,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",186,null],[8,"Octal","","Format trait for the `o` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",187,null],[8,"Binary","","Format trait for the `b` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",188,null],[8,"LowerHex","","Format trait for the `x` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",189,null],[8,"UpperHex","","Format trait for the `X` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",190,null],[8,"Pointer","","Format trait for the `p` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",191,null],[8,"LowerExp","","Format trait for the `e` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",192,null],[8,"UpperExp","","Format trait for the `E` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",193,null],[5,"write","","The `write` function takes an output stream, a precompiled format string,\nand a list of arguments. The arguments will be formatted according to the\nspecified format string into the output stream provided.",null,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"RawFloat"],[8,"Zero"],[8,"One"],[8,"Clone"],[8,"Default"],[8,"ExactSizeIterator"],[8,"FnMut"],[8,"Extend"],[8,"Ord"],[8,"Iterator"],[8,"Fn"],[8,"IntoIterator"],[8,"AsRef"],[8,"FnOnce"],[8,"AsMut"],[8,"PartialOrd"],[8,"Drop"],[8,"SliceExt"],[8,"From"],[8,"DoubleEndedIterator"],[8,"PartialEq"],[8,"Into"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,"AddAssign"],[8,"SubAssign"],[8,"MulAssign"],[8,"DivAssign"],[8,"RemAssign"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Index"],[8,"IndexMut"],[8,"Deref"],[8,"DerefMut"],[8,"Place"],[8,"Placer"],[8,"InPlace"],[8,"Boxed"],[8,"BoxPlace"],[8,"TryInto"],[8,"TryFrom"],[8,"Borrow"],[8,"BorrowMut"],[8,"FixedSizeArray"],[8,"Step"],[8,"FromIterator"],[8,"Pattern"],[8,"Searcher"],[8,"ReverseSearcher"],[8,"FromStr"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[8,"Write"],[8,"Debug"],[8,"Display"],[8,"Octal"],[8,"Binary"],[8,"LowerHex"],[8,"UpperHex"],[8,"Pointer"],[8,"LowerExp"],[8,"UpperExp"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["semver"] = {"doc":"Semantic version parsing and comparison.","items":[[3,"Version","semver","Represents a version number conforming to the semantic versioning scheme.",null,null],[12,"major","","The major version, to be incremented on incompatible changes.",0,null],[12,"minor","","The minor version, to be incremented when functionality is added in a\nbackwards-compatible manner.",0,null],[12,"patch","","The patch version, to be incremented when backwards-compatible bug\nfixes are made.",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version precedence.",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version\nnumbers. Matching operations can then be done with the `VersionReq` against a particular\nversion to see if it satisfies some or all of the constraints.",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that&#39;s solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"SemVerError","","An error type for this crate",null,null],[13,"ParseError","","An error ocurred while parsing.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each\nenumeration is one of the possible errors that can occur.",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`, or `^`. Only use one.",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"InvalidIdentifier","","There was an error parsing an identifier.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"parse","","Parse a string into a semver object.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"increment_patch","","Increments the patch number for this Version (Must be mutable)",0,null],[11,"increment_minor","","Increments the minor version number for this Version (Must be mutable)",0,null],[11,"increment_major","","Increments the major version number for this Version (Must be mutable)",0,null],[11,"is_prerelease","","Checks to see if the current Version is in pre-release status",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"any","","`any()` is a factory method which creates a `VersionReq` with no constraints. In other\nwords, any version will match against it.",4,{"inputs":[],"output":{"name":"versionreq"}}],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It turns a string like `&quot;^1.2.3&quot;`\nand turns it into a `VersionReq` that matches that particular constraint.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"exact","","`exact()` is a factory method which creates a `VersionReq` with one exact constraint.",4,{"inputs":[{"name":"version"}],"output":{"name":"versionreq"}}],[11,"matches","","`matches()` matches a given `Version` against this `VersionReq`.",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,null]],"paths":[[3,"Version"],[4,"Identifier"],[4,"SemVerError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["utf8_ranges"] = {"doc":"Crate `utf8-ranges` converts ranges of Unicode scalar values to equivalent\nranges of UTF-8 bytes. This is useful for constructing byte based automatons\nthat need to embed UTF-8 decoding.","items":[[3,"Utf8Range","utf8_ranges","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",0,null],[12,"end","","End of byte range (inclusive).",0,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",1,null],[13,"Two","","Two successive byte ranges.",1,null],[13,"Three","","Three successive byte ranges.",1,null],[13,"Four","","Four successive byte ranges.",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",1,null],[11,"len","","Returns the number of byte ranges in this sequence.",1,null],[11,"matches","","Returns true if and only if a prefix of `bytes` matches this sequence\nof byte ranges.",1,null],[11,"fmt","","",1,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"matches","","Returns true if and only if the given byte is in this range.",0,null],[11,"fmt","","",0,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the scalar value range\ngiven.",2,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"self"}}],[11,"next","","",2,null]],"paths":[[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[11,"hash","core::num","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"eq","core::num::dec2flt","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","core::num","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"hash","core::nonzero","",5,null],[11,"fmt","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",5,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",5,null],[11,"new","core::ptr","Creates a new `Unique`.",6,null],[11,"get","","Dereferences the content.",6,null],[11,"get_mut","","Mutably dereferences the content.",6,null],[11,"deref","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new `Shared`.",7,null],[11,"clone","","",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"hash","core::marker","",8,null],[11,"eq","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"contains","","# Examples",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","core::cmp","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"reverse","","Reverse the `Ordering`.",15,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"fmt","","",16,null],[11,"fmt","","",16,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"is","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",16,null],[11,"hash","core::any","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",17,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",18,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `AtomicBool`.",18,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",18,null],[11,"store","","Stores a value into the bool.",18,null],[11,"swap","","Stores a value into the bool, returning the old value.",18,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",18,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",18,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",18,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",18,null],[11,"new","","Creates a new `AtomicPtr`.",19,null],[11,"load","","Loads a value from the pointer.",19,null],[11,"store","","Stores a value into the pointer.",19,null],[11,"swap","","Stores a value into the pointer, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"default","","",21,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",21,null],[11,"new","","Creates a new atomic integer.",21,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",21,null],[11,"store","","Stores a value into the atomic integer.",21,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",21,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"fetch_add","","Add to the current value, returning the previous value.",21,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",21,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",21,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",21,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,null],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"cmp","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,null],[11,"borrow_state","","Query the current state of this `RefCell`",33,null],[11,"borrow","","Immutably borrows the wrapped value.",33,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",33,null],[11,"clone","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"cmp","","",33,null],[11,"deref","","",34,null],[11,"clone","","Copies a `Ref`.",34,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",36,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",36,null],[11,"get","","Gets a mutable pointer to the wrapped value.",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"count","","",37,null],[11,"last","","",37,null],[11,"len","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"nth","","",38,null],[11,"last","","",38,null],[11,"len","","",38,null],[11,"fmt","","",39,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","core::iter::range","",41,null],[11,"clone","","",41,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",10,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",13,null],[11,"next","core::iter::range","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","core::ops","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"fmt","core::iter::sources","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"fmt","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"len","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"fmt","core::iter","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"count","","",48,null],[11,"nth","","",48,null],[11,"find","","",48,null],[11,"last","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","# Overflow Behavior",53,null],[11,"size_hint","","",53,null],[11,"nth","","",53,null],[11,"count","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",54,null],[11,"is_empty","","Checks if the iterator has finished iterating.",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"last","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"count","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"hash","core::option","",63,null],[11,"fmt","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"is_some","","Returns `true` if the option is a `Some` value",63,null],[11,"is_none","","Returns `true` if the option is a `None` value",63,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",63,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",63,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",63,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",63,null],[11,"unwrap_or","","Returns the contained value or a default.",63,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",63,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",63,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",63,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",63,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",63,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",63,null],[11,"iter","","Returns an iterator over the possibly contained value.",63,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",63,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",63,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",63,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",63,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",63,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",63,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",63,null],[11,"unwrap_or_default","","Returns the contained value or a default",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",63,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"hash","core::result","",68,null],[11,"fmt","","",68,null],[11,"cmp","","",68,null],[11,"partial_cmp","","",68,null],[11,"lt","","",68,null],[11,"le","","",68,null],[11,"gt","","",68,null],[11,"ge","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"is_ok","","Returns true if the result is `Ok`",68,null],[11,"is_err","","Returns true if the result is `Err`",68,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",68,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",68,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",68,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",68,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",68,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",68,null],[11,"iter","","Returns an iterator over the possibly contained value.",68,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",68,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",68,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",68,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",68,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",68,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",68,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",68,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",68,null],[11,"fmt","","",69,null],[11,"next","","",69,null],[11,"size_hint","","",69,null],[11,"next_back","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",68,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",72,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"count","","",72,null],[11,"nth","","",72,null],[11,"last","","",72,null],[11,"next_back","","",72,null],[11,"clone","","",72,null],[11,"fmt","","",73,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"count","","",80,null],[11,"nth","","",80,null],[11,"last","","",80,null],[11,"next_back","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","core::str::pattern","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",84,null],[11,"clone","","",84,null],[11,"haystack","","",84,null],[11,"next","","",84,null],[11,"next_match","","",84,null],[11,"next_reject","","",84,null],[11,"next_back","","",84,null],[11,"next_match_back","","",84,null],[11,"next_reject_back","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"clone","","",86,null],[11,"fmt","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"eq","core::str","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",88,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"as_str","","View the underlying data as a subslice of the original data.",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"count","","",92,null],[11,"last","","",92,null],[11,"nth","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"fmt","","",93,null],[11,"next","","",93,null],[11,"clone","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"next_back","","",93,null],[11,"next_back","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"next_back","","",95,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"next_back","","",99,null],[11,"next_back","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"next_back","","",101,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"fmt","core::hash::sip","",106,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",106,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",106,null],[11,"finish","","",106,null],[11,"clone","","",106,null],[11,"default","","",106,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",107,null],[11,"build_hasher","","",107,null],[11,"clone","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",108,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",109,null],[11,"finish","","Finishes output and returns any error encountered.",109,null],[11,"field","","Adds a new field to the generated tuple struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"entry","","Adds a new entry to the set output.",111,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the list output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the map output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"partial_cmp","core::fmt","",114,null],[11,"eq","","",114,null],[11,"cmp","","",114,null],[11,"hash","","",114,null],[11,"default","","",114,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"fmt","","",115,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",116,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",116,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",116,null],[11,"write_fmt","","Writes some formatted information into this instance",116,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",116,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",116,null],[11,"align","","Flag indicating what form of alignment was requested",116,null],[11,"width","","Optionally specified integer width that the output should be",116,null],[11,"precision","","Optionally specified precision for numeric types",116,null],[11,"sign_plus","","Determines if the `+` flag was specified.",116,null],[11,"sign_minus","","Determines if the `-` flag was specified.",116,null],[11,"alternate","","Determines if the `#` flag was specified.",116,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",116,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",116,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",116,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",116,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",116,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",116,null],[11,"write_str","","",116,null],[11,"write_char","","",116,null],[11,"write_fmt","","",116,null],[11,"fmt","","",114,null],[11,"fmt","core::marker","",8,null],[11,"fmt","core::cell","",31,null],[11,"fmt","","",33,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",117,null],[10,"deref","","The method called to dereference a value",117,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",118,null],[12,"1","","",118,null],[11,"get","","",118,null],[14,"__lazy_static_create!","lazy_static","",null,null],[14,"lazy_static!","","",null,null]],"paths":[[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"__Deref"],[3,"Lazy"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"lconv","","",null,null],[12,"decimal_point","","",26,null],[12,"thousands_sep","","",26,null],[12,"grouping","","",26,null],[12,"int_curr_symbol","","",26,null],[12,"currency_symbol","","",26,null],[12,"mon_decimal_point","","",26,null],[12,"mon_thousands_sep","","",26,null],[12,"mon_grouping","","",26,null],[12,"positive_sign","","",26,null],[12,"negative_sign","","",26,null],[12,"int_frac_digits","","",26,null],[12,"frac_digits","","",26,null],[12,"p_cs_precedes","","",26,null],[12,"p_sep_by_space","","",26,null],[12,"n_cs_precedes","","",26,null],[12,"n_sep_by_space","","",26,null],[12,"p_sign_posn","","",26,null],[12,"n_sign_posn","","",26,null],[12,"int_p_cs_precedes","","",26,null],[12,"int_p_sep_by_space","","",26,null],[12,"int_n_cs_precedes","","",26,null],[12,"int_n_sep_by_space","","",26,null],[12,"int_p_sign_posn","","",26,null],[12,"int_n_sign_posn","","",26,null],[3,"dirent","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"dirent64","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",29,null],[12,"rlim_max","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_pathv","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_flags","","",30,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",31,null],[12,"ifa_name","","",31,null],[12,"ifa_flags","","",31,null],[12,"ifa_addr","","",31,null],[12,"ifa_netmask","","",31,null],[12,"ifa_ifu","","",31,null],[12,"ifa_data","","",31,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",32,null],[12,"pw_passwd","","",32,null],[12,"pw_uid","","",32,null],[12,"pw_gid","","",32,null],[12,"pw_gecos","","",32,null],[12,"pw_dir","","",32,null],[12,"pw_shell","","",32,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",33,null],[12,"f_frsize","","",33,null],[12,"f_blocks","","",33,null],[12,"f_bfree","","",33,null],[12,"f_bavail","","",33,null],[12,"f_files","","",33,null],[12,"f_ffree","","",33,null],[12,"f_favail","","",33,null],[12,"f_fsid","","",33,null],[12,"f_flag","","",33,null],[12,"f_namemax","","",33,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",34,null],[12,"dqb_bsoftlimit","","",34,null],[12,"dqb_curspace","","",34,null],[12,"dqb_ihardlimit","","",34,null],[12,"dqb_isoftlimit","","",34,null],[12,"dqb_curinodes","","",34,null],[12,"dqb_btime","","",34,null],[12,"dqb_itime","","",34,null],[12,"dqb_valid","","",34,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",35,null],[12,"ssi_errno","","",35,null],[12,"ssi_code","","",35,null],[12,"ssi_pid","","",35,null],[12,"ssi_uid","","",35,null],[12,"ssi_fd","","",35,null],[12,"ssi_tid","","",35,null],[12,"ssi_band","","",35,null],[12,"ssi_overrun","","",35,null],[12,"ssi_trapno","","",35,null],[12,"ssi_status","","",35,null],[12,"ssi_int","","",35,null],[12,"ssi_ptr","","",35,null],[12,"ssi_utime","","",35,null],[12,"ssi_stime","","",35,null],[12,"ssi_addr","","",35,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",36,null],[12,"mq_maxmsg","","",36,null],[12,"mq_msgsize","","",36,null],[12,"mq_curmsgs","","",36,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",37,null],[12,"sa_mask","","",37,null],[12,"sa_flags","","",37,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",38,null],[12,"ss_flags","","",38,null],[12,"ss_size","","",38,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",39,null],[12,"si_errno","","",39,null],[12,"si_code","","",39,null],[12,"_pad","","",39,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"ucred","","",null,null],[12,"pid","","",41,null],[12,"uid","","",41,null],[12,"gid","","",41,null],[3,"statfs","","",null,null],[12,"f_type","","",42,null],[12,"f_bsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_namelen","","",42,null],[12,"f_frsize","","",42,null],[3,"msghdr","","",null,null],[12,"msg_name","","",43,null],[12,"msg_namelen","","",43,null],[12,"msg_iov","","",43,null],[12,"msg_iovlen","","",43,null],[12,"msg_control","","",43,null],[12,"msg_controllen","","",43,null],[12,"msg_flags","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_line","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",48,null],[12,"loads","","",48,null],[12,"totalram","","",48,null],[12,"freeram","","",48,null],[12,"sharedram","","",48,null],[12,"bufferram","","",48,null],[12,"totalswap","","",48,null],[12,"freeswap","","",48,null],[12,"procs","","",48,null],[12,"pad","","",48,null],[12,"totalhigh","","",48,null],[12,"freehigh","","",48,null],[12,"mem_unit","","",48,null],[12,"_f","","",48,null],[3,"stat","","",null,null],[12,"st_dev","","",49,null],[12,"st_ino","","",49,null],[12,"st_nlink","","",49,null],[12,"st_mode","","",49,null],[12,"st_uid","","",49,null],[12,"st_gid","","",49,null],[12,"st_rdev","","",49,null],[12,"st_size","","",49,null],[12,"st_blksize","","",49,null],[12,"st_blocks","","",49,null],[12,"st_atime","","",49,null],[12,"st_atime_nsec","","",49,null],[12,"st_mtime","","",49,null],[12,"st_mtime_nsec","","",49,null],[12,"st_ctime","","",49,null],[12,"st_ctime_nsec","","",49,null],[3,"stat64","","",null,null],[12,"st_dev","","",50,null],[12,"st_ino","","",50,null],[12,"st_nlink","","",50,null],[12,"st_mode","","",50,null],[12,"st_uid","","",50,null],[12,"st_gid","","",50,null],[12,"st_rdev","","",50,null],[12,"st_size","","",50,null],[12,"st_blksize","","",50,null],[12,"st_blocks","","",50,null],[12,"st_atime","","",50,null],[12,"st_atime_nsec","","",50,null],[12,"st_mtime","","",50,null],[12,"st_mtime_nsec","","",50,null],[12,"st_ctime","","",50,null],[12,"st_ctime_nsec","","",50,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",51,null],[12,"exponent","","",51,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",52,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",53,null],[12,"swd","","",53,null],[12,"ftw","","",53,null],[12,"fop","","",53,null],[12,"rip","","",53,null],[12,"rdp","","",53,null],[12,"mxcsr","","",53,null],[12,"mxcr_mask","","",53,null],[12,"_st","","",53,null],[12,"_xmm","","",53,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",54,null],[12,"fpregs","","",54,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",55,null],[12,"uc_link","","",55,null],[12,"uc_stack","","",55,null],[12,"uc_mcontext","","",55,null],[12,"uc_sigmask","","",55,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"mkfifoat","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",56,null],[11,"is_none","","Returns `true` if the option is a `None` value",56,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",56,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",56,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",56,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",56,null],[11,"unwrap_or","","Returns the contained value or a default.",56,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",56,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",56,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",56,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",56,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",56,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",56,null],[11,"iter","","Returns an iterator over the possibly contained value.",56,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",56,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",56,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",56,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",56,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",56,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",56,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",56,null],[11,"unwrap_or_default","","Returns the contained value or a default",56,null],[11,"hash","core::num","",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",57,null],[11,"cmp","","",57,null],[11,"partial_cmp","","",57,null],[11,"lt","","",57,null],[11,"le","","",57,null],[11,"gt","","",57,null],[11,"ge","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"fmt","","",57,null],[11,"fmt","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"shl","","",57,null],[11,"shl_assign","","",57,null],[11,"shr","","",57,null],[11,"shr_assign","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"add","","",57,null],[11,"add_assign","","",57,null],[11,"sub","","",57,null],[11,"sub_assign","","",57,null],[11,"mul","","",57,null],[11,"mul_assign","","",57,null],[11,"div","","",57,null],[11,"div_assign","","",57,null],[11,"rem","","",57,null],[11,"rem_assign","","",57,null],[11,"not","","",57,null],[11,"bitxor","","",57,null],[11,"bitxor_assign","","",57,null],[11,"bitor","","",57,null],[11,"bitor_assign","","",57,null],[11,"bitand","","",57,null],[11,"bitand_assign","","",57,null],[11,"neg","","",57,null],[11,"eq","core::num::dec2flt","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"fmt","","",58,null],[11,"fmt","core::num","",59,null],[11,"eq","","",59,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"fmt","","",60,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"fmt","","",61,null],[11,"hash","core::nonzero","",62,null],[11,"fmt","","",62,null],[11,"partial_cmp","","",62,null],[11,"lt","","",62,null],[11,"le","","",62,null],[11,"gt","","",62,null],[11,"ge","","",62,null],[11,"cmp","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"clone","","",62,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",62,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",62,null],[11,"new","core::ptr","Creates a new `Unique`.",63,null],[11,"get","","Dereferences the content.",63,null],[11,"get_mut","","Mutably dereferences the content.",63,null],[11,"deref","","",63,null],[11,"fmt","","",63,null],[11,"new","","Creates a new `Shared`.",64,null],[11,"clone","","",64,null],[11,"deref","","",64,null],[11,"fmt","","",64,null],[11,"hash","core::marker","",65,null],[11,"eq","","",65,null],[11,"partial_cmp","","",65,null],[11,"cmp","","",65,null],[11,"clone","","",65,null],[11,"default","","",65,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",66,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",67,null],[11,"contains","","# Examples",67,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"contains","","# Examples",68,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"contains","","# Examples",69,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",70,null],[11,"from","","",70,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",70,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"fmt","","",71,null],[11,"contains","","# Examples",71,null],[11,"hash","core::cmp","",72,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"clone","","",72,null],[11,"reverse","","Reverse the `Ordering`.",72,null],[11,"cmp","","",72,null],[11,"partial_cmp","","",72,null],[11,"fmt","libc","",73,null],[11,"fmt","","",73,null],[11,"is","","Returns true if the boxed type is the same as `T`",73,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",73,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",73,null],[11,"is","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",73,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",73,null],[11,"hash","core::any","",74,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",74,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",75,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"new","","Creates a new `AtomicBool`.",75,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",75,null],[11,"store","","Stores a value into the bool.",75,null],[11,"swap","","Stores a value into the bool, returning the old value.",75,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",75,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",75,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",75,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",75,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",75,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",75,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",75,null],[11,"new","","Creates a new `AtomicPtr`.",76,null],[11,"load","","Loads a value from the pointer.",76,null],[11,"store","","Stores a value into the pointer.",76,null],[11,"swap","","Stores a value into the pointer, returning the old value.",76,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",76,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",76,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",76,null],[11,"default","","",78,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",78,null],[11,"new","","Creates a new atomic integer.",78,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",78,null],[11,"store","","Stores a value into the atomic integer.",78,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",78,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",78,null],[11,"fetch_add","","Add to the current value, returning the previous value.",78,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",78,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",78,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",78,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",78,null],[11,"default","","",79,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",79,null],[11,"new","","Creates a new atomic integer.",79,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",79,null],[11,"store","","Stores a value into the atomic integer.",79,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",79,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",79,null],[11,"fetch_add","","Add to the current value, returning the previous value.",79,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",79,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",79,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",79,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",79,null],[11,"default","","",80,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",80,null],[11,"new","","Creates a new atomic integer.",80,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",80,null],[11,"store","","Stores a value into the atomic integer.",80,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",80,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",80,null],[11,"fetch_add","","Add to the current value, returning the previous value.",80,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",80,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",80,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",80,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",80,null],[11,"default","","",81,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",81,null],[11,"new","","Creates a new atomic integer.",81,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",81,null],[11,"store","","Stores a value into the atomic integer.",81,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",81,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",81,null],[11,"fetch_add","","Add to the current value, returning the previous value.",81,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",81,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",81,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",81,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",81,null],[11,"default","","",82,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",82,null],[11,"new","","Creates a new atomic integer.",82,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",82,null],[11,"store","","Stores a value into the atomic integer.",82,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",82,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",82,null],[11,"fetch_add","","Add to the current value, returning the previous value.",82,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",82,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",82,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",82,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",82,null],[11,"default","","",83,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",83,null],[11,"new","","Creates a new atomic integer.",83,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",83,null],[11,"store","","Stores a value into the atomic integer.",83,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",83,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",83,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",83,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",83,null],[11,"fetch_add","","Add to the current value, returning the previous value.",83,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",83,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",83,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",83,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",83,null],[11,"default","","",84,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",84,null],[11,"new","","Creates a new atomic integer.",84,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",84,null],[11,"store","","Stores a value into the atomic integer.",84,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",84,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",84,null],[11,"fetch_add","","Add to the current value, returning the previous value.",84,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",84,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",84,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",84,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",84,null],[11,"default","","",85,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",85,null],[11,"new","","Creates a new atomic integer.",85,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",85,null],[11,"store","","Stores a value into the atomic integer.",85,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",85,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",85,null],[11,"fetch_add","","Add to the current value, returning the previous value.",85,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",85,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",85,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",85,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",85,null],[11,"default","","",86,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",86,null],[11,"new","","Creates a new atomic integer.",86,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",86,null],[11,"store","","Stores a value into the atomic integer.",86,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",86,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",86,null],[11,"fetch_add","","Add to the current value, returning the previous value.",86,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",86,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",86,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",86,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",86,null],[11,"default","","",87,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",87,null],[11,"new","","Creates a new atomic integer.",87,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",87,null],[11,"store","","Stores a value into the atomic integer.",87,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",87,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",87,null],[11,"fetch_add","","Add to the current value, returning the previous value.",87,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",87,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",87,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",87,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",87,null],[11,"fmt","","",75,null],[11,"fmt","","",76,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",88,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",88,null],[11,"set","","Sets the contained value.",88,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",88,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",88,null],[11,"clone","","",88,null],[11,"default","","",88,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",88,null],[11,"partial_cmp","","",88,null],[11,"lt","","",88,null],[11,"le","","",88,null],[11,"gt","","",88,null],[11,"ge","","",88,null],[11,"cmp","","",88,null],[11,"fmt","","",89,null],[11,"eq","","",89,null],[11,"clone","","",89,null],[11,"new","","Creates a new `RefCell` containing `value`.",90,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",90,null],[11,"borrow_state","","Query the current state of this `RefCell`",90,null],[11,"borrow","","Immutably borrows the wrapped value.",90,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",90,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",90,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",90,null],[11,"clone","","",90,null],[11,"default","","",90,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",90,null],[11,"partial_cmp","","",90,null],[11,"lt","","",90,null],[11,"le","","",90,null],[11,"gt","","",90,null],[11,"ge","","",90,null],[11,"cmp","","",90,null],[11,"deref","","",91,null],[11,"clone","","Copies a `Ref`.",91,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",91,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",92,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"deref","","",92,null],[11,"deref_mut","","",92,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",93,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",93,null],[11,"get","","Gets a mutable pointer to the wrapped value.",93,null],[11,"default","","",93,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",94,null],[11,"clone","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"count","","",94,null],[11,"last","","",94,null],[11,"len","","",94,null],[11,"fmt","","",95,null],[11,"clone","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"count","","",95,null],[11,"nth","","",95,null],[11,"last","","",95,null],[11,"len","","",95,null],[11,"fmt","","",96,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"fmt","","",97,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"fmt","core::iter::range","",98,null],[11,"clone","","",98,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",68,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",67,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",70,null],[11,"next","core::iter::range","",98,null],[11,"size_hint","","",98,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next","core::ops","",67,null],[11,"size_hint","","",67,null],[11,"next_back","","",67,null],[11,"next","","",68,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"fmt","core::iter::sources","",99,null],[11,"clone","","",99,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"next_back","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"next_back","","",100,null],[11,"len","","",100,null],[11,"clone","","",100,null],[11,"default","","",100,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"next","","",101,null],[11,"size_hint","","",101,null],[11,"next_back","","",101,null],[11,"len","","",101,null],[11,"fmt","core::iter","",102,null],[11,"clone","","",102,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"next_back","","",102,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"count","","",105,null],[11,"nth","","",105,null],[11,"find","","",105,null],[11,"last","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"next_back","","",106,null],[11,"clone","","",107,null],[11,"fmt","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"next_back","","",107,null],[11,"clone","","",108,null],[11,"fmt","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"clone","","",109,null],[11,"fmt","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"fmt","","",110,null],[11,"clone","","",110,null],[11,"next","","# Overflow Behavior",110,null],[11,"size_hint","","",110,null],[11,"nth","","",110,null],[11,"count","","",110,null],[11,"next_back","","",110,null],[11,"fmt","","",111,null],[11,"clone","","",111,null],[11,"next","","",111,null],[11,"count","","",111,null],[11,"nth","","",111,null],[11,"last","","",111,null],[11,"size_hint","","",111,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",111,null],[11,"is_empty","","Checks if the iterator has finished iterating.",111,null],[11,"clone","","",112,null],[11,"fmt","","",112,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"clone","","",113,null],[11,"fmt","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"next","","",114,null],[11,"nth","","",114,null],[11,"count","","",114,null],[11,"last","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"next","","",115,null],[11,"nth","","",115,null],[11,"size_hint","","",115,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"next","","",116,null],[11,"size_hint","","",116,null],[11,"clone","","",117,null],[11,"fmt","","",117,null],[11,"next","","",117,null],[11,"size_hint","","",117,null],[11,"next_back","","",117,null],[11,"fmt","","",118,null],[11,"clone","","",118,null],[11,"next","","",118,null],[11,"nth","","",118,null],[11,"last","","",118,null],[11,"count","","",118,null],[11,"size_hint","","",118,null],[11,"next_back","","",118,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"next","","",119,null],[11,"size_hint","","",119,null],[11,"next_back","","",119,null],[11,"hash","core::option","",56,null],[11,"fmt","","",56,null],[11,"cmp","","",56,null],[11,"partial_cmp","","",56,null],[11,"lt","","",56,null],[11,"le","","",56,null],[11,"gt","","",56,null],[11,"ge","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"default","","",56,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",56,null],[11,"fmt","","",120,null],[11,"next","","",120,null],[11,"size_hint","","",120,null],[11,"next_back","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",121,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"next_back","","",121,null],[11,"fmt","","",122,null],[11,"clone","","",122,null],[11,"next","","",122,null],[11,"size_hint","","",122,null],[11,"next_back","","",122,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",56,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",123,null],[11,"hash","core::result","",124,null],[11,"fmt","","",124,null],[11,"cmp","","",124,null],[11,"partial_cmp","","",124,null],[11,"lt","","",124,null],[11,"le","","",124,null],[11,"gt","","",124,null],[11,"ge","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"is_ok","","Returns true if the result is `Ok`",124,null],[11,"is_err","","Returns true if the result is `Err`",124,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",124,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",124,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",124,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",124,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",124,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",124,null],[11,"iter","","Returns an iterator over the possibly contained value.",124,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",124,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",124,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",124,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",124,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",124,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",124,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",124,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",124,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",124,null],[11,"fmt","","",125,null],[11,"next","","",125,null],[11,"size_hint","","",125,null],[11,"next_back","","",125,null],[11,"clone","","",125,null],[11,"fmt","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"next_back","","",126,null],[11,"fmt","","",127,null],[11,"next","","",127,null],[11,"size_hint","","",127,null],[11,"next_back","","",127,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",124,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",128,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",128,null],[11,"next","","",128,null],[11,"size_hint","","",128,null],[11,"count","","",128,null],[11,"nth","","",128,null],[11,"last","","",128,null],[11,"next_back","","",128,null],[11,"clone","","",128,null],[11,"fmt","","",129,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",129,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"count","","",129,null],[11,"nth","","",129,null],[11,"last","","",129,null],[11,"next_back","","",129,null],[11,"fmt","","",130,null],[11,"clone","","",130,null],[11,"next","","",130,null],[11,"size_hint","","",130,null],[11,"next_back","","",130,null],[11,"fmt","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"next_back","","",131,null],[11,"fmt","","",132,null],[11,"fmt","","",133,null],[11,"fmt","","",134,null],[11,"fmt","","",135,null],[11,"next","","",132,null],[11,"size_hint","","",132,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"next","","",134,null],[11,"size_hint","","",134,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"count","","",136,null],[11,"nth","","",136,null],[11,"last","","",136,null],[11,"next_back","","",136,null],[11,"fmt","","",137,null],[11,"clone","","",137,null],[11,"next","","",137,null],[11,"size_hint","","",137,null],[11,"count","","",137,null],[11,"nth","","",137,null],[11,"last","","",137,null],[11,"next_back","","",137,null],[11,"fmt","","",138,null],[11,"next","","",138,null],[11,"size_hint","","",138,null],[11,"count","","",138,null],[11,"nth","","",138,null],[11,"last","","",138,null],[11,"next_back","","",138,null],[11,"fmt","core::str::pattern","",139,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",140,null],[11,"clone","","",140,null],[11,"haystack","","",140,null],[11,"next","","",140,null],[11,"next_match","","",140,null],[11,"next_reject","","",140,null],[11,"next_back","","",140,null],[11,"next_match_back","","",140,null],[11,"next_reject_back","","",140,null],[11,"fmt","","",141,null],[11,"clone","","",141,null],[11,"haystack","","",141,null],[11,"next","","",141,null],[11,"next_match","","",141,null],[11,"next_reject","","",141,null],[11,"next_back","","",141,null],[11,"next_match_back","","",141,null],[11,"next_reject_back","","",141,null],[11,"clone","","",142,null],[11,"fmt","","",142,null],[11,"haystack","","",142,null],[11,"next","","",142,null],[11,"next_match","","",142,null],[11,"next_reject","","",142,null],[11,"next_back","","",142,null],[11,"next_match_back","","",142,null],[11,"next_reject_back","","",142,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"haystack","","",143,null],[11,"next","","",143,null],[11,"next_match","","",143,null],[11,"next_back","","",143,null],[11,"next_match_back","","",143,null],[11,"eq","core::str","",144,null],[11,"ne","","",144,null],[11,"clone","","",144,null],[11,"fmt","","",144,null],[11,"fmt","","",144,null],[11,"fmt","","",145,null],[11,"clone","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",145,null],[11,"fmt","","",145,null],[11,"fmt","","",146,null],[11,"clone","","",146,null],[11,"next","","",146,null],[11,"size_hint","","",146,null],[11,"next_back","","",146,null],[11,"as_str","","View the underlying data as a subslice of the original data.",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"next","","",147,null],[11,"size_hint","","",147,null],[11,"next_back","","",147,null],[11,"as_str","","View the underlying data as a subslice of the original data.",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"next","","",148,null],[11,"size_hint","","",148,null],[11,"count","","",148,null],[11,"last","","",148,null],[11,"nth","","",148,null],[11,"next_back","","",148,null],[11,"len","","",148,null],[11,"fmt","","",149,null],[11,"next","","",149,null],[11,"clone","","",149,null],[11,"fmt","","",150,null],[11,"next","","",150,null],[11,"clone","","",150,null],[11,"next_back","","",149,null],[11,"next_back","","",150,null],[11,"fmt","","",151,null],[11,"next","","",151,null],[11,"clone","","",151,null],[11,"fmt","","",152,null],[11,"next","","",152,null],[11,"clone","","",152,null],[11,"next_back","","",151,null],[11,"next_back","","",152,null],[11,"fmt","","",153,null],[11,"next","","",153,null],[11,"clone","","",153,null],[11,"fmt","","",154,null],[11,"next","","",154,null],[11,"clone","","",154,null],[11,"fmt","","",155,null],[11,"next","","",155,null],[11,"clone","","",155,null],[11,"fmt","","",156,null],[11,"next","","",156,null],[11,"clone","","",156,null],[11,"next_back","","",155,null],[11,"next_back","","",156,null],[11,"fmt","","",157,null],[11,"next","","",157,null],[11,"clone","","",157,null],[11,"fmt","","",158,null],[11,"next","","",158,null],[11,"clone","","",158,null],[11,"next_back","","",157,null],[11,"next_back","","",158,null],[11,"fmt","","",159,null],[11,"clone","","",159,null],[11,"next","","",159,null],[11,"size_hint","","",159,null],[11,"next_back","","",159,null],[11,"fmt","","",160,null],[11,"clone","","",160,null],[11,"next","","",160,null],[11,"size_hint","","",160,null],[11,"next_back","","",160,null],[11,"fmt","","",161,null],[11,"clone","","",161,null],[11,"fmt","core::hash::sip","",162,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",162,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",162,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",162,null],[11,"finish","","",162,null],[11,"clone","","",162,null],[11,"default","","",162,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",163,null],[11,"build_hasher","","",163,null],[11,"clone","","",163,null],[11,"default","","",163,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",164,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",165,null],[11,"finish","","Finishes output and returns any error encountered.",165,null],[11,"field","","Adds a new field to the generated tuple struct output.",166,null],[11,"finish","","Finishes output and returns any error encountered.",166,null],[11,"entry","","Adds a new entry to the set output.",167,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",167,null],[11,"finish","","Finishes output and returns any error encountered.",167,null],[11,"entry","","Adds a new entry to the list output.",168,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",168,null],[11,"finish","","Finishes output and returns any error encountered.",168,null],[11,"entry","","Adds a new entry to the map output.",169,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",169,null],[11,"finish","","Finishes output and returns any error encountered.",169,null],[11,"partial_cmp","core::fmt","",170,null],[11,"eq","","",170,null],[11,"cmp","","",170,null],[11,"hash","","",170,null],[11,"default","","",170,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",170,null],[11,"clone","","",170,null],[11,"clone","","",171,null],[11,"fmt","","",171,null],[11,"fmt","","",171,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",172,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",172,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",172,null],[11,"write_fmt","","Writes some formatted information into this instance",172,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",172,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",172,null],[11,"align","","Flag indicating what form of alignment was requested",172,null],[11,"width","","Optionally specified integer width that the output should be",172,null],[11,"precision","","Optionally specified precision for numeric types",172,null],[11,"sign_plus","","Determines if the `+` flag was specified.",172,null],[11,"sign_minus","","Determines if the `-` flag was specified.",172,null],[11,"alternate","","Determines if the `#` flag was specified.",172,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",172,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",172,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",172,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",172,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",172,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",172,null],[11,"write_str","","",172,null],[11,"write_char","","",172,null],[11,"write_fmt","","",172,null],[11,"fmt","","",170,null],[11,"fmt","core::marker","",65,null],[11,"fmt","core::cell","",88,null],[11,"fmt","","",90,null],[11,"fmt","","",91,null],[11,"fmt","","",92,null],[11,"fmt","","",93,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",173,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",173,null],[11,"clone","libc","",49,null],[11,"clone","","",50,null],[11,"clone","","",174,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",175,null],[11,"clone","","",48,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",176,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",177,null],[11,"clone","","",178,null],[11,"clone","","",179,null],[11,"clone","","",180,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",181,null],[11,"clone","","",36,null],[11,"clone","","",182,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",183,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["nom"] = {"doc":"nom, eating data byte by byte","items":[[3,"ProducerRepeat","nom","ProducerRepeat takes a single value, and generates it at each step",null,null],[3,"MemProducer","","A MemProducer generates values from an in memory byte buffer",null,null],[3,"FileProducer","","",null,null],[3,"MapConsumer","","MapConsumer takes a function S -&gt; T and applies it on a consumer producing values of type S",null,null],[3,"ChainConsumer","","ChainConsumer takes a consumer C1 R -&gt; S, and a consumer C2 S -&gt; T, and makes a consumer R -&gt; T by applying C2 on C1&#39;s result",null,null],[4,"ErrorKind","","indicates which parser returned an error",null,null],[13,"Custom","","",0,null],[13,"Tag","","",0,null],[13,"MapRes","","",0,null],[13,"MapOpt","","",0,null],[13,"Alt","","",0,null],[13,"IsNot","","",0,null],[13,"IsA","","",0,null],[13,"SeparatedList","","",0,null],[13,"SeparatedNonEmptyList","","",0,null],[13,"Many0","","",0,null],[13,"Many1","","",0,null],[13,"Count","","",0,null],[13,"TakeUntilAndConsume","","",0,null],[13,"TakeUntil","","",0,null],[13,"TakeUntilEitherAndConsume","","",0,null],[13,"TakeUntilEither","","",0,null],[13,"LengthValue","","",0,null],[13,"TagClosure","","",0,null],[13,"Alpha","","",0,null],[13,"Digit","","",0,null],[13,"HexDigit","","",0,null],[13,"OctDigit","","",0,null],[13,"AlphaNumeric","","",0,null],[13,"Space","","",0,null],[13,"MultiSpace","","",0,null],[13,"LengthValueFn","","",0,null],[13,"Eof","","",0,null],[13,"ExprOpt","","",0,null],[13,"ExprRes","","",0,null],[13,"CondReduce","","",0,null],[13,"Switch","","",0,null],[13,"TagBits","","",0,null],[13,"OneOf","","",0,null],[13,"NoneOf","","",0,null],[13,"Char","","",0,null],[13,"CrLf","","",0,null],[13,"RegexpMatch","","",0,null],[13,"RegexpMatches","","",0,null],[13,"RegexpFind","","",0,null],[13,"RegexpCapture","","",0,null],[13,"RegexpCaptures","","",0,null],[13,"TakeWhile1","","",0,null],[13,"Complete","","",0,null],[13,"Fix","","",0,null],[13,"Escaped","","",0,null],[13,"EscapedTransform","","",0,null],[13,"TagStr","","",0,null],[13,"IsNotStr","","",0,null],[13,"IsAStr","","",0,null],[13,"TakeWhile1Str","","",0,null],[13,"NonEmpty","","",0,null],[13,"ManyMN","","",0,null],[13,"TakeUntilAndConsumeStr","","",0,null],[13,"TakeUntilStr","","",0,null],[4,"Err","","Contains the error that a parser can return",null,null],[13,"Code","","An error code, represented by an ErrorKind, which can contain a custom error code represented by E",1,null],[13,"Node","","An error code, and the next error",1,null],[13,"Position","","An error code, and the input position",1,null],[13,"NodePosition","","An error code, the input position and the next error",1,null],[4,"Needed","","Contains information on needed data if a parser returned `Incomplete`",null,null],[13,"Unknown","","needs more data, but we do not know how much",2,null],[13,"Size","","contains the required data size",2,null],[4,"IResult","","Holds the result of parsing functions",null,null],[13,"Done","","indicates a correct parsing, the first field containing the rest of the unparsed data, the second field contains the parsed data",3,null],[13,"Error","","contains a Err, an enum that can indicate an error code, a position in the input, and a pointer to another error, making a list of errors in the parsing tree",3,null],[13,"Incomplete","","Incomplete contains a Needed, an enum than can represent a known quantity of input data, or unknown",3,null],[4,"Input","","",null,null],[13,"Element","","",4,null],[13,"Empty","","",4,null],[13,"Eof","","",4,null],[4,"ConsumerState","","Stores a consumer&#39;s current computation state",null,null],[13,"Done","","A value of type O has been produced",5,null],[13,"Error","","An error of type E has been encountered",5,null],[13,"Continue","","Continue applying, and pass a message of type M to the data source",5,null],[4,"Move","","",null,null],[13,"Consume","","indcates how much data was consumed",6,null],[13,"Seek","","indicates where in the input the consumer must seek",6,null],[13,"Await","","indicates more data is needed",6,null],[4,"FileProducerState","","",null,null],[13,"Normal","","",7,null],[13,"Error","","",7,null],[13,"Eof","","",7,null],[5,"error_to_list","","",null,{"inputs":[{"name":"err"}],"output":{"name":"vec"}}],[5,"compare_error_paths","","",null,{"inputs":[{"name":"err"},{"name":"err"}],"output":{"name":"bool"}}],[5,"add_error_pattern","","",null,{"inputs":[{"name":"hashmap"},{"name":"iresult"},{"name":"str"}],"output":{"name":"bool"}}],[5,"slice_to_offsets","","",null,null],[5,"prepare_errors","","",null,null],[5,"print_error","","",null,null],[5,"generate_colors","","",null,null],[5,"code_from_offset","","",null,null],[5,"reset_color","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"write_color","","",null,{"inputs":[{"name":"vec"},{"name":"u8"}],"output":null}],[5,"print_codes","","",null,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"string"}}],[5,"print_offsets","","",null,null],[5,"error_to_u32","","",null,{"inputs":[{"name":"errorkind"}],"output":{"name":"u32"}}],[5,"tag_cl","","",null,null],[5,"print","","",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"begin","","",null,null],[5,"not_line_ending","","",null,null],[5,"line_ending","","Recognizes a line feed",null,null],[5,"is_alphabetic","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_hex_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_oct_digit","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_alphanumeric","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_space","","",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"alpha","","Recognizes lowercase and uppercase alphabetic characters: a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"digit","","Recognizes numerical characters: 0-9",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"hex_digit","","Recognizes hexadecimal numerical characters: 0-9, A-F, a-f",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"oct_digit","","Recognizes octal characters: 0-7",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"alphanumeric","","Recognizes numerical and alphabetic characters: 0-9a-zA-Z",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"space","","Recognizes spaces and tabs",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"multispace","","Recognizes spaces, tabs, carriage returns and line feeds",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"sized_buffer","","",null,null],[5,"length_value","","",null,null],[5,"be_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"be_u16","","Recognizes big endian unsigned 2 bytes integer",null,null],[5,"be_u32","","Recognizes big endian unsigned 4 bytes integer",null,null],[5,"be_u64","","Recognizes big endian unsigned 8 bytes integer",null,null],[5,"be_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"be_i16","","Recognizes big endian signed 2 bytes integer",null,null],[5,"be_i32","","Recognizes big endian signed 4 bytes integer",null,null],[5,"be_i64","","Recognizes big endian signed 8 bytes integer",null,null],[5,"le_u8","","Recognizes an unsigned 1 byte integer (equivalent to take!(1)",null,null],[5,"le_u16","","Recognizes little endian unsigned 2 bytes integer",null,null],[5,"le_u32","","Recognizes little endian unsigned 4 bytes integer",null,null],[5,"le_u64","","Recognizes little endian unsigned 8 bytes integer",null,null],[5,"le_i8","","Recognizes a signed 1 byte integer (equivalent to take!(1)",null,null],[5,"le_i16","","Recognizes little endian signed 2 bytes integer",null,null],[5,"le_i32","","Recognizes little endian signed 4 bytes integer",null,null],[5,"le_i64","","Recognizes little endian signed 8 bytes integer",null,null],[5,"be_f32","","Recognizes big endian 4 bytes floating point number",null,null],[5,"be_f64","","Recognizes big endian 8 bytes floating point number",null,null],[5,"hex_u32","","Recognizes a hex-encoded integer",null,null],[5,"eof","","Recognizes empty input buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"non_empty","","Recognizes non empty buffers",null,{"inputs":[{"name":"t"}],"output":{"name":"iresult"}}],[5,"rest","","Return the remaining input.",null,null],[5,"newline","","",null,null],[5,"crlf","","",null,null],[5,"eol","","",null,null],[5,"tab","","",null,null],[5,"anychar","","",null,null],[5,"shift","","",null,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"is_known","","",2,null],[11,"map","","Maps a `Needed` to `Needed` by appling a function to a contained `Size` value.",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"is_done","","",3,null],[11,"is_err","","",3,null],[11,"is_incomplete","","",3,null],[11,"map","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, N, E&gt;` by appling a function\nto a contained `Done` value, leaving `Error` and `Incomplete` value\nuntouched.",3,null],[11,"map_inc","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, E&gt;` by appling a function\nto a contained `Incomplete` value, leaving `Done` and `Error` value\nuntouched.",3,null],[11,"map_err","","Maps a `IResult&lt;I, O, E&gt;` to `IResult&lt;I, O, N&gt;` by appling a function\nto a contained `Error` value, leaving `Done` and `Incomplete` value\nuntouched.",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"remaining_input","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"output","","",3,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"map","","",5,null],[11,"flat_map","","",5,null],[11,"apply","","",8,null],[11,"new","","",9,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"apply","","",9,null],[11,"eq","","",7,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",10,null],[11,"new","","",10,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"state","","",10,null],[11,"refill","","",10,null],[11,"resize","","Resize the internal buffer, copy the data to the new one and returned how much data was copied",10,null],[11,"apply","","",10,null],[11,"new","","",11,{"inputs":[{"name":"c"},{"name":"f"}],"output":{"name":"mapconsumer"}}],[11,"handle","","",11,null],[11,"state","","",11,null],[11,"new","","",12,{"inputs":[{"name":"c1"},{"name":"c2"}],"output":{"name":"chainconsumer"}}],[11,"handle","","",12,null],[11,"state","","",12,null],[8,"HexDisplay","","useful functions to calculate the offset between slices and show a hexdump of a slice",null,null],[10,"offset","","offset between the first byte of self and the first byte of the argument",13,null],[10,"to_hex","","Converts the value of `self` to a hex dump, returning the owned\nstring.",13,null],[10,"to_hex_from","","Converts the value of `self` to a hex dump beginning at `from` address, returning the owned\nstring.",13,null],[8,"InputLength","","",null,null],[10,"input_len","","",14,null],[8,"AsChar","","",null,null],[10,"as_char","","",15,null],[10,"is_alpha","","",15,null],[10,"is_alphanum","","",15,null],[10,"is_0_to_9","","",15,null],[10,"is_hex_digit","","",15,null],[10,"is_oct_digit","","",15,null],[8,"IterIndices","","",null,null],[16,"Item","","",16,null],[16,"Iter","","",16,null],[10,"iter_indices","","",16,null],[8,"AsBytes","","",null,null],[10,"as_bytes","","",17,null],[8,"GetInput","","",null,null],[10,"remaining_input","","",18,null],[8,"GetOutput","","",null,null],[10,"output","","",19,null],[8,"Consumer","","The Consumer trait wraps a computation and its state",null,null],[10,"handle","","implement handle for the current computation, returning the new state of the consumer",20,null],[10,"state","","returns the current state",20,null],[8,"Producer","","The producer wraps a data source, like file or network, and applies a consumer on it",null,null],[10,"apply","","Applies a consumer once on the produced data, and return the consumer&#39;s state",21,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null],[14,"dbg!","","Prints a message if the parser fails",null,null],[14,"dbg_dmp!","","Prints a message and the input if the parser fails",null,null],[14,"closure!","","Wraps a parser in a closure",null,null],[14,"named!","","Makes a function from a parser combination",null,null],[14,"call!","","Used to wrap common expressions and function as macros",null,null],[14,"apply!","","emulate function currying: `apply!(my_function, arg1, arg2, ...)` becomes `my_function(input, arg1, arg2, ...)`",null,null],[14,"error!","","Prevents backtracking if the child parser fails",null,null],[14,"add_error!","","Add an error if the child parser fails",null,null],[14,"fix_error!","","translate parser result from IResult&lt;I,O,u32&gt; to IResult&lt;I,O,E&gt; with a custom type",null,null],[14,"complete!","","replaces a `Incomplete` returned by the child parser\nwith an `Error`",null,null],[14,"try_parse!","","A bit like `std::try!`, this macro will return the remaining input and parsed value if the child parser returned `Done`,\nand will do an early return for `Error` and `Incomplete`\nthis can provide more flexibility than `chain!` if needed",null,null],[14,"flat_map!","","`flat_map!(R -&gt; IResult&lt;R,S&gt;, S -&gt; IResult&lt;S,T&gt;) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"map!","","`map!(I -&gt; IResult&lt;I,O&gt;, O -&gt; P) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function on the result of a parser",null,null],[14,"map_res!","","`map_res!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Result&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning a Result on the output of a parser",null,null],[14,"map_opt!","","`map_opt!(I -&gt; IResult&lt;I,O&gt;, O -&gt; Option&lt;P&gt;) =&gt; I -&gt; IResult&lt;I, P&gt;`\nmaps a function returning an Option on the output of a parser",null,null],[14,"value!","","`value!(T, R -&gt; IResult&lt;R, S&gt; ) =&gt; R -&gt; IResult&lt;R, T&gt;`",null,null],[14,"expr_res!","","`expr_res!(Result&lt;E,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Result&lt;T,E&gt; and returns a IResult::Done(I,T) if Ok",null,null],[14,"expr_opt!","","`expr_opt!(Option&lt;O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nevaluate an expression that returns a Option&lt;T&gt; and returns a IResult::Done(I,T) if Some",null,null],[14,"chain!","","`chain!(I-&gt;IResult&lt;I,A&gt; ~ I-&gt;IResult&lt;I,B&gt; ~ ... I-&gt;IResult&lt;I,X&gt; , || { return O } ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchains parsers and assemble the results through a closure",null,null],[14,"tuple!","","`tuple!(I-&gt;IResult&lt;I,A&gt;, I-&gt;IResult&lt;I,B&gt;, ... I-&gt;IResult&lt;I,X&gt;) =&gt; I -&gt; IResult&lt;I, (A, B, ..., X)&gt;`\nchains parsers and assemble the sub results in a tuple.",null,null],[14,"alt!","","`alt!(I -&gt; IResult&lt;I,O&gt; | I -&gt; IResult&lt;I,O&gt; | ... | I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\ntry a list of parsers, return the result of the first successful one",null,null],[14,"alt_complete!","","This is a combination of the `alt!` and `complete!` combinators. Rather\nthan returning `Incomplete` on partial input, `alt_complete!` will try the\nnext alternative in the chain. You should use this only if you know you\nwill not receive partial input for the rules you&#39;re trying to match (this\nis almost always the case for parsing programming languages).",null,null],[14,"switch!","","`switch!(I -&gt; IResult&lt;I,P&gt;, P =&gt; I -&gt; IResult&lt;I,O&gt; | ... | P =&gt; I -&gt; IResult&lt;I,O&gt; ) =&gt; I -&gt; IResult&lt;I, O&gt;`\nchoose the next parser depending on the result of the first one, if successful,\nand returns the result of the second parser",null,null],[14,"opt!","","`opt!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"opt_res!","","`opt_res!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Result&lt;nom::Err,O&gt;&gt;`\nmake the underlying parser optional",null,null],[14,"cond_with_error!","","`cond_with_error!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond!","","`cond!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Option&lt;O&gt;&gt;`\nConditional combinator",null,null],[14,"cond_reduce!","","`cond_reduce!(bool, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nConditional combinator with error",null,null],[14,"peek!","","`peek!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nreturns a result without consuming the input",null,null],[14,"tap!","","`tap!(name: I -&gt; IResult&lt;I,O&gt; =&gt; { block }) =&gt; I -&gt; IResult&lt;I, O&gt;`\nallows access to the parser&#39;s result without affecting it",null,null],[14,"pair!","","`pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\npair(X,Y), returns (x,y)",null,null],[14,"separated_pair!","","`separated_pair!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I, T&gt;, I -&gt; IResult&lt;I,P&gt;) =&gt; I -&gt; IResult&lt;I, (O,P)&gt;`\nseparated_pair(X,sep,Y) returns (x,y)",null,null],[14,"preceded!","","`preceded!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\npreceded(opening, X) returns X",null,null],[14,"terminated!","","`terminated!(I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,T&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\nterminated(X, closing) returns X",null,null],[14,"delimited!","","`delimited!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;, I -&gt; IResult&lt;I,U&gt;) =&gt; I -&gt; IResult&lt;I, O&gt;`\ndelimited(opening, X, closing) returns X",null,null],[14,"separated_list!","","`separated_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"separated_nonempty_list!","","`separated_nonempty_list!(I -&gt; IResult&lt;I,T&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nseparated_nonempty_list(sep, X) returns Vec&lt;X&gt;",null,null],[14,"many0!","","`many0!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 0 or more times and returns the list of results in a Vec",null,null],[14,"many1!","","`many1!(I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser 1 or more times and returns the list of results in a Vec",null,null],[14,"many_m_n!","","`many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the parser between m and n times (n included) and returns the list of results in a Vec",null,null],[14,"count!","","`count!(I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\nApplies the child parser a specified number of times",null,null],[14,"count_fixed!","","`count_fixed!(O, I -&gt; IResult&lt;I,O&gt;, nb) =&gt; I -&gt; IResult&lt;I, [O; nb]&gt;`\nApplies the child parser a fixed number of times and returns a fixed size array\nThe type must be specified and it must be `Copy`",null,null],[14,"length_value!","","`length_value!(I -&gt; IResult&lt;I, nb&gt;, I -&gt; IResult&lt;I,O&gt;) =&gt; I -&gt; IResult&lt;I, Vec&lt;O&gt;&gt;`\ngets a number from the first parser, then applies the second parser that many times",null,null],[14,"fold_many0!","","`fold_many0!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 0 or more times and folds the list of return values",null,null],[14,"fold_many1!","","`fold_many1!(I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser 1 or more times and folds the list of return values",null,null],[14,"fold_many_m_n!","","`fold_many_m_n!(usize, usize, I -&gt; IResult&lt;I,O&gt;, R, Fn(R, O) -&gt; R) =&gt; I -&gt; IResult&lt;I, R&gt;`\nApplies the parser between m and n times (n included) and folds the list of return value",null,null],[14,"method!","","Makes a method from a parser combination",null,null],[14,"call_m!","","Used to called methods then move self back into self",null,null],[14,"apply_m!","","emulate function currying for method calls on structs\n`apply!(self.my_function, arg1, arg2, ...)` becomes `self.my_function(input, arg1, arg2, ...)`",null,null],[14,"recognize!","","`recognize!(&amp;[T] -&gt; IResult&lt;&amp;[T], O&gt; ) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nif the child parser was successful, return the consumed input as produced value",null,null],[14,"tag!","","`tag!(&amp;[T]: nom::AsBytes) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ndeclares a byte array as a suite to recognize",null,null],[14,"is_not!","","`is_not!(&amp;[T:AsBytes]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that do not appear in the provided array",null,null],[14,"is_a!","","`is_a!(&amp;[T]) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes that appear in the provided array",null,null],[14,"escaped!","","`escaped!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"escaped_transform!","","`escaped_transform!(&amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;, T, &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], Vec&lt;T&gt;&gt;`\nmatches a byte string with escaped characters.",null,null],[14,"take_while!","","`take_while!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function fails.",null,null],[14,"take_while1!","","`take_while1!(&amp;[T] -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest (non empty) list of bytes until the provided function fails.",null,null],[14,"take_till!","","`take_till!(T -&gt; bool) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nreturns the longest list of bytes until the provided function succeeds",null,null],[14,"take!","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming the specified number of bytes",null,null],[14,"take_str!","","`take!(nb) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;str&gt;`\nsame as take! but returning a &amp;str",null,null],[14,"take_until_and_consume!","","`take_until_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\ngenerates a parser consuming bytes until the specified byte sequence is found, and consumes it",null,null],[14,"take_until!","","`take_until!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds the specified tag",null,null],[14,"take_until_either_and_consume!","","`take_until_either_and_consume!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`\nconsumes data until it finds any of the specified characters, and consume it",null,null],[14,"take_until_either!","","`take_until_either!(tag) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;`",null,null],[14,"length_bytes!","","`length_bytes!(&amp;[T] -&gt; IResult&lt;&amp;[T], nb&gt;) =&gt; &amp;[T] -&gt; IResult&lt;&amp;[T], &amp;[T]&gt;\ngets a number from the first parser, then extracts that many bytes from the\nremaining stream",null,null],[14,"bits!","","`bits!( parser ) =&gt; ( &amp;[u8], (&amp;[u8], usize) -&gt; IResult&lt;(&amp;[u8], usize), T&gt; ) -&gt; IResult&lt;&amp;[u8], T&gt;`\ntransforms its byte slice input in a bit stream for the underlying parsers",null,null],[14,"take_bits!","","`take_bits!(type, nb) =&gt; ( (&amp;[T], usize), U, usize) -&gt; IResult&lt;(&amp;[T], usize), U&gt;`\ngenerates a parser consuming the specified number of bits.",null,null],[14,"tag_bits!","","matches an integer pattern to a bitstream. The number of bits of the input to compare must be specified",null,null],[14,"u16!","","if parameter is true, parse a big endian u16 integer,\notherwise a little endian u16 integer",null,null],[14,"u32!","","if parameter is true, parse a big endian u32 integer,\notherwise a little endian u32 integer",null,null],[14,"u64!","","if parameter is true, parse a big endian u64 integer,\notherwise a little endian u64 integer",null,null],[14,"i16!","","if parameter is true, parse a big endian i16 integer,\notherwise a little endian i16 integer",null,null],[14,"i32!","","if parameter is true, parse a big endian i32 integer,\notherwise a little endian i32 integer",null,null],[14,"i64!","","if parameter is true, parse a big endian i64 integer,\notherwise a little endian i64 integer",null,null],[14,"one_of!","","matches one of the provided characters",null,null],[14,"none_of!","","matches anything but the provided characters",null,null],[14,"char!","","matches one character: `char!(char) =&gt; &amp;[u8] -&gt; IResult&lt;&amp;[u8], char&gt;",null,null],[14,"consumer_from_parser!","","",null,null],[14,"tag_s!","","`tag_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ndeclares a string as a suite to recognize",null,null],[14,"take_s!","","`take_s!(nb) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming the specified number of characters",null,null],[14,"is_not_s!","","`is_not_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that do not appear in the provided array",null,null],[14,"is_a_s!","","`is_a_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters that appear in the provided array",null,null],[14,"take_while_s!","","`take_while_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function fails.",null,null],[14,"take_while1_s!","","`take_while1_s!(char -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest (non empty) list of characters until the provided function fails.",null,null],[14,"take_till_s!","","`take_till_s!(&amp;str -&gt; bool) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\nreturns the longest list of characters until the provided function succeeds",null,null],[14,"take_until_and_consume_s!","","`take_until_and_consume_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and consumes it",null,null],[14,"take_until_s!","","`take_until_s!(&amp;str) =&gt; &amp;str -&gt; IResult&lt;&amp;str, &amp;str&gt;`\ngenerates a parser consuming all chars until the specified string is found and leaves it in the remaining input",null,null],[11,"run","","Applies a consumer once on the produced data, and returns the generated value if there is one",21,null]],"paths":[[4,"ErrorKind"],[4,"Err"],[4,"Needed"],[4,"IResult"],[4,"Input"],[4,"ConsumerState"],[4,"Move"],[4,"FileProducerState"],[3,"ProducerRepeat"],[3,"MemProducer"],[3,"FileProducer"],[3,"MapConsumer"],[3,"ChainConsumer"],[8,"HexDisplay"],[8,"InputLength"],[8,"AsChar"],[8,"IterIndices"],[8,"AsBytes"],[8,"GetInput"],[8,"GetOutput"],[8,"Consumer"],[8,"Producer"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[11,"encode","collections::string","",0,null],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,null],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,null],[11,"decode","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,null],[11,"decode","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,null],[11,"decode","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,null],[11,"decode","","",5,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,null],[11,"decode","","",6,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,null],[11,"encode","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,null],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,null],[11,"decode","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,null],[11,"decode","","",12,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,null],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,null],[11,"decode","","",14,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,null],[11,"decode","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,null],[11,"decode","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,null],[11,"decode","","",17,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[11,"fmt","","",21,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"fmt","","",24,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,null],[11,"fmt","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"eq","","",28,null],[11,"clone","","",28,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"fmt","","",28,null],[11,"description","","",30,null],[11,"cause","","",30,null],[11,"fmt","","",30,null],[11,"from","","",30,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,null],[11,"fmt","","",29,null],[11,"from","","",29,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,null],[11,"fmt","","",31,null],[11,"from","","",31,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,null],[11,"emit_nil","","",35,null],[11,"emit_usize","","",35,null],[11,"emit_u64","","",35,null],[11,"emit_u32","","",35,null],[11,"emit_u16","","",35,null],[11,"emit_u8","","",35,null],[11,"emit_isize","","",35,null],[11,"emit_i64","","",35,null],[11,"emit_i32","","",35,null],[11,"emit_i16","","",35,null],[11,"emit_i8","","",35,null],[11,"emit_bool","","",35,null],[11,"emit_f64","","",35,null],[11,"emit_f32","","",35,null],[11,"emit_char","","",35,null],[11,"emit_str","","",35,null],[11,"emit_enum","","",35,null],[11,"emit_enum_variant","","",35,null],[11,"emit_enum_variant_arg","","",35,null],[11,"emit_enum_struct_variant","","",35,null],[11,"emit_enum_struct_variant_field","","",35,null],[11,"emit_struct","","",35,null],[11,"emit_struct_field","","",35,null],[11,"emit_tuple","","",35,null],[11,"emit_tuple_arg","","",35,null],[11,"emit_tuple_struct","","",35,null],[11,"emit_tuple_struct_arg","","",35,null],[11,"emit_option","","",35,null],[11,"emit_option_none","","",35,null],[11,"emit_option_some","","",35,null],[11,"emit_seq","","",35,null],[11,"emit_seq_elt","","",35,null],[11,"emit_map","","",35,null],[11,"emit_map_elt_key","","",35,null],[11,"emit_map_elt_val","","",35,null],[11,"encode","","",27,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",27,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,null],[11,"index","","",27,null],[11,"index","","",27,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"new","","",36,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,null],[11,"is_empty","","Returns true if the stack is empty.",36,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,null],[11,"next","","",37,null],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,null],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,null],[11,"read_usize","","",39,null],[11,"read_u8","","",39,null],[11,"read_u16","","",39,null],[11,"read_u32","","",39,null],[11,"read_u64","","",39,null],[11,"read_isize","","",39,null],[11,"read_i8","","",39,null],[11,"read_i16","","",39,null],[11,"read_i32","","",39,null],[11,"read_i64","","",39,null],[11,"read_f32","","",39,null],[11,"read_f64","","",39,null],[11,"read_bool","","",39,null],[11,"read_char","","",39,null],[11,"read_str","","",39,null],[11,"read_enum","","",39,null],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,null],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,null],[11,"read_struct","","",39,null],[11,"read_struct_field","","",39,null],[11,"read_tuple","","",39,null],[11,"read_tuple_arg","","",39,null],[11,"read_tuple_struct","","",39,null],[11,"read_tuple_struct_arg","","",39,null],[11,"read_option","","",39,null],[11,"read_seq","","",39,null],[11,"read_seq_elt","","",39,null],[11,"read_map","","",39,null],[11,"read_map_elt_key","","",39,null],[11,"read_map_elt_val","","",39,null],[11,"error","","",39,null],[11,"to_json","","",27,null],[11,"to_json","collections::string","",0,null],[11,"to_json","collections::vec","",4,null],[11,"to_json","collections::btree::map","",14,null],[11,"to_json","std::collections::hash::map","",16,null],[11,"to_json","core::option","",5,null],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,null],[11,"fmt","","Encodes a json value into a string",40,null],[11,"fmt","","Encodes a json value into a string",41,null],[11,"indent","","Set the indentation level for the emitted JSON",42,null],[11,"fmt","","Encodes a json value into a string",42,null],[11,"from_str","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,null],[10,"read_usize","","",43,null],[10,"read_u64","","",43,null],[10,"read_u32","","",43,null],[10,"read_u16","","",43,null],[10,"read_u8","","",43,null],[10,"read_isize","","",43,null],[10,"read_i64","","",43,null],[10,"read_i32","","",43,null],[10,"read_i16","","",43,null],[10,"read_i8","","",43,null],[10,"read_bool","","",43,null],[10,"read_f64","","",43,null],[10,"read_f32","","",43,null],[10,"read_char","","",43,null],[10,"read_str","","",43,null],[10,"read_enum","","",43,null],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,null],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,null],[10,"read_struct","","",43,null],[10,"read_struct_field","","",43,null],[10,"read_tuple","","",43,null],[10,"read_tuple_arg","","",43,null],[10,"read_tuple_struct","","",43,null],[10,"read_tuple_struct_arg","","",43,null],[10,"read_option","","",43,null],[10,"read_seq","","",43,null],[10,"read_seq_elt","","",43,null],[10,"read_map","","",43,null],[10,"read_map_elt_key","","",43,null],[10,"read_map_elt_val","","",43,null],[10,"error","","",43,null],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,null],[10,"emit_usize","","",44,null],[10,"emit_u64","","",44,null],[10,"emit_u32","","",44,null],[10,"emit_u16","","",44,null],[10,"emit_u8","","",44,null],[10,"emit_isize","","",44,null],[10,"emit_i64","","",44,null],[10,"emit_i32","","",44,null],[10,"emit_i16","","",44,null],[10,"emit_i8","","",44,null],[10,"emit_bool","","",44,null],[10,"emit_f64","","",44,null],[10,"emit_f32","","",44,null],[10,"emit_char","","",44,null],[10,"emit_str","","",44,null],[10,"emit_enum","","",44,null],[10,"emit_enum_variant","","",44,null],[10,"emit_enum_variant_arg","","",44,null],[10,"emit_enum_struct_variant","","",44,null],[10,"emit_enum_struct_variant_field","","",44,null],[10,"emit_struct","","",44,null],[10,"emit_struct_field","","",44,null],[10,"emit_tuple","","",44,null],[10,"emit_tuple_arg","","",44,null],[10,"emit_tuple_struct","","",44,null],[10,"emit_tuple_struct_arg","","",44,null],[10,"emit_option","","",44,null],[10,"emit_option_none","","",44,null],[10,"emit_option_some","","",44,null],[10,"emit_seq","","",44,null],[10,"emit_seq_elt","","",44,null],[10,"emit_map","","",44,null],[10,"emit_map_elt_key","","",44,null],[10,"emit_map_elt_val","","",44,null],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
initSearch(searchIndex);
